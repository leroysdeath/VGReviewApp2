function t(t,e){for(var n=0;n<e.length;n++){const r=e[n];if("string"!=typeof r&&!Array.isArray(r))for(const e in r)if("default"!==e&&!(e in t)){const n=Object.getOwnPropertyDescriptor(r,e);n&&Object.defineProperty(t,e,n.get?n:{enumerable:!0,get(){return r[e]}})}}return Object.freeze(Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}))}function e(t){return t&&t.u&&{}.hasOwnProperty.call(t,"default")?t.default:t}function n(t){if(t.u)return t;var e=t.default;if("function"==typeof e){var n=function t(){return this instanceof t?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};n.prototype=e.prototype}else n={};return Object.defineProperty(n,"u",{value:!0}),Object.keys(t).forEach(e=>{var r=Object.getOwnPropertyDescriptor(t,e);Object.defineProperty(n,e,r.get?r:{enumerable:!0,get(){return t[e]}})}),n}function r(){return r=Object.assign?Object.assign.bind():function(t){for(var e=1;arguments.length>e;e++){var n=arguments[e];for(var r in n)({}).hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},r.apply(this,arguments)}function s(t){return void 0===t&&(t={}),((t,e,n,s)=>{function o(){return(p.state||{idx:null}).idx}function c(){m=df.Pop;let t=o(),e=null==t?null:t-b;b=t,y&&y({action:m,location:g.location,delta:e})}function h(t){let e="null"!==f.location.origin?f.location.origin:f.location.href,n="string"==typeof t?t:l(t);return n=n.replace(/ $/,"%20"),i(e,"No window.location.(origin|href) available to create URL for href: "+n),new URL(n,e)}void 0===s&&(s={});let{window:f=document.defaultView,v5Compat:d=!1}=s,p=f.history,m=df.Pop,y=null,b=o();null==b&&(b=0,p.replaceState(r({},p.state,{idx:b}),""));let g={get action(){return m},get location(){return((t,e)=>{let{pathname:n,search:r,hash:s}=t.location;return u("",{pathname:n,search:r,hash:s},e.state&&e.state.usr||null,e.state&&e.state.key||"default")})(f,p)},listen(t){if(y)throw new Error("A history only accepts one active listener");return f.addEventListener(yf,c),y=t,()=>{f.removeEventListener(yf,c),y=null}},createHref:t=>((t,e)=>"string"==typeof e?e:l(e))(0,t),createURL:h,encodeLocation(t){let e=h(t);return{pathname:e.pathname,search:e.search,hash:e.hash}},push(t,e){m=df.Push;let n=u(g.location,t,e);b=o()+1;let r=a(n,b),s=g.createHref(n);try{p.pushState(r,"",s)}catch(i){if(i instanceof DOMException&&"DataCloneError"===i.name)throw i;f.location.assign(s)}d&&y&&y({action:m,location:g.location,delta:1})},replace(t,e){m=df.Replace;let n=u(g.location,t,e);b=o();let r=a(n,b),s=g.createHref(n);p.replaceState(r,"",s),d&&y&&y({action:m,location:g.location,delta:0})},go:t=>p.go(t)};return g})(0,0,0,t)}function i(t,e){if(!1===t||null==t)throw new Error(e)}function o(t,e){if(!t)try{throw new Error(e)}catch(n){}}function a(t,e){return{usr:t.state,key:t.key,idx:e}}function u(t,e,n,s){return void 0===n&&(n=null),r({pathname:"string"==typeof t?t:t.pathname,search:"",hash:""},"string"==typeof e?c(e):e,{state:n,key:e&&e.key||s||Math.random().toString(36).substr(2,8)})}function l(t){let{pathname:e="/",search:n="",hash:r=""}=t;return n&&"?"!==n&&(e+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(e+="#"===r.charAt(0)?r:"#"+r),e}function c(t){let e={};if(t){let n=t.indexOf("#");0>n||(e.hash=t.substr(n),t=t.substr(0,n));let r=t.indexOf("?");0>r||(e.search=t.substr(r),t=t.substr(0,r)),t&&(e.pathname=t)}return e}function h(t,e,n){return void 0===n&&(n="/"),((t,e,n)=>{let r=g(("string"==typeof e?c(e):e).pathname||"/",n);if(null==r)return null;let s=f(t);(t=>{t.sort((t,e)=>t.score!==e.score?e.score-t.score:((t,e)=>{let n=t.length===e.length&&t.slice(0,-1).every((t,n)=>t===e[n]);return n?t[t.length-1]-e[e.length-1]:0})(t.routesMeta.map(t=>t.childrenIndex),e.routesMeta.map(t=>t.childrenIndex)))})(s);let i=null;for(let o=0;null==i&&o<s.length;++o){let t=b(r);i=m(s[o],t)}return i})(t,e,n)}function f(t,e,n,r){void 0===e&&(e=[]),void 0===n&&(n=[]),void 0===r&&(r="");let s=(t,s,o)=>{let a={relativePath:void 0===o?t.path||"":o,caseSensitive:!0===t.caseSensitive,childrenIndex:s,route:t};a.relativePath.startsWith("/")&&(i(a.relativePath.startsWith(r),'Absolute route path "'+a.relativePath+'" nested under path "'+r+'" is not valid. An absolute child route path must start with the combined path of all its parent routes.'),a.relativePath=a.relativePath.slice(r.length));let u=Sf([r,a.relativePath]),l=n.concat(a);t.children&&t.children.length>0&&(i(!0!==t.index,'Index routes must not have child routes. Please remove all child routes from route path "'+u+'".'),f(t.children,e,l,u)),(null!=t.path||t.index)&&e.push({path:u,score:p(u,t.index),routesMeta:l})};return t.forEach((t,e)=>{var n;if(""!==t.path&&null!=(n=t.path)&&n.includes("?"))for(let r of d(t.path))s(t,e,r);else s(t,e)}),e}function d(t){let e=t.split("/");if(0===e.length)return[];let[n,...r]=e,s=n.endsWith("?"),i=n.replace(/\?$/,"");if(0===r.length)return s?[i,""]:[i];let o=d(r.join("/")),a=[];return a.push(...o.map(t=>""===t?i:[i,t].join("/"))),s&&a.push(...o),a.map(e=>t.startsWith("/")&&""===e?"/":e)}function p(t,e){let n=t.split("/"),r=n.length;return n.some(Cf)&&(r+=Nf),e&&(r+=vf),n.filter(t=>!Cf(t)).reduce((t,e)=>t+(wf.test(e)?xf:""===e?$f:kf),r)}function m(t,e,n){let{routesMeta:r}=t,s={},i="/",o=[];for(let a=0;a<r.length;++a){let t=r[a],n=a===r.length-1,u="/"===i?e:e.slice(i.length)||"/",l=y({path:t.relativePath,caseSensitive:t.caseSensitive,end:n},u),c=t.route;if(!l)return null;Object.assign(s,l.params),o.push({params:s,pathname:Sf([i,l.pathname]),pathnameBase:Ef(Sf([i,l.pathnameBase])),route:c}),"/"!==l.pathnameBase&&(i=Sf([i,l.pathnameBase]))}return o}function y(t,e){"string"==typeof t&&(t={path:t,caseSensitive:!1,end:!0});let[n,r]=((t,e,n)=>{void 0===e&&(e=!1),void 0===n&&(n=!0),o("*"===t||!t.endsWith("*")||t.endsWith("/*"),'Route path "'+t+'" will be treated as if it were "'+t.replace(/\*$/,"/*")+'" because the `*` character must always follow a `/` in the pattern. To get rid of this warning, please change the route path to "'+t.replace(/\*$/,"/*")+'".');let r=[],s="^"+t.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^${}|()[\]]/g,"\\$&").replace(/\/:([\w-]+)(\?)?/g,(t,e,n)=>(r.push({paramName:e,isOptional:null!=n}),n?"/?([^\\/]+)?":"/([^\\/]+)"));return t.endsWith("*")?(r.push({paramName:"*"}),s+="*"===t||"/*"===t?"(.*)$":"(?:\\/(.+)|\\/*)$"):n?s+="\\/*$":""!==t&&"/"!==t&&(s+="(?:(?=\\/|$))"),[new RegExp(s,e?void 0:"i"),r]})(t.path,t.caseSensitive,t.end),s=e.match(n);if(!s)return null;let i=s[0],a=i.replace(/(.)\/+$/,"$1"),u=s.slice(1);return{params:r.reduce((t,e,n)=>{let{paramName:r,isOptional:s}=e;if("*"===r){let t=u[n]||"";a=i.slice(0,i.length-t.length).replace(/(.)\/+$/,"$1")}const o=u[n];return t[r]=s&&!o?void 0:(o||"").replace(/%2F/g,"/"),t},{}),pathname:i,pathnameBase:a,pattern:t}}function b(t){try{return t.split("/").map(t=>decodeURIComponent(t).replace(/\//g,"%2F")).join("/")}catch(e){return o(!1,'The URL path "'+t+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding ('+e+")."),t}}function g(t,e){if("/"===e)return t;if(!t.toLowerCase().startsWith(e.toLowerCase()))return null;let n=e.endsWith("/")?e.length-1:e.length,r=t.charAt(n);return r&&"/"!==r?null:t.slice(n)||"/"}function w(t,e,n,r){return"Cannot include a '"+t+"' character in a manually specified `to."+e+"` field ["+JSON.stringify(r)+"].  Please separate it out to the `to."+n+'` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.'}function x(t,e){let n=(t=>t.filter((t,e)=>0===e||t.route.path&&t.route.path.length>0))(t);return e?n.map((t,e)=>e===n.length-1?t.pathname:t.pathnameBase):n.map(t=>t.pathnameBase)}function v(t,e,n,s){let o;void 0===s&&(s=!1),"string"==typeof t?o=c(t):(o=r({},t),i(!o.pathname||!o.pathname.includes("?"),w("?","pathname","search",o)),i(!o.pathname||!o.pathname.includes("#"),w("#","pathname","hash",o)),i(!o.search||!o.search.includes("#"),w("#","search","hash",o)));let a,u=""===t||""===o.pathname,l=u?"/":o.pathname;if(null==l)a=n;else{let t=e.length-1;if(!s&&l.startsWith("..")){let e=l.split("/");for(;".."===e[0];)e.shift(),t-=1;o.pathname=e.join("/")}a=0>t?"/":e[t]}let h=((t,e)=>{void 0===e&&(e="/");let{pathname:n,search:r="",hash:s=""}="string"==typeof t?c(t):t,i=n?n.startsWith("/")?n:((t,e)=>{let n=e.replace(/\/+$/,"").split("/");return t.split("/").forEach(t=>{".."===t?n.length>1&&n.pop():"."!==t&&n.push(t)}),n.length>1?n.join("/"):"/"})(n,e):e;return{pathname:i,search:Tf(r),hash:_f(s)}})(o,a),f=l&&"/"!==l&&l.endsWith("/"),d=(u||"."===l)&&n.endsWith("/");return h.pathname.endsWith("/")||!f&&!d||(h.pathname+="/"),h}function $(t){return null!=t&&"number"==typeof t.status&&"string"==typeof t.statusText&&"boolean"==typeof t.internal&&"data"in t}function k(t){let e=this||{},n=t.call?t(e.p):t;return((t,e,n,r,s)=>{let i=jf(t),o=Wf[i]||(Wf[i]=(t=>{let e=0,n=11;for(;e<t.length;)n=101*n+t.charCodeAt(e++)>>>0;return"go"+n})(i));if(!Wf[o]){let e=i!==t?t:(t=>{let e,n,r=[{}];for(;e=Pf.exec(t.replace(Vf,""));)e[4]?r.shift():e[3]?(n=e[3].replace(Bf," ").trim(),r.unshift(r[0][n]=r[0][n]||{})):r[0][e[1]]=e[2].replace(Bf," ").trim();return r[0]})(t);Wf[o]=zf(s?{["@keyframes "+o]:e}:e,n?"":"."+o)}let a=n&&Wf.g?Wf.g:null;return n&&(Wf.g=Wf[o]),((t,e,n,r)=>{r?e.data=e.data.replace(r,t):-1===e.data.indexOf(t)&&(e.data=n?t+e.data:e.data+t)})(Wf[o],e,r,a),o})(n.unshift?n.raw?((t,e,n)=>t.reduce((t,r,s)=>{let i=e[s];if(i&&i.call){let t=i(n),e=t&&t.props&&t.props.className||/^go/.test(t)&&t;i=e?"."+e:t&&"object"==typeof t?t.props?"":zf(t,""):!1===t?"":t}return t+r+(null==i?"":i)},""))(n,[].slice.call(arguments,1),e.p):n.reduce((t,n)=>Object.assign(t,n&&n.call?n(e.p):n),{}):n,(r=e.target,"object"==typeof window?((r?r.querySelector("#_goober"):window._goober)||Object.assign((r||document.head).appendChild(document.createElement("style")),{innerHTML:" ",id:"_goober"})).firstChild:r||Lf),e.g,e.o,e.k);var r}function N(t,e,n,r){zf.p=e,Ff=t,Mf=n,Df=r}function C(t,e){let n=this||{};return function(){let e=arguments;return function r(s,i){let o=Object.assign({},s),a=o.className||r.className;n.p=Object.assign({theme:Mf&&Mf()},o),n.o=/ *go\d+/.test(a),o.className=k.apply(n,e)+(a?" "+a:"");let u=t;return t[0]&&(u=o.as||t,delete o.as),Df&&u[0]&&Df(o),Ff(u,o)}}}function S(t,e){return(S=Object.setPrototypeOf?Object.setPrototypeOf.bind():(t,e)=>(t.__proto__=e,t))(t,e)}function E(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,S(t,e)}function T(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function _(t){let e=t.length,n=0;for(;e>0;)n=Math.random()*e|0,e--,O(t,e,n)}function R(t,e,n){return Math.max(t,Math.min(e,n))}function A(t){return t%2==0?t:t+1}function O(t,e,n){const r=t[e];t[e]=t[n],t[n]=r}function I(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function F(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function M(t,e,n=""){F(V(t,e),()=>n+` Shapes ${t} and ${e} must match`)}function D(t){F(null!=t,()=>"The input to the tensor constructor must be a non-null value.")}function L(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||Z(t)&&!n)for(let r=0;r<t.length;++r)L(t[r],e,n);else e.push(t);return e}function P(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function V(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function B(t){return t%1==0}function z(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function W(t,e){return e>t.length?t+" ".repeat(e-t.length):t}function j(t,e=t=>0,n,r=setTimeout){return new Promise((s,i)=>{let o=0;const a=()=>{if(t())return void s();o++;const u=e(o);null==n||n>o?r(a,u):i()};a()})}function U(t,e){let n=1,r=-1;for(let i=0;i<t.length;++i)if(0>t[i]){if(-1===t[i]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${i}`);r=i}else if(0>t[i])throw Error(`Shapes can not be < 0. Found ${t[i]} at dim ${i}`)}else n*=t[i];if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const s=t.slice();return s[r]=e/n,s}function G(t,e){const n=e.length;return t=null==t?e.map((t,e)=>e):[].concat(t),F(t.every(t=>t>=-n&&n>t),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`),F(t.every(t=>B(t)),()=>`All values in axis param must be integers but got axis ${t}`),t.map(t=>0>t?n+t:t)}function q(t,e){const n=[],r=[],s=null!=e&&Array.isArray(e)&&0===e.length,i=null==e||s?null:G(e,t).sort();let o=0;for(let a=0;a<t.length;++a){if(null!=i){if(i[o]===a&&1!==t[a])throw new Error(`Can't squeeze axis ${a} since its dim '${t[a]}' is not 1`);null!=i[o]&&i[o]<=a||1!==t[a]||(n.push(t[a]),r.push(a)),i[o]>a||o++}1!==t[a]&&(n.push(t[a]),r.push(a))}return{newShape:n,keptDims:r}}function H(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error(`Unknown data type ${t}`);n=new Uint8Array(e)}return n}function X(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error(`Unknown data type ${t}`);n=new Array(e)}return n}function J(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function K(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}function Y(t,e){return!("complex64"===e||"float32"===e&&"complex64"!==t||"int32"===e&&"float32"!==t&&"complex64"!==t||"bool"===e&&"bool"===t)}function Z(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray}function Q(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error(`Unknown dtype ${t}`)}function tt(t){if(null==t)return 0;let e=0;return t.forEach(t=>e+=t.length),e}function et(t){return"string"==typeof t||t instanceof String}function nt(t){return"boolean"==typeof t}function rt(t){return"number"==typeof t}function st(t){return Array.isArray(t)?st(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray?"int32":rt(t)?"float32":et(t)?"string":nt(t)?"bool":"float32"}function it(t){return!!(t&&t.constructor&&t.call&&t.apply)}function ot(t,e){for(let n=e;t>n;++n)if(t%n===0)return n;return t}function at(t){const e=t.length;if(2>e)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function ut(t,e,n,r=!1){const s=new Array;if(1===e.length){const i=e[0]*(r?2:1);for(let e=0;i>e;e++)s[e]=n[t+e]}else{const i=e[0],o=e.slice(1),a=o.reduce((t,e)=>t*e)*(r?2:1);for(let e=0;i>e;e++)s[e]=ut(t+e*a,o,n,r)}return s}function lt(t,e,n=!1){if(0===t.length)return e[0];const r=t.reduce((t,e)=>t*e)*(n?2:1);if(0===r)return[];if(r!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}${n?" for a complex tensor":""}.`);return ut(0,t,e,n)}function ct(t,e){const n=ht(t,e);for(let r=0;r<n.length;r++)n[r]=1;return n}function ht(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function ft(t,e){const n=t.reduce((t,e)=>t*e,1);if(null==e||"float32"===e)return lt(t,new Float32Array(n));if("int32"===e)return lt(t,new Int32Array(n));if("bool"===e)return lt(t,new Uint8Array(n));throw new Error(`Unknown data type ${e}`)}function dt(t){t.forEach(e=>{F(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`)})}function pt(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let s=0;s<t.length-1;++s)r+=n[s]*t[s];return r}function mt(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(t/n[s]),t-=r[s]*n[s];return r[r.length-1]=t,r}function yt(t){return t&&t.then&&"function"==typeof t.then}function bt(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...n)=>(((t,e,n)=>{t[decodeURIComponent(e)]=decodeURIComponent(n||"")})(e,n[0],n[1]),n.join("="))),e}function gt(){return Yf}function wt(){if(null==Kf){let t;if("undefined"!=typeof window)t=window;else if("undefined"!=typeof globalThis)t=globalThis;else if("undefined"!=typeof process)t=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}Kf=t}return Kf}function xt(t,e){const n=(()=>{const t=wt();return null==t.l&&(t.l=new Map),t.l})();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}function vt(...t){!gt().getBool("IS_TEST")&&gt().getBool("PROD")}function $t(t,e){const n=Et(t,e);return oy.get(n)}function kt(t){return ay.get(t)}function Nt(t){const e=oy.entries(),n=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[i,o]=s,[a]=i.split("_");a===t&&n.push(o)}return n}function Ct(t){const{kernelName:e,backendName:n}=t,r=Et(e,n);oy.has(r)&&vt(),oy.set(r,t)}function St(t){const{kernelName:e}=t;ay.has(e)&&gt().getBool("DEBUG")&&vt(),ay.set(e,t)}function Et(t,e){return`${e}_${t}`}function Tt(t,e,n){this.low=0|t,this.high=0|e,this.unsigned=!!n}function _t(t){return!0===(t&&t.h)}function Rt(t,e){var n,r,s;return e?(s=(t>>>=0)>=0&&256>t)&&(r=hy[t])?r:(n=Ot(t,0>(0|t)?-1:0,!0),s&&(hy[t]=n),n):(s=(t|=0)>=-128&&128>t)&&(r=cy[t])?r:(n=Ot(t,0>t?-1:0,!1),s&&(cy[t]=n),n)}function At(t,e){if(isNaN(t))return e?gy:by;if(e){if(0>t)return gy;if(t>=py)return ky}else{if(-my>=t)return Ny;if(t+1>=my)return $y}return 0>t?At(-t,e).neg():Ot(t%dy|0,t/dy|0,e)}function Ot(t,e,n){return new Tt(t,e,n)}function It(t,e,n){if(0===t.length)throw Error("empty string");if("NaN"===t||"Infinity"===t||"+Infinity"===t||"-Infinity"===t)return by;if("number"==typeof e?(n=e,e=!1):e=!!e,2>(n=n||10)||n>36)throw RangeError("radix");var r;if((r=t.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return It(t.substring(1),e,n).neg();for(var s=At(fy(n,8)),i=by,o=0;o<t.length;o+=8){var a=Math.min(8,t.length-o),u=parseInt(t.substring(o,o+a),n);if(8>a){var l=At(fy(n,a));i=i.mul(l).add(At(u))}else i=(i=i.mul(s)).add(At(u))}return i.unsigned=e,i}function Ft(t,e){return"number"==typeof t?At(t,e):"string"==typeof t?It(t,e):Ot(t.low,t.high,"boolean"==typeof e?e:t.unsigned)}function Mt(t){return Ey.fromString(t,!0,16)}function Dt(t){return t.xor(t.shru(47))}function Lt(t,e,n){const r=t.slice(e,e+n);return Ey.fromBytes(Array.from(r),!0,!0)}function Pt(t,e){return Lt(t,e,8)}function Vt(t,e){return Lt(t,e,4)}function Bt(t,e){return 0===e?t:t.shru(e).or(t.shl(64-e))}function zt(t,e,n=Mt("9ddfea08eb382d69")){let r=t.xor(e).mul(n);r=r.xor(r.shru(47));let s=e.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function Wt(t,e,n,r){return((t,e,n,r,s,i)=>{s=s.add(t),i=Bt(i.add(s).add(r),21);const o=s;return s=(s=s.add(e)).add(n),i=i.add(Bt(s,44)),[s.add(r),i.add(o)]})(Pt(t,e),Pt(t,e+8),Pt(t,e+16),Pt(t,e+24),n,r)}function jt(t,e=t.length){const n=Ey.fromNumber(81,!0);if(32>=e)return e>16?((t,e=t.length)=>{const n=Ry.add(2*e),r=Pt(t,0).mul(_y),s=Pt(t,8),i=Pt(t,e-8).mul(n),o=Pt(t,e-16).mul(Ry);return zt(Bt(r.add(s),43).add(Bt(i,30)).add(o),r.add(Bt(s.add(Ry),18)).add(i),n)})(t,e):((t,e=t.length)=>{if(e>=8){const n=Ry.add(2*e),r=Pt(t,0).add(Ry),s=Pt(t,e-8);return zt(Bt(s,37).mul(n).add(r),Bt(r,25).add(s).mul(n),n)}if(e>=4){const n=Ry.add(2*e);return zt(Vt(t,0).shl(3).add(e),Vt(t,e-4),n)}if(e>0){const n=t[0]+(t[e>>1]<<8),r=e+(t[e-1]<<2);return Dt(Ry.mul(n).xor(Ty.mul(r))).mul(Ry)}return Ry})(t,e);if(64>=e)return((t,e=t.length)=>{const n=Ry.add(2*e),r=Pt(t,0).mul(Ry),s=Pt(t,8),i=Pt(t,e-8).mul(n),o=Pt(t,e-16).mul(Ry),a=Bt(r.add(s),43).add(Bt(i,30)).add(o),u=zt(a,r.add(Bt(s.add(Ry),18)).add(i),n),l=Pt(t,16).mul(n),c=Pt(t,24),h=a.add(Pt(t,e-32)).mul(n),f=u.add(Pt(t,e-24)).mul(n);return zt(Bt(l.add(c),43).add(Bt(h,30)).add(f),l.add(Bt(c.add(r),18)).add(h),n)})(t,e);let r=n,s=n.mul(_y).add(113),i=Dt(s.mul(Ry).add(113)).mul(Ry),o=[Ey.UZERO,Ey.UZERO],a=[Ey.UZERO,Ey.UZERO];r=r.mul(Ry).add(Pt(t,0));let u=0;const l=64*(e-1>>6),c=l+(e-1&63)-63;do{r=Bt(r.add(s).add(o[0]).add(Pt(t,u+8)),37).mul(_y),s=Bt(s.add(o[1]).add(Pt(t,u+48)),42).mul(_y),r=r.xor(a[1]),s=s.add(o[0]).add(Pt(t,u+40)),i=Bt(i.add(a[0]),33).mul(_y),o=Wt(t,u,o[1].mul(_y),r.add(a[0])),a=Wt(t,u+32,i.add(a[1]),s.add(Pt(t,u+16))),[i,r]=[r,i],u+=64}while(u!==l);const h=_y.add(i.and(255).shl(1));return u=c,a[0]=a[0].add(e-1&63),o[0]=o[0].add(a[0]),a[0]=a[0].add(o[0]),r=Bt(r.add(s).add(o[0]).add(Pt(t,u+8)),37).mul(h),s=Bt(s.add(o[1]).add(Pt(t,u+48)),42).mul(h),r=r.xor(a[1].mul(9)),s=s.add(o[0].mul(9).add(Pt(t,u+40))),i=Bt(i.add(a[0]),33).mul(h),o=Wt(t,u,o[1].mul(h),r.add(a[0])),a=Wt(t,u+32,i.add(a[1]),s.add(Pt(t,u+16))),[i,r]=[r,i],zt(zt(o[0],a[0],h).add(Dt(s).mul(Ty)).add(i),zt(o[1],a[1],h).add(r),h)}function Ut(t,e){return"string"===e?Xt(t):Gt([t],e)}function Gt(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=L(t)),gt().getBool("DEBUG")&&J(t,e),((t,e)=>t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e)(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error(`Unknown data type ${e}`)}function qt(){return gt().platform.now()}function Ht(t,e){return gt().platform.fetch(t,e)}function Xt(t,e="utf-8"){return e=e||"utf-8",gt().platform.encode(t,e)}function Jt(t,e="utf-8"){return e=e||"utf-8",gt().platform.decode(t,e)}function Kt(t,e,n){if("float32"!==e)return!1;for(let r=0;r<t.length;r++){const e=t[r];if(isNaN(e)||!isFinite(e))return!0}return!1}function Yt(t,e,n,r){const s=at(e),i=((t,e,n,r)=>{const s=P(e),i=r[r.length-1],o=new Array(i).fill(0),a=e.length,u="complex64"===n?ee(t):t;if(a>1)for(let l=0;s/i>l;l++){const t=l*i;for(let e=0;i>e;e++)o[e]=Math.max(o[e],Zt(u[t+e],0,n).length)}return o})(t,e,n,s),o=e.length,a=te(t,e,n,s,i),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${o}`),u.push(`  shape: [${e}]`),u.push("  values:")),u.push(a.map(t=>"    "+t).join("\n")),u.join("\n")}function Zt(t,e,n){let r;return r=Array.isArray(t)?`${parseFloat(t[0].toFixed(7))} + ${parseFloat(t[1].toFixed(7))}j`:et(t)?`'${t}'`:"bool"===n?Qt(t):parseFloat(t.toFixed(7)).toString(),W(r,e)}function Qt(t){return 0===t?"false":"true"}function te(t,e,n,r,s,i=!0){const o="complex64"===n?2:1,a=e[0],u=e.length;if(0===u)return"complex64"===n?[Zt(ee(t)[0],0,n)]:"bool"===n?[Qt(t[0])]:[t[0].toString()];if(1===u){if(a>20){const e=3*o;let r=Array.from(t.slice(0,e)),i=Array.from(t.slice((a-3)*o,a*o));return"complex64"===n&&(r=ee(r),i=ee(i)),["["+r.map((t,e)=>Zt(t,s[e],n)).join(", ")+", ..., "+i.map((t,e)=>Zt(t,s[a-3+e],n)).join(", ")+"]"]}return["["+("complex64"===n?ee(t):Array.from(t)).map((t,e)=>Zt(t,s[e],n)).join(", ")+"]"]}const l=e.slice(1),c=r.slice(1),h=r[0]*o,f=[];if(a>20){for(let e=0;3>e;e++){const r=e*h,i=r+h;f.push(...te(t.slice(r,i),l,n,c,s,!1))}f.push("...");for(let e=a-3;a>e;e++){const r=e*h,i=r+h;f.push(...te(t.slice(r,i),l,n,c,s,e===a-1))}}else for(let m=0;a>m;m++){const e=m*h,r=e+h;f.push(...te(t.slice(e,r),l,n,c,s,m===a-1))}const d=2===u?",":"";f[0]="["+f[0]+d;for(let m=1;m<f.length-1;m++)f[m]=" "+f[m]+d;let p=",\n";for(let m=2;u>m;m++)p+="\n";return f[f.length-1]=" "+f[f.length-1]+"]"+(i?"":p),f}function ee(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}function ne(){return xt("Tensor",()=>Ly)}function re(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return Jy[t][e]}function se(t){return re(t,"int32")}function ie(t,e){if(t.dtype===e.dtype)return[t,e];const n=re(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function oe(t,e){F(t.dtype===e.dtype,()=>`The dtypes of the first(${t.dtype}) and second(${e.dtype}) input must match`)}function ae(t,e){return e.some(e=>e.id===t.id)}function ue(t){const e=[];return le(t,e,new Set),e}function le(t,e,n){if(null==t)return;if(t instanceof Ly)return void e.push(t);if(r=t,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=t;for(const i in s){const t=s[i];n.has(t)||(n.add(t),le(t,e,n))}}function ce(t){return null!=t.kernelName}function he(){const t=wt();if(null==t.$){const e=new Jf(t);t.$=new Zy(e)}var e;return e=t.$.ENV,Yf=e,My=()=>t.$,t.$}function fe(t,e){const n={a:t,b:e};return Qy.runKernel(ed,n)}function de(t){if(void 0!==tb)return tb;if(t||"undefined"!=typeof navigator&&null!=navigator){if(t||(t=navigator),"ReactNative"===t.product)return!0;const e=t.userAgent||t.vendor||("undefined"!=typeof window?window.opera:"");if(!e){const e=t;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function pe(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}function me(t,e){let n=t;if(Z(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||Z(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&gt().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&ye(t,r,[]),r}function ye(t,e,n){if(n=n||[],!Array.isArray(t)&&!Z(t))return void F(0===e.length,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);F(e.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`),F(t.length===e[0],()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`);const r=e.slice(1);for(let s=0;s<t.length;++s)ye(t[s],r,n.concat(s))}function be(t,e,n,r){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}}function ge(t,e,n,r="numeric"){if(t instanceof Ly)return be(r,t.dtype,e,n),t;let s=st(t);if("string"===s||0>["bool","int32","float32"].indexOf(r)||(s=r),be(r,s,e,n),null==t||!Z(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const r=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const i=me(t,s);Z(t)||Array.isArray(t)||(t=[t]);const o="string"!==s?Gt(t,s):L(t,[],!0);return Qy.makeTensor(o,i,s)}function we(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map((t,s)=>ge(t,`${e}[${s}]`,n,r))}function xe(t){const e=Object.keys(t);if(1!==e.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const r=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=rb;const s=(...t)=>{Qy.startScope(n);try{const e=r(...t);return yt(e),Qy.endScope(e),e}catch(e){throw Qy.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}function ve(t,e,n,r){if(null==r&&(r=st(t)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Z(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){dt(e);const t=P(e),r=P(n);F(t===r,()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`);for(let s=0;s<n.length;++s){const t=n[s],r=s!==n.length-1||t!==P(e.slice(s));F(n[s]===e[s]||!r,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `)}}return Z(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==r?Gt(t,r):L(t,[],!0),Qy.makeTensor(t,e,r)}function $e(t,e,n){return ve(t,e,me(t,n),n)}function ke(t,e){return cf(this,null,function*(){const n=[],r=[],s=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);for(let i=0;i<s.length;++i){const o=s[i],a=Array.isArray(t)?t[i].tensor:t[o];if("float32"!==a.dtype&&"int32"!==a.dtype&&"bool"!==a.dtype&&"string"!==a.dtype&&"complex64"!==a.dtype)throw new Error(`Unsupported dtype in weight '${o}': ${a.dtype}`);const u={name:o,shape:a.shape,dtype:a.dtype};if("string"===a.dtype){const t=new Promise(t=>cf(this,null,function*(){const e=yield a.bytes(),n=e.reduce((t,e)=>t+e.length,0)+4*e.length,r=new Uint8Array(n);let s=0;for(let t=0;t<e.length;t++){const n=e[t],i=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(i,s),s+=4,r.set(n,s),s+=n.length}t(r)}));r.push(t)}else r.push(a.data());null!=e&&(u.group=e),n.push(u)}return{data:Ce(yield Promise.all(r)),specs:n}})}function Ne(t,e){const n={};let r,s=0;for(const i of e){const e=i.name,o=i.dtype,a=i.shape,u=P(a);let l;if("quantization"in i){const n=i.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${i.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${i.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${i.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${o}.`)}const a=ib[n.dtype],c=t.slice(s,s+u*a),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===o)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];l[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=Fe()),l=r(h)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${e}': ${o}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];l[t]=Math.round(e*n.scale+n.min)}}s+=u*a}else if("string"===o){const e=P(i.shape);l=[];for(let n=0;e>n;n++){const e=new Uint32Array(t.slice(s,s+4))[0];s+=4;const n=new Uint8Array(t.slice(s,s+e));l.push(n),s+=e}}else{const r=ib[o],i=t.slice(s,s+u*r);if("float32"===o)l=new Float32Array(i);else if("int32"===o)l=new Int32Array(i);else if("bool"===o)l=new Uint8Array(i);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${e}': ${o}`);{l=new Float32Array(i);const t=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let e=0;e<t.length;e++)t[e]=l[2*e],r[e]=l[2*e+1];const s=$e(t,a,"float32"),o=$e(r,a,"float32");n[e]=sb(s,o),s.dispose(),o.dispose()}}s+=u*r}"complex64"!==o&&(n[e]=$e(l,a,o))}return n}function Ce(t){if(null===t)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach(t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${t.constructor.name}`)});const r=new Uint8Array(e);let s=0;return n.forEach(t=>{r.set(new Uint8Array(t.buffer),s),s+=t.byteLength}),r.buffer}function Se(t){return ob?Buffer.byteLength(t):new Blob([t]).size}function Ee(t){if(1===t.length)return t[0];let e=0;t.forEach(t=>{e+=t.byteLength});const n=new Uint8Array(e);let r=0;return t.forEach(t=>{n.set(new Uint8Array(t),r),r+=t.byteLength}),n.buffer}function Te(t){for(t=t.trim();t.endsWith("/");)t=t.slice(0,t.length-1);const e=t.split("/");return e[e.length-1]}function _e(t,e){const n={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:e};return null!=t.signature&&(n.signature=t.signature),null!=t.userDefinedMetadata&&(n.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(n.modelInitializer=t.modelInitializer),null!=t.trainingConfig&&(n.trainingConfig=t.trainingConfig),n}function Re(t,e,n){const r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};if(null!=t.trainingConfig&&(r.trainingConfig=t.trainingConfig),null!=t.weightsManifest){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=e,r.weightData=n}return null!=t.signature&&(r.signature=t.signature),null!=t.userDefinedMetadata&&(r.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(r.modelInitializer=t.modelInitializer),r}function Ae(t,e){return cf(this,null,function*(){let n,r;return null!=t.weightsManifest&&([n,r]=yield e(t.weightsManifest)),Re(t,n,r)})}function Oe(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:Se(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:Se(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function Ie(t){const e=[];for(const n of t)e.push(...n.weights);return e}function Fe(){const t=(()=>{const t=t=>{let e=t<<13,n=0;for(;!(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;1024>n;n++)e[n]=t(n);for(let n=1024;2048>n;n++)e[n]=939524096+(n-1024<<13);return e})(),e=(()=>{const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;31>e;e++)t[e]=e<<23;for(let e=33;63>e;e++)t[e]=2147483648+(e-32<<23);return t})(),n=(()=>{const t=new Uint32Array(64);for(let e=0;64>e;e++)t[e]=1024;return t[0]=t[32]=0,t})();return r=>{const s=new ArrayBuffer(4*r.length),i=new Uint32Array(s);for(let o=0;o<r.length;o++){const s=r[o],a=t[n[s>>10]+(1023&s)]+e[s>>10];i[o]=a}return new Float32Array(s)}}function Me(){if(!gt().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function De(t){const e=t.result;e.createObjectStore(hb,{keyPath:"modelPath"}),e.createObjectStore(fb,{keyPath:"modelPath"})}function Le(t){return{info:[bb,t,gb].join(yb),topology:[bb,t,wb].join(yb),weightSpecs:[bb,t,xb].join(yb),weightData:[bb,t,vb].join(yb),modelMetadata:[bb,t,$b].join(yb)}}function Pe(t){for(const e of Object.values(t))window.localStorage.removeItem(e)}function Ve(t){const e=t.split(yb);if(3>e.length)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(yb)}function Be(t){if(-1===t.indexOf(Sb))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Eb.getSchemes().join(",")}`);return{scheme:t.split(Sb)[0],path:t.split(Sb)[1]}}function ze(t,e,n=!1){return cf(this,null,function*(){F(t!==e,()=>`Old path and new path are the same: '${t}'`);const r=ab.getLoadHandlers(t);F(r.length>0,()=>`Copying failed because no load handler is found for source URL ${t}.`),F(2>r.length,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${t}.`);const s=r[0],i=ab.getSaveHandlers(e);F(i.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),F(2>i.length,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${e}.`);const o=i[0],a=Be(t).scheme,u=Be(t).path,l=a===Be(t).scheme,c=yield s.load();n&&l&&(yield Eb.getManager(a).removeModel(u));const h=yield o.save(c);return n&&!l&&(yield Eb.getManager(a).removeModel(u)),h.modelArtifactsInfo})}function We(t,e="float32",n){return e=e||"float32",dt(t),new Fy(t,e,n)}function je(t,e=!1){}function Ue(t){return new Promise(t=>setTimeout(t)).then(t)}function Ge(t,e,n,r){var s,i,o;F(null!=(s=t)&&Array.isArray(s)&&s.length>0,()=>"promises must be a none empty array"),o=r=null==r?1:r,F((i=n=null==n?0:n)>=0&&1>=i,()=>`Progress fraction must be in range [0, 1], but got startFraction ${i}`),F(o>=0&&1>=o,()=>`Progress fraction must be in range [0, 1], but got endFraction ${o}`),F(o>=i,()=>`startFraction must be no more than endFraction, but got startFraction ${i} and endFraction ${o}`);let a=0;return Promise.all(t.map(s=>(s.then(s=>{const i=n+ ++a/t.length*(r-n);return e(i),s}),s)))}function qe(t,e){return cf(this,null,function*(){null==e&&(e={});const n=null==e.fetchFunc?gt().platform.fetch:e.fetchFunc,r=t.map(t=>n(t,e.requestInit,{isBinary:!0})),s=(null==e.onProgress?yield Promise.all(r):yield Ge(r,e.onProgress,0,.5)).map(t=>t.arrayBuffer());return null==e.onProgress?yield Promise.all(s):yield Ge(s,e.onProgress,.5,1)})}function He(t,e="",n,r){return cf(this,null,function*(){return Xe(t=>qe(t,{requestInit:r}))(t,e,n)})}function Xe(t){return(e,n="",r)=>cf(this,null,function*(){const s=e.map(()=>!1),i={},o=null!=r?r.map(()=>!1):[],a=[];if(e.forEach((t,e)=>{let n=0;t.weights.forEach(t=>{const u="quantization"in t?t.quantization.dtype:t.dtype,l=ib[u]*P(t.shape),c=()=>{s[e]=!0,null==i[e]&&(i[e]=[]),i[e].push({manifestEntry:t,groupOffset:n,sizeBytes:l})};null!=r?r.forEach((e,n)=>{e===t.name&&(c(),o[n]=!0)}):c(),a.push(t.name),n+=l})}),!o.every(t=>t)){const t=r.filter((t,e)=>!o[e]);throw new Error(`Could not find weights in manifest with names: ${t.join(", ")}. \nManifest JSON has weights with names: ${a.join(", ")}.`)}const u=s.reduce((t,e,n)=>(e&&t.push(n),t),[]),l=[];u.forEach(t=>{e[t].paths.forEach(t=>{const e=n+(n.endsWith("/")?"":"/")+t;l.push(e)})});const c=yield t(l),h={};let f=0;return u.forEach(t=>{const n=e[t].paths.length;let r=0;for(let e=0;n>e;e++)r+=c[f+e].byteLength;const s=new ArrayBuffer(r),o=new Uint8Array(s);let a=0;for(let e=0;n>e;e++){const t=new Uint8Array(c[f+e]);o.set(t,a),a+=t.byteLength}i[t].forEach(t=>{const e=Ne(s.slice(t.groupOffset,t.groupOffset+t.sizeBytes),[t.manifestEntry]);for(const n in e)h[n]=e[n]}),f+=n}),h})}function Je(t){return null!=t.match(Fb.URL_SCHEME_REGEX)}function Ke(t,e){return new Fb(t,e)}function Ye(t,e){return Ke(t,e)}function Ze(t,e,n,r){if(1===arguments.length){const e=null!=t.modelTopology||null!=t.weightSpecs;return new Db(e?t:{modelTopology:t})}return new Db({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:r})}function Qe(){return Qy}function tn(){return Qy.memory()}function en(t,e){return Qy.tidy(t,e)}function nn(t){ue(t).forEach(t=>t.dispose())}function rn(t){return Qy.keep(t)}function sn(t,e,n=1){return Qy.registerBackend(t,e,n)}function on(){return Qy.backend}function an(t,e){const n=t.length,r=[];for(let s=0;n>s;s++){const i=n-1-s,o=t[i]||1;(e[e.length-1-s]||1)>1&&1===o&&r.unshift(i)}return r}function un(t,e){const n=[];for(let r=0;r<e.length;r++){const s=t[t.length-r-1],i=e.length-r-1,o=e[i];(null==s||1===s&&o>1)&&n.unshift(i)}return n}function ln(t,e){const n=[],r=Math.max(t.length,e.length);for(let s=0;r>s;s++){let r=t[t.length-s-1];null==r&&(r=1);let i=e[e.length-s-1];if(null==i&&(i=1),1===r)n.unshift(i);else if(1===i)n.unshift(r);else{if(r!==i)throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`);n.unshift(r)}}return n}function cn(t,e,n){if(D(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const r=me(t,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ve(t,e,r,n)}function hn(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,i=!1,o=!1,a=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&t instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement)i=!0;else if(null!=t.getContext)o=!0;else{if(!("undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${t.constructor.name}`);a=!0}if(null!=$t(ey,Qy.backendName)){const n={pixels:t},r={numChannels:e};return Qy.runKernel(ey,n,r)}const[u,l]=s?[t.videoWidth,t.videoHeight]:[t.width,t.height];let c,h;if(o)c=t.getContext("2d").getImageData(0,0,u,l).data;else if(r||n)c=t.data;else if(i||s||a){if(null==Jb)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Jb=new OffscreenCanvas(1,1).getContext("2d")}else Jb=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Jb.canvas.width=u,Jb.canvas.height=l,Jb.drawImage(t,0,0,u,l),c=Jb.getImageData(0,0,u,l).data}if(4===e)h=new Int32Array(c);else{const t=u*l;h=new Int32Array(t*e);for(let n=0;t>n;n++)for(let t=0;e>t;++t)h[n*e+t]=c[4*n+t]}return cn(h,[l,u,e],"int32")}function fn(t,e){const n=t.shape.length,r=e.shape.length;if(1>n)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(1>r)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[r-1]} vs. ${n}`);if(0===P(t.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const s=e.shape,i=s[s.length-1];let o=1;for(let h=0;h<s.length-1;++h)o*=s[h];const a=t.shape,u=s.slice();u.pop();let l=1;for(let h=i;n>h;++h)l*=a[h],u.push(a[h]);const c=[...at(t.shape).map(t=>t/l),1].slice(0,i);return[u,o,l,c]}function dn(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(i+` update.rank < ${s}. `);if(t.length<r+(n.rank-s))throw new Error(i+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+t.length-r)throw new Error(i+" update.rank != "+(s+t.length-r));for(let o=0;s>o;++o)if(n.shape[o]!==e.shape[o])throw new Error(i+` updates.shape[${o}] (${n.shape[o]}) != indices.shape[${o}] (${e.shape[o]}).`);for(let o=0;o<n.rank-s;++o)if(n.shape[o+s]!==t[o+r])throw new Error(i+` updates.shape[${o+s}] (${n.shape[o+s]}) != shape[${o+s}] (${t[o+s]})`)}function pn(t,e,n){if(1>e.rank)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(1>t.rank)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(1>n.length)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===e.size)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(0===t.size)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}dn(n,e,t)}function mn(t,e,n){const r=e.shape.length,s=r>1?e.shape[r-1]:1,i=n.length;let o=1;for(let u=s;i>u;++u)o*=n[u];const a=1>s?1:s;return{sliceRank:s,numUpdates:P(e.shape)/a,sliceSize:o,strides:[...at(n.slice(0,s)),1],outputSize:P(n)}}function yn(t,e,n){const r=t.shape.length;F(r===e.length,()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`),F(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let s=0;r>s;++s)F(e[s]+n[s]<=t.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${e[s]+n[s]}) would overflow input.shape[${s}] (${t.shape[s]})`)}function bn(t,e,n){const r=[];for(let s=0;s<t.length;s++)r[s]=Math.ceil((e[s]-t[s])/n[s]);return r}function gn(t,e,n,r){const s=[...t];for(let i=s.length;i<r.length;i++)s.push(1);for(let i=0;n>i;i++)0===i?s[e]=1:(s.splice(e,0,1),s.pop());return s}function wn(t,e,n){return n>t?n-(e-1):n}function xn(t,e){const n=[];for(let r=0;t>r;r++)n.push(e+r);return n}function vn(t,e,n,r,s){const i=[...s],o=xn(n,e);for(let a=0;a<i.length;a++)if(o.indexOf(a)>-1)i[a]=0;else{const s=wn(e,n,a);let o=r[s];t&1<<s&&(o=0),i[a]=o}return i}function $n(t,e,n,r,s){const i=[...s],o=xn(n,e);for(let a=0;a<i.length;a++)if(o.indexOf(a)>-1)i[a]=Number.MAX_SAFE_INTEGER;else{const s=wn(e,n,a);let o=r[s];t&1<<s&&(o=Number.MAX_SAFE_INTEGER),i[a]=o}for(let a=0;a<i.length;a++){const t=s[a];0>i[a]&&(i[a]+=t),i[a]=R(0,i[a],s[a])}return i}function kn(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function Nn(t,e,n,r,s,i){let o=e[s];const a=n[s]||1;(t&1<<s||i&1<<s||null==o)&&(o=a>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[s];return 0>o&&(o+=u),o=R(0,o,u-1),o}function Cn(t,e,n,r,s,i){let o=e[s];const a=n[s]||1;(t&1<<s||i&1<<s||null==o)&&(o=a>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[s];return 0>o&&(o+=u),o=a>0?R(0,o,u):R(-1,o,u-1),o}function Sn(t,e,n){let r=n.length;for(let s=0;s<n.length;s++)if(n[s]>1){r=s;break}for(let s=r+1;s<n.length;s++)if(e[s]>0||n[s]!==t[s])return!1;return!0}function En(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function Tn(t,e,n){let r;const s=t.shape.length;let i;return r="number"==typeof e?[e,...new Array(s-1).fill(0)]:e.length<s?e.concat(new Array(s-e.length).fill(0)):e.slice(),r.forEach(t=>{F(-1!==t,()=>"slice() does not support negative begin indexing.")}),i=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,i=i.map((e,n)=>0>e?(F(-1===e,()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`),t.shape[n]-r[n]):e),[r,i]}function _n(t,e,n,r,s,i,o,a,u){let l;if(null==r?(l=new Array(e.length),l.fill(1)):l=r,null!=o&&o&o-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:n.slice(),strides:l.slice(),beginMask:s,endMask:i,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:u};for(let w=0;w<h.dims;w++)c&&1<<w&a&&h.numAddAxisAfterEllipsis++,1<<w&o&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const f={dims:t.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};((t,e)=>{e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let n=0;e.beginValid=null!=t.begin,e.endValid=null!=t.end,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let r=0;r<t.dims;r++)if(1<<r&t.ellipsisMask){const s=Math.min(e.dims-(t.dims-r)+1+t.numAddAxisAfterEllipsis,e.dims);for(;s>n;n++)e.begin[n]=0,e.end[n]=0,e.strides[n]=1,e.beginMask|=1<<n,e.endMask|=1<<n,e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&t.newAxisMask)e.finalShapeGatherIndices.push(-2),e.finalShapeGatherIndicesSparse.push(-1);else{if(n===e.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${e.dims} dims, ${e.begin.length}.`);null!=t.begin&&(e.begin[n]=t.begin[r]),null!=t.end&&(e.end[n]=t.end[r]),e.strides[n]=t.strides[r],t.beginMask&1<<r&&(e.beginMask|=1<<n),t.endMask&1<<r&&(e.endMask|=1<<n),t.shrinkAxisMask&1<<r?(e.finalShapeGatherIndices.push(-1),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<n):(e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(r)),e.inputShapeGatherIndicesSparse[n]=r,n++}})(h,f);let d=!0,p=!0,m=!0;const y=[],b=[];for(let w=0;w<t.length;++w){if(0===f.strides[w])throw Error(`strides[${w}] must be non-zero`);const e=!!(f.shrinkAxisMask&1<<w),n=t[w];if(-1===n){y.push(e?1:-1);continue}const r=[f.beginMask&1<<w,f.endMask&1<<w],s=[f.strides[w]>0?0:-1,f.strides[w]>0?n:n-1];if(e&&0>=f.strides[w])throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===f.strides[w];const i=!!(f.beginMask&1<<w&&f.endMask&1<<w);if(f.beginValid&&f.endValid){if(e){const t=0>f.begin[w]?n+f.begin[w]:f.begin[w];if(f.begin[w]=t,f.end[w]=f.begin[w]+1,0>t||t>=n)throw Error(`slice index ${f.begin[w]} of dimension ${w} out of bounds.`)}else f.begin[w]=Rn(f.begin[w],0,f.strides[w],n,r,s),f.end[w]=Rn(f.end[w],1,f.strides[w],n,r,s);const t=1===f.strides[w]&&0===f.begin[w]&&f.end[w]===n;d=d&&t,p=p&&(0===w&&1===f.strides[w]||t)}else d=d&&1===f.strides[w]&&i,p=p&&(0===w&&1===f.strides[w]||i);let o,a=!1;if(f.beginValid&&f.endValid?(o=f.end[w]-f.begin[w],a=!0):e?(o=1,a=!0):i&&(0>n||(o=0>f.strides[w]?-n:n,a=!0)),a){let t;t=0===o||0>o!=0>f.strides[w]?0:Math.trunc(o/f.strides[w])+(o%f.strides[w]!==0?1:0),y.push(t)}else y.push(-1)}for(let w=0;w<f.finalShapeGatherIndices.length;++w){const t=f.finalShapeGatherIndices[w];0>t?-2===t&&b.push(1):b.push(y[t])}const g=b.filter((t,e)=>-2!==f.finalShapeGatherIndices[e]);return{finalShapeSparse:g,finalShape:b,isIdentity:d,sliceDim0:p,isSimpleSlice:m,begin:f.begin,end:f.end,strides:f.strides}}function Rn(t,e,n,r,s,i){if(s[e])return n>0?i[e]:i[e+1&1];{const e=0>t?r+t:t;return e<i[0]?i[0]:e>i[1]?i[1]:e}}function An(t){F(null!=t.className,()=>"Class being registered does not have the static className property defined."),F("string"==typeof t.className,()=>"className is required to be a string, but got type "+typeof t.className),F(t.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),ng.register(t)}function On(){return 32===Qy.backend.floatPrecision()?.001:.1}function In(t,e,n){let r=!0;if((Z(t)||Z(e))&&(r=!1),Z(t)&&Z(e)&&(r=!0),r){const n=t.constructor.name,r=e.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(t)&&Array.isArray(e)){const n=me(t),r=me(e);if(!V(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const s=Z(t)?t:L(t),i=Z(e)?e:L(e);if(s.length!==i.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${i.length}.\nActual:   ${s}.\nExpected: ${i}.`);for(let o=0;o<i.length;++o){const t=s[o],e=i[o];if(!n(t,e))throw new Error(`Arrays differ: actual[${o}] = ${t}, expected[${o}] = ${e}.\nActual:   ${s}.\nExpected: ${i}.`)}"undefined"!=typeof expect&&expect().nothing()}function Fn(t,e,n){return!isFinite(t)&&!isFinite(e)||!(isNaN(t)||isNaN(e)||Math.abs(t-e)>n)}function Mn(t,e,n,r,s="NHWC",i){return Pn(t,[...e,t[3]],n,i,r,null,null,Hn(s))}function Dn(t,e,n,r,s,i,o="channelsLast"){const[a,u]=zn(e);let l;if("channelsLast"===o)l=[a,u,t[3],t[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);l=[a,u,t[1],t[1]]}return Pn(t,l,n,r,s,i,!1,o)}function Ln(t,e,n,r,s,i,o="NDHWC"){const[a,u,l]=Wn(e);let c,h;if("NDHWC"===o)h="channelsLast",c=[a,u,l,t[4],t[4]];else{if("NCDHW"!==o)throw new Error(`Unknown dataFormat ${o}`);h="channelsFirst",c=[a,u,l,t[1],t[1]]}return Vn(t,c,n,r,s,!1,h,i)}function Pn(t,e,n,r,s,i,o=!1,a="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===a)[u,l,c,h]=t;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[u,h,l,c]=t}const[f,d,,p]=e,[m,y]=zn(n),[b,g]=zn(r),w=jn(f,b),x=jn(d,g),{padInfo:v,outHeight:$,outWidth:k}=((t,e,n,r,s,i,o,a,u)=>{let l,c,h;if("number"==typeof t){l={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const s=((t,e,n,r,s)=>{null==r&&(r=Bn(t,e,n));const i=t[1];return[Un((t[0]-e+2*r)/n+1,s),Un((i-e+2*r)/n+1,s)]})([e,n],i,r,t,a);c=s[0],h=s[1]}else if("same"===t){c=Math.ceil(e/r),h=Math.ceil(n/s);const t=Math.max(0,(c-1)*r+i-e),a=Math.max(0,(h-1)*s+o-n),u=Math.floor(t/2),f=t-u,d=Math.floor(a/2);l={top:u,bottom:f,left:d,right:a-d,type:"SAME"}}else if("valid"===t)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-i+1)/r),h=Math.ceil((n-o+1)/s);else{if("object"!=typeof t)throw Error(`Unknown padding parameter: ${t}`);{const f="channelsLast"===u?t[1][0]:t[2][0],d="channelsLast"===u?t[1][1]:t[2][1],p="channelsLast"===u?t[2][0]:t[3][0],m="channelsLast"===u?t[2][1]:t[3][1];l={top:f,bottom:d,left:p,right:m,type:0===f&&0===d&&0===p&&0===m?"VALID":"EXPLICIT"},c=Un((e-i+f+d)/r+1,a),h=Un((n-o+p+m)/s+1,a)}}return{padInfo:l,outHeight:c,outWidth:h}})(s,l,c,m,y,w,x,i,a),N=o?p*h:p;let C;return"channelsFirst"===a?C=[u,N,$,k]:"channelsLast"===a&&(C=[u,$,k,N]),{batchSize:u,dataFormat:a,inHeight:l,inWidth:c,inChannels:h,outHeight:$,outWidth:k,outChannels:N,padInfo:v,strideHeight:m,strideWidth:y,filterHeight:f,filterWidth:d,effectiveFilterHeight:w,effectiveFilterWidth:x,dilationHeight:b,dilationWidth:g,inShape:t,outShape:C,filterShape:e}}function Vn(t,e,n,r,s,i=!1,o="channelsLast",a){let[u,l,c,h,f]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h,f]=t;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,f,l,c,h]=t}const[d,p,m,,y]=e,[b,g,w]=Wn(n),[x,v,$]=Wn(r),k=jn(d,x),N=jn(p,v),C=jn(m,$),{padInfo:S,outDepth:E,outHeight:T,outWidth:_}=((t,e,n,r,s,i,o,a,u,l,c)=>{let h,f,d,p;if("number"==typeof t){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const i=((t,e,n,r,s,i)=>{null==s&&(s=Bn(t,e,r));const o=t[1],a=t[2];return[Un((t[0]-e+2*s)/r+1,i),Un((o-e+2*s)/r+1,i),Un((a-e+2*s)/r+1,i),1]})([e,n,r,1],a,0,s,t,c);f=i[0],d=i[1],p=i[2]}else if("same"===t){f=Math.ceil(e/s),d=Math.ceil(n/i),p=Math.ceil(r/o);const t=(f-1)*s+a-e,c=(d-1)*i+u-n,m=(p-1)*o+l-r,y=Math.floor(t/2),b=t-y,g=Math.floor(c/2),w=c-g,x=Math.floor(m/2);h={top:g,bottom:w,left:x,right:m-x,front:y,back:b,type:"SAME"}}else{if("valid"!==t)throw Error(`Unknown padding parameter: ${t}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},f=Math.ceil((e-a+1)/s),d=Math.ceil((n-u+1)/i),p=Math.ceil((r-l+1)/o)}return{padInfo:h,outDepth:f,outHeight:d,outWidth:p}})(s,l,c,h,b,g,w,k,N,C,a),R=i?y*f:y;let A;return"channelsFirst"===o?A=[u,R,E,T,_]:"channelsLast"===o&&(A=[u,E,T,_,R]),{batchSize:u,dataFormat:o,inDepth:l,inHeight:c,inWidth:h,inChannels:f,outDepth:E,outHeight:T,outWidth:_,outChannels:R,padInfo:S,strideDepth:b,strideHeight:g,strideWidth:w,filterDepth:d,filterHeight:p,filterWidth:m,effectiveFilterDepth:k,effectiveFilterHeight:N,effectiveFilterWidth:C,dilationDepth:x,dilationHeight:v,dilationWidth:$,inShape:t,outShape:A,filterShape:e}}function Bn(t,e,n,r=1){const s=jn(e,r);return Math.floor((t[0]*(n-1)-n+s)/2)}function zn(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function Wn(t){return"number"==typeof t?[t,t,t]:t}function jn(t,e){return e>1?t+(t-1)*(e-1):t}function Un(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function Gn(t){const[e,n,r]=zn(t);return 1===e&&1===n&&1===r}function qn(t,e){return Gn(t)||Gn(e)}function Hn(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}function Xn(t,e,n){if(null!=n){if("string"==typeof e)throw Error(`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);if("number"==typeof e)F(B(e),()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);else{if("object"!=typeof e)throw Error(`Error in ${t}: Unknown padding parameter: ${e}`);e.forEach(e=>{e.forEach(e=>{F(B(e),()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`)})})}}}function Jn(t,e,n){const r={shape:t,value:e,dtype:n};return Qy.runKernel(rp,{},r)}function Kn(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function Yn(t,e,n){const r=t.length+e.length,s=[];let i=0,o=0;for(let a=0;r>a;a++)-1===n.indexOf(a)?s.push(t[i++]):s.push(e[o++]);return s}function Zn(t,e){const n=[],r=t.length;for(let s=0;r>s;s++)-1===e.indexOf(s)&&n.push(t[s]);return[n,e.map(e=>t[e])]}function Qn(t,e){return Yn(t,e.map(t=>1),e)}function tr(t,e,n){F(Kn(e,n),()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`)}function er(t,e){if(Kn(t,e))return null;const n=[];for(let r=0;e>r;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach(t=>n.push(t)),n}function nr(t){return t.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function rr(t,e){const n=[];for(let r=e-t;e>r;++r)n.push(r);return n}function sr(t,e){if((Z(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&Z(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ve(t,[],[],e)}function ir(t,e,n=null){if(0===t.rank)return cg(t);if(1!==t.rank&&null===n)return ir(kg(t,[-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return xw(cg(t),n);if(e===1/0)return mw(cg(t),n);if(e===-1/0)return yw(cg(t),n);if("euclidean"===e||2===e)return gw(xw(bw(cg(t),sr(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&2===n.length){if(1===e)return mw(xw(cg(t),n[0]),n[1]-1);if(e===1/0)return mw(xw(cg(t),n[1]),n[0]);if(e===-1/0)return yw(xw(cg(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return gw(xw(ww(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}function or(t,e,n){if(0>=n)throw new Error("The number of values should be positive.");const r={start:t,stop:e,num:n};return Qy.runKernel(vp,{},r)}function ar(t,e){F(it(t),()=>"The f passed in variableGrads(f) must be a function"),F(null==e||Array.isArray(e)&&e.every(t=>t instanceof Py),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=e;if(!n){e=[];for(const t in Qy.registeredVariables)e.push(Qy.registeredVariables[t])}const r=n?e.filter(t=>!t.trainable):null,s=e.length;F((e=e.filter(t=>t.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const{value:i,grads:o}=Qy.gradients(t,e,null,!0);F(o.some(t=>null!=t),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),F(0===i.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const a={};return e.forEach((t,e)=>{null!=o[e]&&(a[t.name]=o[e])}),null!=r&&r.forEach(t=>a[t.name]=null),{value:i,grads:a}}function ur(t){return Qy.customGrad(t)}function lr(t){if(t.filter(t=>null==t).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}function cr(t,e){return Yw(t,e,"left")}function hr(t,e="float32"){if("complex64"===e){const e=hr(t,"float32"),n=hr(t,"float32");return sb(e,n)}const n=ht(P(t),e);return Qy.makeTensor(n,t,e)}function fr(t,e="float32"){if("complex64"===e){const e=fr(t,"float32"),n=hr(t,"float32");return sb(e,n)}const n=ct(P(t),e);return Qy.makeTensor(n,t,e)}function dr(t,e,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===t)return[];let r=ge(t,"x","meshgrid",t instanceof Ly?t.dtype:"float32");if(void 0===e)return[r];let s=ge(e,"y","meshgrid",e instanceof Ly?e.dtype:"float32");const i=P(r.shape),o=P(s.shape);return"xy"===n?(r=kg(r,[1,-1]),s=kg(s,[-1,1]),[Bb(fr([o,1],r.dtype),r),Bb(s,fr([1,i],s.dtype))]):(r=kg(r,[-1,1]),s=kg(s,[1,-1]),[Bb(r,fr([1,o],r.dtype)),Bb(fr([i,1],s.dtype),s)])}function pr(t,e,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:t,stop:e,step:n,dtype:r};return Qy.runKernel(sm,{},s)}function mr(t,e){D(t);const n=me(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ve(t,null,n,e)}function yr(t,e,n){if(D(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=me(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ve(t,e,r,n)}function br(t,e,n){if(D(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const r=me(t,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return ve(t,e,r,n)}function gr(t,e,n){if(D(t),null!=e&&5!==e.length)throw new Error("tensor5d() requires shape to have five numbers");const r=me(t,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return ve(t,e,r,n)}function wr(t,e,n){if(D(t),null!=e&&6!==e.length)throw new Error("tensor6d() requires shape to have six numbers");const r=me(t,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return ve(t,e=e||r,r,n)}function xr(t,e){return Yw(t,e,"right")}function vr(t,e=!0,n,r){return Qy.makeVariable(t,e,n,r)}function $r(t,e){const n=[];for(let i=0;i<e.length;i++)e[i]&&n.push(i);const r=We(t,"int32"),s=We([n.length,t.length],"int32");for(let i=0;i<n.length;i++){const e=r.indexToLoc(n[i]),o=i*t.length;s.values.set(e,o)}return s.toTensor()}function kr(t){return Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2))))}function Nr(t,e,n){const r=1-t%2,s=new Float32Array(t);for(let i=0;t>i;++i){const o=2*Math.PI*i/(t+r-1);s[i]=e-n*Math.cos(o)}return mr(s,"float32")}function Cr(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return lg(t,_v(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Sr(t,e){let n=e;const r=un(t.shape,e.shape);return r.length>0&&(n=xw(n,r)),kg(n,t.shape)}function Er(t,e,n,r){if("linear"===e)return t;if("relu"===e)return ev(t);if("elu"===e)return dw(t);if("relu6"===e)return nv(t);if("prelu"===e)return wx(t,n);if("leakyrelu"===e)return Mw(t,r);if("sigmoid"===e)return Eg(t);throw new Error(`Unknown fused activation ${e}.`)}function Tr(t,e,n,r,s,i){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==i&&(i=0);const o=t.shape[0];return n=Math.min(n,o),F(r>=0&&1>=r,()=>`iouThreshold must be in [0, 1], but was '${r}'`),F(2===t.rank,()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`),F(4===t.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`),F(1===e.rank,()=>"scores must be a 1D tensor"),F(e.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${e.shape[0]}`),F(i>=0&&1>=i,()=>`softNmsSigma must be in [0, 1], but was '${i}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:i}}function _r(t,e,n){const r=((t,e,n)=>((t,e,n)=>{let r=0,s=t.length,i=0,o=!1;for(;s>r;){i=r+(s-r>>>1);const a=n(e,t[i]);a>0?r=i+1:(s=i,o=!a)}return o?r:-r-1})(t,e,n||Rr))(t,e,n),s=0>r?-(r+1):r;t.splice(s,0,e)}function Rr(t,e){return t>e?1:e>t?-1:0}function Ar(t,e,n,r,s){return Fr(t,e,n,r,s,0)}function Or(t,e,n,r,s,i){return Fr(t,e,n,r,s,0,!1,i,!0)}function Ir(t,e,n,r,s,i){return Fr(t,e,n,r,s,i,!0)}function Fr(t,e,n,r,s,i,o=!1,a=!1,u=!1){const l=[];for(let y=0;y<e.length;y++)e[y]>s&&l.push({score:e[y],boxIndex:y,suppressBeginIndex:0});l.sort(Lr);const c=i>0?-.5/i:0,h=[],f=[];for(;h.length<n&&l.length>0;){const e=l.pop(),{score:n,boxIndex:i,suppressBeginIndex:o}=e;if(s>n)break;let a=!1;for(let u=h.length-1;u>=o;--u){const n=Mr(t,i,h[u]);if(n>=r){a=!0;break}if(e.score=e.score*Dr(r,c,n),e.score<=s)break}e.suppressBeginIndex=h.length,a||(e.score===n?(h.push(i),f.push(e.score)):e.score>s&&_r(l,e,Lr))}const d=h.length,p=n-d;a&&p>0&&(h.push(...new Array(p).fill(0)),f.push(...new Array(p).fill(0)));const m={selectedIndices:h};return o&&(m.selectedScores=f),u&&(m.validOutputs=d),m}function Mr(t,e,n){const r=t.subarray(4*e,4*e+4),s=t.subarray(4*n,4*n+4),i=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),a=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),f=Math.max(s[1],s[3]),d=(a-i)*(u-o),p=(h-l)*(f-c);if(0>=d||0>=p)return 0;const m=Math.max(i,l),y=Math.max(o,c),b=Math.min(a,h),g=Math.min(u,f),w=Math.max(b-m,0)*Math.max(g-y,0);return w/(d+p-w)}function Dr(t,e,n){const r=Math.exp(e*n*n);return n>t?0:r}function Lr(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}function Pr(t,e=!1){return Qy.tidy(()=>{F(2===t.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`);const n=t.shape[0],r=t.shape[1];let s=Ew(n),i=Ab(t);const o=yr([[1]],[1,1]);let a=Ab(o);const u=r>n?n:r;for(let t=0;u>t;++t){const e=i,u=a,l=s;[a,i,s]=Qy.tidy(()=>{const e=Tg(i,[t,t],[n-t,1]),u=vw(e),l=Tg(i,[t,t],[1,1]),c=uw(Rw(l,0),yr([[-1]]),yr([[1]])),h=jw(l,lg(c,u)),f=ug(e,h);a=1===f.shape[0]?Ab(o):Sg([o,Tg(f,[1,0],[f.shape[0]-1,f.shape[1]])],0);const d=jb(ug(Bb(c,h),u)),p=Tg(i,[t,0],[n-t,r]),m=lg(d,a),y=Gb(a);if(0===t)i=jw(p,Bb(m,Bb(y,p)));else{const e=jw(p,Bb(m,Bb(y,p)));i=Sg([Tg(i,[0,0],[t,r]),e],0)}const b=Gb(m),g=Tg(s,[0,t],[n,s.shape[1]-t]);if(0===t)s=jw(g,Bb(Bb(g,a),b));else{const e=jw(g,Bb(Bb(g,a),b));s=Sg([Tg(s,[0,0],[n,t]),e],1)}return[a,i,s]}),nn([e,u,l])}return!e&&n>r&&(s=Tg(s,[0,0],[n,r]),i=Tg(i,[0,0],[r,r])),[s,i]})}function Vr(){return new Promise(t=>Z$(()=>t()))}function Br(t,e){const n=t[0].length;t.forEach((t,e)=>{F(t.length===n,()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`)}),F(e>=0&&n>e,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=t[0];t.forEach((t,s)=>{for(let i=0;n>i;i++)F(i===e||t[i]===r[i],()=>`Error in concat${n}D: Shape of tensors[${s}] (${t}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`)})}function zr(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}function Wr(t,e,n){let r=new Array;if(null==n&&null==e)return r;if(null==e)for(;r.length<t+n.length;)r.push(-1);else r=e.slice();if(null==n)return r;if(t+n.length!==r.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${t+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const i=n[s],o=r[r.length-n.length+s],a=r[o];if(i>=0)if(0>a)r[o]=i;else if(a!==i)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${s+t}] = ${i} but shape[${s+t}] = ${a}`)}return r}function jr(t){const e={FIRST_DIM_SIZE:Q$.FIRST_DIM_SIZE,VALUE_ROWIDS:Q$.VALUE_ROWIDS,ROW_LENGTHS:Q$.ROW_LENGTHS,ROW_SPLITS:Q$.ROW_SPLITS,ROW_LIMITS:Q$.ROW_LIMITS,ROW_STARTS:Q$.ROW_STARTS},n=[];for(const r of t){if(!(r in e))break;n.push(e[r])}return n}function Ur(t){return 0===t.length?0:t[0]===Q$.FIRST_DIM_SIZE?t.length-1:t.length}function Gr(t,e){if(null==t||null==e)return;const n=t.length,r=e.length;if(n>=r)throw new Error(`defaultValue.shape=${t} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const n=t[s],r=e[s+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${t}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${s-t.length}] = ${n} but ragged tensor input.flatValues.shape[${s-t.length}] = ${r}`)}}function qr(t){return t>30?ot(t,Math.floor(Math.sqrt(t))):t}function Hr(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}function Xr(t,e,n,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(t[0]/n),s=s.concat(t.slice(1));else{s=s.concat(t[0]);const n=e.length;for(let r=0;n>r;++r)s=s.concat([t[r+1]/e[r],e[r]]);s=s.concat(t.slice(n+1))}return s}function Jr(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;t>n;++n)n>2*e?r.push(n):(r.push(n),r.push(n-(e+1)))}else{const n=[],s=[];for(let r=1;t>r;++r)2*e+1>r&&r%2!=1?n.push(r):s.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function Kr(t,e,n,r=!0){const s=[];r?s.push(t[0]/n):s.push(t[0]*n);for(let i=1;i<t.length;++i)i>e.length?s.push(t[i]):r?s.push(e[i-1]*t[i]):s.push(t[i]/e[i-1]);return s}function Yr(t,e){const n=[0];for(let r=0;e>r;++r)n.push(t[r][0]);return n}function Zr(t,e,n){const r=t.slice(0,1);for(let s=0;n>s;++s)r.push(t[s+1]-e[s][0]-e[s][1]);return r}function Qr(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function ts(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function es(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let s=0;s<t.length;s+=4)n[Math.floor(s/4)]=t[s],r[Math.floor(s/4)]=t[s+1];return{real:n,imag:r}}function ns(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let s=2;s<t.length;s+=4)n[Math.floor(s/4)]=t[s],r[Math.floor(s/4)]=t[s+1];return{real:n,imag:r}}function rs(t,e){return{real:t[2*e],imag:t[2*e+1]}}function ss(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function is(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let s=0;s<Math.ceil(t/2);s++){const i=(e?2:-2)*Math.PI*(s/t);n[s]=Math.cos(i),r[s]=Math.sin(i)}return{real:n,imag:r}}function os(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}function as(t,e){const n=((t=t.replace(/\s/g,"")).length-t.replace(ck,"").length)/2;if(1>n)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${lk}").`);const[r,s]=t.split(lk);F(-1===r.indexOf("..."),()=>'The ellipsis notation ("...") is not supported yet.');const i=r.split(","),o=i.length;if(e!==o)throw new Error(`Expected ${o} input tensors, received ${e}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let h=0;h<s.length;++h){const t=s[h];if(!i.some(e=>-1!==e.indexOf(t)))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===a.indexOf(t)&&a.push(t)}for(let h=0;h<r.length;++h){const t=r[h];-1===a.indexOf(t)&&","!==t&&a.push(t)}const u=new Array(i.length);for(let h=0;o>h;++h){if(new Set(i[h].split("")).size!==i[h].length)throw new Error(`Found duplicate axes in input component ${i[h]}. Support for duplicate axes in input is not implemented yet.`);u[h]=[];for(let t=0;t<i[h].length;++t)u[h].push(a.indexOf(i[h][t]))}const l=a.length,c=[];for(let h=s.length;l>h;++h)c.push(h);return{allDims:a,summedDims:c,idDims:u}}function us(t,e){let n=new Array(t);n.fill(-1);for(let s=0;s<e.length;++s)n[e[s]]=s;const r=[];for(let s=0;t>s;++s)-1===n[s]&&r.push(s);return n=n.filter(t=>-1!==t),{permutationIndices:n,expandDims:r}}function ls(t,e,n){const r=new Array(t);for(let s=0;s<n.length;++s){const t=n[s].shape;for(let n=0;n<e[s].length;++n)void 0===r[e[s][n]]?r[e[s][n]]=t[n]:F(r[e[s][n]]===t[n],()=>`Expected dimension ${r[e[s][n]]} at axis ${n} of input shaped ${JSON.stringify(t)}, but got dimension ${t[n]}`)}}function cs(t,e){const n=t,r=[];let s=0;0===t.length&&n.push(-1),s=t.length+1;for(let o=0;s>o;++o)r.push([]);const i=[];for(let o=0;o<n.length;++o){const t=fs(e,n[o]);for(const e of t)-1===i.indexOf(e)&&(r[o].push(e),i.push(e))}return{path:n,steps:r}}function hs(t){return t.every((t,e)=>t===e)}function fs(t,e){const n=[];for(let r=0;r<t.length;++r)0!==t[r].length&&-1===t[r].indexOf(e)&&-1!==e||n.push(r);return n}function ds(t,e,n=0){let r=[];if("number"==typeof e)F(t.shape[n]%e===0,()=>"Number of splits must evenly divide the axis."),r=new Array(e).fill(t.shape[n]/e);else{F(1>=e.reduce((t,e)=>(-1===e&&(t+=1),t),0),()=>"There should be only one negative value in split array.");const s=e.indexOf(-1);if(-1!==s){const r=e.reduce((t,e)=>e>0?t+e:t);e[s]=t.shape[n]-r}F(t.shape[n]===e.reduce((t,e)=>t+e),()=>"The sum of sizes must match the size of the axis dimension."),r=e}return r}function ps(t){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${t}`}function ms(t,e){return`indices(${t}, 0) is invalid: ${e} < 0`}function ys(t,e,n){return`indices(${t}, 0) is invalid: ${e} >= ${n}`}function bs(t,e){return`only one output dimension may be -1, not both ${t} and ${e}`}function gs(t,e){return`size ${t} must be non-negative, not ${e}`}function ws(t,e){return`Input to reshape is a SparseTensor with ${P(t)}\n  dense values, but the requested shape requires a multiple of ${P(e)}. inputShape=${t} outputShape= ${e}`}function xs(t,e){return`Input to reshape is a tensor with ${P(t)} dense values, but the requested shape has ${P(e)}. inputShape=${t} outputShape=${e}`}function vs(){return"segment ids are not increasing"}function $s(t,e){return`Segment id ${t} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function ks(t,e,n){return`Bad: indices[${t}] == ${e} out of range [0, ${n})`}function Ns(t,e){let n,r=!1;for(t>30?n=ot(t,Math.floor(Math.sqrt(t))):(n=t,r=!0);!r;)n>e||n===t?r=!0:n=ot(t,n+1);return n}function Cs(t,e,n){const r=[],s=t.length;for(let i=0;s>i;i++)i!==e?r.push(t[i]):r.push(n);return r}function Ss(t,e,n,r){const s=e.shape.length,i=t.shape.length;if(0!==r&&(-s>r||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(0>r&&(r+=s),r>i)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${i}).`);if(r>n)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let h=0;r>h;++h)if(t.shape[h]!==e.shape[h])throw new Error(`x.shape[${h}]: ${t.shape[h]} should be equal to indices.shape[${h}]: ${e.shape[h]}.`);const o=t.shape[n],a=[];let u=1,l=1,c=1;for(let h=0;r>h;++h)a.push(t.shape[h]),u*=t.shape[h];for(let h=r;n>h;h++)a.push(t.shape[h]),l*=t.shape[h];for(let h=r;s>h;h++)a.push(e.shape[h]);for(let h=n+1;i>h;h++)a.push(t.shape[h]),c*=t.shape[h];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:o,outputShape:a}}function Es(t){try{return t.map(t=>Jt(t))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Ts(t){return t.map(t=>Xt(t))}function _s(t,e){const n=[];for(let r=t;e>r;++r)n.push(r);return n}function Rs(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}function As(t,e,n,r){return e.rank<n.rank&&(e=kg(e,Qn(e.shape,r))),t.rank<n.rank&&(t=kg(t,Qn(t.shape,r))),{x(){return lg(t,Rb(aw(n,e),t.dtype))}}}function Os(t,e){if(Array.isArray(t)){let n=[];for(let r=0;e>r;r++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function Is(t,e){if(!t)throw new bC(e)}function Fs(t,e){let n=0;for(const r of t)r===e&&n++;return n}function Ms(t){return 1===t.length?t[0]:t}function Ds(t){return Array.isArray(t)?t:[t]}function Ls(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function Ps(t){return t.length>1?-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase()):t}function Vs(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function Bs(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach(t=>Bs(t));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"==typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!=typeof e.value?Bs(e):t[n]=e.value)}}}function zs(t,e={},n={},r="object",s=!1){if("string"==typeof t){const s=t;let i;if(s in n)i=n[s];else if(s in wC)i=wC[s];else if(i=e[s],null==i)throw new mC(`Unknown ${r}: ${t}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const i=t;if(null==i.className||null==i.config)throw new mC(`${r}: Improper config format: ${JSON.stringify(i)}.\n'className' and 'config' must set.`);const o=i.className;let a,u;if(o in n?[a,u]=n[o]:o in wC?[a,u]=wC.className:o in e&&([a,u]=e[o]),null==a)throw new mC(`Unknown ${r}: ${o}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const t={};for(const n of Object.keys(wC))t[n]=wC[n];for(const s of Object.keys(n))t[s]=n[s];i.config.customObjects=t;const e=Object.assign({},wC);for(const s of Object.keys(n))wC[s]=n[s];Bs(i.config);const r=u(a,i.config,n,s);return wC=Object.assign({},e),r}{const t=Object.assign({},wC);for(const r of Object.keys(n))wC[r]=n[r];const e=new a(i.config);return wC=Object.assign({},t),e}}}function Ws(t,e){return-1*((t,e)=>e>t?-1:t>e?1:0)(t,e)}function js(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function Us(t){if(null==t)throw new mC(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function Gs(t,e,n){if(null!=n&&0>t.indexOf(n))throw new mC(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function qs(t,e,n=0,r=1/0){return Is(n>=0),Is(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every(t=>typeof t===e)}function Hs(t,e){Array.isArray(t)?(F(t.length>0,()=>`${e} is unexpectedly an empty array.`),t.forEach((t,n)=>Hs(t,`element ${n+1} of ${e}`))):F(Number.isInteger(t)&&t>0,()=>`Expected ${e} to be a positive integer, but got ${Xs(t)}.`)}function Xs(t){return null===t?"null":Array.isArray(t)?"["+t.map(t=>Xs(t)).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}function Js(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function Ks(){return xC++}function Ys(t=""){return t in vC||(vC[t]=0),vC[t]+=1,t+vC[t].toString()}function Zs(t){Gs($C,"DataFormat",t)}function Qs(t){Gs(NC,"PaddingMode",t)}function ti(t){Gs(CC,"PoolMode",t)}function ei(t,e){TC.push(t);try{const t=e();return TC.pop(),t}catch(n){throw TC.pop(),n}}function ni(t){if(!si(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===TC.length?"":TC.join("/")+"/")+t}function ri(t){if(!si(t))throw new Error("Not a valid tensor name: '"+t+"'");EC.has(t)||EC.set(t,0);const e=EC.get(t);if(EC.set(t,EC.get(t)+1),e>0){const n=`${t}_${e}`;return EC.set(n,1),n}return t}function si(t){return!!t.match(_C)}function ii(t){return t===parseInt(t.toString(),10)}function oi(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let s=e;n>s;++s)r*=t[s];return r}function ai(t){if(0===t.length)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let n=0;n<t.length;n++){const r=t[n];e>r&&(e=r)}return e}function ui(t){if(0===t.length)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let n=0;n<t.length;n++){const r=t[n];r>e&&(e=r)}return e}function li(t,e){if(t>e)throw new mC(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let r=t;e>r;++r)n.push(r);return n}function ci(){return null==RC&&(RC=on().epsilon()),RC}function hi(t,e){return Rb(t,e)}function fi(t,e=-1){const n=t.shape.slice();return 0>e&&(e=n.length+e+1),n.splice(e,0,1),kg(t,n)}function di(t,e,n){return en(()=>{switch(t.rank){case 1:return yv(t,e,n);case 2:return bv(t,[e,0],[n,t.shape[1]]);case 3:return gv(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return wv(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return Tg(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return Tg(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new mC(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}})}function pi(t,e,n){return en(()=>{switch(t.rank){case 1:return yv(t,e,n);case 2:return bv(t,[0,e],[t.shape[0],n]);case 3:return gv(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return wv(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new mC(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}})}function mi(t,e,n,r){return en(()=>{switch(t.rank){case 1:return yv(t,e,n);case 2:switch(r){case 1:return di(t,e,n);case 2:return pi(t,e,n);default:throw new mC(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return di(t,e,n);case 2:return gv(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return pi(t,e,n);default:throw new mC(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return di(t,e,n);case 2:return wv(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return wv(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return pi(t,e,n);default:throw new mC(`The axis is not within the rank of the tensor ${r}`)}default:throw new mC(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}})}function yi(t,e=-1){let n;return 0>e&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),Sg(t,e)}function bi(t,e){switch(t.rank){case 1:return zg([t,e]);case 2:return Wg([t,e],0);case 3:return jg([t,e],0);case 4:return Ug([t,e],0);default:throw new mC(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function gi(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new mC(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return Sw(t,e)}function wi(t,e=0,n=1,r,s){return Yx(t,e,n,r,s)}function xi(t,e,n,r){if(2>t.rank||2>e.rank)throw new yC(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3&&t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new yC(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`);if(2===t.rank&&2===e.rank)return Yv({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?ki(t.rank,r,"channelsLast"):null,activation:n});{const s=t.shape.slice(),i=s.pop();t=kg(t,[-1,i]);const o=e.shape.slice(),a=o.pop(),u=o.pop(),l=[...o,a],c=Array.from({length:e.rank},(t,n)=>0===n?e.rank-2:n>e.rank-2?n:n-1);e=kg(Gb(e,c),[u,-1]);const h=[...s,...l];return kg(Yv({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?ki(t.rank,r,"channelsLast"):null,activation:n}),h)}}function vi(t,e,n){return en(()=>(e=Array.isArray(e)?mr(e,"int32"):Rb(e,"int32"),_w(t,e,n)))}function $i(t){return lg(t,t)}function ki(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new mC(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(5===t){if("channelsFirst"===n)return 1===r.length?kg(e,[1,r[0],1,1,1]):kg(e,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?kg(e,[1,1,1,1,r[0]]):kg(e,[1].concat(r))}else if(4===t){if("channelsFirst"===n)return 1===r.length?kg(e,[1,r[0],1,1]):kg(e,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?kg(e,[1,1,1,r[0]]):kg(e,[1].concat(r))}else if(3===t){if("channelsFirst"===n)return 1===r.length?kg(e,[1,r[0],1]):kg(e,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?kg(e,[1,1,r[0]]):kg(e,[1].concat(r))}else if(3>t)return e;throw new mC(`Unsupported input rank by biasAdd: ${e.rank}`)}function Ni(t,e,n){return en(()=>(null==n&&(n="channelsLast"),Zs(n),og(t,ki(t.rank,e,n))))}function Ci(t,e,n,r){return en(()=>jv(t,e,n,r))}function Si(t,e,n=!1){return n?t():e()}function Ei(t,e={}){return zs(t,ng.getMap().classNameMap,e,"initializer")}function Ti(t){return Vs(t)}function _i(t){if("string"==typeof t){const e=t in JC?JC[t]:t;if("GlorotNormal"===e)return new jC;if("GlorotUniform"===e)return new WC;if("HeNormal"===e)return new UC;if("HeUniform"===e)return new GC;if("LeCunNormal"===e)return new qC;if("LeCunUniform"===e)return new HC;{const t={};return t.className=e,t.config={},Ei(t)}}return t instanceof IC?t:Ei(t)}function Ri(t){return Array.isArray(t)&&Array.isArray(t[0])}function Ai(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function Oi(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new mC(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function Ii(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return t[0];throw new mC(`Expected exactly 1 Shape; got ${t.length}`)}return t}function Fi(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce((t,e)=>t*e);return e}function Mi(t){return t.map(t=>t.read())}function Di(t){t.forEach(t=>{t[0].write(t[1])})}function Li(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const r=Li(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of r)-1===e.indexOf(t)&&e.push(t)}return e}}}function Pi(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new mC("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new sS({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}function Vi(t,e,n,r){const s=null!=n&&n.training,i=Array.isArray(t),o=i?t:[t],a=o.map(t=>t.name),u=[],l=e.names();for(const p of a)-1!==l.indexOf(p)?u.push(e.getValue(p)):u.push(null);const c=a.join(",")+"|"+e.names().sort().join(",");let h,f=oS.get(c);if(null==f){const t=((t,e)=>{F(null!=t&&t.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===t.length){const s=zi(t[0],e);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const i of t){const{sorted:t,recipientMap:o}=zi(i,e);for(const e of t)s.has(e.name)||(n.push(e),s.add(e.name));for(const e in o)null==r[e]&&(r[e]=new Set),o[e].forEach(t=>r[e].add(t))}}return{sorted:n,recipientCounts:Bi(r)}})(o,e);f=t.sorted,h=t.recipientCounts,oS.put(c,f),aS.put(c,h)}h={},s||Object.assign(h,aS.get(c));const d=new iS(e);for(let p=0;p<f.length;++p){const t=f[p],r=t.sourceLayer;if(r instanceof sS)continue;const i=[],o=[],l=[];let c=!1;for(const n of t.inputs){const t=d.getValue(n),r=d.getMask(n);i.push(t),o.push(r),null!=r&&(c=!0),s||(h[n.name]--,0!==h[n.name]||e.hasKey(n)||-1!==a.indexOf(n.name)||t.isDisposed||!0===n.sourceLayer.stateful||l.push(t))}c&&((n=n||{}).mask=o[0]);const m=Ds(r.apply(i,n));let y=null;r.supportsMasking&&(y=r.computeMask(i,o));const b=Wi(t),g=Array.isArray(b)?b:[b];for(let e=0;e<g.length;++e){d.hasKey(g[e])||d.add(g[e],m[e],Array.isArray(y)?y[0]:y);const t=a.indexOf(g[e].name);-1!==t&&(u[t]=m[e])}s||nn(l)}return d.disposeMasks(),i?u:u[0]}function Bi(t){const e={};for(const n in t)e[n]=t[n].size;return e}function zi(t,e){const n=new Set,r=[],s={};for(const a of e.names())n.add(a);const i=[],o=[];for(i.push(t);i.length>0;){const t=i[i.length-1];if(n.has(t.name)){i.pop();continue}const e=o[o.length-1]===i.length-1;if(0===t.inputs.length||e)i.pop(),r.push(t),n.add(t.name),e&&o.pop();else{o.push(i.length-1);for(const e of t.inputs)null==s[e.name]&&(s[e.name]=new Set),s[e.name].add(t.name),n.has(e.name)||i.push(e)}}return{sorted:r,recipientMap:s}}function Wi(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const r of t.sourceLayer.inboundNodes[e].outputTensors)if(r.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}function ji(t,e){return en(()=>gw(xw(lg(t,t),e,!0)))}function Ui(t){return Vs(t)}function Gi(t,e={}){return zs(t,ng.getMap().classNameMap,e,"constraint")}function qi(t){return null==t?null:"string"==typeof t?Gi({className:t in dS?dS[t]:t,config:{}}):t instanceof uS?t:Gi(t)}function Hi(t){return cf(this,null,function*(){if(null==t)return;const e=[],n=[],r=[];for(const s in t){const i=t[s];if("number"!=typeof i){const t=i;e.push(t.data()),n.push(s),r.push(t)}}if(e.length>0){const s=yield Promise.all(e);for(let e=0;e<s.length;++e)t[n[e]]=s[e][0];nn(r)}})}function Xi(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}function Ji(t,e){return null==t&&(t={}),t instanceof gS?[t]:Array.isArray(t)&&t[0]instanceof gS?t:Ds(t).map(t=>new $S(t,e))}function Ki(t,e,n,r,s,i,o,a,u){const l=new vS,c=[new xS,...kS.createCallbacks(e)];null!=t&&c.push(...t),c.push(l);const h=new wS(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:i,batchSize:o,verbose:e,doValidation:a,metrics:u}),{callbackList:h,history:l}}function Yi(t,e={},n=!1){return zs(t,ng.getMap().classNameMap,e,"layer",n)}function Zi(t,e){return en(()=>{"float32"!==t.dtype&&(t=Rb(t,"float32"));const n=xw($i(t),e,!0),r=Jn(n.shape,ci()),s=gw(ex(n,r));return ug(t,s)})}function Qi(t,e){return en(()=>nx($i(jw(e,t)),-1))}function to(t,e){return en(()=>nx(cg(jw(e,t)),-1))}function eo(t,e){return en(()=>{const n=jw(t,e),r=Bg(cg(t),ci(),Number.MAX_VALUE),s=cg(ug(n,r));return lg(100,nx(s,-1))})}function no(t,e,n=!1){return en(()=>{if(n)e=xv(e);else{const t=xw(e,e.shape.length-1,!0);e=ug(e,t)}return e=Bg(e,ci(),1-ci()),jb(xw(lg(Rb(t,"float32"),Vw(e)),e.shape.length-1))})}function ro(t,e,n=!1){return en(()=>{const r=Rb(Tw((t=>{const e=[oi(t.shape)];return kg(t,e)})(t)),"int32"),s=(e=Bg(e,ci(),1-ci())).shape;return no(kg(zb(r,s[s.length-1]),s),e,n)})}function so(t,e){return en(()=>{let n;return n=Bg(e,ci(),1-ci()),n=Vw(ug(n,jw(1,n))),nx(((t,e)=>{if(!V(t.shape,e.shape))throw new mC(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return en(()=>{const n=ev(e),r=jb(cg(e));return og(jw(n,lg(e,t)),Bw(kw(r)))})})(t,n),-1)})}function io(t,e){return en(()=>{const n=Zi(t,-1),r=Zi(e,-1),s=lg(n,r);return jb(xw(s,-1))})}function oo(t){if("string"==typeof t){if(t in NS)return NS[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new mC(e)}return t}function ao(t,e){return en(()=>{const n=lg(.5,cx(e)),r=hi(Rw(e,n),t.dtype);return nx(aw(t,r),-1)})}function uo(t,e){return en(()=>hi(aw(yg(t,-1),yg(e,-1)),"float32"))}function lo(t,e){return en(()=>Rb(xw(qw(aw(t,1),aw(e,1))),"float32"))}function co(t,e){return en(()=>{const n=lo(t,e),r=((t,e)=>en(()=>Rb(xw(qw(aw(t,0),aw(e,1))),"float32")))(t,e),s=og(n,r);return Rb(uw(Rw(s,0),ug(n,s),0),"float32")})}function ho(t,e){return so(t,e)}function fo(t,e){return t.rank===e.rank&&(t=Ev(t,[t.rank-1])),(e=yg(e,-1)).dtype!==t.dtype&&(e=Rb(e,t.dtype)),Rb(aw(t,e),"float32")}function po(t){if("string"==typeof t&&t in ES)return ES[t];if("string"!=typeof t&&null!=t)return t;throw new mC(`Unknown metric ${t}`)}function mo(t){if(Is(null!==t,`Unknown LossOrMetricFn ${t}`),"string"==typeof t)return t;{let e;for(const n of Object.keys(NS))if(NS[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(ES))if(ES[n]===t){e=n;break}return void 0!==e?e:t.name}}function yo(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!bo(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");n&&JSON.stringify(t).length}function bo(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!=typeof n)return!1;if(!bo(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!bo(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function go(t,e,n=console.log){let r="";for(let s=0;s<t.length;++s)s>0&&(r=r.slice(0,r.length-1)+" "),r+=t[s],r=r.slice(0,e[s]),r+=" ".repeat(e[s]-r.length);n(r)}function wo(t,e,n){let r,s;try{s=t.inboundNodes.map(t=>JSON.stringify(t.inputShapes)).join(",")}catch(i){s="multiple"}try{r=JSON.stringify(t.outputShape)}catch(i){r="multiple"}go([`${t.name} (${t.getClassName()})`,s,r,t.countParams().toString()],e,n)}function xo(t,e,n,r){let s,i;try{i=t.inboundNodes.map(t=>JSON.stringify(t.inputShapes)).join(",")}catch(c){i="multiple"}try{s=JSON.stringify(t.outputShape)}catch(c){s="multiple"}const o=[];for(const h of t.inboundNodes)if(null==n||0>=n.length||-1!==n.indexOf(h))for(let t=0;t<h.inboundLayers.length;++t){const e=h.inboundLayers[t].name,n=h.nodeIndices[t],r=h.tensorIndices[t];o.push(`${e}[${n}][${r}]`)}const a=t.name,u=t.getClassName(),l=0===o.length?"":o[0];go([`${a} (${u})`,i,s,t.countParams().toString(),l],e,r);for(let h=1;h<o.length;++h)go(["","","","",o[h]],e,r)}function vo(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function $o(t,e){if(null===t)return null;if("string"==typeof t)return Ps(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;r>s;++s){const r=t[s];vo(e,s,r)?n.push(r):n.push($o(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];if("name"===n&&"string"==typeof r)e[n]=r;else{const t=Ps(n);e[t]=$o(r,t)}}return e}}function ko(t,e){if(null==t)return null;if("string"==typeof t)return Ls(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;r>s;++s){const r=t[s];vo(e,s,r)?n.push(r):n.push(ko(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];e[Ls(n)]="name"!==n&&"className"!==n||"string"!=typeof r?ko(r,n):r}return e}}function No(t,e){return((t,e,n)=>{const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>null);if(1===r)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach(e=>{e in t?n.push(t[e]):n.push(null)}),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)})(t,e,"classWeight")}function Co(t,e,n,r){return cf(this,null,function*(){if(null!=n){const e=en(()=>{if(1===t.shape.length)return Ab(t);if(2===t.shape.length){if(t.shape[1]>1)return yg(t,1);if(1===t.shape[1])return kg(t,[t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(yield e.data());nn(e);const s=[];return r.forEach(t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);s.push(n[t])}),mr(s,"float32")}return null})}function So(t,e){return lg(t,e)}function Eo(t,e){let n,r;const s=e;n=s.xs,r=s.ys,F(null!=n&&null!=r,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const i=To("input",t.inputNames,n),o=To("output",t.outputNames,r),a=i[0].shape[0];F(i.length===t.inputs.length,()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`),F(o.length===t.outputs.length,()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`);for(let u=0;u<i.length;u++)F(i[u].shape[0]===a,()=>`Batch size mismatch: input ${t.inputNames[u]} has ${i[u].shape[0]}; expected  ${a} based on input ${t.inputNames[0]}.`);for(let u=0;u<o.length;u++)F(o[u].shape[0]===a,()=>`Batch size mismatch: output ${t.outputNames[u]} has ${o[u].shape[0]}; expected  ${a} based on input ${t.inputNames[0]}.`);return{xs:i,ys:o}}function To(t,e,n){if(n instanceof Ly)return[n];if(Array.isArray(n))return F(n.length===e.length,()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`),n;{const r=[];for(const s of e){if(null==n[s])throw new mC(`The feature data generated by the dataset lacks the required ${t} key '${s}'.`);r.push(n[s])}return r}}function _o(t){return"function"==typeof t.iterator}function Ro(t){F(t>0&&Number.isInteger(t),()=>`batchSize is required to be a positive integer, but got ${t}`)}function Ao(t,e,n){return null==t?[null]:Array.isArray(t)?t.map(t=>di(t,e,n-e)):di(t,e,n-e)}function Oo(t,e){return en(()=>null==t?null:Array.isArray(t)?t.map(t=>Oo(t,e)):vi(t,"int32"===e.dtype?e:Rb(e,"int32")))}function Io(t,e){const n=[];let r=0,s=null;for(;t>r;)s=r+e,t>s||(s=t),n.push([r,s]),r=s;return n}function Fo(t){const e=[];t instanceof Ly&&(t=[t]);for(let n=0;n<t.length;++n){const r=t[n];if(1===r.rank)e.push(fi(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function Mo(t,e){if(null==t)return;const n=[];if(e instanceof Ly)n.push(e.id);else if(Array.isArray(e))e.forEach(t=>n.push(t.id));else if(null!=e)for(const s in e){const t=e[s];n.push(t.id)}const r=[];if(t instanceof Ly)-1===n.indexOf(t.id)&&r.push(t);else if(Array.isArray(t))t.forEach(t=>{-1===n.indexOf(t.id)&&r.push(t)});else if(null!=t)for(const s in t){const e=t[s];-1===n.indexOf(e.id)&&r.push(e)}r.forEach(t=>{t.isDisposed||t.dispose()})}function Do(t){return Array.isArray(t)}function Lo(t){return!(t=>t instanceof Ly)(t)&&!Do(t)}function Po(t,e,n,r=!0,s=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(Do(t)&&t.length>0)e=!0;else if(Lo(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new mC(`Error when checking model ${s} expected no data, but got ${t}`)}return[]}if(null==t)return e.map(t=>null);let i;if(Lo(t)){i=[];for(const n of e){if(null==t[n])throw new mC(`No data provided for "${n}". Need data for each key in: ${e}`);i.push(t[n])}}else if(Do(t)){if(t.length!==e.length)throw new mC(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);i=t}else{if(e.length>1)throw new mC(`The model ${s} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);i=[t]}if(i=Fo(i),null!=n)for(let o=0;o<e.length;++o){if(null==n[o])continue;const t=i[o];if(t.shape.length!==n[o].length)throw new mC(`Error when checking ${s}: expected ${e[o]} to have ${n[o].length} dimension(s). but got array with shape ${t.shape}`);for(let e=0;e<n[o].length;++e){if(0===e&&!r)continue;const i=t.shape[e],a=n[o][e];if(null!=a&&a>=0&&i!==a)throw new mC(`${s} expected a batch of elements where each example has shape [${n[o].slice(1,n[o].length)}] (i.e.,tensor shape [*,${n[o].slice(1,n[o].length)}]) but the ${s} received an input with ${t.shape[0]} examples, each with shape [${t.shape.slice(1,t.shape.length)}] (tensor shape [${t.shape}])`)}}return i}function Vo(t,e,n,r=!0,s=""){let i;if(Array.isArray(t)){if(t.length!==e.length)throw new mC(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);i=t}else{if(e.length>1)throw new mC(`The model expects ${e.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);i=[t]}if(null!=n)for(let o=0;o<e.length;++o){if(null==n[o])continue;const t=i[o];if(t.shape.length!==n[o].length)throw new mC(`Error when checking ${s}: expected ${e[o]} to have ${n[o].length} dimension(s), but got array with shape ${JSON.stringify(t.shape)}`);for(let i=0;i<n[o].length;++i){if(0===i&&!r)continue;const a=t.shape[i],u=n[o][i];if(null!=u&&u!==a)throw new mC(`Error when checking ${s}: expected ${e[o]} to have shape ${JSON.stringify(n[o])} but got array with shape ${JSON.stringify(t.shape)}.`)}}}function Bo(t){return Pi(t)}function zo(t){return t.getClassName()}function Wo(t,e={}){return zs(t,ng.getMap().classNameMap,e,"activation")}function jo(t){if(null==t)return Wo({className:"linear",config:{}});if("string"==typeof t){const e={};return e.className=t,e.config={},Wo(e)}return t instanceof IS?t:Wo(t)}function Uo(t){if(null!=t&&"object"!=typeof t)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}function Go(t){return Vs(t)}function qo(t,e={}){return zs(t,ng.getMap().classNameMap,e,"regularizer")}function Ho(t){return null==t?null:"string"==typeof t?qo({className:t in KS?KS[t]:t,config:{}}):t instanceof XS?t:qo(t)}function Xo(t,e,n){if("number"==typeof t)return Os(t,e);if(t.length!==e)throw new mC(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let r=0;e>r;++r){const s=t[r];if(!ii(s))throw new mC(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${s}`)}return t}function Jo(t,e,n,r,s=1){if(null==t)return t;let i;return i="same"===n?t:t-(e+(e-1)*(s-1))+1,Math.floor((i+r-1)/r)}function Ko(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+ui([n-e,0]);else{if("same"!==r)throw new mC(`Unsupport padding mode: ${r}.`);t*=e}return t}function Yo(t,e){return en(()=>(Zs(e),"channelsFirst"===e?Gb(t,[0,2,3,1]):t))}function Zo(t,e){return en(()=>(Zs(e),"channelsFirst"===e?Gb(t,[0,2,3,4,1]):t))}function Qo(t,e,n,r=[1,1],s="valid",i,o,a=null){return en(()=>{if(null==i&&(i="channelsLast"),Zs(i),3!==t.rank&&4!==t.rank)throw new mC(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new mC(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let u=Yo(t,i);if("causal"===s)throw new yC("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Hv({x:u,filter:e,strides:r,pad:"same"===s?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:a}),"channelsFirst"===i&&(u=Gb(u,[0,3,1,2])),u})}function ta(t,e,n,r){function s(t){return null==t||Array.isArray(t)?t:[t]}if(Array.isArray(t)){if(null!=e||null!=n)throw new mC("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}return{inputs:t,initialState:e=s(e),constants:n=s(n)}}function ea(t,e,n,r=!1,s,i,o=!1,a=!1){return en(()=>{const i=e.shape.length;if(3>i)throw new mC(`Input should be at least 3D, but is ${i}D.`);const o=[1,0].concat(li(2,i));e=Gb(e,o),null!=s&&((s=Rb(Rb(s,"bool"),"float32")).rank===i-1&&(s=Nw(s,-1)),s=Gb(s,o)),r&&(e=rv(e,0),null!=s&&(s=rv(s,0)));const u=[];let l,c=n;const h=e.shape[0],f=Dv(e);let d,p;null!=s&&(d=Dv(s));for(let e=0;h>e;++e){const n=f[e],r=en(()=>t(n,c));if(null==s)l=r[0],c=r[1];else{const t=en(()=>{const t=d[e],n=jw(cx(t),t),s=og(lg(r[0],t),lg(c[0],n)),i=c.map((e,s)=>og(lg(r[1][s],t),lg(e,n)));return{output:s,newStates:i}});l=t.output,c=t.newStates}a&&u.push(l)}return a&&(p=Tv(u,1)),[l,p,c]})}function na(t){const{ones:e,rate:n,training:r=!1,count:s=1,dropoutFunc:i}=t,o=()=>null!=i?i(e(),n):Ci(e(),n),a=()=>Si(o,e,r);return s&&s>1?Array(s).fill(void 0).map(a).map(t=>rn(t.clone())):rn(a().clone())}function ra(t,e){for(;0>t;)t+=e;return t}function sa(t,e,n,r,s,i=.001){let o;if(2===t.rank)o=Ig(t,e,n,r,s,i);else if(3===t.rank)o=Fg(t,e,n,r,s,i);else{if(4!==t.rank)throw new yC(`batchNormalization is not implemented for array of rank ${t.rank} yet`);o=Mg(t,e,n,r,s,i)}return o}function ia(t,e,n,r,s,i){return en(()=>{let o;Zs(s),ti(i),Qs(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),t=Yo(t,s);const a="same"===r?"same":"valid";return o="max"===i?Zw(t,e,n,a):Ng(t,e,n,a),"channelsFirst"===s&&(o=Gb(o,[0,3,1,2])),o})}function oa(t,e,n,r,s,i){return en(()=>{let o;Zs(s),ti(i),Qs(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),t=Zo(t,s);const a="same"===r?"same":"valid";return o="max"===i?Qw(t,e,n,a):Cg(t,e,n,a),"channelsFirst"===s&&(o=Gb(o,[0,4,1,2,3])),o})}function aa(t){return new QE(t)}function ua(t){return new nT(t)}function la(t){return new iT(t)}function ca(t){return new uT(t)}function ha(t){return new hT(t)}function fa(t){return new ZE(t)}function da(t){return new eT(t)}function pa(t,e){return e>t}function ma(t,e){return t>e}function ya(t){return OT[t]}function ba(t,e,n,r,s){const i=e.inputParams[t];if(i&&void 0!==i.inputIndexStart){const t=i.inputIndexStart,o=0===i.inputIndexEnd?void 0:void 0===i.inputIndexEnd?t+1:i.inputIndexEnd;if("tensor"===i.type)return ga(e.inputNames[i.inputIndexStart],n,r,s);if("tensors"===i.type)return e.inputNames.slice(t,o).map(t=>ga(t,n,r,s));const a=ga(e.inputNames.slice(t)[0],n,r,s),u=a.dataSync();return"number"===i.type?u[0]:lt(a.shape,u)}const o=e.attrParams[t];return o&&o.value}function ga(t,e,n,r){const[s,i]=va(t);if(null!=r){const t=r.getHashTableHandleByName(s);if(null!=t)return t}const o=n.currentContextIds.find(t=>!!e[xa(s,t)]);return void 0!==o?e[xa(s,o)][i]:void 0}function wa(t,e){const[n,r,s]=va(t);return[xa(n,e&&e.currentContextId),r,s]}function xa(t,e){return e?`${t}-${e}`:t}function va(t){const e=t.split(":");if(1===e.length)return[t,0,void 0];const n=e[0],r=3===e.length?e[1]:void 0;return[n,Number(e[e.length-1]),r]}function $a(t,e,n){let r=ba("pad",t,e,n);if("explicit"===r){r=ba("explicitPaddings",t,e,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let t=0;4>t;t++)s[t][0]=r[2*t],s[t][1]=r[2*t+1];return s}return r}function ka(t){return t.kept?t:Ab(t)}function Na(t,e){const n=Array.isArray(t)?String.fromCharCode.apply(null,t):(t=>{const e=gt().global;if(void 0!==e.atob)return e.atob(t);if("undefined"!=typeof Buffer)return new Buffer(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")})(t);return e?n:n.toLowerCase()}function Ca(t,e,n,r=!1){const s=t[e];return null!=s?Na(s.s,r):n}function Sa(t,e,n){const r=t[e];return r?r.b:n}function Ea(t,e,n){const r=t[e]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof s?s:parseInt(s,10)}function Ta(t){switch("string"==typeof t&&(t=ET[t]),t){case ET.DT_FLOAT:case ET.DT_HALF:return"float32";case ET.DT_INT32:case ET.DT_INT64:case ET.DT_INT8:case ET.DT_UINT8:return"int32";case ET.DT_BOOL:return"bool";case ET.DT_DOUBLE:return"float32";case ET.DT_STRING:return"string";default:return null}}function _a(t,e,n){const r=t[e];return r&&r.func?r.func.name:n}function Ra(t,e,n){const r=t[e];return r&&r.type?Ta(r.type):n}function Aa(t,e,n){const r=t[e];return r&&r.list&&r.list.type?r.list.type.map(t=>Ta(t)):n}function Oa(t){if(!t.unknownRank)return null!=t.dim?t.dim.map(t=>"number"==typeof t.size?t.size:parseInt(t.size,10)):[]}function Ia(t,e,n){const r=t[e];return r&&r.shape?Oa(r.shape):n}function Fa(t,e,n){const r=t[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(t=>"number"==typeof t?t:parseInt(t,10)):n}function Ma(t,e,n,r=!1){const s=t[e];return s&&s.list&&s.list.s?s.list.s.map(t=>Na(t,r)):n}function Da(t,e,n){const r=t[e];return r&&r.list&&r.list.shape?r.list.shape.map(t=>Oa(t)):n}function La(t,e,n){const r=t[e];return r&&r.list&&r.list.b?r.list.b:n}function Pa(t,e,n=""){if("number"!=typeof t&&"number"!=typeof e){F(t.length===e.length,()=>n+` Shapes ${t} and ${e} must match`);for(let r=0;r<t.length;r++){const s=t[r],i=e[r];F(0>s||0>i||s===i,()=>n+` Shapes ${t} and ${e} must match`)}}}function Va(t){return"number"!=typeof t&&!t.some(t=>0>t)}function Ba(t,e,n){let r=za(t,n);const s=!Va(r);if(s&&0===e.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&e.forEach(t=>{r=za(t.shape,r)}),!Va(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function za(t,e){if("number"==typeof t)return e;if("number"==typeof e)return t;if(t.length!==e.length)throw new Error(`Incompatible ranks during merge: ${t} vs. ${e}`);const n=[];for(let r=0;r<t.length;++r){const s=t[r],i=e[r];if(s>=0&&i>=0&&s!==i)throw new Error(`Incompatible shape during merge: ${t} vs. ${e}`);n[r]=0>s?i:s}return n}function Wa(t,e,n){const[r,s]=ba("fusedOps",t,e,n),i="biasadd"===r,o=!i,a="prelu"===s,u="fusedbatchnorm"===r,l=ba("numArgs",t,e,n);if(i){if(a&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&i&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=ba("strides",t,e,n),h=$a(t,e,n),f=ba("dataFormat",t,e,n).toUpperCase(),d=ba("dilations",t,e,n);let[p,m]=ba("args",t,e,n);return o&&(m=p,p=void 0),{stride:c,pad:h,dataFormat:f,dilations:d,biasArg:p,preluArg:m,activationFunc:s,leakyreluAlpha:ba("leakyreluAlpha",t,e,n)}}function ja(t,e,n){return{boxes:ba("boxes",t,e,n),scores:ba("scores",t,e,n),maxOutputSize:ba("maxOutputSize",t,e,n),iouThreshold:ba("iouThreshold",t,e,n),scoreThreshold:ba("scoreThreshold",t,e,n),softNmsSigma:ba("softNmsSigma",t,e,n)}}function Ua(t,e,n,r,s=en){const i=((t,e,n)=>{switch(t.category){case"arithmetic":return s(()=>((t,e,n,r=QT)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(ba("a",t,e,n),ba("b",t,e,n))];case"AddN":return[r.addN(ba("tensors",t,e,n))];case"FloorMod":case"Mod":return[r.mod(ba("a",t,e,n),ba("b",t,e,n))];case"Mul":return[r.mul(ba("a",t,e,n),ba("b",t,e,n))];case"RealDiv":case"Div":return[r.div(ba("a",t,e,n),ba("b",t,e,n))];case"DivNoNan":return[r.divNoNan(ba("a",t,e,n),ba("b",t,e,n))];case"FloorDiv":return[r.floorDiv(ba("a",t,e,n),ba("b",t,e,n))];case"Sub":return[r.sub(ba("a",t,e,n),ba("b",t,e,n))];case"Minimum":return[r.minimum(ba("a",t,e,n),ba("b",t,e,n))];case"Maximum":return[r.maximum(ba("a",t,e,n),ba("b",t,e,n))];case"Pow":return[r.pow(ba("a",t,e,n),ba("b",t,e,n))];case"SquaredDifference":return[r.squaredDifference(ba("a",t,e,n),ba("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"basic_math":return s(()=>((t,e,n,r=QT)=>{switch(t.op){case"Abs":case"ComplexAbs":return[r.abs(ba("x",t,e,n))];case"Acos":return[r.acos(ba("x",t,e,n))];case"Acosh":return[r.acosh(ba("x",t,e,n))];case"Asin":return[r.asin(ba("x",t,e,n))];case"Asinh":return[r.asinh(ba("x",t,e,n))];case"Atan":return[r.atan(ba("x",t,e,n))];case"Atan2":return[r.atan2(ba("x",t,e,n),ba("y",t,e,n))];case"Atanh":return[r.atanh(ba("x",t,e,n))];case"Ceil":return[r.ceil(ba("x",t,e,n))];case"Complex":return[r.complex(ba("real",t,e,n),ba("imag",t,e,n))];case"Cos":return[r.cos(ba("x",t,e,n))];case"Cosh":return[r.cosh(ba("x",t,e,n))];case"Elu":return[r.elu(ba("x",t,e,n))];case"Erf":return[r.erf(ba("x",t,e,n))];case"Exp":return[r.exp(ba("x",t,e,n))];case"Expm1":return[r.expm1(ba("x",t,e,n))];case"Floor":return[r.floor(ba("x",t,e,n))];case"Log":return[r.log(ba("x",t,e,n))];case"Log1p":return[r.log1p(ba("x",t,e,n))];case"Imag":return[r.imag(ba("x",t,e,n))];case"Neg":return[r.neg(ba("x",t,e,n))];case"Reciprocal":return[r.reciprocal(ba("x",t,e,n))];case"Real":return[r.real(ba("x",t,e,n))];case"Relu":return[r.relu(ba("x",t,e,n))];case"Round":return[r.round(ba("x",t,e,n))];case"Selu":return[r.selu(ba("x",t,e,n))];case"Sigmoid":return[r.sigmoid(ba("x",t,e,n))];case"Sin":return[r.sin(ba("x",t,e,n))];case"Sign":return[r.sign(ba("x",t,e,n))];case"Sinh":return[r.sinh(ba("x",t,e,n))];case"Softplus":return[r.softplus(ba("x",t,e,n))];case"Sqrt":return[r.sqrt(ba("x",t,e,n))];case"Square":return[r.square(ba("x",t,e,n))];case"Tanh":return[r.tanh(ba("x",t,e,n))];case"Tan":return[r.tan(ba("x",t,e,n))];case"ClipByValue":return[r.clipByValue(ba("x",t,e,n),ba("clipValueMin",t,e,n),ba("clipValueMax",t,e,n))];case"Relu6":return[r.relu6(ba("x",t,e,n))];case"Rsqrt":return[r.rsqrt(ga(t.inputNames[0],e,n))];case"Prod":return[r.prod(ba("x",t,e,n),ba("axes",t,e,n))];case"LeakyRelu":return[r.leakyRelu(ba("x",t,e,n),ba("alpha",t,e,n))];case"Prelu":return[r.prelu(ba("x",t,e,n),ba("alpha",t,e,n))];case"IsNan":return[r.isNaN(ga(t.inputNames[0],e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"control":return((t,e,n)=>cf(void 0,null,function*(){switch(t.op){case"If":case"StatelessIf":{const r=ba("thenBranch",t,e,n),s=ba("elseBranch",t,e,n),i=ba("cond",t,e,n),o=ba("args",t,e,n);return(yield i.data())[0]?n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=ba("body",t,e,n),s=ba("cond",t,e,n),i=ba("args",t,e,n),o=yield n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap),a=i.map(t=>t.id);let u=yield o[0].data();o.forEach(t=>{t.kept||-1!==a.indexOf(t.id)||t.dispose()});let l=i;for(;u[0];){const t=l;l=yield n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const e=l.map(t=>t.id);t.forEach(t=>{t.kept||-1!==a.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()});const i=yield n.functionMap[s].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=yield i[0].data(),i.forEach(t=>{t.kept||-1!==a.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()})}return l}case"LoopCond":return[ka(ba("pred",t,e,n))];case"Switch":{const r=ba("pred",t,e,n);let s=ba("data",t,e,n);return s.kept||(s=ka(s)),(yield r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=t.inputNames.find(t=>void 0!==ga(t,e,n));return r?[ka(ga(r,e,n))]:void 0}case"Enter":{const r=ba("frameName",t,e,n),s=ba("tensor",t,e,n);return n.enterFrame(r),[ka(s)]}case"Exit":{const r=ba("tensor",t,e,n);return n.exitFrame(),[ka(r)]}case"NextIteration":{const r=ba("tensor",t,e,n);return n.nextIteration(),[ka(r)]}case"TensorArrayV3":{const r=ba("size",t,e,n),s=ba("dtype",t,e,n),i=ba("elementShape",t,e,n),o=ba("dynamicSize",t,e,n),a=ba("clearAfterRead",t,e,n),u=ba("identicalElementShapes",t,e,n),l=ba("name",t,e,n),c=new t_(l,s,r,i,u,o,a);return n.addTensorArray(c),[c.idTensor,sr(1)]}case"TensorArrayWriteV3":{const r=ba("tensorArrayId",t,e,n),s=ba("index",t,e,n),i=ba("tensor",t,e,n),o=n.getTensorArray(r.id);return o.write(s,i),[o.idTensor]}case"TensorArrayReadV3":{const r=ba("tensorArrayId",t,e,n),s=ba("index",t,e,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=ba("tensorArrayId",t,e,n),s=ba("indices",t,e,n),i=ba("dtype",t,e,n);return[n.getTensorArray(r.id).gather(s,i)]}case"TensorArrayScatterV3":{const r=ba("tensorArrayId",t,e,n),s=ba("indices",t,e,n),i=ba("tensor",t,e,n),o=n.getTensorArray(r.id);return o.scatter(s,i),[o.idTensor]}case"TensorArrayConcatV3":{const r=ba("tensorArrayId",t,e,n),s=n.getTensorArray(r.id),i=ba("dtype",t,e,n);return[s.concat(i)]}case"TensorArraySplitV3":{const r=ba("tensorArrayId",t,e,n),s=ba("tensor",t,e,n),i=ba("lengths",t,e,n),o=n.getTensorArray(r.id);return o.split(i,s),[o.idTensor]}case"TensorArraySizeV3":{const r=ba("tensorArrayId",t,e,n);return[sr(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=ba("tensorArrayId",t,e,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=ba("tensorListId",t,e,n),s=ba("index",t,e,n),i=ba("tensor",t,e,n),o=n.getTensorList(r.id);return o.setItem(s,i),[o.idTensor]}case"TensorListGetItem":{const r=ba("tensorListId",t,e,n),s=ba("index",t,e,n),i=ba("elementShape",t,e,n),o=ba("elementDType",t,e,n);return[n.getTensorList(r.id).getItem(s,i,o)]}case"TensorListScatterV2":case"TensorListScatter":{const r=ba("indices",t,e,n),s=((t,e,n,r)=>{if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const i=new e_([],n,t.dtype,r),o=Dv(t,0);return e.forEach((t,e)=>{i.setItem(t,o[e])}),i})(ba("tensor",t,e,n),r,ba("elementShape",t,e,n),ba("numElements",t,e,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=ba("elementShape",t,e,n),s=ba("elementDType",t,e,n);let i;i="TensorListReserve"===t.op?"numElements":"maxNumElements";const o=ba(i,t,e,n),a=((t,e,n,r)=>new e_([],t,e,r))(r,s,0,"TensorListReserve"===t.op?-1:o);return n.addTensorList(a),[a.idTensor]}case"TensorListGather":{const r=ba("tensorListId",t,e,n),s=ba("indices",t,e,n),i=ba("elementShape",t,e,n),o=ba("elementDType",t,e,n);return[n.getTensorList(r.id).gather(s,o,i)]}case"TensorListStack":{const r=ba("tensorListId",t,e,n),s=ba("elementShape",t,e,n),i=ba("elementDType",t,e,n),o=ba("numElements",t,e,n);return[n.getTensorList(r.id).stack(s,i,o)]}case"TensorListFromTensor":{const r=((t,e,n)=>{const r=t.dtype;if(1>t.shape.length)throw new Error(`Tensor must be at least a vector, but saw shape: ${t.shape}`);if(t.dtype!==n)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${n}`);Pa(t.shape.slice(1),e,"TensorList shape mismatch: ");const s=Dv(t);return new e_(s,e,r)})(ba("tensor",t,e,n),ba("elementShape",t,e,n),ba("elementDType",t,e,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=ba("tensorListId",t,e,n),s=n.getTensorList(r.id),i=ba("dtype",t,e,n),o=ba("elementShape",t,e,n);return[s.concat(i,o)]}case"TensorListPushBack":{const r=ba("tensorListId",t,e,n),s=ba("tensor",t,e,n),i=n.getTensorList(r.id);return i.pushBack(s),[i.idTensor]}case"TensorListPopBack":{const r=ba("tensorListId",t,e,n),s=ba("elementShape",t,e,n),i=ba("elementDType",t,e,n);return[n.getTensorList(r.id).popBack(s,i)]}case"TensorListSplit":{const r=ba("tensor",t,e,n),s=ba("elementShape",t,e,n),i=((t,e,n)=>{let r=0;const s=e.map(t=>(r+=t,r));if(r!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${t.shape}`);const i=za(t.shape.slice(1),n),o=0===r?0:t.size/r,a=en(()=>{const n=[];t=kg(t,[1,r,o]);for(let r=0;r<e.length;++r){const a=[0,0===r?0:s[r-1],0],u=[1,e[r],o];n[r]=kg(Tg(t,a,u),i)}return t.dispose(),n}),u=new e_([],n,t.dtype,e.length);for(let l=0;l<a.length;l++)u.setItem(l,a[l]);return u})(r,ba("lengths",t,e,n),s);return n.addTensorList(i),[i.idTensor]}case"TensorListLength":{const r=ba("tensorListId",t,e,n);return[sr(n.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{const r=ba("tensorListId",t,e,n),s=ba("size",t,e,n),i=n.getTensorList(r.id).resize(s);return n.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}}))(t,e,n);case"convolution":return s(()=>((t,e,n,r=QT)=>{switch(t.op){case"Conv1D":{const s=ba("stride",t,e,n),i=ba("pad",t,e,n),o=ba("dataFormat",t,e,n).toUpperCase(),a=ba("dilation",t,e,n);return[r.conv1d(ba("x",t,e,n),ba("filter",t,e,n),s,i,o,a)]}case"Conv2D":{const s=ba("strides",t,e,n),i=$a(t,e,n),o=ba("dataFormat",t,e,n).toUpperCase(),a=ba("dilations",t,e,n);return[r.conv2d(ba("x",t,e,n),ba("filter",t,e,n),[s[1],s[2]],i,o,[a[1],a[2]])]}case"_FusedConv2D":{const{stride:s,pad:i,dataFormat:o,dilations:a,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:h}=Wa(t,e,n);return[r.fused.conv2d({x:ba("x",t,e,n),filter:ba("filter",t,e,n),strides:[s[1],s[2]],pad:i,dataFormat:o,dilations:[a[1],a[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:i,dataFormat:o,dilations:a,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:h}=Wa(t,e,n);return[r.fused.depthwiseConv2d({x:ba("x",t,e,n),filter:ba("filter",t,e,n),strides:[s[1],s[2]],pad:i,dataFormat:o,dilations:[a[1],a[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=ba("outputShape",t,e,n),i=ba("strides",t,e,n),o=$a(t,e,n);return[r.conv2dTranspose(ba("x",t,e,n),ba("filter",t,e,n),s,[i[1],i[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=ba("strides",t,e,n),i=$a(t,e,n),o=ba("dilations",t,e,n),a=ba("dataFormat",t,e,n).toUpperCase();return[r.depthwiseConv2d(ba("input",t,e,n),ba("filter",t,e,n),[s[1],s[2]],i,a,[o[1],o[2]])]}case"Conv3D":{const s=ba("strides",t,e,n),i=ba("pad",t,e,n),o=ba("dataFormat",t,e,n).toUpperCase(),a=ba("dilations",t,e,n);return[r.conv3d(ba("x",t,e,n),ba("filter",t,e,n),[s[1],s[2],s[3]],i,o,[a[1],a[2],a[3]])]}case"AvgPool":{const s=ba("strides",t,e,n),i=ba("pad",t,e,n),o=ba("kernelSize",t,e,n);return[r.avgPool(ba("x",t,e,n),[o[1],o[2]],[s[1],s[2]],i)]}case"MaxPool":{const s=ba("strides",t,e,n),i=ba("pad",t,e,n),o=ba("kernelSize",t,e,n);return[r.maxPool(ba("x",t,e,n),[o[1],o[2]],[s[1],s[2]],i)]}case"MaxPoolWithArgmax":{const s=ba("strides",t,e,n),i=ba("pad",t,e,n),o=ba("kernelSize",t,e,n),a=ba("includeBatchInIndex",t,e,n),{result:u,indexes:l}=r.maxPoolWithArgmax(ba("x",t,e,n),[o[1],o[2]],[s[1],s[2]],i,a);return[u,l]}case"AvgPool3D":{const s=ba("strides",t,e,n),i=ba("pad",t,e,n),o=ba("kernelSize",t,e,n);return[r.avgPool3d(ba("x",t,e,n),[o[1],o[2],o[3]],[s[1],s[2],s[3]],i)]}case"MaxPool3D":{const s=ba("strides",t,e,n),i=ba("pad",t,e,n),o=ba("kernelSize",t,e,n);return[r.maxPool3d(ba("x",t,e,n),[o[1],o[2],o[3]],[s[1],s[2],s[3]],i)]}case"Dilation2D":{const s=ba("strides",t,e,n),i=ba("pad",t,e,n),o=ba("dilations",t,e,n),a=s[1],u=s[2],l=o[1],c=o[2];return[r.dilation2d(ba("x",t,e,n),ba("filter",t,e,n),[a,u],i,[l,c],"NHWC")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"creation":return s(()=>((t,e,n,r=QT)=>{switch(t.op){case"Fill":{const s=ba("shape",t,e,n),i=ba("dtype",t,e,n),o=ba("value",t,e,n);return[r.fill(s,o,i)]}case"LinSpace":{const s=ba("start",t,e,n),i=ba("stop",t,e,n),o=ba("num",t,e,n);return[r.linspace(s,i,o)]}case"Multinomial":{const s=ba("logits",t,e,n),i=ba("numSamples",t,e,n),o=ba("seed",t,e,n);return[r.multinomial(s,i,o)]}case"OneHot":{const s=ba("indices",t,e,n),i=ba("depth",t,e,n),o=ba("onValue",t,e,n),a=ba("offValue",t,e,n),u=ba("dtype",t,e,n);return[r.oneHot(s,i,o,a,u)]}case"Ones":return[r.ones(ba("shape",t,e,n),ba("dtype",t,e,n))];case"OnesLike":return[r.onesLike(ba("x",t,e,n))];case"RandomStandardNormal":return[r.randomStandardNormal(ba("shape",t,e,n),ba("dtype",t,e,n),ba("seed",t,e,n))];case"RandomUniform":return[r.randomUniform(ba("shape",t,e,n),ba("minval",t,e,n),ba("maxval",t,e,n),ba("dtype",t,e,n))];case"Range":{const s=ba("start",t,e,n),i=ba("stop",t,e,n),o=ba("step",t,e,n);return[r.range(s,i,o,ba("dtype",t,e,n))]}case"TruncatedNormal":{const s=ba("shape",t,e,n),i=ba("mean",t,e,n),o=ba("stdDev",t,e,n),a=ba("seed",t,e,n);return[r.truncatedNormal(s,i,o,ba("dtype",t,e,n),a)]}case"Zeros":return[r.zeros(ba("shape",t,e,n),ba("dtype",t,e,n))];case"ZerosLike":return[r.zerosLike(ba("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"dynamic":return cf(void 0,[t,e,n,void 0],function*(t,e,n,r,s=QT){switch(t.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:i,maxOutputSize:o,iouThreshold:a,scoreThreshold:u,softNmsSigma:l}=ja(t,e,n),c=yield s.image.nonMaxSuppressionWithScoreAsync(r,i,o,a,u,l);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:i,maxOutputSize:o,iouThreshold:a,scoreThreshold:u}=ja(t,e,n),l=ba("padToMaxOutputSize",t,e,n),c=yield s.image.nonMaxSuppressionPaddedAsync(r,i,o,a,u,l);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:i,maxOutputSize:o,iouThreshold:a,scoreThreshold:u}=ja(t,e,n);return[yield s.image.nonMaxSuppressionAsync(r,i,o,a,u)]}case"Where":{const r=s.cast(ba("condition",t,e,n),"bool"),i=[yield s.whereAsync(r)];return r.dispose(),i}case"ListDiff":return s.setdiff1dAsync(ba("x",t,e,n),ba("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}});case"evaluation":return s(()=>((t,e,n,r=QT)=>{switch(t.op){case"LowerBound":{const s=ba("sortedSequence",t,e,n),i=ba("values",t,e,n);return[r.lowerBound(s,i)]}case"TopKV2":{const s=ba("x",t,e,n),i=ba("k",t,e,n),o=ba("sorted",t,e,n),a=r.topk(s,i,o);return[a.values,a.indices]}case"UpperBound":{const s=ba("sortedSequence",t,e,n),i=ba("values",t,e,n);return[r.upperBound(s,i)]}case"Unique":{const s=ba("x",t,e,n),i=r.unique(s);return[i.values,i.indices]}case"UniqueV2":{const s=ba("x",t,e,n),i=ba("axis",t,e,n),o=r.unique(s,i);return[o.values,o.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"image":return s(()=>((t,e,n,r=QT)=>{switch(t.op){case"ResizeBilinear":{const s=ba("images",t,e,n),i=ba("size",t,e,n),o=ba("alignCorners",t,e,n),a=ba("halfPixelCenters",t,e,n);return[r.image.resizeBilinear(s,[i[0],i[1]],o,a)]}case"ResizeNearestNeighbor":{const s=ba("images",t,e,n),i=ba("size",t,e,n),o=ba("alignCorners",t,e,n),a=ba("halfPixelCenters",t,e,n);return[r.image.resizeNearestNeighbor(s,[i[0],i[1]],o,a)]}case"CropAndResize":{const s=ba("image",t,e,n),i=ba("boxes",t,e,n),o=ba("boxInd",t,e,n),a=ba("cropSize",t,e,n),u=ba("method",t,e,n),l=ba("extrapolationValue",t,e,n);return[r.image.cropAndResize(s,i,o,a,u,l)]}case"ImageProjectiveTransformV3":{const s=ba("images",t,e,n),i=ba("transforms",t,e,n),o=ba("outputShape",t,e,n),a=ba("fillValue",t,e,n),u=ba("interpolation",t,e,n),l=ba("fillMode",t,e,n);return[r.image.transform(s,i,u.toLowerCase(),l.toLowerCase(),a,o)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"graph":return s(()=>((t,e,n,r=QT)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const s=ba("default",t,e,n);return[ga(t.name,e,n)||s];case"Placeholder":return[ga(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[ka(ba("x",t,e,n))];case"IdentityN":return ba("x",t,e,n).map(t=>ka(t));case"Shape":return[r.tensor1d(ba("x",t,e,n).shape,"int32")];case"ShapeN":return ba("x",t,e,n).map(t=>r.tensor1d(t.shape));case"Size":return[r.scalar(ba("x",t,e,n).size,"int32")];case"Rank":return[r.scalar(ba("x",t,e,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const i=ba("x",t,e,n),o=ba("data",t,e,n);ba("message",t,e,n),ba("summarize",t,e,n);for(let t=0;t<o.length;t++);return[i];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"logical":return s(()=>((t,e,n,r=QT)=>{switch(t.op){case"Equal":return[r.equal(ba("a",t,e,n),ba("b",t,e,n))];case"NotEqual":return[r.notEqual(ba("a",t,e,n),ba("b",t,e,n))];case"Greater":return[r.greater(ba("a",t,e,n),ba("b",t,e,n))];case"GreaterEqual":return[r.greaterEqual(ba("a",t,e,n),ba("b",t,e,n))];case"Less":return[r.less(ba("a",t,e,n),ba("b",t,e,n))];case"LessEqual":return[r.lessEqual(ba("a",t,e,n),ba("b",t,e,n))];case"LogicalAnd":return[r.logicalAnd(ba("a",t,e,n),ba("b",t,e,n))];case"LogicalNot":return[r.logicalNot(ba("a",t,e,n))];case"LogicalOr":return[r.logicalOr(ba("a",t,e,n),ba("b",t,e,n))];case"Select":case"SelectV2":return[r.where(ba("condition",t,e,n),ba("a",t,e,n),ba("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"matrices":return s(()=>((t,e,n,r=QT)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(ba("a",t,e,n),ba("b",t,e,n),ba("transposeA",t,e,n),ba("transposeB",t,e,n))];case"Einsum":return[r.einsum(ba("equation",t,e,n),...ba("tensors",t,e,n))];case"Transpose":return[r.transpose(ba("x",t,e,n),ba("perm",t,e,n))];case"_FusedMatMul":const[s,i]=ba("fusedOps",t,e,n),o="biasadd"===s,a="prelu"===i,u=ba("numArgs",t,e,n),l=ba("leakyreluAlpha",t,e,n);if(o){if(a&&2!==u)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&1!==u)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=ba("args",t,e,n);return[r.fused.matMul({a:ba("a",t,e,n),b:ba("b",t,e,n),transposeA:ba("transposeA",t,e,n),transposeB:ba("transposeB",t,e,n),bias:c,activation:i,preluActivationWeights:h,leakyreluAlpha:l})];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"normalization":return s(()=>((t,e,n,r=QT)=>{switch(t.op){case"EuclideanNorm":return[r.euclideanNorm(ba("x",t,e,n),ba("axis",t,e,n),ba("keepDims",t,e,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(ba("x",t,e,n),ba("mean",t,e,n),ba("variance",t,e,n),ba("offset",t,e,n),ba("scale",t,e,n),ba("epsilon",t,e,n))];case"LRN":return[r.localResponseNormalization(ba("x",t,e,n),ba("radius",t,e,n),ba("bias",t,e,n),ba("alpha",t,e,n),ba("beta",t,e,n))];case"Softmax":return[r.softmax(ba("x",t,e,n))];case"LogSoftmax":return[r.logSoftmax(ba("x",t,e,n))];case"SparseToDense":return[r.sparseToDense(ba("sparseIndices",t,e,n),ba("outputShape",t,e,n),ba("sparseValues",t,e,n),ba("defaultValue",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"reduction":return s(()=>((t,e,n,r=QT)=>{switch(t.op){case"Max":{const s=ba("axis",t,e,n),i=ba("keepDims",t,e,n);return[r.max(ba("x",t,e,n),s,i)]}case"Mean":{const s=ba("axis",t,e,n),i=ba("keepDims",t,e,n);return[r.mean(ba("x",t,e,n),s,i)]}case"Min":{const s=ba("axis",t,e,n),i=ba("keepDims",t,e,n);return[r.min(ba("x",t,e,n),s,i)]}case"Sum":{const s=ba("axis",t,e,n),i=ba("keepDims",t,e,n);return[r.sum(ba("x",t,e,n),s,i)]}case"All":{const s=ba("axis",t,e,n),i=ba("keepDims",t,e,n);return[r.all(ba("x",t,e,n),s,i)]}case"Any":{const s=ba("axis",t,e,n),i=ba("keepDims",t,e,n);return[r.any(ba("x",t,e,n),s,i)]}case"ArgMax":{const s=ba("axis",t,e,n);return[r.argMax(ba("x",t,e,n),s)]}case"ArgMin":{const s=ba("axis",t,e,n);return[r.argMin(ba("x",t,e,n),s)]}case"Prod":{const s=ba("axis",t,e,n),i=ba("keepDims",t,e,n);return[r.prod(ba("x",t,e,n),s,i)]}case"Cumprod":{const s=ba("axis",t,e,n),i=ba("exclusive",t,e,n),o=ba("reverse",t,e,n);return[r.cumprod(ba("x",t,e,n),s,i,o)]}case"Cumsum":{const s=ba("axis",t,e,n),i=ba("exclusive",t,e,n),o=ba("reverse",t,e,n);return[r.cumsum(ba("x",t,e,n),s,i,o)]}case"Bincount":const s=ba("x",t,e,n),i=ba("weights",t,e,n),o=ba("size",t,e,n);return[r.bincount(s,i,o)];case"DenseBincount":{const s=ba("x",t,e,n),i=ba("weights",t,e,n),o=ba("size",t,e,n),a=ba("binaryOutput",t,e,n);return[r.denseBincount(s,i,o,a)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"slice_join":return s(()=>ff(t,e,n));case"sparse":return s(()=>((t,e,n,r=QT)=>{switch(t.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:i,emptyRowIndicator:o,reverseIndexMap:a}=r.sparse.sparseFillEmptyRows(ba("indices",t,e,n),ba("values",t,e,n),ba("denseShape",t,e,n),ba("defaultValue",t,e,n));return[s,i,o,a]}case"SparseReshape":{const{outputIndices:s,outputShape:i}=r.sparse.sparseReshape(ba("inputIndices",t,e,n),ba("inputShape",t,e,n),ba("newShape",t,e,n));return[s,i]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(ba("data",t,e,n),ba("indices",t,e,n),ba("segmentIds",t,e,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(ba("data",t,e,n),ba("indices",t,e,n),ba("segmentIds",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"spectral":return s(()=>((t,e,n,r=QT)=>{switch(t.op){case"FFT":return[r.fft(ba("x",t,e,n))];case"IFFT":return[r.ifft(ba("x",t,e,n))];case"RFFT":return[r.rfft(ba("x",t,e,n))];case"IRFFT":return[r.irfft(ba("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"string":return s(()=>((t,e,n,r=QT)=>{switch(t.op){case"StringNGrams":{const{nGrams:s,nGramsSplits:i}=r.string.stringNGrams(ba("data",t,e,n),ba("dataSplits",t,e,n),ba("separator",t,e,n),ba("nGramWidths",t,e,n),ba("leftPad",t,e,n),ba("rightPad",t,e,n),ba("padWidth",t,e,n),ba("preserveShortSequences",t,e,n));return[s,i]}case"StringSplit":{const{indices:s,values:i,shape:o}=r.string.stringSplit(ba("input",t,e,n),ba("delimiter",t,e,n),ba("skipEmpty",t,e,n));return[s,i,o]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(ba("input",t,e,n),ba("numBuckets",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"transformation":return s(()=>((t,e,n,r=QT)=>{switch(t.op){case"Cast":return[r.cast(ba("x",t,e,n),ba("dtype",t,e,n))];case"ExpandDims":{const s=ba("axis",t,e,n);return[r.expandDims(ba("x",t,e,n),s)]}case"Squeeze":{const s=ba("axis",t,e,n);return[r.squeeze(ba("x",t,e,n),s)]}case"Reshape":return[r.reshape(ba("x",t,e,n),ba("shape",t,e,n))];case"MirrorPad":return[r.mirrorPad(ba("x",t,e,n),ba("padding",t,e,n),ba("mode",t,e,n))];case"PadV2":case"Pad":return[r.pad(ba("x",t,e,n),ba("padding",t,e,n),ba("constantValue",t,e,n))];case"SpaceToBatchND":{const s=ba("blockShape",t,e,n),i=ba("paddings",t,e,n);return[r.spaceToBatchND(ba("x",t,e,n),s,i)]}case"BatchToSpaceND":{const s=ba("blockShape",t,e,n),i=ba("crops",t,e,n);return[r.batchToSpaceND(ba("x",t,e,n),s,i)]}case"DepthToSpace":{const s=ba("blockSize",t,e,n),i=ba("dataFormat",t,e,n).toUpperCase();return[r.depthToSpace(ba("x",t,e,n),s,i)]}case"BroadcastTo":return[r.broadcastTo(ba("x",t,e,n),ba("shape",t,e,n))];case"BroadcastArgs":return[r.broadcastArgs(ba("s0",t,e,n),ba("s1",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"hash_table":return((t,e,n,r)=>cf(void 0,null,function*(){switch(t.op){case"HashTable":case"HashTableV2":{const s=ba("keyDType",t,e,n),i=ba("valueDType",t,e,n),o=new n_(s,i);return r.addHashTable(t.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{const s=ba("tableHandle",t,e,n,r),i=ba("keys",t,e,n),o=ba("values",t,e,n),a=r.getHashTableById(s.id);return[yield a.import(i,o)]}case"LookupTableFind":case"LookupTableFindV2":{const s=ba("tableHandle",t,e,n,r),i=ba("keys",t,e,n),o=ba("defaultValue",t,e,n),a=r.getHashTableById(s.id);return[yield a.find(i,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=ba("tableHandle",t,e,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${t.op} is not implemented`)}}))(t,e,n,r);case"custom":const i=ya(t.op);if(i&&i.customExecutor)return i.customExecutor(new ZT(t,e,n));throw TypeError(`Custom op ${t.op} is not registered.`);default:throw TypeError(`Unknown op '${t.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return yt(i)?i.then(t=>[].concat(t)):[].concat(i)}function Ga(t,e,n,r){const s=new Set,i=[];let o=null,a=null;const u=new Set,l=Object.keys(t).map(t=>va(t)[0]);let c=[];null!=r&&(c=r.map(t=>va(t.name)[0]));const h=[...e];for(;h.length>0;){const t=h.pop();(qa(t)||Ha(t)||Xa(t))&&null==o&&(o=t,a=o.children.map(t=>t.name).filter(t=>s.has(t))),s.add(t.name),null==n[t.name]&&-1===l.indexOf(t.name)&&-1===c.indexOf(t.name)&&(0!==t.inputs.length?t.inputs.forEach(t=>{u.has(t.name)||(u.add(t.name),h.push(t))}):i.push(t.name))}return{inputs:t,outputs:e,usedNodes:s,missingInputs:i,dynamicNode:o,syncInputs:a}}function qa(t){return s_.indexOf(t.op)>=0}function Ha(t){return i_.indexOf(t.op)>=0}function Xa(t){return o_.indexOf(t.op)>=0}function Ja(t,e,n=new Map,r=new Set){if(null==t)return null;if("function"==typeof Blob&&t instanceof Blob)return t.slice();if(r.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(tu(t)){const s=Array.isArray(t)?[]:{};r.add(t);for(const i in t){const o=Ja(t[i],e,n,r);s[i]=o}return r.delete(t),t.__proto__&&(s.__proto__=t.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${t}`)}return n.set(t,s.value),s.value}function Ka(t,e=Za){return Ya(t,e)}function Ya(t,e,n=new Set){const r=t[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(tu(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const i in r){const r=Ya(t.map(t=>t[i]),e,n);s[i]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function Za(t){return null===t?null:tu(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}function Qa(t,e){return cf(this,null,function*(){const n=new Map;Ja(t,e,n);for(const t of Array.from(n.keys())){const e=n.get(t);if(yt(e)){const r=yield e;n.set(t,r)}}return Ja(t,e,n)})}function tu(t){let e=!1;if(gt().get("IS_BROWSER"))e=t instanceof TextDecoder;else{const{StringDecoder:n}=require("string_decoder");e=t instanceof n}return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"==typeof t&&!(t instanceof Ly)&&!(t instanceof Promise)&&!e)}function eu(t){return t instanceof Ly?{value:t.clone(),recurse:!1}:tu(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}function nu(t){return new p_(t)}function ru(t){return new m_(t)}function su(t,e=null){return new class extends O_{constructor(){super(...arguments),this.size=e}iterator(){return cf(this,null,function*(){return t()})}}}function iu(t){return null===t?null:null==(e=t[0])||null===(n=e)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(e)||"object"==typeof e&&e instanceof Ly||Z(e)?{value:(t=>{if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof Ly?Tv(t):$e(t)})(t),recurse:!1}:{value:null,recurse:!0};var e,n}function ou(t){return"string"==typeof t&&"file://"===t.slice(0,7)}function au(t,e){Array.isArray(t)||(t=[t]),t.forEach(t=>{null!=t&&F("complex64"!==t.dtype,()=>`${e} does not support complex64 tensors in the CPU backend.`)})}function uu(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}function lu(t){return(e,n,r,s,i)=>{const o=ln(e,n),a=o.length,u=at(o),l=H(i,P(o)),c=e.length,h=n.length,f=at(e),d=at(n),p=an(e,o),m=an(n,o);if(p.length+m.length===0)for(let y=0;y<l.length;++y)l[y]=t(r[y%r.length],s[y%s.length]);else for(let y=0;y<l.length;++y){const e=mt(y,a,u),n=e.slice(-c);p.forEach(t=>n[t]=0);const i=pt(n,c,f),o=e.slice(-h);m.forEach(t=>o[t]=0);const b=pt(o,h,d);l[y]=t(r[i],s[b])}return[l,o]}}function cu(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,a=n.makeTensorInfo(r.shape,"complex64");return n.data.get(a.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",i),imag:n.makeTensorInfo(s.shape,"float32",o)},a}function hu(t,e,n="float32"){if("complex64"===n)return cu({inputs:{real:hu(t,e,"float32"),imag:hu(t,e,"float32")},backend:t});const r=ht(P(e),n);return t.makeTensorInfo(e,n,r)}function fu(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function du(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.data.get(r.dataId).complexTensorInfos.real,i=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,i)}function pu(t,e,n,r){if("int32"===r)return[e,"int32",Int32Array.from(t)];if("bool"===r){const r=Gt([0],n),[s,i]=lu((t,e)=>t!==e?1:0)(e,[],t,r,"bool");return[i,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function mu(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dtype:i}=r;if("complex64"===i){if("complex64"===s.dtype)return fu({inputs:{x:s},backend:n});const t=hu(n,s.shape,s.dtype),e=mu({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=cu({inputs:{real:e,imag:t},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),r}if("complex64"===s.dtype){const t=du({inputs:{input:s},backend:n}),e=mu({inputs:{x:t},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(t),e}if(!Y(s.dtype,i)){const t=fu({inputs:{x:s},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:i}}const o=n.data.get(s.dataId).values,[a,u,l]=pu(o,s.shape,s.dtype,i);return n.makeTensorInfo(a,u,l)}function yu(t,e,n,r){return null==n?({inputs:n,backend:s})=>{const{a:i,b:o}=n,a=s;au([i,o],t);const u=a.data.get(i.dataId).values,l=a.data.get(o.dataId).values,c="string"===i.dtype?Es(u):u,h="string"===i.dtype?Es(l):l,f=r||i.dtype,[d,p]=e(i.shape,o.shape,c,h,f);return a.makeTensorInfo(p,f,d)}:({inputs:t,backend:s})=>{const{a:i,b:o}=t,a=s;if("complex64"===i.dtype||"complex64"===o.dtype){const t=mu({inputs:{x:i},backend:a,attrs:{dtype:"complex64"}}),e=a.data.get(t.dataId),r=e.complexTensorInfos.real,s=e.complexTensorInfos.imag,u=a.data.get(r.dataId).values,l=a.data.get(s.dataId).values,c=mu({inputs:{x:o},backend:a,attrs:{dtype:"complex64"}}),h=a.data.get(c.dataId),f=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,p=a.data.get(f.dataId).values,m=a.data.get(d.dataId).values,[y,b,g]=n(i.shape,o.shape,u,l,p,m),w=a.makeTensorInfo(g,"float32",y),x=a.makeTensorInfo(g,"float32",b),v=cu({inputs:{real:w,imag:x},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo(x),v}{const t=a.data.get(i.dataId).values,n=a.data.get(o.dataId).values,s=r||i.dtype,[u,l]=e(i.shape,o.shape,t,n,s);return a.makeTensorInfo(l,s,u)}}}function bu(t){return(e,n,r,s,i,o)=>{const a=ln(e,n),u=P(a),l=a.length,c=at(a),h=H("float32",u),f=H("float32",u),d=an(e,a),p=an(n,a),m=Qr(r,s),y=Qr(i,o),b=e.length,g=at(e),w=n.length,x=at(n);if(d.length+p.length===0)for(let v=0;v<h.length;v++){const e=v%m.length,n=v%y.length,r=t(m[2*e],m[2*e+1],y[2*n],y[2*n+1]);h[v]=r.real,f[v]=r.imag}else for(let v=0;v<h.length;v++){const e=mt(v,l,c),n=e.slice(-b);d.forEach(t=>n[t]=0);const r=pt(n,b,g),s=e.slice(-w);p.forEach(t=>s[t]=0);const i=pt(s,w,x),o=t(m[2*r],m[2*r+1],y[2*i],y[2*i+1]);h[v]=o.real,f[v]=o.imag}return[h,f,a]}}function gu(t,e,n,r,s){const i=P(r),o=ht(s,n);for(let a=0;a<t.length;a++){const n=t[a];if(0>n)throw new Error("Input x must be non-negative!");s>n&&(o[n]+=i>0?e[a]:1)}return o}function wu(t,e,n,r=!1){const s=t.shape[0],i=t.shape[1],o=We([s,n],e.dtype);for(let a=0;s>a;a++)for(let s=0;i>s;s++){const i=t.get(a,s);if(0>i)throw new Error("Input x must be non-negative!");n>i&&(r?o.set(1,a,i):e.size>0?o.set(o.get(a,i)+e.get(a,s),a,i):o.set(o.get(a,i)+1,a,i))}return o}function xu(t){return(e,n,r)=>{const s=H(n,e.length);for(let i=0;i<e.length;++i)s[i]=t(e[i],r);return s}}function vu(t,e,n){return({inputs:r,attrs:s,backend:i})=>{const{x:o}=r;if(au(o,t),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const a=i,u=a.data.get(o.dataId).values,l=P(o.shape),c=n||o.dtype,h=X(c,l);for(let t=0;l>t;++t)h[t]=e(u[t],s);return a.makeTensorInfo(o.shape,c,h)}}function $u(t,e,n){return({inputs:r,attrs:s,backend:i})=>{const{x:o}=r;if(au(o,t),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const a=i,u=a.data.get(o.dataId).values,l=n||o.dtype,c=e(u,l,s);return a.makeTensorInfo(o.shape,l,c)}}function ku(t,e,n,r){const s=X(n,P(e));if(r&&"string"!==n){let e=0;t.forEach(t=>{const n=P(t.shape);s.set(t.vals,e),e+=n})}else{let r=0;t.forEach(t=>{const i="string"===n?Es(t.vals):t.vals;let o=0;for(let n=0;n<t.shape[0];++n){const a=n*e[1]+r;for(let e=0;e<t.shape[1];++e)s[a+e]=i[o++]}r+=t.shape[1]})}return s}function Nu(t,e,n,r,s,i,o,a,u){const l=We([r,i],n);for(let c=0;r>c;c++){const n=[];let r=0;for(let e=0;s>e;e++){const i=t[c*s+e];r+=i*o[e],n.push(i)}if(0>r||r>=u/i)throw new Error(`Invalid indices: ${n} does not index into ${a}`);for(let t=0;i>t;t++)l.values[c*i+t]=e.get(...e.indexToLoc(r*i+t))}return l}function Cu(t,e,n){const r=We(n,t.dtype);for(let s=0;s<r.size;++s){const n=r.indexToLoc(s).slice(),i=n[0],o=n[2],a=e.locToIndex([i,o]);n[2]=e.values[a];const u=t.locToIndex(n);u>=0&&u<t.values.length&&(r.values[s]=t.values[u])}return r}function Su(t,e,n){const r=(e-t)/(n-1),s=ht(n,"float32");s[0]=t;for(let i=1;i<s.length;i++)s[i]=s[i-1]+r;return s}function Eu(t,e,n,r){const s=H(r,P(n));for(let i=0;i<s.length;++i){const n=i*e;let r=t[n];for(let s=0;e>s;++s){const e=t[n+s];(Number.isNaN(e)||e>r)&&(r=e)}s[i]=r}return s}function Tu(t,e,n){const r=Ut(-1,n);return XR([],e,r,t,n)}function _u(t,e,n,r,s){const i=e.length,o=P(e),a=at(e),u=at(s),l=H(n,P(s));for(let c=0;o>c;++c){const e=mt(c,i,a),n=new Array(e.length);for(let t=0;t<n.length;t++)n[t]=e[r[t]];l[pt(n,i,u)]=t[c]}return l}function Ru(t){const{inputs:e,attrs:n,backend:r}=t,{x:s}=e,{perm:i}=n;au(s,"transpose");const o=s.shape.length,a=new Array(o);for(let l=0;l<a.length;l++)a[l]=s.shape[i[l]];const u=_u(r.data.get(s.dataId).values,s.shape,s.dtype,i,a);return{dataId:r.write(u,a,s.dtype),shape:a,dtype:s.dtype}}function Au(t,e,n,r){const[s,i]=Zn(t,r),o=re(e,"int32"),a=ht(P(s),o),u=P(i);for(let l=0;l<a.length;++l){const t=l*u;let e=1;for(let r=0;u>r;++r)e*=n[t+r];a[l]=e}return{outVals:a,outShape:s,outDtype:o}}function Ou(t,e){const n=t.slice(0,e);for(;n.length<e;)n.push(1);for(let r=e;r<t.length;r++)n[e-1]*=t[r];return n}function Iu(t,e,n,r,s,i,o,a){if(0===t.length)throw new Error("paramsNestedSplits must be non empty");if(0===e[0].length)throw new Error("Split tensors must not be scalars");if(((t,e,n)=>{t.forEach((t,r)=>{if(0>t||t>=n){const s=mt(r,e.length,at(e)).join(",");throw new Error(`indices[${s}] = ${t} is not in [0, ${n})`)}})})(i,o,e[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const u=r[0],{outSplits:l,valueSlices:c,numValues:h}=((t,e,n,r)=>{const s=[];let i=0;const o=e.length-1+n.length,a=new Array(o).fill(null).map(()=>[0]);((t,e)=>{for(let n=0;n<t.length;++n){const r=t[n],s=n===t.length-1?e:t[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(0>r[0])throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let t=1;t<r.length;++t)if(r[t-1]>r[t])throw new Error("Ragged splits must be sorted in ascending order")}})(n,r);let u=1;for(let l=0;l<e.length-1;++l){u*=e[l];const t=e[l+1];for(let e=1;u+1>e;++e)a[l].push(e*t)}for(let l=0;l<t.length;++l){let r=t[l],o=t[l]+1;for(let t=0;t<n.length;++t){const s=n[t],i=t+e.length-1;if(i>=0){const t=a[i],e=t[t.length-1]-s[r];for(let n=r;o>n;++n)a[i].push(s[n+1]+e)}r=s[r],o=s[o]}o!==r&&(s.push([r,o]),i+=o-r)}return{outSplits:a,valueSlices:s,numValues:i}})(i,o,t,u),f=(t=>{const e=[];for(let n=0;n<t.length;++n){const r=X("int32",t[n].length);e.push(r),t[n].forEach((t,e)=>r[e]=t)}return e})(l),d=((t,e,n,r,s)=>{const i=e.slice();i[0]=s;const o=X(n,P(i)),a=t.length;return((t,e,n,r,s,i)=>{const o=Ou(e,2)[1],a=Ou(i,2)[1];let u=0;for(const l of n)for(let e=l[0];e<l[1];++e){for(let n=0;r>n;++n)s[u*a+n]=t[e*o+n];++u}})(t,e,r,0===a?0:a/e[0],o,i),[o,i]})(n,r,s,c,h);return[f,d[0],d[1]]}function Fu(t,e,n){for(let r=0;n>r;r++)t[r]=e[r]}function Mu(t,e){const n=[];for(let r of t){if(0>r){if(!e)throw new Error(`Dimension ${r} must be >= 0`);if(-1>r)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function Du(t,e,n,r,s,i,o,a,u,l){return new iA(t,e,n,r,s,i,o,a,u,l).compute()}function Lu(t,e,n,r){if(t===e||e>t&&0>n||t>e&&n>1)return ht(0,r);const s=ht(Math.abs(Math.ceil((e-t)/n)),r);t>e&&1===n&&(n=-1),s[0]=t;for(let i=1;i<s.length;i++)s[i]=s[i-1]+n;return s}function Pu(t,e,n,r,s,i,o,a,u,l){const c=[r/s,s],h=t.values,f=e.values;if(0===r)return We(n,e.dtype);const d=We(c,e.dtype);"string"==typeof u||"number"==typeof u?d.values.fill(u):"boolean"==typeof u&&d.values.fill(+u);for(let p=0;i>p;p++){const t=[];let i=0;for(let e=0;o>e;e++){const n=h[p*o+e];t.push(n),i+=n*a[e]}if(0>i||i>=r/s)throw new Error(`Invalid indices: ${t} does not index into ${n}`);for(let n=0;s>n;n++)l?d.values[i*s+n]+=f[p*s+n]:d.values[i*s+n]=0===e.rank?f[0]:f[p*s+n]}return d}function Vu(t,e,n,r,s){const i=Sn(r,e,n),o=P(n),a=at(r);if(i){const n=En(e,a);return"string"===s?t.slice(n,n+o):t.subarray(n,n+o)}const u=We(r,s,"string"===s?Es(t):t),l=We(n,s);for(let c=0;c<l.size;++c){const t=l.indexToLoc(c),n=t.map((t,n)=>t+e[n]);l.set(u.get(...n),...t)}return"string"===s?Ts(l.values):l.values}function Bu(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:i,size:o}=r;au(s,"slice");const[a,u]=Tn(s,i,o);yn(s,a,u);const l=Vu(n.data.get(s.dataId).values,a,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,l)}function zu(t,e,n,r,s,i,o){const a=e[0],u=i[0],l=new Array(u),c=new Array(a),h=e[1];if(0===u){if(0!==a)throw new Error(ps(a));return[X(n,0),[0,h],X(s,0),l,c]}let f=!0,d=0;const p=new Array(u).fill(0);for(let y=0;a>y;++y){const e=t[y*h];if(0>e)throw new Error(ms(y,e));if(e>=u)throw new Error(ys(y,e,u));++p[e],f=f&&e>=d,d=e}let m=!0;for(let y=0;u>y;++y){const t=0===p[y];l[y]=t,m=m&&!t,p[y]=Math.max(p[y],1),y>0&&(p[y]+=p[y-1])}if(m&&f){const e=t,n=r;for(let t=0;a>t;++t)c[t]=t;return[e,[a,h],n,l,c]}{const e=p[u-1],i=X(n,e*h),f=X(s,e),d=new Array(u).fill(0);for(let n=0;a>n;++n){const e=t[n*h],s=d[e],o=(0===e?0:p[e-1])+s;d[e]++;for(let r=0;h>r;++r)i[o*h+r]=t[n*h+r];f[o]=r[n],c[n]=o}for(let t=0;u>t;++t)if(0===d[t]){const e=0===t?0:p[t-1];i[e*h+0]=t;for(let t=1;h>t;++t)i[e*h+t]=0;f[e]=o}return[i,[e,h],f,l,c]}}function Wu(t,e,n,r,s){const i=P(r),o=e[0],a=s.length,u=[];let l=1,c=-1;for(let m=0;a>m;++m){const t=s[m];if(-1===t){if(-1!==c)throw new Error(bs(c,m));c=m,u.push(1)}else{if(0>t)throw new Error(gs(m,t));l*=t,u.push(t)}}if(-1!==c){if(0>=l)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const t=Math.trunc(i/l);if(l*t!==i)throw new Error(ws(r,u));u[c]=t}if(P(u)!==i)throw new Error(xs(r,u));const h=r.length,f=[];if(h>0){f[h-1]=1;for(let t=h-2;t>=0;--t)f[t]=f[t+1]*r[t+1]}const d=[];if(a>0){d[a-1]=1;for(let t=a-2;t>=0;--t)d[t]=d[t+1]*u[t+1]}const p=X(n,o*a);for(let m=0;o>m;++m){let e=0;for(let n=0;h>n;++n)e+=t[m*h+n]*f[n];for(let t=0;a>t;++t)p[m*a+t]=Math.trunc(e/d[t]),e%=d[t]}return[p,[o,a],u]}function ju(t,e,n,r,s,i=!1,o=0){const a=r.length,u=[e[0],t.length/e[0]],l=u[1],c=a>0?s[a-1]+1:0;if(0>c)throw new Error("segment ids must be >= 0");const h=e.slice();h[0]=c;const f=X(n,h.reduce((t,e)=>t*e,1));if(0===a)return c>0&&f.fill(o),[f,h];if(0>=c)throw new Error("segment ids must be >= 0");let d=0,p=1,m=0,y=s[d];for(;;){let e=0;if(a>p){if(e=s[p],y===e){++p;continue}if(y>=e)throw new Error(vs())}if(0>y||y>=c)throw new Error($s(y,c));y>m&&f.fill(o,m*l,y*l);for(let n=d;p>n;++n){const e=r[n];if(0>e||e>=u[0])throw new Error(ks(n,r[n],u[0]));for(let n=0;l>n;n++)f[y*l+n]+=t[e*l+n]}if(i)for(let t=0;l>t;t++)f[y*l+t]/=p-d;if(d=p,++p,m=y+1,y=e,p>a)break}return c>m&&f.fill(o,m*l,c*l),[f,h]}function Uu(t,e,n,r){const s=We(t,e.dtype);for(let i=0;i<s.size;i++){const t=s.indexToLoc(i),o=new Array(t.length);for(let e=0;e<o.length;e++)o[e]=t[e]*n[e]+r[e];s.set(e.get(...o),...t)}return s}function Gu(t,e,n,r,s,i,o,a){return new wA(n,r,s,i,o,a).compute(t,e)}function qu(t,e,n,r){if(!t.length)return;if(0===e.length){for(let e=0;e<t.length;++e)r.push(t.subarray(e,e+1));return}if(1===e.length){const s=e[0];let i=t.indexOf(s);for(;-1!==i;){const e=t.subarray(0,i);n&&0===e.length||r.push(e),i=(t=t.subarray(i+1)).indexOf(s)}return void(n&&0===t.length||r.push(t))}let s=0;for(let i=0;i<t.length+1;i++)if(i===t.length||-1!==e.indexOf(t[i])){const e=t.subarray(s,i);n&&0===e.length||r.push(e),s=i+1}}function Hu(t,e,n){const r=t.length,s=[];let i=0,o=0;const a=new Array(r);for(let f=0;r>f;++f){const r=s.length;qu(t[f],e,n,s);const u=s.length-r;a[f]=u,i+=u,o=Math.max(o,u)}const u=X("int32",2*i),l=new Array(i),c=[r,o];let h=0;for(let f=0;r>f;++f)for(let t=0;t<a[f];++t)u[2*h]=f,u[2*h+1]=t,l[h]=s[h],++h;return[u,l,c]}function Xu(t,e){const n=X("int32",t.length);for(let r=0;r<t.length;++r)n[r]=jt(t[r]).modulo(e).getLowBitsUnsigned();return n}function Ju(t,e){const n=new Array(t.rank);for(let s=0;s<n.length;s++)n[s]=t.shape[s]*e[s];const r=We(n,t.dtype);for(let s=0;s<r.values.length;++s){const e=r.indexToLoc(s),n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=e[r]%t.shape[r];const i=t.locToIndex(n);r.values[s]=t.values[i]}return r}function Ku(t,e,n=0,r=t.length-1){for(;r>n;){if(r-n>600){const s=r-n+1,i=e-n+1,o=Math.log(s),a=.5*Math.exp(2*o/3),u=.5*Math.sqrt(o*a*(s-a)/s)*Math.sign(i-s/2);Ku(t,e,Math.max(n,Math.floor(e-i*a/s+u)),Math.min(r,Math.floor(e+(s-i)*a/s+u)))}const s=t[e];let i=n,o=r;for(O(t,n,e),NA(t[r],s)>0&&O(t,n,r);o>i;){for(O(t,i,o),i++,o--;0>NA(t[i],s);)i+=1;for(;NA(t[o],s)>0;)o-=1}0===NA(t[n],s)?O(t,n,o):(o+=1,O(t,o,r)),o>e||(n=o+1),e>o||(r=o-1)}}function Yu(t,e,n,r,s){const i=e[e.length-1],[o,a]=[t.length/i,i],u=H(n,o*r),l=H("int32",o*r);for(let h=0;o>h;h++){const e=h*a,n=t.subarray(e,e+a);let i=new Array(n.length);n.forEach((t,e)=>i[e]={value:t,index:e}),r<i.length&&(Ku(i,r),i=i.slice(0,r)),s&&i.sort(NA);const o=h*r,c=u.subarray(o,o+r),f=l.subarray(o,o+r);for(let t=0;r>t;t++)c[t]=i[t].value,f[t]=i[t].index}const c=e.slice();return c[c.length-1]=r,[We(c,n,u),We(c,"int32",l)]}function Zu(t,e,n,r){const s=G(e,n)[0],i=[1,n[0],1];for(let p=0;s>p;p++)i[0]*=n[p];i[1]=n[s];for(let p=s+1;p<n.length;p++)i[2]*=n[p];const o={},a=new Int32Array(n[s]),u=new Fy(i,r,t),l=[],c=1===i[0]&&1===i[2];for(let p=0;p<n[s];p++){let e;if(c)e=t[p].toString();else{const t=[];for(let e=0;e<i[0];e++)for(let n=0;n<i[2];n++)t.push(u.get(e,p,n));e=t.join(",")}if(void 0!==o[e])a[p]=o[e];else{const t=Object.keys(o).length;o[e]=t,a[p]=t,l.push(p)}}const h=i.slice();h[1]=Object.keys(o).length;const f=new Fy(h,r);l.forEach((t,e)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)f.set(u.get(n,t,r),n,e,r)});const d=n.slice();return d[s]=h[1],{outputValues:f.values,outputShape:d,indices:a}}function Qu(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{alpha:i}=r;au([s],"leakyRelu");const o=P(s.shape),a=n.data.get(s.dataId).values,u=H("float32",o);for(let l=0;l<a.length;l++)u[l]=0>a[l]?i*a[l]:a[l];return n.makeTensorInfo(s.shape,"float32",u)}function tl(t){const{inputs:e,backend:n}=t,{x:r,alpha:s}=e;au([r,s],"prelu");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,[a,u]=_A(r.shape,s.shape,i,o,"float32");return n.makeTensorInfo(u,"float32",a)}function el(t,e,n,r,s){if("linear"===n)return fu({inputs:{x:e},backend:t});if("relu"===n)return AA({inputs:{x:e},backend:t});if("elu"===n)return SA({inputs:{x:e},backend:t});if("relu6"===n)return IA({inputs:{x:e},backend:t});if("prelu"===n)return tl({inputs:{x:e,alpha:r},backend:t});if("leakyrelu"===n)return Qu({inputs:{x:e},backend:t,attrs:{alpha:s}});if("sigmoid"===n)return cA({inputs:{x:e},backend:t});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function nl(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:i}=r,o=P(s.shape),a=U(i,o),u=P(a);F(o===u,()=>`The new shape (${a}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),n.incRef(s.dataId);const l=n.data.get(s.dataId);if(null!=l.complexTensorInfos){const t=l.complexTensorInfos.real,e=l.complexTensorInfos.imag;t.shape=a,e.shape=a}return{dataId:s.dataId,shape:a,dtype:s.dtype}}function rl(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:i}=e,{transposeA:o,transposeB:a}=r;au([s,i],"matMul");const u=s.shape.length,l=i.shape.length,c=o?s.shape[u-2]:s.shape[u-1],h=a?i.shape[l-1]:i.shape[l-2],f=o?s.shape[u-1]:s.shape[u-2],d=a?i.shape[l-2]:i.shape[l-1],p=s.shape.slice(0,-2),m=i.shape.slice(0,-2),y=P(p),b=P(m),g=ln(s.shape.slice(0,-2),i.shape.slice(0,-2)).concat([f,d]);F(c===h,()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${i.shape} and transposeA=${o} and transposeB=${a} must match.`);const w=a?[b,d,h]:[b,h,d],x=nl({inputs:{x:s},backend:n,attrs:{shape:o?[y,c,f]:[y,f,c]}}),v=nl({inputs:{x:i},backend:n,attrs:{shape:w}}),$=o?x.shape[1]:x.shape[2],k=o?x.shape[2]:x.shape[1],N=a?v.shape[1]:v.shape[2],C=Math.max(y,b),S=n.data.get(x.dataId).values,E=n.data.get(v.dataId).values,T=at(x.shape),_=at(v.shape),[R,A,O]=o?[T[0],1,T[1]]:[T[0],T[1],1],[I,M,D]=a?[1,_[1],_[0]]:[_[1],1,_[0]],L=k*N,V=We([C,k,N],x.dtype),B=V.values,z=n.blockSize;for(let F=0;C>F;F++)for(let t=0;k>t;t+=z)for(let e=0;N>e;e+=z)for(let n=0;$>n;n+=z){const r=Math.min(t+z,k),s=Math.min(e+z,N),i=Math.min(n+z,$);for(let o=t;r>o;o++)for(let t=e;s>t;t++){let e=0;for(let r=n;i>r;r++){const n=Math.min(F,y-1)*R,s=Math.min(F,b-1)*D;e+=S[n+o*A+r*O]*E[r*I+t*M+s]}B[F*L+(o*N+t)]+=e}}return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(g,V.dtype,V.values)}function sl(t,e,n,r,s,i){const o=s.strideHeight,a=s.strideWidth,u=s.dilationHeight,l=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,f=s.padInfo.top,d=s.padInfo.left,p="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=We(s.outShape,n),y=m.values,b=s.outShape[1]*s.outShape[2]*s.outShape[3],g=s.outShape[2]*s.outShape[3],w=s.outShape[3];for(let x=0;x<s.batchSize;++x){const e=x*b,n=x*r[0];for(let m=0;m<s.inChannels;++m)for(let b=0;b<s.outHeight;++b){const x=b*o-f,v=Math.max(0,x),$=Math.min(s.inHeight,c+x),k=e+b*g;for(let e=0;e<s.outWidth;++e){const o=e*a-d,c=Math.max(0,o),f=Math.min(s.inWidth,h+o);let b=p,g=0,x=0;for(let e=v;$>e;e+=u){const s=n+e*r[1];for(let e=c;f>e;e+=l){const n=t[s+e*r[2]+m];"max"===i&&n>b?b=n:"avg"===i&&(g+=n,x++)}if(isNaN(b))break}y[k+e*w+m]="avg"===i?g/x:b}}}return m}function il(t,e,n,r,s=!1,i=!1){const o=We(r.outShape,"int32"),a=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,f=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,m=We(e,n,t);for(let y=0;y<r.batchSize;++y)for(let t=0;t<r.inChannels;++t)for(let e=0;e<r.outHeight;++e){const n=e*a-d;let b=n;for(;0>b;)b+=l;const g=Math.min(r.inHeight,h+n);for(let a=0;a<r.outWidth;++a){const h=a*u-p;let d=h;for(;0>d;)d+=c;const w=Math.min(r.inWidth,f+h);let x=Number.NEGATIVE_INFINITY,v=-1;for(let e=b;g>e;e+=l){const o=e-n;for(let n=d;w>n;n+=c){const a=n-h,u=m.get(y,e,n,t);u>x&&(x=u,v=s?i?((y*r.inHeight+e)*r.inWidth+n)*r.inChannels+t:(e*r.inWidth+n)*r.inChannels+t:o*f+a)}}o.set(v,y,e,a,t)}}return o}function ol(t,e,n,r,s,i){const o=s.strideDepth,a=s.strideHeight,u=s.strideWidth,l=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,f=s.effectiveFilterDepth,d=s.effectiveFilterHeight,p=s.effectiveFilterWidth,m=s.padInfo.front,y=s.padInfo.top,b=s.padInfo.left,g="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=We(s.outShape,n),x=w.values,v=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],$=s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[3]*s.outShape[4],N=s.outShape[4];for(let C=0;C<s.batchSize;++C){const e=C*v,n=C*r[0];for(let w=0;w<s.inChannels;++w)for(let v=0;v<s.outDepth;++v){const C=v*o-m;let S=C;for(;0>S;)S+=l;const E=Math.min(s.inDepth,f+C),T=e+v*$;for(let e=0;e<s.outHeight;++e){const o=e*a-y;let f=o;for(;0>f;)f+=c;const m=Math.min(s.inHeight,d+o),v=T+e*k;for(let e=0;e<s.outWidth;++e){const o=e*u-b;let a=o;for(;0>a;)a+=h;const d=Math.min(s.inWidth,p+o),y=v+e*N;let $=g,k=0,C=0;for(let e=S;E>e;e+=l){const s=n+e*r[1];for(let e=f;m>e;e+=c){const n=s+e*r[2];for(let e=a;d>e;e+=h){const s=t[n+e*r[3]+w];if("max"===i&&s>$?$=s:"avg"===i&&(k+=s,C++),isNaN($))break}if(isNaN($))break}if(isNaN($))break}x[y+w]="avg"===i?k/C:$}}}}return w}function al(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.data.get(r.dataId).complexTensorInfos.imag,i=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,i)}function ul(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,i=G(s,e[0].shape)[0];Br(e.map(t=>t.shape),i);let o=zr(e.map(t=>t.shape),i);if(0===P(o))return n.makeTensorInfo(o,e[0].dtype,[]);const a=e.filter(t=>P(t.shape)>0);if(1===a.length)return fu({inputs:{x:a[0]},backend:n});if("complex64"===a[0].dtype){const t=a.map(t=>du({inputs:{input:t},backend:n})),e=a.map(t=>al({inputs:{input:t},backend:n})),r=ul({inputs:t,backend:n,attrs:{axis:i}}),s=ul({inputs:e,backend:n,attrs:{axis:i}}),o=cu({inputs:{real:r,imag:s},backend:n});return t.forEach(t=>n.disposeIntermediateTensorInfo(t)),e.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}const u=a.map(t=>{const e=P(t.shape.slice(i));return nl({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})}),l=u.map(t=>({vals:n.data.get(t.dataId).values,shape:t.shape}));o=zr(u.map(t=>t.shape),1);const c=1===u[0].shape[0],h=ku(l,o,e[0].dtype,c),f=zr(a.map(t=>t.shape),i),d=n.makeTensorInfo(f,e[0].dtype,h);return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),d}function ll(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:o,pad:a,dataFormat:u,dilations:l,dimRoundingMode:c}=r;au([s,i],"conv2d");const h=Hn(u),f=Pn(s.shape,i.shape,o,l,a,c,!1,h),d=f.filterHeight,p=f.filterWidth,m=f.dilationHeight,y=f.dilationWidth,b=f.padInfo.left,g=f.padInfo.top,w="channelsLast"===f.dataFormat,x=new Fy(f.outShape,s.dtype),v=at(s.shape),$=at(i.shape),k=v[0],N=w?v[1]:v[2],C=w?v[2]:1,S=w?1:v[1],E=x.strides[0],T=w?x.strides[1]:x.strides[2],_=w?x.strides[2]:1,R=w?1:x.strides[1],A=n.data.get(s.dataId).values,O=n.data.get(i.dataId).values,I=x.values;for(let F=0;F<f.batchSize;++F){const t=F*k,e=F*E;for(let n=0;n<f.outHeight;++n){const r=e+n*T,s=n*f.strideHeight-g;for(let e=0;d>e;++e){const n=s+e*m;if(0>n||n>=f.inHeight)continue;const i=e*$[0],o=t+n*N;for(let t=0;t<f.outWidth;++t){const e=r+t*_,n=t*f.strideWidth-b;for(let t=0;p>t;++t){const r=n+t*y;if(0>r||r>=f.inWidth)continue;const s=o+r*C;let a=i+t*$[1];for(let t=0;t<f.inChannels;++t){const n=A[s+t*S];for(let t=0;t<f.outChannels;++t)I[e+t*R]+=n*O[a+t];a+=f.outChannels}}}}}}return n.makeTensorInfo(x.shape,x.dtype,I)}function cl(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:o,pad:a,dilations:u,dimRoundingMode:l}=r;au([s,i],"depthwiseConv2DNative");const c=at(s.shape),h=at(i.shape);let f=u;null==f&&(f=[1,1]),F(qn(o,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${f}'`);const d=Pn(s.shape,i.shape,o,f,a,l,!0),{filterHeight:p,filterWidth:m,dilationHeight:y,dilationWidth:b,padInfo:g}=d,w=g.left,x=g.top,v=d.outChannels/d.inChannels,$=new Fy(d.outShape,s.dtype),k=n.data.get(s.dataId).values,N=n.data.get(i.dataId).values,C=$.values;for(let S=0;S<d.batchSize;++S){const t=S*c[0],e=S*$.strides[0];for(let n=0;n<d.outHeight;++n){const r=e+n*$.strides[1],s=n*d.strideHeight-x;for(let e=0;p>e;++e){const n=s+e*y;if(0>n||n>=d.inHeight)continue;const i=e*h[0],o=t+n*c[1];for(let t=0;t<d.outWidth;++t){const e=r+t*$.strides[2],n=t*d.strideWidth-w;for(let t=0;m>t;++t){const r=n+t*b;if(0>r||r>=d.inWidth)continue;const s=i+t*h[1],a=o+r*d.inChannels;let u=e,l=s;for(let t=0;t<d.inChannels;++t){const e=k[a+t];for(let t=0;v>t;++t)C[u+t]+=e*N[l+t];u+=v,l+=v}}}}}}return n.makeTensorInfo($.shape,$.dtype,$.values)}function hl(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r;let a;au(s,"sum"),a="bool"===s.dtype?mu({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):fu({inputs:{x:s},backend:n});const u=a.shape.length,l=G(i,a.shape),c=er(l,u);let h=l,f=a;null!=c&&(f=Ru({inputs:{x:a},backend:n,attrs:{perm:c}}),h=rr(h.length,u)),tr("sum",h,f.shape.length);const[d,p]=Zn(f.shape,h);let m=hu(n,d,re(f.dtype,"int32"));const y=P(p),b=n.data.get(m.dataId).values,g=n.data.get(f.dataId).values;for(let w=0;w<b.length;++w){const t=w*y;let e=0;for(let n=0;y>n;++n)e+=g[t+n];b[w]=e}if(o){const t=m;m=nl({inputs:{x:m},backend:n,attrs:{shape:Qn(m.shape,l)}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(a),null!=c&&n.disposeIntermediateTensorInfo(f),m}function fl(t){const{inputs:e,backend:n,attrs:r}=t,{input:s}=e,{dim:i}=r,o=s.shape.length,a=s.shape.slice();let u=i;return 0>i&&(F(i>=-(o+1),()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),u=o+i+1),a.splice(u,0,1),nl({inputs:{x:s},backend:n,attrs:{shape:a}})}function dl(t,e,n){const r=t.shape,s=r[0],i=r[1],o=n.data.get(t.dataId),a=o.complexTensorInfos.real,u=o.complexTensorInfos.imag,l=[s,i],c=P(l),h=H("float32",c),f=H("float32",c);for(let y=0;s>y;y++){const t=Bu({inputs:{x:a},backend:n,attrs:{begin:[y,0],size:[1,i]}}),r=Bu({inputs:{x:u},backend:n,attrs:{begin:[y,0],size:[1,i]}}),s=cu({inputs:{real:t,imag:r},backend:n}),{real:o,imag:l}=pl(s,e,n),c=Qr(o,l);for(let e=0;i>e;e++){const t=rs(c,e);h[y*i+e]=t.real,f[y*i+e]=t.imag}n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s)}const d=n.makeTensorInfo(l,"float32",h),p=n.makeTensorInfo(l,"float32",f),m=cu({inputs:{real:d,imag:p},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),m}function pl(t,e,n){const r=P(t.shape),s=n.data.get(t.dataId),i=n.data.get(s.complexTensorInfos.real.dataId).values,o=n.data.get(s.complexTensorInfos.imag.dataId).values;if((a=r)&a-1){const t=((t,e,n)=>{const r=new Float32Array(2*e);for(let s=0;e>s;s++){let i=0,o=0;for(let r=0;e>r;r++){const a=os(s*r,e,n),u=rs(t,r);i+=u.real*a.real-u.imag*a.imag,o+=u.real*a.imag+u.imag*a.real}n&&(i/=e,o/=e),ss(r,i,o,s)}return r})(Qr(i,o),r,e);return ts(t)}{const s=ml(i,o,r,e,n),a=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(a,"float32",s.real),e=n.makeTensorInfo(a,"float32",s.imag),i=n.makeTensorInfo([],"float32",Ut(r,"float32")),o=fu({inputs:{x:i},backend:n}),u=QO.kernelFunc({inputs:{a:t,b:i},backend:n}),l=QO.kernelFunc({inputs:{a:e,b:o},backend:n}),c=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:h}}return s}var a}function ml(t,e,n,r,s){if(1===n)return{real:t,imag:e};const i=Qr(t,e),o=n/2,a=es(i),u=a.real,l=a.imag,c=[u.length],h=s.makeTensorInfo(c,"float32",u),f=s.makeTensorInfo(c,"float32",l),d=cu({inputs:{real:h,imag:f},backend:s}),p=ns(i),m=p.real,y=p.imag,b=[m.length],g=s.makeTensorInfo(b,"float32",m),w=s.makeTensorInfo(b,"float32",y),x=cu({inputs:{real:g,imag:w},backend:s}),v=ml(u,l,o,r,s),$=v.real,k=v.imag,N=[$.length],C=s.makeTensorInfo(N,"float32",$),S=s.makeTensorInfo(N,"float32",k),E=cu({inputs:{real:C,imag:S},backend:s}),T=ml(m,y,o,r,s),_=T.real,R=T.imag,A=[_.length],O=s.makeTensorInfo(A,"float32",_),I=s.makeTensorInfo(A,"float32",R),F=cu({inputs:{real:O,imag:I},backend:s}),M=is(n,r),D=[M.real.length],L=s.makeTensorInfo(D,"float32",M.real),P=s.makeTensorInfo(D,"float32",M.imag),V=cu({inputs:{real:L,imag:P},backend:s}),B=KR({inputs:{a:V,b:F},backend:s}),z=cR({inputs:{a:E,b:B},backend:s}),W=$A({inputs:{a:E,b:B},backend:s}),j=du({inputs:{input:z},backend:s}),U=du({inputs:{input:W},backend:s}),G=al({inputs:{input:z},backend:s}),q=al({inputs:{input:W},backend:s}),H=ul({inputs:[j,U],backend:s,attrs:{axis:0}}),X=ul({inputs:[G,q],backend:s,attrs:{axis:0}}),J=s.data.get(H.dataId).values,K=s.data.get(X.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(f),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(g),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo(E),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(I),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(X),{real:J,imag:K}}function yl(t){const{backend:e,attrs:n}=t,{shape:r,value:s,dtype:i}=n,o=i||st(s),a=X(o,P(r));return((t,e)=>{t.fill(e)})(a,s),e.makeTensorInfo(r,o,a)}function bl(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reductionIndices:i,keepDims:o}=r,a=n;let u=s.shape;const l=u.length,c=G(i,u);let h=c;const f=er(h,l);let d=a.data.get(s.dataId).values;if(null!=f){const t=new Array(l);for(let e=0;e<t.length;e++)t[e]=u[f[e]];d=_u(d,u,s.dtype,f,t),h=rr(h.length,l),u=t}au(s,"max"),tr("max",h,l);const[p,m]=Zn(u,h),y=Eu(d,P(m),p,s.dtype),b=a.write(y,p,s.dtype);let g=p;return o&&(g=Qn(p,c)),{dataId:b,shape:g,dtype:s.dtype}}function gl(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{dim:i}=r,o=s.shape.length;let a=i;if(-1===a&&(a=o-1),a!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${a}`);const u=G([a],s.shape),l=bl({inputs:{x:s},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=Qn(l.shape,u),h=nl({inputs:{x:l},backend:n,attrs:{shape:c}}),f=$A({inputs:{a:s,b:h},backend:n}),d=wR({inputs:{x:f},backend:n}),p=hl({inputs:{x:d},backend:n,attrs:{axis:u,keepDims:!1}}),m=nl({inputs:{x:p},backend:n,attrs:{shape:c}}),y=ZO({inputs:{a:d,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),y}function wl(t){const{inputs:e,backend:n}=t,{x:r}=e;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const t=du({inputs:{input:r},backend:n}),e=wl({inputs:{x:t},backend:n}),s=al({inputs:{input:r},backend:n}),i=wl({inputs:{x:s},backend:n}),o=cu({inputs:{real:e,imag:i},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}return yl({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}function xl(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r;if(1===e.length)return fl({inputs:{input:e[0]},backend:n,attrs:{dim:s}});const i=e[0].shape,o=e[0].dtype;e.forEach(t=>{M(i,t.shape,"All tensors passed to stack must have matching shapes"),F(o===t.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],u=ul({inputs:e.map(t=>{const e=fl({inputs:{input:t},backend:n,attrs:{dim:s}});return a.push(e),e}),backend:n,attrs:{axis:s}});return a.forEach(t=>n.disposeIntermediateTensorInfo(t)),u}function vl(t,e){let n=0,r=t.length,s=0;for(;r>n;)s=Math.floor((n+r)/2),t[s]<e?n=s+1:r=s;return r}function $l(t,e){let n=0,r=t.length,s=0;for(;r>n;)s=Math.floor((n+r)/2),t[s]>e?r=s:n=s+1;return r}function kl(t,e,n){switch(n){case"reflect":return((t,e)=>{let n=t;if(0>n)if(e>1){const t=2*e;t>n&&(n=t*Math.trunc(-n/t)+n),n=-e>n?n+t:-n-1}else n=0;else if(n>e-1)if(e>1){const t=2*e;n-=t*Math.trunc(n/t),e>n||(n=t-n-1)}else n=0;return R(0,n,e-1)})(t,e);case"wrap":return((t,e)=>{let n=t;if(0>n)if(e>1){const t=e-1;n+=e*(Math.trunc(-n/t)+1)}else n=0;else if(n>e-1)if(e>1){const t=e-1;n-=e*Math.trunc(n/t)}else n=0;return R(0,n,e-1)})(t,e);case"nearest":return((t,e)=>R(0,t,e-1))(t,e);default:return t}}function Nl(t,e,n,r,s,i,o,a,u,l,c){return a>=0&&e>a&&u>=0&&n>u?t[o*r+a*s+u*i+l]:c}function Cl(t,e,n,r,s,i,o,a,u,l,c){return Nl(t,e,n,r,s,i,o,Math.round(a),Math.round(u),l,c)}function Sl(t,e,n,r,s,i,o,a,u,l,c){const h=Math.floor(a),f=Math.floor(u),d=h+1,p=f+1;return(d-a)*((p-u)*Nl(t,e,n,r,s,i,o,h,f,l,c)+(u-f)*Nl(t,e,n,r,s,i,o,h,p,l,c))+(a-h)*((p-u)*Nl(t,e,n,r,s,i,o,d,f,l,c)+(u-f)*Nl(t,e,n,r,s,i,o,d,p,l,c))}function El(t,e){if(!(t in sM)||null!=e){const n=((t,e)=>{if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==e?(t=>{if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")})(t):e;return n.addEventListener("webglcontextlost",e=>{e.preventDefault(),delete sM[t]},!1),gt().getBool("SOFTWARE_WEBGL_ENABLED")&&(iM.failIfMajorPerformanceCaveat=!1),1===t?n.getContext("webgl",iM)||n.getContext("experimental-webgl",iM):n.getContext("webgl2",iM)})(t,e);if(null===n)return null;sM[t]=n}const n=sM[t];return null==n||n.isContextLost()?(delete sM[t],El(t)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),sM[t])}function Tl(t,e){return[e,t]}function _l(t){const e=P(t);return z(Math.ceil(e/4))}function Rl(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function Al(t,e){const n=t;let r,s,i,o,a,u,l,c,h,f;return 2===gt().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,i=n.RGBA16F,o=n.RGBA32F,a=n.RED,l=4,c=1,h=n.HALF_FLOAT,f=n.FLOAT,u=n.RGBA8):(r=t.RGBA,s=t.RGBA,i=t.RGBA,o=n.RGBA,a=t.RGBA,l=4,c=4,h=null!=e?e.HALF_FLOAT_OES:null,f=t.FLOAT,u=t.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:o,textureFormatFloat:a,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:f}}function Ol(t,e){const n=e();return gt().getBool("DEBUG")&&(t=>{const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+((t,e)=>{switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}})(t,e))})(t),n}function Il(t){return!!(gt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||Math.abs(t)>5.96e-8&&65504>Math.abs(t))}function Fl(t,e){return zl(t,()=>t.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function Ml(t,e){const n=fM.exec(e);if(null==n)return;const r=+n[1],s=t.split("\n"),i=s.length.toString().length+2,o=s.map((t,e)=>W((e+1).toString(),i)+t);let a=0;for(let u=0;u<o.length;u++)a=Math.max(o[u].length,a);o.slice(0,r-1),o.slice(r-1,r),o.slice(r)}function Dl(t,e){if(Ol(t,()=>t.validateProgram(e)),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw new Error("Shader program validation failed.")}function Ll(t,e,n,r,s,i,o){const a=t.getAttribLocation(e,n);return-1!==a&&(Ol(t,()=>t.bindBuffer(t.ARRAY_BUFFER,r)),Ol(t,()=>t.vertexAttribPointer(a,s,t.FLOAT,!1,i,o)),Ol(t,()=>t.enableVertexAttribArray(a)),!0)}function Pl(t,e,n){Ol(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,n)),Ol(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0))}function Vl(t,e){Ol(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,e)),Ol(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0))}function Bl(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+((t,e)=>{switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}})(t,e))}function zl(t,e,n){const r=Ol(t,()=>e());if(null==r)throw new Error(n);return r}function Wl(t,e=2){return P(t.slice(0,t.length-e))}function jl(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function Ul(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[Wl(t),...jl(t)]),e}function Gl(t){return t%2==0}function ql(t,e){if(V(t=t.slice(-2),e=e.slice(-2)))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(Gl(n)&&Gl(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&Gl(t[0])&&Gl(e[0])}function Hl(t,e){return null!=t.getExtension(e)}function Xl(t){try{if(null!=El(t))return!0}catch(e){return!1}return!1}function Jl(t){const e=Al(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const s=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),s}function Kl(t,e){Array.isArray(t)||(t=[t]),t.forEach(t=>{null!=t&&F("complex64"!==t.dtype,()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}function Yl(){let t,e,n,r,s,i,o,a,u,l;return 2===gt().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",s="texture",i="outputColor",o="out vec4 outputColor;",a=gt().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",s="texture2D",i="gl_FragColor",o="",a="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:s,output:i,defineOutput:o,defineSpecialNaN:a,defineSpecialInf:u,defineRound:l}}function Zl(t,e,n="index"){const r=at(e);return r.map((e,s)=>`int ${t[s]} = ${n} / ${e}; ${s===r.length-1?`int ${t[s+1]} = ${n} - ${t[s]} * ${e}`:`index -= ${t[s]} * ${e}`};`).join("")}function Ql(t,e,n="index"){const r=at(e);return r.map((e,s)=>`int ${t[s]} = ${n} / outShapeStrides[${s}]; ${s===r.length-1?`int ${t[s+1]} = ${n} - ${t[s]} * outShapeStrides[${s}]`:`index -= ${t[s]} * outShapeStrides[${s}]`};`).join("")}function tc(t){const e=at(t).map(t=>t.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}function ec(t,e,n){const r=[];if(t.forEach(t=>{const e=P(t.shapeInfo.logicalShape);if(t.shapeInfo.isUniform?r.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(r.push(`uniform sampler2D ${t.name};`),r.push(`uniform int offset${t.name};`)),n.enableShapeUniforms){const{uniformShape:e}=ac(n.packedInputs,t.shapeInfo.logicalShape,t.shapeInfo.texShape);switch(e.length){case 1:r.push(`uniform int ${t.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${t.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${t.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${t.name}Shape;`)}r.push(`uniform ivec2 ${t.name}TexShape;`)}}),n.enableShapeUniforms){switch(e.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(t=>{r.push(`uniform ${t.type} ${t.name}${t.arrayIndex?`[${t.arrayIndex}]`:""};`)});const s=r.join("\n"),i=t.map(t=>((t,e,n=!1,r)=>{let s="";s+=n?rc(t,r):nc(t,r);const i=t.shapeInfo.logicalShape,o=e.logicalShape;return i.length>o.length||(s+=n?((t,e)=>{const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=t.shapeInfo.logicalShape.length,o=e.logicalShape.length,a=bM(t.shapeInfo.logicalShape,e.logicalShape),u=oc(o),l=o-i;let c;const h=["x","y","z","w","u","v"];c=0===i?"":2>o&&a.length>=1?"coords = 0;":a.map(t=>`coords.${h[t+l]} = 0;`).join("\n");let f="";f=2>o&&i>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>`coords.${h[e+l]}`).join(", ");let d="return outputValue;";const p=1===P(t.shapeInfo.logicalShape),m=1===P(e.logicalShape);if(1!==i||p||m){if(p&&!m)d=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(a.length){const t=i-2,e=i-1;a.indexOf(t)>-1&&a.indexOf(e)>-1?d="return vec4(outputValue.x);":a.indexOf(t)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(e)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${f});\n      ${d}\n    }\n  `})(t,e):((t,e)=>{const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=e.texShape,o=t.shapeInfo.texShape,a=t.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!t.shapeInfo.isUniform&&a===u&&null==t.shapeInfo.flatOffset&&V(o,i))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=oc(u),c=bM(t.shapeInfo.logicalShape,e.logicalShape),h=u-a;let f;const d=["x","y","z","w","u","v"];f=0===a?"":2>u&&c.length>=1?"coords = 0;":c.map(t=>`coords.${d[t+h]} = 0;`).join("\n");let p="";return p=2>u&&a>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>`coords.${d[e+h]}`).join(", "),`\n    float ${s}() {\n      ${l} coords = getOutputCoords();\n      ${f}\n      return get${r}(${p});\n    }\n  `})(t,e)),s})(t,e,n.packedInputs,n.enableShapeUniforms)).join("\n"),o=e.texShape,a=Yl(),u=(t=>`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `)(a);let l,c,h=(t=>`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${gM}\n    ${wM}\n    ${xM}\n  `)(a);return e.isPacked?(l=((t,e,n)=>{switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return((t,e,n)=>{const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `})(0,e,n);case 2:return((t,e,n)=>{const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(V(t,e))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(t[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `})(t,e,n);case 3:return((t,e,n)=>{if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[2]/2),i=s*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `})(t,e,n);default:return((t,e,n)=>{if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[t.length-1]/2),i=s*Math.ceil(t[t.length-2]/2);let o=i,a="",u="b, r, c";for(let l=2;l<t.length-1;l++)o*=t[t.length-l-1],a=`\n      int b${l} = index / ${o};\n      index -= b${l} * ${o};\n    `+a,u=`b${l}, `+u;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${a}\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${t.length}(${u});\n    }\n  `})(t,e,n)}})(e.logicalShape,o,n.enableShapeUniforms),c=(t=>`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `)(a)):(l=((t,e,n)=>{switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return((t,e,n)=>1===e[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${e[1]}.0);\n      }\n    `:1===e[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${e[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      return resTexRC.x * ${e[1]} + resTexRC.y;\n    }\n  `)(0,e,n);case 2:return((t,e,n)=>V(t,e)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `:1===t[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===t[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `)(t,e,n);case 3:return((t,e,n)=>{if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${Ql(["r","c","d"],t)}\n    return ivec3(r, c, d);\n  }\n`;const r=Zl(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `})(t,e,n);case 4:return((t,e,n)=>{if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${Ql(["r","c","d","d2"],t)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=Zl(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `})(t,e,n);case 5:return((t,e)=>{const n=Zl(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `})(t,e);case 6:return((t,e)=>{const n=Zl(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `})(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}})(e.logicalShape,o,n.enableShapeUniforms),c=(t=>`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `)(a)),n.packedInputs&&(h+=vM),[h,u,c,s,l,i,n.userCode].join("\n")}function nc(t,e=!1){const n=t.shapeInfo.logicalShape;switch(n.length){case 0:return((t,e)=>{const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,i]=t.shapeInfo.texShape;if(1===s&&1===i)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=sc(n);if(e)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[a,u]=t.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${a}, ${u}, ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `})(t,e);case 1:return((t,e)=>{const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${ic(t)}\n      }\n    `;const s=t.shapeInfo.texShape,i=s[0],o=s[1];if(1===o&&1===i)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const a=sc(n);return 1===o?e?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${i}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===i?e?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${o}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:e?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${i}, ${o}, index + ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `})(t,e);case 2:return((t,e)=>{const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=t.shapeInfo.texShape;if(null!=i&&V(n,i)){if(e)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const t=i[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${i[1]}.0, ${t}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:o,keptDims:a}=q(n),u=o;if(u.length<n.length){const n=["row","col"];return`\n      ${nc(uc(t,u),e)}\n      float ${s}(int row, int col) {\n        return ${s}(${lc(n,a)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${ic(t)}\n      }\n    `;const l=i[0],c=i[1],h=sc(r);return 1===c?e?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===l?e?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:e?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`})(t,e);case 3:return((t,e)=>{const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[1]*n[2],o=n[2],{newShape:a,keptDims:u}=q(n),l=a;if(l.length<n.length){const n=["row","col","depth"];return`\n        ${nc(uc(t,l),e)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${lc(n,u)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${i}, ${o}, 1)));\n        ${ic(t)}\n      }\n    `;const c=t.shapeInfo.texShape,h=c[0],f=c[1],d=t.shapeInfo.flatOffset;if(f===i&&null==d)return e?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${o}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${f}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(f===o&&null==d)return e?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${f}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const p=sc(r);return e?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${p};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i} + col * ${o} + depth + ${p};\n        vec2 uv = uvFromFlat(${h}, ${f}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `})(t,e);case 4:return((t,e)=>{const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[3],o=n[2]*i,a=n[1]*o,{newShape:u,keptDims:l}=q(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${nc(uc(t,u),e)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${lc(n,l)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${a}, ${o}, ${i}, 1)));\n        ${ic(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,f=h[0],d=h[1],p=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,y=`int stride0 = ${r}Shape[1] * stride1;`;if(d===a&&null==c)return e?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${p}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${o}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${f}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(d===i&&null==c)return e?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${f}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const b=sc(r);return e?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${p}\n      ${m}\n      ${y}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${a} + col * ${o} +\n          depth * ${i} + depth2;\n      vec2 uv = uvFromFlat(${f}, ${d}, index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `})(t,e);case 5:return(t=>{const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[4],i=e[3]*s,o=e[2]*i,a=e[1]*o,{newShape:u,keptDims:l}=q(e);if(u.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${nc(uc(t,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${lc(e,l)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${a}, ${o}, ${i}, ${s})) +\n          depth3;\n        ${ic(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,f=h[0],d=h[1];return d===a&&null==c?`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:d===s&&null==c?`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${a} + col * ${o} + depth * ${i} +\n          depth2 * ${s} + depth3 + ${sc(n)};\n      vec2 uv = uvFromFlat(${f}, ${d}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `})(t);case 6:return(t=>{const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:i}=q(e);if(s.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${nc(uc(t,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${lc(e,i)});\n      }\n    `}const o=e[5],a=e[4]*o,u=e[3]*a,l=e[2]*u,c=e[1]*l;if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${a})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${ic(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,f=t.shapeInfo.texShape,d=f[0],p=f[1];return p===c&&null==h?`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${a}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:p===o&&null==h?`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${a} + depth3 * ${o} + depth4 + ${sc(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `})(t);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function rc(t,e){switch(t.shapeInfo.logicalShape.length){case 0:return(t=>{const e=t.name;return`\n    vec4 ${"get"+e.charAt(0).toUpperCase()+e.slice(1)}() {\n      return ${Yl().texture2D}(${e}, halfCR);\n    }\n  `})(t);case 1:return((t,e)=>{const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,i=Yl();if(e)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `;const o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${o[0]}, ${o[1]}, index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `})(t,e);case 2:return((t,e)=>{const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=t.shapeInfo.texShape,o=i[0],a=i[1],u=Yl();if(null!=i&&V(n,i))return e?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${o}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(e)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `})(t,e);case 3:return((t,e)=>{const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=t.shapeInfo.texShape,o=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(1===n[0]){const r=[1,2],i=["b","row","col"];return`\n        ${rc(uc(t,n.slice(1)),e)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${lc(i,r)});\n        }\n      `}const a=Yl();if(e)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${a.texture2D}(${r}, uv);\n    }\n  `;const u=o[0],l=o[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${a.texture2D}(${r}, uv);\n    }\n  `})(t,e);default:return((t,e)=>{const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=Yl();if(e)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=t.shapeInfo.logicalShape,o=i.length,a=t.shapeInfo.texShape,u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],l=u[0],c=u[1],h=Math.ceil(i[o-1]/2);let f=h*Math.ceil(i[o-2]/2),d="int b, int row, int col",p=`b * ${f} + (row / 2) * ${h} + (col / 2)`;for(let m=2;o-1>m;m++)d=`int b${m}, `+d,f*=i[o-m-1],p=`b${m} * ${f} + `+p;return`\n    vec4 ${r}(${d}) {\n      int index = ${p};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `})(t,e)}}function sc(t){return`offset${t}`}function ic(t){const e=t.name,n=P(t.shapeInfo.logicalShape);return 2>n?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function oc(t){if(t>1){if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}return"int"}function ac(t,e,n){const{newShape:r,keptDims:s}=q(e),i=e.length,o=t&&3===i&&1===e[0],a=o?e.slice(1):r,u=!t&&i>1&&!V(e,n)&&r.length<i||o;return{useSqueezeShape:u,uniformShape:u?a:e,keptDims:s}}function uc(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function lc(t,e){return e.map(e=>t[e]).join(", ")}function cc(t,e,n){const r={},s={},i={},o=[];let a,u,l,c=null,h=null;h=t.getUniformLocation(n,"NAN",!1),1===gt().getNumber("WEBGL_VERSION")&&(c=t.getUniformLocation(n,"INFINITY",!1));const f=!1;for(let d=0;d<e.variableNames.length;d++){const o=e.variableNames[d];r[o]=t.getUniformLocation(n,o,f),r[`offset${o}`]=t.getUniformLocation(n,`offset${o}`,f),e.enableShapeUniforms&&(s[`${o}Shape`]=t.getUniformLocation(n,`${o}Shape`,f),i[`${o}TexShape`]=t.getUniformLocation(n,`${o}TexShape`,f))}return e.enableShapeUniforms&&(a=t.getUniformLocation(n,"outShape",f),l=t.getUniformLocation(n,"outShapeStrides",f),u=t.getUniformLocation(n,"outTexShape",f)),e.customUniforms&&e.customUniforms.forEach((e,r)=>{o[r]=t.getUniformLocation(n,e.name,f)}),{uniformLocations:r,customUniformLocations:o,infLoc:c,nanLoc:h,inShapesLocations:s,inTexShapesLocations:i,outShapeLocation:a,outShapeStridesLocation:l,outTexShapeLocation:u}}function hc(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach((t,n)=>{const r=t.logicalShape,s=e[n],i=s.shape;if(!V(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(t.isUniform&&s.isUniform)return;const o=t.texShape,a=s.isUniform?null:s.texData.texShape;if(!V(o,a))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${a} must match`)})}function fc(t){return gt().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&4>=t}function dc(t,e,n,r,s,i){((t,e)=>{const n=gt().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(0>=t||0>=e)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)})(e,n);const o=(t=>zl(t,()=>t.createTexture(),"Unable to create WebGLTexture."))(t),a=t.TEXTURE_2D;return Ol(t,()=>t.bindTexture(a,o)),Ol(t,()=>t.texParameteri(a,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)),Ol(t,()=>t.texParameteri(a,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)),Ol(t,()=>t.texParameteri(a,t.TEXTURE_MIN_FILTER,t.NEAREST)),Ol(t,()=>t.texParameteri(a,t.TEXTURE_MAG_FILTER,t.NEAREST)),1===gt().getNumber("WEBGL_VERSION")?Ol(t,()=>t.texImage2D(a,0,r,e,n,0,s,i,null)):Ol(t,()=>t.texStorage2D(a,1,r,e,n)),Ol(t,()=>t.bindTexture(t.TEXTURE_2D,null)),{texture:o,texShape:[n,e]}}function pc(t){return t.internalFormatFloat}function mc(t){return t.internalFormatHalfFloat}function yc(t){return t.downloadTextureFormat}function bc(t){return t.internalFormatPackedFloat}function gc(t){return t.internalFormatPackedHalfFloat}function wc(t,e){return["x","y","z","w","u","v"].slice(0,e).map(e=>`${t}.${e}`)}function xc(t,e){return 1===e?[t]:wc(t,e)}function vc(t,e,n,r,s){const i=((t,e)=>{switch(t){case cM.PACKED_2X2_FLOAT32:return bc(e);case cM.PACKED_2X2_FLOAT16:return gc(e);case cM.UNPACKED_FLOAT32:return pc(e);case cM.UNPACKED_FLOAT16:return mc(e);case cM.PACKED_4X1_UNSIGNED_BYTE:return yc(e);default:throw new Error(`Unknown physical texture type ${t}`)}})(e,r);let o;if(s){const[e,n]=Rl(t[0],t[1]);o=e*n}else{const[e,n]=Tl(t[0],t[1]);o=e*n}const a=((t,e)=>{const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;if(e===n.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)})(n,i);return o*a}function $c(t,e){if(t===uM.UPLOAD)return cM.PACKED_2X2_FLOAT32;if(t===uM.RENDER||null==t)return(t=>gt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?cM.PACKED_2X2_FLOAT32:cM.UNPACKED_FLOAT32:t?cM.PACKED_2X2_FLOAT16:cM.UNPACKED_FLOAT16)(e);if(t===uM.DOWNLOAD||t===uM.PIXELS)return cM.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function kc(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}function Nc(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function Cc(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,i=n.makeTensorInfo(r.shape,"complex64"),o=n.texData.get(i.dataId),a=Nc({inputs:{x:r},backend:n}),u=Nc({inputs:{x:s},backend:n});return o.complexTensorInfos={real:a,imag:u},i}function Sc({opSnippet:t,packedOpSnippet:e,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:i})=>{const{x:o}=s,a=i,u=r||o.dtype;if(a.shouldExecuteOnCPU([o])&&null!=n){const t=a.texData.get(o.dataId),e=n(t.values,u);return a.makeTensorInfo(o.shape,u,e)}let l;return l=gt().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=e?new RD(o.shape,e):new ND(o.shape,t),a.runWebGLProgram(l,[o],u)}}function Ec({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:i}){return({inputs:o,backend:a})=>{const{a:u,b:l}=o,c=a;if(r&&"complex64"===u.dtype){const e=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,s]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(e=>{const[n,r]=e,s={dataId:n.dataId,dtype:n.dtype,shape:u.shape},i={dataId:r.dataId,dtype:r.dtype,shape:l.shape},o=new LD(t,u.shape,l.shape);return c.runWebGLProgram(o,[s,i],re(n.dtype,r.dtype))}),i=Cc({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),i}const h=i||re(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||c.shouldExecuteOnCPU([u,l]))&&null!=s){const t=c.texData.get(u.dataId).values,e=c.texData.get(l.dataId).values,n="string"===u.dtype?Es(t):t,r="string"===u.dtype?Es(e):e,[i,o]=s(u.shape,l.shape,n,r,h),a=c.makeTensorInfo(o,h);return c.texData.get(a.dataId).values=i,a}let f;return f=gt().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e?new VD(e,u.shape,l.shape,n):new LD(t,u.shape,l.shape),c.runWebGLProgram(f,[u,l],h)}}function Tc(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":ED;if("elu"===t)return e?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===t)return e?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":TD;if("prelu"===t)return e?qD:GD;if("leakyrelu"===t)return e?jD:WD;if("sigmoid"===t)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}function _c(t){const{inputs:e,backend:n}=t,{a:r,b:s}=e,i=re(r.dtype,s.dtype);if("complex64"===r.dtype){const t=n.texData.get(r.dataId),e=n.texData.get(s.dataId),i=new ZD(KD,r.shape,s.shape),o=new ZD(YD,r.shape,s.shape),a=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(i,a,"float32"),l=n.runWebGLProgram(o,a,"float32"),c=Cc({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,s])){const t=n.texData.get(r.dataId),e=n.texData.get(s.dataId),[o,a]=KM(r.shape,s.shape,t.values,e.values,i),u=n.makeTensorInfo(a,i);return n.texData.get(u.dataId).values=o,u}let o;return o=gt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new VD(QD,r.shape,s.shape):new LD(QD,r.shape,s.shape),n.runWebGLProgram(o,[r,s],i)}function Rc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:i}=r,o=n,a=P(s.shape),u=U(i,a),l=P(u);F(a===l,()=>`The new shape (${u}) has ${l} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const c=o.texData.get(s.dataId);return!c.isPacked||ql(s.shape,u)||null!==c.texture&&ql(c.shape,u)?(o.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype}):((t,e,n)=>{const r=[Wl(t.shape),...jl(t.shape)],s={dtype:t.dtype,shape:r,dataId:t.dataId},i=[Wl(e),...jl(e)],o=new $D(i,r),a=[r],u=n.runWebGLProgram(o,[s],t.dtype,a,!0);return{dataId:u.dataId,shape:e,dtype:u.dtype}})(s,u,o)}function Ac(t,e,n,r){const s=(t=>{const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],r=qr(n);e.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return e})(t.shape);let i=t;for(let o=0;o<s.length;o++){const{inSize:a,windowSize:u,outSize:l}=s[o];let c,h;c="mean"===n?0===o?new nL({windowSize:u,inSize:a,batchSize:t.shape[0],outSize:l},a):new nL({windowSize:u,inSize:a,batchSize:t.shape[0],outSize:l}):new rL({windowSize:u,inSize:a,batchSize:t.shape[0],outSize:l},n),h=i,i=r.runWebGLProgram(c,[i],e),h.dataId!==t.dataId&&r.disposeIntermediateTensorInfo(h)}return i}function Oc(t,e,n){const r=gt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new iL(t.shape,e):new sL(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}function Ic(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r;return((t,e,n,r)=>{const s=e,i=t.shape.length,o=G(s,t.shape);let a=o;const u=er(a,i),l=null!=u;let c=t;l&&(c=Oc(t,u,r),a=rr(a.length,i)),tr("sum",a,i);const[h,f]=Zn(c.shape,a);let d=h;n&&(d=Qn(h,o));const p=P(f),m=Rc({inputs:{x:c},attrs:{shape:[P(t.shape)/p,p]},backend:r}),y=Ac(m,se(t.dtype),"sum",r),b=Rc({inputs:{x:y},attrs:{shape:d},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(y),l&&r.disposeIntermediateTensorInfo(c),b})(s,i,o,n)}function Fc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{perm:i}=r,o=n,a=s.shape.length,u=new Array(a);for(let c=0;c<u.length;c++)u[c]=s.shape[i[c]];let l;if(o.shouldExecuteOnCPU([s])){const t=o.texData.get(s.dataId).values,e=wD(t,s.shape,s.dtype,i,u);l=o.makeTensorInfo(u,s.dtype),o.texData.get(l.dataId).values=e}else l=Oc(s,i,o);return l}function Mc({a:t,b:e,transposeA:n,transposeB:r,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:u=null}){const l=t.shape.length,c=e.shape.length,h=n?t.shape[l-2]:t.shape[l-1],f=r?e.shape[c-1]:e.shape[c-2],d=n?t.shape[l-1]:t.shape[l-2],p=r?e.shape[c-2]:e.shape[c-1],m=t.shape.slice(0,-2),y=e.shape.slice(0,-2),b=P(m),g=P(y),w=ln(t.shape.slice(0,-2),e.shape.slice(0,-2)).concat([d,p]);F(h===f,()=>`Error in matMul: inner shapes (${h}) and (${f}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${r} must match.`);const x=n?[b,h,d]:[b,d,h],v=r?[g,p,f]:[g,f,p],$=Rc({inputs:{x:t},backend:s,attrs:{shape:x}}),k=Rc({inputs:{x:e},backend:s,attrs:{shape:v}}),N=[$,k],C=Math.max(b,g),S=n?$.shape[1]:$.shape[2],E=null!=i,T=null!=o,_="leakyrelu"===u,R=null!=u?Tc(u,!0):null;let A;if(1!==d&&1!==p||1e3>=S||!1!==(E||T||_||null!=R)){const u=re(t.dtype,e.dtype),l=new JD(x,v,[C,d,p],n,r,E,R,T,_),c=[$,k];if(null!=i&&c.push(i),T&&c.push(o),_){const t=s.makeTensorInfo([],"float32",Ut(a,"float32"));c.push(t),N.push(t)}A=s.runWebGLProgram(l,c,u)}else{let t=$,e=k;n&&(t=Fc({inputs:{x:$},backend:s,attrs:{perm:[0,2,1]}}),N.push(t)),r&&(e=Fc({inputs:{x:k},backend:s,attrs:{perm:[0,2,1]}}),N.push(e));const i=1===p;let o=t;1!==p&&(o=Rc({inputs:{x:t},backend:s,attrs:{shape:[C,S,1]}}),N.push(o));const a=1===p?2:1;let u=e;i&&(u=Rc({inputs:{x:e},backend:s,attrs:{shape:[C,1,S]}}),N.push(u));const l=_c({inputs:{a:o,b:u},backend:s});A=Ic({inputs:{x:l},backend:s,attrs:{axis:a,keepDims:!0}}),N.push(l)}const O=Rc({inputs:{x:A},backend:s,attrs:{shape:w}});N.push(A);for(const I of N)s.disposeIntermediateTensorInfo(I);return O}function Dc(t,e,n,r=null){let s=e.shape[0],i=e.shape[1];null!=r&&(s=r.shape[0],i=r.shape[1]);const o=qr(i),a={windowSize:o,inSize:i,batchSize:s,outSize:Math.ceil(i/o)},u=new kL(a,n,null==r),l=[e];null!=r&&l.push(r);const c=t.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const h=Dc(t,e,n,c);return t.disposeIntermediateTensorInfo(c),h}function Lc(t,e,n,r=null){const s=null!=r?r.shape:e.shape,i=qr(s[s.length-1]),o=new NL(s,i,n,null==r),a=null==r?[e]:[e,r],u=t.runWebGLProgram(o,a,"int32");if(u.shape.length===e.shape.length){const r=Lc(t,e,n,u);return t.disposeIntermediateTensorInfo(u),r}return u}function Pc(t,e,n,r){const s=[n];if(tr("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,e.shape.length),!gt().getBool("WEBGL_PACK_REDUCE")||2>=e.shape.length){const n=[],i=t.texData.get(e.dataId);let o=e;null!==i&&i.isPacked&&(o=t.unpackTensor(e),n.push(o));const[a,u]=Zn(o.shape,s),l=P(u),c=Rc({inputs:{x:o},backend:t,attrs:{shape:[-1,l]}});n.push(c);const h=Dc(t,c,r);n.push(h);const f=Rc({inputs:{x:h},backend:t,attrs:{shape:a}});return n.forEach(e=>t.disposeIntermediateTensorInfo(e)),f}return Lc(t,e,r)}function Vc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:i,size:o}=r,[a,u]=Tn(s,i,o);if(yn(s,a,u),0===P(u))return n.makeTensorInfo(u,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const t=n.texData.get(s.dataId),e=aD(t.values,a,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,e)}const{isPacked:l}=n.texData.get(s.dataId),c=Sn(s.shape,a,u);if(l||!c){const t=gt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new YL(u):new JL(u),e=[a];return n.runWebGLProgram(t,[s],s.dtype,e)}return n.uploadToGPU(s.dataId),((t,e,n,r)=>{const s=r.texData.get(t.dataId),i=r.makeTensorInfo(n,t.dtype),o=r.texData.get(i.dataId);Object.assign(o,s),o.refCount=1,o.shape=n,o.dtype=t.dtype;let a=En(e,at(t.shape));s.slice&&(a+=s.slice.flatOffset),o.slice={flatOffset:a,origDataId:s.slice&&s.slice.origDataId||t.dataId};const u=r.dataRefCount.get(o.slice.origDataId)||1;return r.dataRefCount.set(o.slice.origDataId,u+1),i})(s,a,u,n)}function Bc(t){const{inputs:e,backend:n}=t,{input:r}=e;return Nc({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}function zc(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}function Wc(t,e,n){const r=t.indexOf(e);return t.map((t,e)=>e===r?`${t} - ${n}`:t).join()}function jc(t){const{inputs:e,backend:n}=t,{input:r}=e;return Nc({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}function Uc(t,e,n){const r=t[0].dtype;if("complex64"===r){const r=t.map(t=>Bc({inputs:{input:t},backend:n})),s=t.map(t=>jc({inputs:{input:t},backend:n})),i=Uc(r,e,n),o=Uc(s,e,n),a=Cc({inputs:{real:i,imag:o},backend:n});return r.forEach(t=>n.disposeIntermediateTensorInfo(t)),s.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),a}let s=n.shouldExecuteOnCPU(t);if("string"===r&&(s=!0),s){const s=t.map(t=>{const r=P(t.shape.slice(e));return Rc({inputs:{x:t},backend:n,attrs:{shape:[-1,r]}})}),i=s.map(t=>({vals:n.readSync(t.dataId),shape:t.shape})),o=zr(s.map(t=>t.shape),1),a=1===s[0].shape[0],u=FM(i,o,r,a),l=zr(t.map(t=>t.shape),e),c=n.makeTensorInfo(l,r,u);return s.forEach(t=>n.disposeIntermediateTensorInfo(t)),c}const i=gt().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(t.length>i){const r=[];for(let o=0;o<t.length;o+=i){const s=t.slice(o,o+i);r.push(Uc(s,e,n))}const s=Uc(r,e,n);for(const t of r)n.disposeIntermediateTensorInfo(t);return s}if(gt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].shape.length>1){const s=new mP(t.map(t=>t.shape),e);return n.runWebGLProgram(s,t,r)}const{tensors2D:o,outShape:a}=((t,e,n)=>{const r=zr(t.map(t=>t.shape),e);return{tensors2D:t.map(t=>Rc({inputs:{x:t},attrs:{shape:[-1,P(t.shape.slice(e))]},backend:n})),outShape:r}})(t,e,n),u=new pP(o.map(t=>t.shape)),l=n.runWebGLProgram(u,o,r);o.forEach(t=>n.disposeIntermediateTensorInfo(t));const c=Rc({inputs:{x:l},attrs:{shape:a},backend:n});return n.disposeIntermediateTensorInfo(l),c}function Gc(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,i=G(s,e[0].shape)[0];Br(e.map(t=>t.shape),i);const o=zr(e.map(t=>t.shape),i);if(0===P(o))return n.makeTensorInfo(o,e[0].dtype,[]);const a=e.filter(t=>P(t.shape)>0);return 1===a.length?Nc({inputs:{x:a[0]},backend:n}):Uc(a,i,n)}function qc(t,e){const n=t.length;return 3>n?!e&&1===n&&t[0]>1?[t[0],1]:null:e?[...t.slice(0,-3),t[n-3]*t[n-2],t[n-1]]:[...t.slice(0,-3),t[n-3],t[n-2]*t[n-1]]}function Hc({x:t,filter:e,convInfo:n,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:a=null}){const u=t.shape,l=r.texData.get(t.dataId),c=n.inChannels,h=u[0]*u[1]*u[2],f=n.outChannels,d="channelsLast"===n.dataFormat,p=!1;let m;const y=[];if(null!=i){const t=qc(i.shape,d);null!=t&&(i=Rc({inputs:{x:i},backend:r,attrs:{shape:t}}),y.push(i))}if(null!=s){const t=qc(s.shape,d);null!=t&&(s=Rc({inputs:{x:s},backend:r,attrs:{shape:t}}),y.push(s))}if((1!==h&&1!==f||1e3>=c)&&l.isPacked&&d&&null!=l.texture&&u[2]%2!=0&&V(l.shape.slice(-3),u.slice(-3))){const c=u[0]*u[1]*(u[2]+1),h={dataId:t.dataId,shape:[1,c,n.inChannels],dtype:t.dtype},f=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,F(ql(l.shape,h.shape),()=>`packed reshape ${l.shape} to ${h.shape} isn't free`);const d=Rc({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(d);const b=Mc({a:h,b:d,backend:r,transposeA:!1,transposeB:p,bias:s,activation:a,preluActivationWeights:i,leakyreluAlpha:o}),g=r.texData.get(b.dataId);F(g.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=f,g.shape=n.outShape,m=Nc({inputs:{x:b},backend:r}),m.shape=n.outShape,y.push(b)}else{const u=n.outHeight*n.outWidth,l=Rc({inputs:{x:t},backend:r,attrs:{shape:d?[n.batchSize,u,n.inChannels]:[n.batchSize,n.inChannels,u]}}),c=Rc({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=Mc({a:d?l:c,b:d?c:l,transposeA:!d,transposeB:p,backend:r,bias:s,activation:a,preluActivationWeights:i,leakyreluAlpha:o});m=Rc({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),y.push(l),y.push(c),y.push(h)}for(const b of y)r.disposeIntermediateTensorInfo(b);return m}function Xc({x:t,filter:e,convInfo:n,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:a=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:f,dataFormat:d}=n,p="channelsLast"===d,m=u*l*c,y=f*h,b=[n.batchSize,m,y],g=[];if(null!=i){const t=qc(i.shape,p);null!=t&&(i=Rc({inputs:{x:i},backend:r,attrs:{shape:t}}),g.push(i))}if(null!=s){const t=qc(s.shape,p);null!=t&&(s=Rc({inputs:{x:s},backend:r,attrs:{shape:t}}),g.push(s))}const w=Rc({inputs:{x:e},backend:r,attrs:{shape:[1,m,P(e.shape)/m]}});g.push(w);const x=new vP(b,n),v=[t.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],$=r.runWebGLProgram(x,[t],"float32",v),k=Rc({inputs:{x:$},backend:r,attrs:{shape:b}});g.push($),g.push(k);const N=null!=s,C=null!=i,S="leakyrelu"===a,E=a?Tc(a,!0):null,T=new JD(p?k.shape:w.shape,p?w.shape:k.shape,p?[n.batchSize,y,n.outChannels]:[n.batchSize,n.outChannels,y],!0,!1,N,E,C,S),_=p?[k,w]:[w,k];if(s&&_.push(s),C&&_.push(i),S){const t=r.makeTensorInfo([],"float32",Ut(o,"float32"));_.push(t),g.push(t)}const R=r.runWebGLProgram(T,_,"float32"),A=Rc({inputs:{x:R},backend:r,attrs:{shape:n.outShape}});g.push(R);for(const O of g)r.disposeIntermediateTensorInfo(O);return A}function Jc(t,e,n){if(1===t)return`${e}`;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}function Kc(t,e,n){if(1===t)return`${e}`;if(2===t)return`${e}.y`;if(3===t)return`${e}.z`;if(4===t)return`${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}function Yc(t,e,n,r,s,i){const o=e.shape.length,a=er([r],o);let u=e;null!=a&&(u=Fc({inputs:{x:e},backend:n,attrs:{perm:a}}));const l=rr(1,o)[0];if(l!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${r}`);const c=u.shape[l];let h=Nc({inputs:{x:u},backend:n});for(let f=0;f<=Math.ceil(Math.log2(c))-1;f++){const e=new BP(t,u.shape,!1,i),r=[[f]],s=h;h=n.runWebGLProgram(e,[h],h.dtype,r),n.disposeIntermediateTensorInfo(s)}if(s){const e=new BP(t,u.shape,s,i),r=h;h=n.runWebGLProgram(e,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=a){const t=Fc({inputs:{x:h},backend:n,attrs:{perm:nr(a)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),t}return h}function Zc(t){const{inputs:e,attrs:n,backend:r}=t,{dim:s}=n,{input:i}=e,o=i.shape.length,a=i.shape.slice();let u=s;return 0>s&&(F(s>=-(o+1),()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),u=o+s+1),a.splice(u,0,1),Rc({inputs:{x:i},backend:r,attrs:{shape:a}})}function Qc(t,e,n){const r=n.texData.get(t.dataId),s=P(t.shape),i=t.shape[t.shape.length-1],o=Rc({inputs:{x:t},backend:n,attrs:{shape:[s/i,i]}}),a=o.shape,u=new bV("real",a,e),l=new bV("imag",a,e),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:a},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:a}],h=n.runWebGLProgram(u,c,"float32"),f=n.runWebGLProgram(l,c,"float32"),d=Cc({inputs:{real:h,imag:f},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f);const p=Rc({inputs:{x:d},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(d),p}function th(t){const{backend:e,attrs:n}=t,{shape:r,value:s}=n;let{dtype:i}=n;if(i=i||st(s),"string"===i){const t=X(i,P(r));return t.fill(s),e.makeTensorInfo(r,i,t)}{const t=new wV(r,s),n=[[s]];return e.runWebGLProgram(t,[],i,n)}}function eh(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,indices:i}=e,{axis:o,batchDims:a}=r,u=G(o,s.shape)[0];if(gt().get("DEBUG")){const t=n.readSync(i.dataId),e=s.shape[u];for(let n=0;n<t.length;++n){const r=t[n];F(e-1>=r&&r>=0,()=>`GatherV2: the index value ${r} is not in [0, ${e-1}]`)}}const l=Ss(s,i,u,a),c=P(i.shape),h=[],f=Rc({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),d=Rc({inputs:{x:i},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});h.push(f),h.push(d);const p=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,i])||"string"===s.dtype){const t=n.bufferSync(d),e=n.bufferSync(f),r=BM(e,t,p);return h.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const m=new LV(f.shape,p),y=n.runWebGLProgram(m,[f,d],f.dtype);h.push(y);const b=Rc({inputs:{x:y},backend:n,attrs:{shape:l.outputShape}});return h.forEach(t=>n.disposeIntermediateTensorInfo(t)),b}function nh(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reductionIndices:i,keepDims:o}=r,a=s.shape.length,u=G(i,s.shape);let l=u;const c=er(l,a),h=null!=c,f=n.shouldExecuteOnCPU([s]);let d=s;if(h){if(f){const t=n.texData.get(d.dataId).values,e=new Array(a);for(let n=0;n<e.length;n++)e[n]=s.shape[c[n]];const r=wD(t,s.shape,s.dtype,c,e);d=n.makeTensorInfo(e,s.dtype),n.texData.get(d.dataId).values=r}else d=Oc(s,c,n);l=rr(l.length,a)}tr("max",l,a);const[p,m]=Zn(d.shape,l);let y,b=p;if(o&&(b=Qn(p,u)),f){const t=n.texData.get(d.dataId).values,e=HM(t,P(m),b,s.dtype);y=n.makeTensorInfo(b,s.dtype),n.texData.get(y.dataId).values=e}else y=((t,e,n,r)=>{const s=P(e),i=Rc({inputs:{x:t},attrs:{shape:[P(t.shape)/s,s]},backend:r}),o=Ac(i,t.dtype,"max",r),a=Rc({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),a})(d,m,b,n);return h&&n.disposeIntermediateTensorInfo(d),y}function rh(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{dim:i}=r,o=G([i],s.shape),a=nh({inputs:{x:s},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),u=Qn(a.shape,o),l=Rc({inputs:{x:a},backend:n,attrs:{shape:u}}),c=VB({inputs:{a:s,b:l},backend:n}),h=hV({inputs:{x:c},backend:n}),f=Ic({inputs:{x:h},backend:n,attrs:{axis:o,keepDims:!1}}),d=Rc({inputs:{x:f},backend:n,attrs:{shape:u}}),p=DB({inputs:{a:h,b:d},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(d),p}function sh(t){const{inputs:e,backend:n}=t,{x:r}=e;if("complex64"===r.dtype){const t=Bc({inputs:{input:r},backend:n}),e=sh({inputs:{x:t},backend:n}),s=jc({inputs:{input:r},backend:n}),i=sh({inputs:{x:s},backend:n}),o=Cc({inputs:{real:e,imag:i},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}return th({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}function ih(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reps:i}=r;if("string"===s.dtype||s.shape.length>5){const t=n.readSync(s.dataId),e="string"===s.dtype?t.map(t=>Jt(t)):t,r=We(s.shape,s.dtype,e),o=bD(r,i);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new SW(s.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}function oh(t,e){null!==e&&t.disposeIntermediateTensorInfo(e)}function ah(t){let e=1;for(;t>e;)e*=2;return e}function uh(t){return!!t.constructor&&"function"==typeof t.constructor.isBuffer&&t.constructor.isBuffer(t)}function lh(t,e){return t[0]-e[0]}function ch(){var t,e=this.stride,n=new Array(e.length);for(t=0;t<n.length;++t)n[t]=[Math.abs(e[t]),t];n.sort(lh);var r=new Array(n.length);for(t=0;t<r.length;++t)r[t]=n[t][1];return r}function hh(t,e){var n=["View",e,"d",t].join("");0>e&&(n="View_Nil"+t);var r="generic"===t;if(-1===e){var s="function "+n+"(a){this.data=a;};var proto="+n+".prototype;proto.dtype='"+t+"';proto.index=function(){return -1};proto.size=0;proto.dimension=-1;proto.shape=proto.stride=proto.order=[];proto.lo=proto.hi=proto.transpose=proto.step=function(){return new "+n+"(this.data);};proto.get=proto.set=function(){};proto.pick=function(){return null};return function construct_"+n+"(a){return new "+n+"(a);}";return new Function(s)()}if(0===e)return s="function "+n+"(a,d) {this.data = a;this.offset = d};var proto="+n+".prototype;proto.dtype='"+t+"';proto.index=function(){return this.offset};proto.dimension=0;proto.size=1;proto.shape=proto.stride=proto.order=[];proto.lo=proto.hi=proto.transpose=proto.step=function "+n+"_copy() {return new "+n+"(this.data,this.offset)};proto.pick=function "+n+"_pick(){return TrivialArray(this.data);};proto.valueOf=proto.get=function "+n+"_get(){return "+(r?"this.data.get(this.offset)":"this.data[this.offset]")+"};proto.set=function "+n+"_set(v){return "+(r?"this.data.set(this.offset,v)":"this.data[this.offset]=v")+"};return function construct_"+n+"(a,b,c,d){return new "+n+"(a,d)}",new Function("TrivialArray",s)(UW[t][0]);s=["'use strict'"];var i=WW(e),o=i.map(t=>"i"+t),a="this.offset+"+i.map(t=>"this.stride["+t+"]*i"+t).join("+"),u=i.map(t=>"b"+t).join(","),l=i.map(t=>"c"+t).join(",");s.push("function "+n+"(a,"+u+","+l+",d){this.data=a","this.shape=["+u+"]","this.stride=["+l+"]","this.offset=d|0}","var proto="+n+".prototype","proto.dtype='"+t+"'","proto.dimension="+e),s.push("Object.defineProperty(proto,'size',{get:function "+n+"_size(){return "+i.map(t=>"this.shape["+t+"]").join("*"),"}})"),1===e?s.push("proto.order=[0]"):(s.push("Object.defineProperty(proto,'order',{get:"),4>e?(s.push("function "+n+"_order(){"),2===e?s.push("return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})"):3===e&&s.push("var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);if(s0>s1){if(s1>s2){return [2,1,0];}else if(s0>s2){return [1,2,0];}else{return [1,0,2];}}else if(s0>s2){return [2,0,1];}else if(s2>s1){return [0,1,2];}else{return [0,2,1];}}})")):s.push("ORDER})")),s.push("proto.set=function "+n+"_set("+o.join(",")+",v){"),r?s.push("return this.data.set("+a+",v)}"):s.push("return this.data["+a+"]=v}"),s.push("proto.get=function "+n+"_get("+o.join(",")+"){"),r?s.push("return this.data.get("+a+")}"):s.push("return this.data["+a+"]}"),s.push("proto.index=function "+n+"_index(",o.join(),"){return "+a+"}"),s.push("proto.hi=function "+n+"_hi("+o.join(",")+"){return new "+n+"(this.data,"+i.map(t=>["(typeof i",t,"!=='number'||i",t,"<0)?this.shape[",t,"]:i",t,"|0"].join("")).join(",")+","+i.map(t=>"this.stride["+t+"]").join(",")+",this.offset)}");var c=i.map(t=>"a"+t+"=this.shape["+t+"]"),h=i.map(t=>"c"+t+"=this.stride["+t+"]");s.push("proto.lo=function "+n+"_lo("+o.join(",")+"){var b=this.offset,d=0,"+c.join(",")+","+h.join(","));for(var f=0;e>f;++f)s.push("if(typeof i"+f+"==='number'&&i"+f+">=0){d=i"+f+"|0;b+=c"+f+"*d;a"+f+"-=d}");for(s.push("return new "+n+"(this.data,"+i.map(t=>"a"+t).join(",")+","+i.map(t=>"c"+t).join(",")+",b)}"),s.push("proto.step=function "+n+"_step("+o.join(",")+"){var "+i.map(t=>"a"+t+"=this.shape["+t+"]").join(",")+","+i.map(t=>"b"+t+"=this.stride["+t+"]").join(",")+",c=this.offset,d=0,ceil=Math.ceil"),f=0;e>f;++f)s.push("if(typeof i"+f+"==='number'){d=i"+f+"|0;if(d<0){c+=b"+f+"*(a"+f+"-1);a"+f+"=ceil(-a"+f+"/d)}else{a"+f+"=ceil(a"+f+"/d)}b"+f+"*=d}");s.push("return new "+n+"(this.data,"+i.map(t=>"a"+t).join(",")+","+i.map(t=>"b"+t).join(",")+",c)}");var d=new Array(e),p=new Array(e);for(f=0;e>f;++f)d[f]="a[i"+f+"]",p[f]="b[i"+f+"]";for(s.push("proto.transpose=function "+n+"_transpose("+o+"){"+o.map((t,e)=>t+"=("+t+"===undefined?"+e+":"+t+"|0)").join(";"),"var a=this.shape,b=this.stride;return new "+n+"(this.data,"+d.join(",")+","+p.join(",")+",this.offset)}"),s.push("proto.pick=function "+n+"_pick("+o+"){var a=[],b=[],c=this.offset"),f=0;e>f;++f)s.push("if(typeof i"+f+"==='number'&&i"+f+">=0){c=(c+this.stride["+f+"]*i"+f+")|0}else{a.push(this.shape["+f+"]);b.push(this.stride["+f+"])}");return s.push("var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}"),s.push("return function construct_"+n+"(data,shape,stride,offset){return new "+n+"(data,"+i.map(t=>"shape["+t+"]").join(",")+","+i.map(t=>"stride["+t+"]").join(",")+",offset)}"),new Function("CTOR_LIST","ORDER",s.join("\n"))(UW[t],ch)}function fh(t,e,n,r){for(var s=t[e++],i=1<<s,o=i+1,a=o+1,u=s+1,l=(1<<u)-1,c=0,h=0,f=0,d=t[e++],p=new Int32Array(4096),m=null;;){for(;16>c&&0!==d;)h|=t[e++]<<c,c+=8,1===d?d=t[e++]:--d;if(u>c)break;var y=h&l;if(h>>=u,c-=u,y!==i){if(y===o)break;for(var b=a>y?y:m,g=0,w=b;w>i;)w=p[w]>>8,++g;var x=w;if(f+g+(b!==y?1:0)>r)return;n[f++]=x;var v=f+=g;for(b!==y&&(n[f++]=x),w=b;g--;)w=p[w],n[--v]=255&w,w>>=8;null!==m&&4096>a&&(p[a++]=m<<8|x,a>=l+1&&12>u&&(++u,l=l<<1|1)),m=y}else a=o+1,l=(1<<(u=s+1))-1,m=null}return n}function dh(t,e,n){var r,s,i=t.length,o=e.arrayArgs.length,a=e.indexArgs.length>0,u=[],l=[],c=0,h=0;for(r=0;i>r;++r)l.push(["i",r,"=0"].join(""));for(s=0;o>s;++s)for(r=0;i>r;++r)h=c,c=t[r],0===r?l.push(["d",s,"s",r,"=t",s,"p",c].join("")):l.push(["d",s,"s",r,"=(t",s,"p",c,"-s",h,"*t",s,"p",h,")"].join(""));for(l.length>0&&u.push("var "+l.join(",")),r=i-1;r>=0;--r)c=t[r],u.push(["for(i",r,"=0;i",r,"<s",c,";++i",r,"){"].join(""));for(u.push(n),r=0;i>r;++r){for(h=c,c=t[r],s=0;o>s;++s)u.push(["p",s,"+=d",s,"s",r].join(""));a&&(r>0&&u.push(["index[",h,"]-=s",h].join("")),u.push(["++index[",c,"]"].join(""))),u.push("}")}return u.join("\n")}function ph(t,e,n){for(var r=t.body,s=[],i=[],o=0;o<t.args.length;++o){var a=t.args[o];if(a.count>0){var u=new RegExp(a.name,"g"),l="",c=e.arrayArgs.indexOf(o);switch(e.argTypes[o]){case"offset":var h=e.offsetArgIndex.indexOf(o);c=e.offsetArgs[h].array,l="+q"+h;case"array":l="p"+c+l;var f="l"+o,d="a"+c;if(0===e.arrayBlockIndices[c])1===a.count?"generic"===n[c]?a.lvalue?(s.push(["var ",f,"=",d,".get(",l,")"].join("")),r=r.replace(u,f),i.push([d,".set(",l,",",f,")"].join(""))):r=r.replace(u,[d,".get(",l,")"].join("")):r=r.replace(u,[d,"[",l,"]"].join("")):"generic"===n[c]?(s.push(["var ",f,"=",d,".get(",l,")"].join("")),r=r.replace(u,f),a.lvalue&&i.push([d,".set(",l,",",f,")"].join(""))):(s.push(["var ",f,"=",d,"[",l,"]"].join("")),r=r.replace(u,f),a.lvalue&&i.push([d,"[",l,"]=",f].join("")));else{for(var p=[a.name],m=[l],y=0;y<Math.abs(e.arrayBlockIndices[c]);y++)p.push("\\s*\\[([^\\]]+)\\]"),m.push("$"+(y+1)+"*t"+c+"b"+y);if(u=new RegExp(p.join(""),"g"),l=m.join("+"),"generic"===n[c])throw new Error("cwise: Generic arrays not supported in combination with blocks!");r=r.replace(u,[d,"[",l,"]"].join(""))}break;case"scalar":r=r.replace(u,"Y"+e.scalarArgs.indexOf(o));break;case"index":r=r.replace(u,"index");break;case"shape":r=r.replace(u,"shape")}}}return[s.join("\n"),r,i.join("\n")].join("\n").trim()}function mh(t){for(var e=new Array(t.length),n=!0,r=0;r<t.length;++r){var s=t[r],i=s.match(/\d+/);i=i?i[0]:"",0===s.charAt(0)?e[r]="u"+s.charAt(1)+i:e[r]=s.charAt(0)+i,r>0&&(n=n&&e[r]===e[r-1])}return n?e[0]:e.join("")}function yh(){this.argTypes=[],this.shimArgs=[],this.arrayArgs=[],this.arrayBlockIndices=[],this.scalarArgs=[],this.offsetArgs=[],this.offsetArgIndex=[],this.indexArgs=[],this.shapeArgs=[],this.funcName="",this.pre=null,this.body=null,this.post=null,this.debug=!1}function bh(){bh.init.call(this)}function gh(t){if("function"!=typeof t)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof t)}function wh(t){return void 0===t.N?bh.defaultMaxListeners:t.N}function xh(t,e,n,r){var s,i,o;if(gh(n),void 0===(i=t.C)?(i=t.C=Object.create(null),t.T=0):(void 0!==i.newListener&&(t.emit("newListener",e,n.listener?n.listener:n),i=t.C),o=i[e]),void 0===o)o=i[e]=n,++t.T;else if("function"==typeof o?o=i[e]=r?[n,o]:[o,n]:r?o.unshift(n):o.push(n),(s=wh(t))>0&&o.length>s&&!o.warned){o.warned=!0;var a=new Error("Possible EventEmitter memory leak detected. "+o.length+" "+String(e)+" listeners added. Use emitter.setMaxListeners() to increase limit");a.name="MaxListenersExceededWarning",a.emitter=t,a.type=e,a.count=o.length,console&&console.warn}return t}function vh(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function $h(t,e,n){var r={fired:!1,wrapFn:void 0,target:t,type:e,listener:n},s=vh.bind(r);return s.listener=n,r.wrapFn=s,s}function kh(t,e,n){var r=t.C;if(void 0===r)return[];var s=r[e];return void 0===s?[]:"function"==typeof s?n?[s.listener||s]:[s]:n?(t=>{for(var e=new Array(t.length),n=0;n<e.length;++n)e[n]=t[n].listener||t[n];return e})(s):Ch(s,s.length)}function Nh(t){var e=this.C;if(void 0!==e){var n=e[t];if("function"==typeof n)return 1;if(void 0!==n)return n.length}return 0}function Ch(t,e){for(var n=new Array(e),r=0;e>r;++r)n[r]=t[r];return n}function Sh(t,e,n,r){if("function"==typeof t.on)r.once?t.once(e,n):t.on(e,n);else{if("function"!=typeof t.addEventListener)throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof t);t.addEventListener(e,function s(i){r.once&&t.removeEventListener(e,s),n(i)})}}function Eh(){return oj?ij:(oj=1,ij=rj.EventEmitter)}function Th(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=t.indexOf("=");return-1===n&&(n=e),[n,n===e?0:4-n%4]}function _h(t){return cj[t>>18&63]+cj[t>>12&63]+cj[t>>6&63]+cj[63&t]}function Rh(t,e,n){for(var r,s=[],i=e;n>i;i+=3)r=(t[i]<<16&16711680)+(t[i+1]<<8&65280)+(255&t[i+2]),s.push(_h(r));return s.join("")}function Ah(){function t(t,r){n(t,r),e(t)}function e(t){t._&&!t._.emitClose||t.R&&!t.R.emitClose||t.emit("close")}function n(t,e){t.emit("error",e)}return gj?bj:(gj=1,bj={destroy(r,s){var i=this,o=this.R&&this.R.destroyed,a=this._&&this._.destroyed;return o||a?(s?s(r):r&&(this._?this._.errorEmitted||(this._.errorEmitted=!0,process.nextTick(n,this,r)):process.nextTick(n,this,r)),this):(this.R&&(this.R.destroyed=!0),this._&&(this._.destroyed=!0),this.A(r||null,n=>{!s&&n?i._?i._.errorEmitted?process.nextTick(e,i):(i._.errorEmitted=!0,process.nextTick(t,i,n)):process.nextTick(t,i,n):s?(process.nextTick(e,i),s(n)):process.nextTick(e,i)}),this)},undestroy(){this.R&&(this.R.destroyed=!1,this.R.reading=!1,this.R.ended=!1,this.R.endEmitted=!1),this._&&(this._.destroyed=!1,this._.ended=!1,this._.ending=!1,this._.finalCalled=!1,this._.prefinished=!1,this._.finished=!1,this._.errorEmitted=!1)},errorOrDestroy(t,e){var n=t.R,r=t._;n&&n.autoDestroy||r&&r.autoDestroy?t.destroy(e):t.emit("error",e)}})}function Oh(){function t(t,e,r){r||(r=Error);var s=function(t){function n(n,r,s){return t.call(this,((t,n,r)=>"string"==typeof e?e:e(t,n,r))(n,r,s))||this}var r,s;return s=t,(r=n).prototype=Object.create(s.prototype),r.prototype.constructor=r,r.__proto__=s,n}(r);s.prototype.name=r.name,s.prototype.code=t,n[t]=s}function e(t,e){if(Array.isArray(t)){var n=t.length;return t=t.map(t=>String(t)),n>2?"one of ".concat(e," ").concat(t.slice(0,n-1).join(", "),", or ")+t[n-1]:2===n?"one of ".concat(e," ").concat(t[0]," or ").concat(t[1]):"of ".concat(e," ").concat(t[0])}return"of ".concat(e," ").concat(String(t))}if(xj)return Gj;xj=1;var n={};return t("ERR_INVALID_OPT_VALUE",(t,e)=>'The value "'+e+'" is invalid for option "'+t+'"',TypeError),t("ERR_INVALID_ARG_TYPE",(t,n,r)=>{var s,i,o,a;if("string"==typeof n&&"not "===n.substr(0,4)?(s="must not be",n=n.replace(/^not /,"")):s="must be",((t,e,n)=>((void 0===n||n>t.length)&&(n=t.length)," argument"===t.substring(n-9,n)))(t))i="The ".concat(t," ").concat(s," ").concat(e(n,"type"));else{var u=("number"!=typeof a&&(a=0),a+1>(o=t).length||-1===o.indexOf(".",a)?"argument":"property");i='The "'.concat(t,'" ').concat(u," ").concat(s," ").concat(e(n,"type"))}return i+". Received type ".concat(typeof r)},TypeError),t("ERR_STREAM_PUSH_AFTER_EOF","stream.push() after EOF"),t("ERR_METHOD_NOT_IMPLEMENTED",t=>"The "+t+" method is not implemented"),t("ERR_STREAM_PREMATURE_CLOSE","Premature close"),t("ERR_STREAM_DESTROYED",t=>"Cannot call "+t+" after a stream was destroyed"),t("ERR_MULTIPLE_CALLBACK","Callback called multiple times"),t("ERR_STREAM_CANNOT_PIPE","Cannot pipe, not readable"),t("ERR_STREAM_WRITE_AFTER_END","write after end"),t("ERR_STREAM_NULL_VALUES","May not write null values to stream",TypeError),t("ERR_UNKNOWN_ENCODING",t=>"Unknown encoding: "+t,TypeError),t("ERR_STREAM_UNSHIFT_AFTER_END_EVENT","stream.unshift() after end event"),Gj.codes=n,Gj}function Ih(){if($j)return vj;$j=1;var t=Oh().codes.ERR_INVALID_OPT_VALUE;return vj={getHighWaterMark(e,n,r,s){var i=((t,e,n)=>null!=t.highWaterMark?t.highWaterMark:e?t[n]:null)(n,s,r);if(null!=i){if(!isFinite(i)||Math.floor(i)!==i||0>i)throw new t(s?r:"highWaterMark",i);return Math.floor(i)}return e.objectMode?16:16384}}}function Fh(){function t(t){try{if(!globalThis.localStorage)return!1}catch(n){return!1}var e=globalThis.localStorage[t];return null!=e&&"true"===String(e).toLowerCase()}return Nj||(Nj=1,kj=function(e,n){if(t("noDeprecation"))return e;var r=!1;return function(){if(!r){if(t("throwDeprecation"))throw new Error(n);t("traceDeprecation"),r=!0}return e.apply(this,arguments)}}),kj}function Mh(){function t(t){var e=this;this.next=null,this.entry=null,this.finish=()=>{((t,e)=>{var n=t.entry;for(t.entry=null;n;){var r=n.callback;e.pendingcb--,r(void 0),n=n.next}e.corkedRequestsFree.next=t})(e,t)}}function e(){}function n(e,n,r){c=c||Dh(),e=e||{},"boolean"!=typeof r&&(r=n instanceof c),this.objectMode=!!e.objectMode,r&&(this.objectMode=this.objectMode||!!e.writableObjectMode),this.highWaterMark=b(this,e,"writableHighWaterMark",r),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var s=!1===e.decodeStrings;this.decodeStrings=!s,this.defaultEncoding=e.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=t=>{((t,e)=>{var n=t._,r=n.sync,s=n.writecb;if("function"!=typeof s)throw new v;if((t=>{t.writing=!1,t.writecb=null,t.length-=t.writelen,t.writelen=0})(n),e)((t,e,n,r,s)=>{--e.pendingcb,n?(process.nextTick(s,r),process.nextTick(l,t,e),t._.errorEmitted=!0,E(t,r)):(s(r),t._.errorEmitted=!0,E(t,r),l(t,e))})(t,n,r,e,s);else{var u=a(n)||t.destroyed;u||n.corked||n.bufferProcessing||!n.bufferedRequest||o(t,n),r?process.nextTick(i,t,n,u,s):i(t,n,u,s)}})(n,t)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.emitClose=!1!==e.emitClose,this.autoDestroy=!!e.autoDestroy,this.bufferedRequestCount=0,this.corkedRequestsFree=new t(this)}function r(t){var e=this instanceof(c=c||Dh());if(!e&&!h.call(r,this))return new r(t);this._=new n(t,this,e),this.writable=!0,t&&("function"==typeof t.write&&(this.O=t.write),"function"==typeof t.writev&&(this.I=t.writev),"function"==typeof t.destroy&&(this.A=t.destroy),"function"==typeof t.final&&(this.F=t.final)),d.call(this)}function s(t,e,n,r,s,i,o){e.writelen=r,e.writecb=o,e.writing=!0,e.sync=!0,e.destroyed?e.onwrite(new k("write")):n?t.I(s,e.onwrite):t.O(s,i,e.onwrite),e.sync=!1}function i(t,e,n,r){n||((t,e)=>{0===e.length&&e.needDrain&&(e.needDrain=!1,t.emit("drain"))})(t,e),e.pendingcb--,r(),l(t,e)}function o(e,n){n.bufferProcessing=!0;var r=n.bufferedRequest;if(e.I&&r&&r.next){var i=n.bufferedRequestCount,o=new Array(i),a=n.corkedRequestsFree;a.entry=r;for(var u=0,l=!0;r;)o[u]=r,r.isBuf||(l=!1),r=r.next,u+=1;o.allBuffers=l,s(e,n,!0,n.length,o,"",a.finish),n.pendingcb++,n.lastBufferedRequest=null,a.next?(n.corkedRequestsFree=a.next,a.next=null):n.corkedRequestsFree=new t(n),n.bufferedRequestCount=0}else{for(;r;){var c=r.chunk,h=r.encoding,f=r.callback;if(s(e,n,!1,n.objectMode?1:c.length,c,h,f),r=r.next,n.bufferedRequestCount--,n.writing)break}null===r&&(n.lastBufferedRequest=null)}n.bufferedRequest=r,n.bufferProcessing=!1}function a(t){return t.ending&&0===t.length&&null===t.bufferedRequest&&!t.finished&&!t.writing}function u(t,e){t.F(n=>{e.pendingcb--,n&&E(t,n),e.prefinished=!0,t.emit("prefinish"),l(t,e)})}function l(t,e){var n=a(e);if(n&&(((t,e)=>{e.prefinished||e.finalCalled||("function"!=typeof t.F||e.destroyed?(e.prefinished=!0,t.emit("prefinish")):(e.pendingcb++,e.finalCalled=!0,process.nextTick(u,t,e)))})(t,e),0===e.pendingcb&&(e.finished=!0,t.emit("finish"),e.autoDestroy))){var r=t.R;(!r||r.autoDestroy&&r.endEmitted)&&t.destroy()}return n}if(Sj)return Cj;var c;Sj=1,Cj=r,r.WritableState=n;var h,f={deprecate:Fh()},d=Eh(),p=uj.Buffer,m=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof self?self:{}).Uint8Array||(()=>{}),y=Ah(),b=Ih().getHighWaterMark,g=Oh().codes,w=g.ERR_INVALID_ARG_TYPE,x=g.ERR_METHOD_NOT_IMPLEMENTED,v=g.ERR_MULTIPLE_CALLBACK,$=g.ERR_STREAM_CANNOT_PIPE,k=g.ERR_STREAM_DESTROYED,N=g.ERR_STREAM_NULL_VALUES,C=g.ERR_STREAM_WRITE_AFTER_END,S=g.ERR_UNKNOWN_ENCODING,E=y.errorOrDestroy;return aj(r,d),n.prototype.getBuffer=function(){for(var t=this.bufferedRequest,e=[];t;)e.push(t),t=t.next;return e},function(){try{Object.defineProperty(n.prototype,"buffer",{get:f.deprecate(function(){return this.getBuffer()},"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.","DEP0003")})}catch(t){}}(),"function"==typeof Symbol&&Symbol.hasInstance&&"function"==typeof Function.prototype[Symbol.hasInstance]?(h=Function.prototype[Symbol.hasInstance],Object.defineProperty(r,Symbol.hasInstance,{value(t){return!!h.call(this,t)||this===r&&t&&t._ instanceof n}})):h=function(t){return t instanceof this},r.prototype.pipe=function(){E(this,new $)},r.prototype.write=function(t,n,r){var i,o=this._,a=!1,u=!o.objectMode&&(i=t,p.isBuffer(i)||i instanceof m);return u&&!p.isBuffer(t)&&(t=(t=>p.from(t))(t)),"function"==typeof n&&(r=n,n=null),u?n="buffer":n||(n=o.defaultEncoding),"function"!=typeof r&&(r=e),o.ending?((t,e)=>{var n=new C;E(t,n),process.nextTick(e,n)})(this,r):(u||((t,e,n,r)=>{var s;return null===n?s=new N:"string"==typeof n||e.objectMode||(s=new w("chunk",["string","Buffer"],n)),!s||(E(t,s),process.nextTick(r,s),!1)})(this,o,t,r))&&(o.pendingcb++,a=((t,e,n,r,i,o)=>{if(!n){var a=((t,e,n)=>(t.objectMode||!1===t.decodeStrings||"string"!=typeof e||(e=p.from(e,n)),e))(e,r,i);r!==a&&(n=!0,i="buffer",r=a)}var u=e.objectMode?1:r.length;e.length+=u;var l=e.length<e.highWaterMark;if(l||(e.needDrain=!0),e.writing||e.corked){var c=e.lastBufferedRequest;e.lastBufferedRequest={chunk:r,encoding:i,isBuf:n,callback:o,next:null},c?c.next=e.lastBufferedRequest:e.bufferedRequest=e.lastBufferedRequest,e.bufferedRequestCount+=1}else s(t,e,!1,u,r,i,o);return l})(this,o,u,t,n,r)),a},r.prototype.cork=function(){this._.corked++},r.prototype.uncork=function(){var t=this._;t.corked&&(t.corked--,t.writing||t.corked||t.bufferProcessing||!t.bufferedRequest||o(this,t))},r.prototype.setDefaultEncoding=function(t){if("string"==typeof t&&(t=t.toLowerCase()),-1>=["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((t+"").toLowerCase()))throw new S(t);return this._.defaultEncoding=t,this},Object.defineProperty(r.prototype,"writableBuffer",{enumerable:!1,get(){return this._&&this._.getBuffer()}}),Object.defineProperty(r.prototype,"writableHighWaterMark",{enumerable:!1,get(){return this._.highWaterMark}}),r.prototype.O=(t,e,n)=>{n(new x("_write()"))},r.prototype.I=null,r.prototype.end=function(t,e,n){var r=this._;return"function"==typeof t?(n=t,t=null,e=null):"function"==typeof e&&(n=e,e=null),null!=t&&this.write(t,e),r.corked&&(r.corked=1,this.uncork()),r.ending||((t,e,n)=>{e.ending=!0,l(t,e),n&&(e.finished?process.nextTick(n):t.once("finish",n)),e.ended=!0,t.writable=!1})(this,r,n),this},Object.defineProperty(r.prototype,"writableLength",{enumerable:!1,get(){return this._.length}}),Object.defineProperty(r.prototype,"destroyed",{enumerable:!1,get(){return void 0!==this._&&this._.destroyed},set(t){this._&&(this._.destroyed=t)}}),r.prototype.destroy=y.destroy,r.prototype.M=y.undestroy,r.prototype.A=(t,e)=>{e(t)},Cj}function Dh(){function t(n){if(!(this instanceof t))return new t(n);s.call(this,n),i.call(this,n),this.allowHalfOpen=!0,n&&(!1===n.readable&&(this.readable=!1),!1===n.writable&&(this.writable=!1),!1===n.allowHalfOpen&&(this.allowHalfOpen=!1,this.once("end",e)))}function e(){this._.ended||process.nextTick(n,this)}function n(t){t.end()}if(Tj)return Ej;Tj=1;var r=Object.keys||(t=>{var e=[];for(var n in t)e.push(n);return e});Ej=t;var s=Bh(),i=Mh();aj(t,s);for(var o=r(i.prototype),a=0;a<o.length;a++){var u=o[a];t.prototype[u]||(t.prototype[u]=i.prototype[u])}return Object.defineProperty(t.prototype,"writableHighWaterMark",{enumerable:!1,get(){return this._.highWaterMark}}),Object.defineProperty(t.prototype,"writableBuffer",{enumerable:!1,get(){return this._&&this._.getBuffer()}}),Object.defineProperty(t.prototype,"writableLength",{enumerable:!1,get(){return this._.length}}),Object.defineProperty(t.prototype,"destroyed",{enumerable:!1,get(){return void 0!==this.R&&void 0!==this._&&this.R.destroyed&&this._.destroyed},set(t){void 0!==this.R&&void 0!==this._&&(this.R.destroyed=t,this._.destroyed=t)}}),Ej}function Lh(){function t(t){var e;switch(this.encoding=(t=>{var e=(t=>{if(!t)return"utf8";for(var e;;)switch(t){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return t;default:if(e)return;t=(""+t).toLowerCase(),e=!0}})(t);if("string"!=typeof e&&(l.isEncoding===c||!c(t)))throw new Error("Unknown encoding: "+t);return e||t})(t),this.encoding){case"utf16le":this.text=r,this.end=s,e=4;break;case"utf8":this.fillLast=n,e=4;break;case"base64":this.text=i,this.end=o,e=3;break;default:return this.write=a,void(this.end=u)}this.lastNeed=0,this.lastTotal=0,this.lastChar=l.allocUnsafe(e)}function e(t){return t>127?t>>5==6?2:t>>4==14?3:t>>3==30?4:t>>6==2?-1:-2:0}function n(t){var e=this.lastTotal-this.lastNeed,n=((t,e)=>{if(128!=(192&e[0]))return t.lastNeed=0,"\ufffd";if(t.lastNeed>1&&e.length>1){if(128!=(192&e[1]))return t.lastNeed=1,"\ufffd";if(t.lastNeed>2&&e.length>2&&128!=(192&e[2]))return t.lastNeed=2,"\ufffd"}})(this,t);return void 0!==n?n:this.lastNeed>t.length?(t.copy(this.lastChar,e,0,t.length),void(this.lastNeed-=t.length)):(t.copy(this.lastChar,e,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal))}function r(t,e){if((t.length-e)%2==0){var n=t.toString("utf16le",e);if(n){var r=n.charCodeAt(n.length-1);if(r>=55296&&56319>=r)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=t[t.length-2],this.lastChar[1]=t[t.length-1],n.slice(0,-1)}return n}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=t[t.length-1],t.toString("utf16le",e,t.length-1)}function s(t){var e=t&&t.length?this.write(t):"";if(this.lastNeed){var n=this.lastTotal-this.lastNeed;return e+this.lastChar.toString("utf16le",0,n)}return e}function i(t,e){var n=(t.length-e)%3;return 0===n?t.toString("base64",e):(this.lastNeed=3-n,this.lastTotal=3,1===n?this.lastChar[0]=t[t.length-1]:(this.lastChar[0]=t[t.length-2],this.lastChar[1]=t[t.length-1]),t.toString("base64",e,t.length-n))}function o(t){var e=t&&t.length?this.write(t):"";return this.lastNeed?e+this.lastChar.toString("base64",0,3-this.lastNeed):e}function a(t){return t.toString(this.encoding)}function u(t){return t&&t.length?this.write(t):""}if(Rj)return qj;Rj=1;var l=(_j||(_j=1,((t,e)=>{function n(t,e){for(var n in t)e[n]=t[n]}function r(t,e,n){return i(t,e,n)}var s=uj,i=s.Buffer;i.from&&i.alloc&&i.allocUnsafe&&i.allocUnsafeSlow?t.exports=s:(n(s,e),e.Buffer=r),r.prototype=Object.create(i.prototype),n(i,r),r.from=(t,e,n)=>{if("number"==typeof t)throw new TypeError("Argument must not be a number");return i(t,e,n)},r.alloc=(t,e,n)=>{if("number"!=typeof t)throw new TypeError("Argument must be a number");var r=i(t);return void 0!==e?"string"==typeof n?r.fill(e,n):r.fill(e):r.fill(0),r},r.allocUnsafe=t=>{if("number"!=typeof t)throw new TypeError("Argument must be a number");return i(t)},r.allocUnsafeSlow=t=>{if("number"!=typeof t)throw new TypeError("Argument must be a number");return s.SlowBuffer(t)}})(Hj,Hj.exports)),Hj.exports).Buffer,c=l.isEncoding||(t=>{switch((t=""+t)&&t.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}});return qj.StringDecoder=t,t.prototype.write=function(t){if(0===t.length)return"";var e,n;if(this.lastNeed){if(void 0===(e=this.fillLast(t)))return"";n=this.lastNeed,this.lastNeed=0}else n=0;return n<t.length?e?e+this.text(t,n):this.text(t,n):e||""},t.prototype.end=function(t){var e=t&&t.length?this.write(t):"";return this.lastNeed?e+"\ufffd":e},t.prototype.text=function(t,n){var r=((t,n,r)=>{var s=n.length-1;if(r>s)return 0;var i=e(n[s]);return 0>i?--s<r||-2===i?0:0>(i=e(n[s]))?--s<r||-2===i||0>(i=e(n[s]))?0:(i>0&&(2===i?i=0:t.lastNeed=i-3),i):(i>0&&(t.lastNeed=i-2),i):(i>0&&(t.lastNeed=i-1),i)})(this,t,n);if(!this.lastNeed)return t.toString("utf8",n);this.lastTotal=r;var s=t.length-(r-this.lastNeed);return t.copy(this.lastChar,0,s),t.toString("utf8",n,s)},t.prototype.fillLast=function(t){if(this.lastNeed<=t.length)return t.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);t.copy(this.lastChar,this.lastTotal-this.lastNeed,0,t.length),this.lastNeed-=t.length},qj}function Ph(){function t(){}if(Oj)return Aj;Oj=1;var e=Oh().codes.ERR_STREAM_PREMATURE_CLOSE;return Aj=function n(r,s,i){if("function"==typeof s)return n(r,null,s);s||(s={}),i=function(t){var e=!1;return function(){if(!e){e=!0;for(var n=arguments.length,r=new Array(n),s=0;n>s;s++)r[s]=arguments[s];t.apply(this,r)}}}(i||t);var o=s.readable||!1!==s.readable&&r.readable,a=s.writable||!1!==s.writable&&r.writable,u=()=>{r.writable||c()},l=r._&&r._.finished,c=()=>{a=!1,l=!0,o||i.call(r)},h=r.R&&r.R.endEmitted,f=()=>{o=!1,h=!0,a||i.call(r)},d=t=>{i.call(r,t)},p=()=>{var t;return o&&!h?(r.R&&r.R.ended||(t=new e),i.call(r,t)):a&&!l?(r._&&r._.ended||(t=new e),i.call(r,t)):void 0},m=()=>{r.req.on("finish",c)};return(t=>t.setHeader&&"function"==typeof t.abort)(r)?(r.on("complete",c),r.on("abort",p),r.req?m():r.on("request",m)):a&&!r._&&(r.on("end",u),r.on("close",u)),r.on("end",f),r.on("finish",c),!1!==s.error&&r.on("error",d),r.on("close",p),()=>{r.removeListener("complete",c),r.removeListener("abort",p),r.removeListener("request",m),r.req&&r.req.removeListener("finish",c),r.removeListener("end",u),r.removeListener("close",u),r.removeListener("finish",c),r.removeListener("end",f),r.removeListener("error",d),r.removeListener("close",p)}},Aj}function Vh(){function t(t,e,n){return(e=(t=>{var e=(t=>{if("object"!=typeof t||null===t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)})(t);return"symbol"==typeof e?e:String(e)})(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function e(t,e){return{value:t,done:e}}function n(t){var n=t[o];if(null!==n){var r=t[f].read();null!==r&&(t[c]=null,t[o]=null,t[a]=null,n(e(r,!1)))}}function r(t){process.nextTick(n,t)}if(Fj)return Ij;var s;Fj=1;var i=Ph(),o=Symbol("lastResolve"),a=Symbol("lastReject"),u=Symbol("error"),l=Symbol("ended"),c=Symbol("lastPromise"),h=Symbol("handlePromise"),f=Symbol("stream"),d=Object.getPrototypeOf(()=>{}),p=Object.setPrototypeOf((t(s={get stream(){return this[f]},next(){var t=this,n=this[u];if(null!==n)return Promise.reject(n);if(this[l])return Promise.resolve(e(void 0,!0));if(this[f].destroyed)return new Promise((n,r)=>{process.nextTick(()=>{t[u]?r(t[u]):n(e(void 0,!0))})});var r,s=this[c];if(s)r=new Promise(((t,n)=>(r,s)=>{t.then(()=>{n[l]?r(e(void 0,!0)):n[h](r,s)},s)})(s,this));else{var i=this[f].read();if(null!==i)return Promise.resolve(e(i,!1));r=new Promise(this[h])}return this[c]=r,r}},Symbol.asyncIterator,function(){return this}),t(s,"return",function(){var t=this;return new Promise((n,r)=>{t[f].destroy(null,t=>{t?r(t):n(e(void 0,!0))})})}),s),d);return Ij=n=>{var s,d=Object.create(p,(t(s={},f,{value:n,writable:!0}),t(s,o,{value:null,writable:!0}),t(s,a,{value:null,writable:!0}),t(s,u,{value:null,writable:!0}),t(s,l,{value:n.R.endEmitted,writable:!0}),t(s,h,{value(t,n){var r=d[f].read();r?(d[c]=null,d[o]=null,d[a]=null,t(e(r,!1))):(d[o]=t,d[a]=n)},writable:!0}),s));return d[c]=null,i(n,t=>{if(t&&"ERR_STREAM_PREMATURE_CLOSE"!==t.code){var n=d[a];return null!==n&&(d[c]=null,d[o]=null,d[a]=null,n(t)),void(d[u]=t)}var r=d[o];null!==r&&(d[c]=null,d[o]=null,d[a]=null,r(e(void 0,!0))),d[l]=!0}),n.on("readable",r.bind(null,d)),d}}function Bh(){function t(t,e,n){b=b||Dh(),t=t||{},"boolean"!=typeof n&&(n=e instanceof b),this.objectMode=!!t.objectMode,n&&(this.objectMode=this.objectMode||!!t.readableObjectMode),this.highWaterMark=_(this,t,"readableHighWaterMark",n),this.buffer=new E,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.paused=!0,this.emitClose=!1!==t.emitClose,this.autoDestroy=!!t.autoDestroy,this.destroyed=!1,this.defaultEncoding=t.defaultEncoding||"utf8",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,t.encoding&&(N||(N=Lh().StringDecoder),this.decoder=new N(t.encoding),this.encoding=t.encoding)}function e(n){if(b=b||Dh(),!(this instanceof e))return new e(n);var r=this instanceof b;this.R=new t(n,this,r),this.readable=!0,n&&("function"==typeof n.read&&(this.D=n.read),"function"==typeof n.destroy&&(this.A=n.destroy)),x.call(this)}function n(t,e,n,s,u){g("readableAddChunk",e);var l,c=t.R;if(null===e)c.reading=!1,((t,e)=>{if(g("onEofChunk"),!e.ended){if(e.decoder){var n=e.decoder.end();n&&n.length&&(e.buffer.push(n),e.length+=e.objectMode?1:n.length)}e.ended=!0,e.sync?i(t):(e.needReadable=!1,e.emittedReadable||(e.emittedReadable=!0,o(t)))}})(t,c);else if(u||(l=((t,e)=>{var n,r;return r=e,v.isBuffer(r)||r instanceof $||"string"==typeof e||void 0===e||t.objectMode||(n=new A("chunk",["string","Buffer","Uint8Array"],e)),n})(c,e)),l)M(t,l);else if(c.objectMode||e&&e.length>0)if("string"==typeof e||c.objectMode||Object.getPrototypeOf(e)===v.prototype||(e=(t=>v.from(t))(e)),s)c.endEmitted?M(t,new F):r(t,c,e,!0);else if(c.ended)M(t,new O);else{if(c.destroyed)return!1;c.reading=!1,c.decoder&&!n?(e=c.decoder.write(e),c.objectMode||0!==e.length?r(t,c,e,!1):a(t,c)):r(t,c,e,!1)}else s||(c.reading=!1,a(t,c));return!c.ended&&(c.length<c.highWaterMark||0===c.length)}function r(t,e,n,r){e.flowing&&0===e.length&&!e.sync?(e.awaitDrain=0,t.emit("data",n)):(e.length+=e.objectMode?1:n.length,r?e.buffer.unshift(n):e.buffer.push(n),e.needReadable&&i(t)),a(t,e)}function s(t,e){return 0>=t||0===e.length&&e.ended?0:e.objectMode?1:t!=t?e.flowing&&e.length?e.buffer.head.data.length:e.length:(t>e.highWaterMark&&(e.highWaterMark=(t=>(L>t?(t--,t|=t>>>1,t|=t>>>2,t|=t>>>4,t|=t>>>8,t|=t>>>16,t++):t=L,t))(t)),t>e.length?e.ended?e.length:(e.needReadable=!0,0):t)}function i(t){var e=t.R;g("emitReadable",e.needReadable,e.emittedReadable),e.needReadable=!1,e.emittedReadable||(g("emitReadable",e.flowing),e.emittedReadable=!0,process.nextTick(o,t))}function o(t){var e=t.R;g("emitReadable_",e.destroyed,e.length,e.ended),e.destroyed||!e.length&&!e.ended||(t.emit("readable"),e.emittedReadable=!1),e.needReadable=!e.flowing&&!e.ended&&e.length<=e.highWaterMark,f(t)}function a(t,e){e.readingMore||(e.readingMore=!0,process.nextTick(u,t,e))}function u(t,e){for(;!e.reading&&!e.ended&&(e.length<e.highWaterMark||e.flowing&&0===e.length);){var n=e.length;if(g("maybeReadMore read 0"),t.read(0),n===e.length)break}e.readingMore=!1}function l(t){var e=t.R;e.readableListening=t.listenerCount("readable")>0,e.resumeScheduled&&!e.paused?e.flowing=!0:t.listenerCount("data")>0&&t.resume()}function c(t){g("readable nexttick read 0"),t.read(0)}function h(t,e){g("resume",e.reading),e.reading||t.read(0),e.resumeScheduled=!1,t.emit("resume"),f(t),e.flowing&&!e.reading&&t.read(0)}function f(t){var e=t.R;for(g("flow",e.flowing);e.flowing&&null!==t.read(););}function d(t,e){return 0===e.length?null:(e.objectMode?n=e.buffer.shift():t&&t<e.length?n=e.buffer.consume(t,e.decoder):(n=e.decoder?e.buffer.join(""):1===e.buffer.length?e.buffer.first():e.buffer.concat(e.length),e.buffer.clear()),n);var n}function p(t){var e=t.R;g("endReadable",e.endEmitted),e.endEmitted||(e.ended=!0,process.nextTick(m,e,t))}function m(t,e){if(g("endReadableNT",t.endEmitted,t.length),!t.endEmitted&&0===t.length&&(t.endEmitted=!0,e.readable=!1,e.emit("end"),t.autoDestroy)){var n=e._;(!n||n.autoDestroy&&n.finished)&&e.destroy()}}function y(t,e){for(var n=0,r=t.length;r>n;n++)if(t[n]===e)return n;return-1}if(Pj)return Lj;var b;Pj=1,Lj=e,e.ReadableState=t,rj.EventEmitter;var g,w=(t,e)=>t.listeners(e).length,x=Eh(),v=uj.Buffer,$=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof self?self:{}).Uint8Array||(()=>{}),k=Lx;g=k&&k.debuglog?k.debuglog("stream"):()=>{};var N,C,S,E=function(){function t(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(e=>Object.getOwnPropertyDescriptor(t,e).enumerable)),n.push.apply(n,r)}return n}function e(e){for(var r=1;arguments.length>r;r++){var s=null!=arguments[r]?arguments[r]:{};r%2?t(Object(s),!0).forEach(t=>{n(e,t,s[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):t(Object(s)).forEach(t=>{Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))})}return e}function n(t,e,n){return(e=r(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t){var e=(t=>{if("object"!=typeof t||null===t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)})(t);return"symbol"==typeof e?e:String(e)}function s(t,e,n){i.prototype.copy.call(t,e,n)}if(yj)return mj;yj=1;var i=uj.Buffer,o=Lx.inspect,a=o&&o.custom||"inspect";return mj=function(){function t(){((t,e)=>{if(!(this instanceof e))throw new TypeError("Cannot call a class as a function")})(0,t),this.head=null,this.tail=null,this.length=0}return n=t,u=[{key:"push",value(t){var e={data:t,next:null};this.length>0?this.tail.next=e:this.head=e,this.tail=e,++this.length}},{key:"unshift",value(t){var e={data:t,next:this.head};0===this.length&&(this.tail=e),this.head=e,++this.length}},{key:"shift",value(){if(0!==this.length){var t=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,t}}},{key:"clear",value(){this.head=this.tail=null,this.length=0}},{key:"join",value(t){if(0===this.length)return"";for(var e=this.head,n=""+e.data;e=e.next;)n+=t+e.data;return n}},{key:"concat",value(t){if(0===this.length)return i.alloc(0);for(var e=i.allocUnsafe(t>>>0),n=this.head,r=0;n;)s(n.data,e,r),r+=n.data.length,n=n.next;return e}},{key:"consume",value(t,e){var n;return t<this.head.data.length?(n=this.head.data.slice(0,t),this.head.data=this.head.data.slice(t)):n=t===this.head.data.length?this.shift():e?this.L(t):this.P(t),n}},{key:"first",value(){return this.head.data}},{key:"_getString",value(t){var e=this.head,n=1,r=e.data;for(t-=r.length;e=e.next;){var s=e.data,i=t>s.length?s.length:t;if(i===s.length?r+=s:r+=s.slice(0,t),0===(t-=i)){i===s.length?(++n,e.next?this.head=e.next:this.head=this.tail=null):(this.head=e,e.data=s.slice(i));break}++n}return this.length-=n,r}},{key:"_getBuffer",value(t){var e=i.allocUnsafe(t),n=this.head,r=1;for(n.data.copy(e),t-=n.data.length;n=n.next;){var s=n.data,o=t>s.length?s.length:t;if(s.copy(e,e.length-t,0,o),0===(t-=o)){o===s.length?(++r,n.next?this.head=n.next:this.head=this.tail=null):(this.head=n,n.data=s.slice(o));break}++r}return this.length-=r,e}},{key:a,value(t,n){return o(this,e(e({},n),{},{depth:0,customInspect:!1}))}}],u&&((t,e)=>{for(var n=0;e.length>n;n++){var s=e[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(t,r(s.key),s)}})(n.prototype,u),Object.defineProperty(n,"prototype",{writable:!1}),t;var n,u}(),mj}(),T=Ah(),_=Ih().getHighWaterMark,R=Oh().codes,A=R.ERR_INVALID_ARG_TYPE,O=R.ERR_STREAM_PUSH_AFTER_EOF,I=R.ERR_METHOD_NOT_IMPLEMENTED,F=R.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;aj(e,x);var M=T.errorOrDestroy,D=["error","close","destroy","pause","resume"];Object.defineProperty(e.prototype,"destroyed",{enumerable:!1,get(){return void 0!==this.R&&this.R.destroyed},set(t){this.R&&(this.R.destroyed=t)}}),e.prototype.destroy=T.destroy,e.prototype.M=T.undestroy,e.prototype.A=(t,e)=>{e(t)},e.prototype.push=function(t,e){var r,s=this.R;return s.objectMode?r=!0:"string"==typeof t&&((e=e||s.defaultEncoding)!==s.encoding&&(t=v.from(t,e),e=""),r=!0),n(this,t,e,!1,r)},e.prototype.unshift=function(t){return n(this,t,null,!0,!1)},e.prototype.isPaused=function(){return!1===this.R.flowing},e.prototype.setEncoding=function(t){N||(N=Lh().StringDecoder);var e=new N(t);this.R.decoder=e,this.R.encoding=this.R.decoder.encoding;for(var n=this.R.buffer.head,r="";null!==n;)r+=e.write(n.data),n=n.next;return this.R.buffer.clear(),""!==r&&this.R.buffer.push(r),this.R.length=r.length,this};var L=1073741824;return e.prototype.read=function(t){g("read",t),t=parseInt(t,10);var e=this.R,n=t;if(0!==t&&(e.emittedReadable=!1),0===t&&e.needReadable&&((0!==e.highWaterMark?e.length>=e.highWaterMark:e.length>0)||e.ended))return g("read: emitReadable",e.length,e.ended),0===e.length&&e.ended?p(this):i(this),null;if(0===(t=s(t,e))&&e.ended)return 0===e.length&&p(this),null;var r,o=e.needReadable;return g("need readable",o),(0===e.length||e.length-t<e.highWaterMark)&&g("length less than watermark",o=!0),e.ended||e.reading?g("reading or ended",o=!1):o&&(g("do read"),e.reading=!0,e.sync=!0,0===e.length&&(e.needReadable=!0),this.D(e.highWaterMark),e.sync=!1,e.reading||(t=s(n,e))),null===(r=t>0?d(t,e):null)?(e.needReadable=e.length<=e.highWaterMark,t=0):(e.length-=t,e.awaitDrain=0),0===e.length&&(e.ended||(e.needReadable=!0),n!==t&&e.ended&&p(this)),null!==r&&this.emit("data",r),r},e.prototype.D=function(t){M(this,new I("_read()"))},e.prototype.pipe=function(t,e){function n(){g("onend"),t.end()}function r(e){g("ondata");var n=t.write(e);g("dest.write",n),!1===n&&((1===l.pipesCount&&l.pipes===t||l.pipesCount>1&&-1!==y(l.pipes,t))&&!d&&(g("false write response, pause",l.awaitDrain),l.awaitDrain++),u.pause())}function s(e){g("onerror",e),a(),t.removeListener("error",s),0===w(t,"error")&&M(t,e)}function i(){t.removeListener("finish",o),a()}function o(){g("onfinish"),t.removeListener("close",i),a()}function a(){g("unpipe"),u.unpipe(t)}var u=this,l=this.R;switch(l.pipesCount){case 0:l.pipes=t;break;case 1:l.pipes=[l.pipes,t];break;default:l.pipes.push(t)}l.pipesCount+=1,g("pipe count=%d opts=%j",l.pipesCount,e);var c=e&&!1===e.end||t===process.stdout||t===process.stderr?a:n;l.endEmitted?process.nextTick(c):u.once("end",c),t.on("unpipe",function e(c,f){g("onunpipe"),c===u&&f&&!1===f.hasUnpiped&&(f.hasUnpiped=!0,g("cleanup"),t.removeListener("close",i),t.removeListener("finish",o),t.removeListener("drain",h),t.removeListener("error",s),t.removeListener("unpipe",e),u.removeListener("end",n),u.removeListener("end",a),u.removeListener("data",r),d=!0,!l.awaitDrain||t._&&!t._.needDrain||h())});var h=(t=>()=>{var e=t.R;g("pipeOnDrain",e.awaitDrain),e.awaitDrain&&e.awaitDrain--,0===e.awaitDrain&&w(t,"data")&&(e.flowing=!0,f(t))})(u);t.on("drain",h);var d=!1;return u.on("data",r),((t,e,n)=>{if("function"==typeof t.prependListener)return t.prependListener(e,n);t.C&&t.C[e]?Array.isArray(t.C[e])?t.C[e].unshift(n):t.C[e]=[n,t.C[e]]:t.on(e,n)})(t,"error",s),t.once("close",i),t.once("finish",o),t.emit("pipe",u),l.flowing||(g("pipe resume"),u.resume()),t},e.prototype.unpipe=function(t){var e=this.R,n={hasUnpiped:!1};if(0===e.pipesCount)return this;if(1===e.pipesCount)return t&&t!==e.pipes||(t||(t=e.pipes),e.pipes=null,e.pipesCount=0,e.flowing=!1,t&&t.emit("unpipe",this,n)),this;if(!t){var r=e.pipes,s=e.pipesCount;e.pipes=null,e.pipesCount=0,e.flowing=!1;for(var i=0;s>i;i++)r[i].emit("unpipe",this,{hasUnpiped:!1});return this}var o=y(e.pipes,t);return-1===o||(e.pipes.splice(o,1),e.pipesCount-=1,1===e.pipesCount&&(e.pipes=e.pipes[0]),t.emit("unpipe",this,n)),this},e.prototype.on=function(t,e){var n=x.prototype.on.call(this,t,e),r=this.R;return"data"===t?(r.readableListening=this.listenerCount("readable")>0,!1!==r.flowing&&this.resume()):"readable"===t&&(r.endEmitted||r.readableListening||(r.readableListening=r.needReadable=!0,r.flowing=!1,r.emittedReadable=!1,g("on readable",r.length,r.reading),r.length?i(this):r.reading||process.nextTick(c,this))),n},e.prototype.addListener=e.prototype.on,e.prototype.removeListener=function(t,e){var n=x.prototype.removeListener.call(this,t,e);return"readable"===t&&process.nextTick(l,this),n},e.prototype.removeAllListeners=function(t){var e=x.prototype.removeAllListeners.apply(this,arguments);return"readable"!==t&&void 0!==t||process.nextTick(l,this),e},e.prototype.resume=function(){var t=this.R;return t.flowing||(g("resume"),t.flowing=!t.readableListening,((t,e)=>{e.resumeScheduled||(e.resumeScheduled=!0,process.nextTick(h,t,e))})(this,t)),t.paused=!1,this},e.prototype.pause=function(){return g("call pause flowing=%j",this.R.flowing),!1!==this.R.flowing&&(g("pause"),this.R.flowing=!1,this.emit("pause")),this.R.paused=!0,this},e.prototype.wrap=function(t){var e=this,n=this.R,r=!1;for(var s in t.on("end",()=>{if(g("wrapped end"),n.decoder&&!n.ended){var t=n.decoder.end();t&&t.length&&e.push(t)}e.push(null)}),t.on("data",s=>{g("wrapped data"),n.decoder&&(s=n.decoder.write(s)),n.objectMode&&null==s||(n.objectMode||s&&s.length)&&(e.push(s)||(r=!0,t.pause()))}),t)void 0===this[s]&&"function"==typeof t[s]&&(this[s]=(e=>function(){return t[e].apply(t,arguments)})(s));for(var i=0;D.length>i;i++)t.on(D[i],this.emit.bind(this,D[i]));return this.D=e=>{g("wrapped _read",e),r&&(r=!1,t.resume())},this},"function"==typeof Symbol&&(e.prototype[Symbol.asyncIterator]=function(){return void 0===C&&(C=Vh()),C(this)}),Object.defineProperty(e.prototype,"readableHighWaterMark",{enumerable:!1,get(){return this.R.highWaterMark}}),Object.defineProperty(e.prototype,"readableBuffer",{enumerable:!1,get(){return this.R&&this.R.buffer}}),Object.defineProperty(e.prototype,"readableFlowing",{enumerable:!1,get(){return this.R.flowing},set(t){this.R&&(this.R.flowing=t)}}),e.V=d,Object.defineProperty(e.prototype,"readableLength",{enumerable:!1,get(){return this.R.length}}),"function"==typeof Symbol&&(e.from=(t,n)=>(void 0===S&&(S=Dj?Mj:(Dj=1,Mj=()=>{throw new Error("Readable.from is not available in the browser")})),S(e,t,n))),Lj}function zh(){function t(t,e){var n=this.B;n.transforming=!1;var r=n.writecb;if(null===r)return this.emit("error",new o);n.writechunk=null,n.writecb=null,null!=e&&this.push(e),r(t);var s=this.R;s.reading=!1,(s.needReadable||s.length<s.highWaterMark)&&this.D(s.highWaterMark)}function e(r){if(!(this instanceof e))return new e(r);l.call(this,r),this.B={afterTransform:t.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this.R.needReadable=!0,this.R.sync=!1,r&&("function"==typeof r.transform&&(this.W=r.transform),"function"==typeof r.flush&&(this.U=r.flush)),this.on("prefinish",n)}function n(){var t=this;"function"!=typeof this.U||this.R.destroyed?r(this,null,null):this.U((e,n)=>{r(t,e,n)})}function r(t,e,n){if(e)return t.emit("error",e);if(null!=n&&t.push(n),t._.length)throw new u;if(t.B.transforming)throw new a;return t.push(null)}if(Bj)return Vj;Bj=1,Vj=e;var s=Oh().codes,i=s.ERR_METHOD_NOT_IMPLEMENTED,o=s.ERR_MULTIPLE_CALLBACK,a=s.ERR_TRANSFORM_ALREADY_TRANSFORMING,u=s.ERR_TRANSFORM_WITH_LENGTH_0,l=Dh();return aj(e,l),e.prototype.push=function(t,e){return this.B.needTransform=!1,l.prototype.push.call(this,t,e)},e.prototype.W=(t,e,n)=>{n(new i("_transform()"))},e.prototype.O=function(t,e,n){var r=this.B;if(r.writecb=n,r.writechunk=t,r.writeencoding=e,!r.transforming){var s=this.R;(r.needTransform||s.needReadable||s.length<s.highWaterMark)&&this.D(s.highWaterMark)}},e.prototype.D=function(t){var e=this.B;null===e.writechunk||e.transforming?e.needTransform=!0:(e.transforming=!0,this.W(e.writechunk,e.writeencoding,e.afterTransform))},e.prototype.A=function(t,e){l.prototype.A.call(this,t,t=>{e(t)})},Vj}function Wh(){Jj.call(this)}function jh(t,e){var n;try{n=new rU(t)}catch(u){return void e(u)}if(n.numFrames()>0){var r=[],s=[n.numFrames(),n.height,n.width,4],i=new Uint8Array(s[0]*s[1]*s[2]*s[3]),o=nU(i,s);try{for(var a=0;a<n.numFrames();++a)n.decodeAndBlitFrameRGBA(a,i.subarray(o.index(a,0,0,0),o.index(a+1,0,0,0))),r.push(n.frameInfo(a))}catch(u){return void e(u)}e(null,o.transpose(0,2,1),r)}else{s=[n.height,n.width,4],i=new Uint8Array(s[0]*s[1]*s[2]),o=nU(i,s);try{n.decodeAndBlitFrameRGBA(0,i)}catch(u){return void e(u)}e(null,o.transpose(1,0))}}function Uh(t){return{}.toString.call(t)}function Gh(){function t(t,e,n){this.chunk=t,this.encoding=e,this.callback=n}function e(t,e){var n=qh(),r=(t=t||{}).highWaterMark,a=t.objectMode?16:16384;this.highWaterMark=r||0===r?r:a,this.objectMode=!!t.objectMode,e instanceof n&&(this.objectMode=this.objectMode||!!t.writableObjectMode),this.highWaterMark=~~this.highWaterMark,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1;var u=!1===t.decodeStrings;this.decodeStrings=!u,this.defaultEncoding=t.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=t=>{((t,e)=>{var n=t._,r=n.sync,a=n.writecb;if((t=>{t.writing=!1,t.writecb=null,t.length-=t.writelen,t.writelen=0})(n),e)((t,e,n,r,s)=>{n?process.nextTick(()=>{e.pendingcb--,s(r)}):(e.pendingcb--,s(r)),t._.errorEmitted=!0,t.emit("error",r)})(t,n,r,e,a);else{var u=o(0,n);u||n.corked||n.bufferProcessing||!n.buffer.length||i(t,n),r?process.nextTick(()=>{s(t,n,u,a)}):s(t,n,u,a)}})(e,t)},this.writecb=null,this.writelen=0,this.buffer=[],this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1}function n(t){var r=qh();if(!(this instanceof n||this instanceof r))return new n(t);this._=new e(t,this),this.writable=!0,h.call(this)}function r(t,e,n,r,s,i,o){e.writelen=r,e.writecb=o,e.writing=!0,e.sync=!0,n?t.I(s,e.onwrite):t.O(s,i,e.onwrite),e.sync=!1}function s(t,e,n,r){n||((t,e)=>{0===e.length&&e.needDrain&&(e.needDrain=!1,t.emit("drain"))})(t,e),e.pendingcb--,r(),u(t,e)}function i(t,e){if(e.bufferProcessing=!0,t.I&&e.buffer.length>1){for(var n=[],s=0;s<e.buffer.length;s++)n.push(e.buffer[s].callback);e.pendingcb++,r(t,e,!0,e.length,e.buffer,"",t=>{for(var r=0;r<n.length;r++)e.pendingcb--,n[r](t)}),e.buffer=[]}else{for(s=0;s<e.buffer.length;s++){var i=e.buffer[s],o=i.chunk,a=i.encoding,u=i.callback,l=e.objectMode?1:o.length;if(r(t,e,!1,l,o,a,u),e.writing){s++;break}}s<e.buffer.length?e.buffer=e.buffer.slice(s):e.buffer.length=0}e.bufferProcessing=!1}function o(t,e){return e.ending&&0===e.length&&!e.finished&&!e.writing}function a(t,e){e.prefinished||(e.prefinished=!0,t.emit("prefinish"))}function u(t,e){var n=o(0,e);return n&&(0===e.pendingcb?(a(t,e),e.finished=!0,t.emit("finish")):a(t,e)),n}if(Yj)return Kj;Yj=1,Kj=n;var l=uj.Buffer;n.WritableState=e;var c=oU;c.inherits=aj;var h=Xj;return c.inherits(n,h),n.prototype.pipe=function(){this.emit("error",new Error("Cannot pipe. Not readable."))},n.prototype.write=function(e,n,s){var i=this._,o=!1;return c.isFunction(n)&&(s=n,n=null),c.isBuffer(e)?n="buffer":n||(n=i.defaultEncoding),c.isFunction(s)||(s=()=>{}),i.ended?((t,e,n)=>{var r=new Error("write after end");t.emit("error",r),process.nextTick(()=>{n(r)})})(this,0,s):((t,e,n,r)=>{var s=!0;if(!(c.isBuffer(n)||c.isString(n)||c.isNullOrUndefined(n)||e.objectMode)){var i=new TypeError("Invalid non-string/buffer chunk");t.emit("error",i),process.nextTick(()=>{r(i)}),s=!1}return s})(this,i,e,s)&&(i.pendingcb++,o=((e,n,s,i,o)=>{s=((t,e,n)=>(!t.objectMode&&!1!==t.decodeStrings&&c.isString(e)&&(e=new l(e,n)),e))(n,s,i),c.isBuffer(s)&&(i="buffer");var a=n.objectMode?1:s.length;n.length+=a;var u=n.length<n.highWaterMark;return u||(n.needDrain=!0),n.writing||n.corked?n.buffer.push(new t(s,i,o)):r(e,n,!1,a,s,i,o),u})(this,i,e,n,s)),o},n.prototype.cork=function(){this._.corked++},n.prototype.uncork=function(){var t=this._;t.corked&&(t.corked--,t.writing||t.corked||t.finished||t.bufferProcessing||!t.buffer.length||i(this,t))},n.prototype.O=(t,e,n)=>{n(new Error("not implemented"))},n.prototype.I=null,n.prototype.end=function(t,e,n){var r=this._;c.isFunction(t)?(n=t,t=null,e=null):c.isFunction(e)&&(n=e,e=null),c.isNullOrUndefined(t)||this.write(t,e),r.corked&&(r.corked=1,this.uncork()),r.ending||r.finished||((t,e,n)=>{e.ending=!0,u(t,e),n&&(e.finished?process.nextTick(n):t.once("finish",n)),e.ended=!0})(this,r,n)},Kj}function qh(){function t(n){if(!(this instanceof t))return new t(n);s.call(this,n),i.call(this,n),n&&!1===n.readable&&(this.readable=!1),n&&!1===n.writable&&(this.writable=!1),this.allowHalfOpen=!0,n&&!1===n.allowHalfOpen&&(this.allowHalfOpen=!1),this.once("end",e)}function e(){this.allowHalfOpen||this._.ended||process.nextTick(this.end.bind(this))}if(Qj)return Zj;Qj=1,Zj=t;var n=Object.keys||(t=>{var e=[];for(var n in t)e.push(n);return e}),r=oU;r.inherits=aj;var s=Xh(),i=Gh();return r.inherits(t,s),((t,e)=>{for(var n=0,r=t.length;r>n;n++)e(t[n])})(n(i.prototype),e=>{t.prototype[e]||(t.prototype[e]=i.prototype[e])}),Zj}function Hh(){function t(t){return t.toString(this.encoding)}function e(t){this.charReceived=t.length%2,this.charLength=this.charReceived?2:0}function n(t){this.charReceived=t.length%3,this.charLength=this.charReceived?3:0}if(aU)return cU;aU=1;var r=uj.Buffer,s=r.isEncoding||(t=>{switch(t&&t.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}}),i=cU.StringDecoder=function(i){switch(this.encoding=(i||"utf8").toLowerCase().replace(/[-_]/,""),(t=>{if(t&&!s(t))throw new Error("Unknown encoding: "+t)})(i),this.encoding){case"utf8":this.surrogateSize=3;break;case"ucs2":case"utf16le":this.surrogateSize=2,this.detectIncompleteChar=e;break;case"base64":this.surrogateSize=3,this.detectIncompleteChar=n;break;default:return void(this.write=t)}this.charBuffer=new r(6),this.charReceived=0,this.charLength=0};return i.prototype.write=function(t){for(var e="";this.charLength;){var n=t.length<this.charLength-this.charReceived?t.length:this.charLength-this.charReceived;if(t.copy(this.charBuffer,this.charReceived,0,n),this.charReceived+=n,this.charReceived<this.charLength)return"";if(t=t.slice(n,t.length),55296>(r=(e=this.charBuffer.slice(0,this.charLength).toString(this.encoding)).charCodeAt(e.length-1))||r>56319){if(this.charReceived=this.charLength=0,0===t.length)return e;break}this.charLength+=this.surrogateSize,e=""}this.detectIncompleteChar(t);var r,s=t.length;if(this.charLength&&(t.copy(this.charBuffer,0,t.length-this.charReceived,s),s-=this.charReceived),s=(e+=t.toString(this.encoding,0,s)).length-1,(r=e.charCodeAt(s))>=55296&&56319>=r){var i=this.surrogateSize;return this.charLength+=i,this.charReceived+=i,this.charBuffer.copy(this.charBuffer,i,0,i),t.copy(this.charBuffer,0,0,i),e.substring(0,s)}return e},i.prototype.detectIncompleteChar=function(t){for(var e=3>t.length?t.length:3;e>0;e--){var n=t[t.length-e];if(1==e&&n>>5==6){this.charLength=2;break}if(2>=e&&n>>4==14){this.charLength=3;break}if(3>=e&&n>>3==30){this.charLength=4;break}}this.charReceived=e},i.prototype.end=function(t){var e="";if(t&&t.length&&(e=this.write(t)),this.charReceived){var n=this.charReceived,r=this.charBuffer,s=this.encoding;e+=r.slice(0,n).toString(s)}return e},cU}function Xh(){function t(t,e){var n=qh(),r=(t=t||{}).highWaterMark,s=t.objectMode?16:16384;this.highWaterMark=r||0===r?r:s,this.highWaterMark=~~this.highWaterMark,this.buffer=[],this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.objectMode=!!t.objectMode,e instanceof n&&(this.objectMode=this.objectMode||!!t.readableObjectMode),this.defaultEncoding=t.defaultEncoding||"utf8",this.ranOut=!1,this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,t.encoding&&(f||(f=Hh().StringDecoder),this.decoder=new f(t.encoding),this.encoding=t.encoding)}function e(n){if(qh(),!(this instanceof e))return new e(n);this.R=new t(n,this),this.readable=!0,d.call(this)}function n(t,e,n,r,i){var o=((t,e)=>{var n=null;return p.isBuffer(e)||p.isString(e)||p.isNullOrUndefined(e)||t.objectMode||(n=new TypeError("Invalid non-string/buffer chunk")),n})(e,n);if(o)t.emit("error",o);else if(p.isNullOrUndefined(n))e.reading=!1,e.ended||((t,e)=>{if(e.decoder&&!e.ended){var n=e.decoder.end();n&&n.length&&(e.buffer.push(n),e.length+=e.objectMode?1:n.length)}e.ended=!0,s(t)})(t,e);else if(e.objectMode||n&&n.length>0)if(e.ended&&!i){var a=new Error("stream.push() after EOF");t.emit("error",a)}else e.endEmitted&&i?(a=new Error("stream.unshift() after end event"),t.emit("error",a)):(!e.decoder||i||r||(n=e.decoder.write(n)),i||(e.reading=!1),e.flowing&&0===e.length&&!e.sync?(t.emit("data",n),t.read(0)):(e.length+=e.objectMode?1:n.length,i?e.buffer.unshift(n):e.buffer.push(n),e.needReadable&&s(t)),((t,e)=>{e.readingMore||(e.readingMore=!0,process.nextTick(()=>{((t,e)=>{for(var n=e.length;!e.reading&&!e.flowing&&!e.ended&&e.length<e.highWaterMark&&(m("maybeReadMore read 0"),t.read(0),n!==e.length);)n=e.length;e.readingMore=!1})(t,e)}))})(t,e));else i||(e.reading=!1);return(t=>!t.ended&&(t.needReadable||t.length<t.highWaterMark||0===t.length))(e)}function r(t,e){return 0===e.length&&e.ended?0:e.objectMode?0===t?0:1:isNaN(t)||p.isNull(t)?e.flowing&&e.buffer.length?e.buffer[0].length:e.length:t>0?(t>e.highWaterMark&&(e.highWaterMark=(t=>{if(y>t){t--;for(var e=1;32>e;e<<=1)t|=t>>e;t++}else t=y;return t})(t)),t>e.length?e.ended?e.length:(e.needReadable=!0,0):t):0}function s(t){var e=t.R;e.needReadable=!1,e.emittedReadable||(m("emitReadable",e.flowing),e.emittedReadable=!0,e.sync?process.nextTick(()=>{i(t)}):i(t))}function i(t){m("emit readable"),t.emit("readable"),o(t)}function o(t){var e=t.R;if(m("flow",e.flowing),e.flowing)do{var n=t.read()}while(null!==n&&e.flowing)}function a(t,e){var n,r=e.buffer,s=e.length,i=!!e.decoder,o=!!e.objectMode;if(0===r.length)return null;if(0===s)n=null;else if(o)n=r.shift();else if(t&&s>t)if(t<r[0].length)n=(h=r[0]).slice(0,t),r[0]=h.slice(t);else if(t===r[0].length)n=r.shift();else{n=i?"":new c(t);for(var a=0,u=0,l=r.length;l>u&&t>a;u++){var h=r[0],f=Math.min(t-a,h.length);i?n+=h.slice(0,f):h.copy(n,a,0,f),f<h.length?r[0]=h.slice(f):r.shift(),a+=f}}else n=i?r.join(""):c.concat(r,s),r.length=0;return n}function u(t){var e=t.R;if(e.length>0)throw new Error("endReadable called on non-empty stream");e.endEmitted||(e.ended=!0,process.nextTick(()=>{e.endEmitted||0!==e.length||(e.endEmitted=!0,t.readable=!1,t.emit("end"))}))}if(lU)return uU;lU=1,uU=e;var l=iU,c=uj.Buffer;e.ReadableState=t;var h=rj.EventEmitter;h.listenerCount||(h.listenerCount=(t,e)=>t.listeners(e).length);var f,d=Xj,p=oU;p.inherits=aj;var m=Lx;m=m&&m.debuglog?m.debuglog("stream"):()=>{},p.inherits(e,d),e.prototype.push=function(t,e){var r=this.R;return p.isString(t)&&!r.objectMode&&(e=e||r.defaultEncoding)!==r.encoding&&(t=new c(t,e),e=""),n(this,r,t,e,!1)},e.prototype.unshift=function(t){return n(this,this.R,t,"",!0)},e.prototype.setEncoding=function(t){return f||(f=Hh().StringDecoder),this.R.decoder=new f(t),this.R.encoding=t,this};var y=8388608;return e.prototype.read=function(t){m("read",t);var e=this.R,n=t;if(p.isNumber(t)&&0>=t||(e.emittedReadable=!1),0===t&&e.needReadable&&(e.length>=e.highWaterMark||e.ended))return m("read: emitReadable",e.length,e.ended),0===e.length&&e.ended?u(this):s(this),null;if(0===(t=r(t,e))&&e.ended)return 0===e.length&&u(this),null;var i,o=e.needReadable;return m("need readable",o),(0===e.length||e.length-t<e.highWaterMark)&&m("length less than watermark",o=!0),(e.ended||e.reading)&&m("reading or ended",o=!1),o&&(m("do read"),e.reading=!0,e.sync=!0,0===e.length&&(e.needReadable=!0),this.D(e.highWaterMark),e.sync=!1),o&&!e.reading&&(t=r(n,e)),i=t>0?a(t,e):null,p.isNull(i)&&(e.needReadable=!0,t=0),e.length-=t,0!==e.length||e.ended||(e.needReadable=!0),n!==t&&e.ended&&0===e.length&&u(this),p.isNull(i)||this.emit("data",i),i},e.prototype.D=function(t){this.emit("error",new Error("not implemented"))},e.prototype.pipe=function(t,e){function n(t){m("onunpipe"),t===d&&s()}function r(){m("onend"),t.end()}function s(){m("cleanup"),t.removeListener("close",u),t.removeListener("finish",c),t.removeListener("drain",b),t.removeListener("error",a),t.removeListener("unpipe",n),d.removeListener("end",r),d.removeListener("end",s),d.removeListener("data",i),!p.awaitDrain||t._&&!t._.needDrain||b()}function i(e){m("ondata"),!1===t.write(e)&&(m("false write response, pause",d.R.awaitDrain),d.R.awaitDrain++,d.pause())}function a(e){m("onerror",e),f(),t.removeListener("error",a),0===h.listenerCount(t,"error")&&t.emit("error",e)}function u(){t.removeListener("finish",c),f()}function c(){m("onfinish"),t.removeListener("close",u),f()}function f(){m("unpipe"),d.unpipe(t)}var d=this,p=this.R;switch(p.pipesCount){case 0:p.pipes=t;break;case 1:p.pipes=[p.pipes,t];break;default:p.pipes.push(t)}p.pipesCount+=1,m("pipe count=%d opts=%j",p.pipesCount,e);var y=e&&!1===e.end||t===process.stdout||t===process.stderr?s:r;p.endEmitted?process.nextTick(y):d.once("end",y),t.on("unpipe",n);var b=(t=>()=>{var e=t.R;m("pipeOnDrain",e.awaitDrain),e.awaitDrain&&e.awaitDrain--,0===e.awaitDrain&&h.listenerCount(t,"data")&&(e.flowing=!0,o(t))})(d);return t.on("drain",b),d.on("data",i),t.C&&t.C.error?l(t.C.error)?t.C.error.unshift(a):t.C.error=[a,t.C.error]:t.on("error",a),t.once("close",u),t.once("finish",c),t.emit("pipe",d),p.flowing||(m("pipe resume"),d.resume()),t},e.prototype.unpipe=function(t){var e=this.R;if(0===e.pipesCount)return this;if(1===e.pipesCount)return t&&t!==e.pipes||(t||(t=e.pipes),e.pipes=null,e.pipesCount=0,e.flowing=!1,t&&t.emit("unpipe",this)),this;if(!t){var n=e.pipes,r=e.pipesCount;e.pipes=null,e.pipesCount=0,e.flowing=!1;for(var s=0;r>s;s++)n[s].emit("unpipe",this);return this}return-1===(s=((t,e)=>{for(var n=0,r=t.length;r>n;n++)if(t[n]===e)return n;return-1})(e.pipes,t))||(e.pipes.splice(s,1),e.pipesCount-=1,1===e.pipesCount&&(e.pipes=e.pipes[0]),t.emit("unpipe",this)),this},e.prototype.on=function(t,e){var n=d.prototype.on.call(this,t,e);if("data"===t&&!1!==this.R.flowing&&this.resume(),"readable"===t&&this.readable){var r=this.R;if(!r.readableListening)if(r.readableListening=!0,r.emittedReadable=!1,r.needReadable=!0,r.reading)r.length&&s(this);else{var i=this;process.nextTick(()=>{m("readable nexttick read 0"),i.read(0)})}}return n},e.prototype.addListener=e.prototype.on,e.prototype.resume=function(){var t=this.R;return t.flowing||(m("resume"),t.flowing=!0,t.reading||(m("resume read 0"),this.read(0)),((t,e)=>{e.resumeScheduled||(e.resumeScheduled=!0,process.nextTick(()=>{((t,e)=>{e.resumeScheduled=!1,t.emit("resume"),o(t),e.flowing&&!e.reading&&t.read(0)})(t,e)}))})(this,t)),this},e.prototype.pause=function(){return m("call pause flowing=%j",this.R.flowing),!1!==this.R.flowing&&(m("pause"),this.R.flowing=!1,this.emit("pause")),this},e.prototype.wrap=function(t){var e=this.R,n=!1,r=this;for(var s in t.on("end",()=>{if(m("wrapped end"),e.decoder&&!e.ended){var t=e.decoder.end();t&&t.length&&r.push(t)}r.push(null)}),t.on("data",s=>{m("wrapped data"),e.decoder&&(s=e.decoder.write(s)),s&&(e.objectMode||s.length)&&(r.push(s)||(n=!0,t.pause()))}),t)p.isFunction(t[s])&&p.isUndefined(this[s])&&(this[s]=(e=>function(){return t[e].apply(t,arguments)})(s));return((t,e)=>{for(var n=0,r=t.length;r>n;n++)e(t[n])})(["error","close","destroy","pause","resume"],e=>{t.on(e,r.emit.bind(r,e))}),r.D=e=>{m("wrapped _read",e),n&&(n=!1,t.resume())},r},e.V=a,uU}function Jh(t,e){this.afterTransform=(t,n)=>((t,e,n)=>{var r=t.B;r.transforming=!1;var s=r.writecb;if(!s)return t.emit("error",new Error("no writecb in Transform class"));r.writechunk=null,r.writecb=null,dU.isNullOrUndefined(n)||t.push(n),s&&s(e);var i=t.R;i.reading=!1,(i.needReadable||i.length<i.highWaterMark)&&t.D(i.highWaterMark)})(e,t,n),this.needTransform=!1,this.transforming=!1,this.writecb=null,this.writechunk=null}function Kh(t){if(!(this instanceof Kh))return new Kh(t);fU.call(this,t),this.B=new Jh(t,this);var e=this;this.R.needReadable=!0,this.R.sync=!1,this.once("prefinish",function(){dU.isFunction(this.U)?this.U(t=>{Yh(e,t)}):Yh(e)})}function Yh(t,e){if(e)return t.emit("error",e);var n=t._,r=t.B;if(n.length)throw new Error("calling transform done when ws.length != 0");if(r.transforming)throw new Error("calling transform done when still transforming");return t.push(null)}function Zh(t){if(!(this instanceof Zh))return new Zh(t);yU.call(this,t)}function Qh(t){GH.call(this,t),this.okayToPush=!0,this.resetData()}function tf(t,e,n){function r(){i.flushData()}var s=(n=n||{}).highWaterMark;Qh.call(this,{highWaterMark:s||0===s?s:65536}),this.width=~~t,this.height=~~e,this.transparent=null,this.transIndex=0,this.repeat=-1,this.delay=0,this.pixels=null,this.indexedPixels=null,this.colorDepth=null,this.colorTab=null,this.usedEntry=[],this.palSize=7,this.dispose=-1,this.firstFrame=!0,this.sample=10;var i=this;this.on("writeHeader#stop",r),this.on("frame#stop",r),this.on("finish#stop",()=>{r(),i.push(null)})}function ef(t,e,n){var r=t*e;return 8!==n&&(r=Math.ceil(r/(8/n))),r}function nf(t,e,n,r,s,i){for(var o=t.width,a=t.height,u=t.index,l=0;a>l;l++)for(var c=0;o>c;c++){for(var h=n(c,l,u),f=0;4>f;f++){var d=_X[r][f];if(f===s.length)throw new Error("Ran out of data");e[h+f]=255!==d?s[d+i]:255}i+=r}return i}function rf(t,e,n,r,s,i){for(var o=t.width,a=t.height,u=t.index,l=0;a>l;l++){for(var c=0;o>c;c++)for(var h=s.get(r),f=n(c,l,u),d=0;4>d;d++){var p=_X[r][d];e[f+d]=255!==p?h[p]:i}s.resetAfterLine()}}function sf(t,e,n){if(4===t.shape.length)return sf(t.pick(n),e,0);if(3===t.shape.length)if(3===t.shape[2])AJ.assign(RJ(e,[t.shape[0],t.shape[1],3],[4,4*t.shape[0],1]),t),AJ.assigns(RJ(e,[t.shape[0]*t.shape[1]],[4],3),255);else if(4===t.shape[2])AJ.assign(RJ(e,[t.shape[0],t.shape[1],4],[4,4*t.shape[0],1]),t);else{if(1!==t.shape[2])return new Error("Incompatible array shape");AJ.assign(RJ(e,[t.shape[0],t.shape[1],3],[4,4*t.shape[0],1]),RJ(t.data,[t.shape[0],t.shape[1],3],[t.stride[0],t.stride[1],0],t.offset)),AJ.assigns(RJ(e,[t.shape[0]*t.shape[1]],[4],3),255)}else{if(2!==t.shape.length)return new Error("Incompatible array shape");AJ.assign(RJ(e,[t.shape[0],t.shape[1],3],[4,4*t.shape[0],1]),RJ(t.data,[t.shape[0],t.shape[1],3],[t.stride[0],t.stride[1],0],t.offset)),AJ.assigns(RJ(e,[t.shape[0]*t.shape[1]],[4],3),255)}return e}function of(t){var e=OJ();return e.emit("error",t),e}function af(){throw new Error("Promises not supported in your environment. Use the callback argument or a Promise polyfill.")}function uf(t,e){return VJ(this,void 0,void 0,function(){var n,r,s,i,o,a;return BJ(this,u=>{switch(u.label){case 0:return[4,t.data()];case 1:for(n=u.sent(),r=[],a=0;a<n.length;a++)r.push({value:n[a],index:a});for(r.sort((t,e)=>e.value-t.value),s=new Float32Array(e),i=new Int32Array(e),a=0;e>a;a++)s[a]=r[a].value,i[a]=r[a].index;for(o=[],a=0;a<i.length;a++)o.push({className:UJ.NSFW_CLASSES[i[a]],probability:s[a]});return[2,o]}})})}var lf=Math.pow,cf=(t,e,n)=>new Promise((r,s)=>{var i=t=>{try{a(n.next(t))}catch(e){s(e)}},o=t=>{try{a(n.throw(t))}catch(e){s(e)}},a=t=>t.done?r(t.value):Promise.resolve(t.value).then(i,o);a((n=n.apply(t,e)).next())});import{aW as hf,aX as ff}from"./vendor-react-CT6KvWXt.js";var df,pf,mf="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:{};(pf=df||(df={})).Pop="POP",pf.Push="PUSH",pf.Replace="REPLACE";const yf="popstate";var bf,gf;(gf=bf||(bf={})).data="data",gf.deferred="deferred",gf.redirect="redirect",gf.error="error";const wf=/^:[\w-]+$/,xf=3,vf=2,$f=1,kf=10,Nf=-2,Cf=t=>"*"===t,Sf=t=>t.join("/").replace(/\/\/+/g,"/"),Ef=t=>t.replace(/\/+$/,"").replace(/^\/*/,"/"),Tf=t=>t&&"?"!==t?t.startsWith("?")?t:"?"+t:"",_f=t=>t&&"#"!==t?t.startsWith("#")?t:"#"+t:"",Rf=["post","put","patch","delete"];new Set(Rf);const Af=["get",...Rf];new Set(Af);const Of=e((t,e,n,r,s,i,o,a)=>{if(!t){var u;if(void 0===e)u=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var l=[n,r,s,i,o,a],c=0;(u=new Error(e.replace(/%s/g,()=>l[c++]))).name="Invariant Violation"}throw u.framesToPop=1,u}}),If=e((t,e,n,r)=>{var s=n?n.call(r,t,e):void 0;if(void 0!==s)return!!s;if(t===e)return!0;if("object"!=typeof t||!t||"object"!=typeof e||!e)return!1;var i=Object.keys(t),o=Object.keys(e);if(i.length!==o.length)return!1;for(var a={}.hasOwnProperty.bind(e),u=0;u<i.length;u++){var l=i[u];if(!a(l))return!1;var c=t[l],h=e[l];if(!1===(s=n?n.call(r,c,h,l):void 0)||void 0===s&&c!==h)return!1}return!0});let Ff,Mf,Df,Lf={data:""},Pf=/(?:([\u0080-\uFFFF\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\s*)/g,Vf=/\/\*[^]*?\*\/|  +/g,Bf=/\n+/g,zf=(t,e)=>{let n="",r="",s="";for(let i in t){let o=t[i];"@"==i[0]?"i"==i[1]?n=i+" "+o+";":r+="f"==i[1]?zf(o,i):i+"{"+zf(o,"k"==i[1]?"":e)+"}":"object"==typeof o?r+=zf(o,e?e.replace(/([^,])+/g,t=>i.replace(/([^,]*:\S+\([^)]*\))|([^,])+/g,e=>/&/.test(e)?e.replace(/&/g,t):t?t+" "+e:e)):i):null!=o&&(i=/^--/.test(i)?i:i.replace(/[A-Z]/g,"-$&").toLowerCase(),s+=zf.p?zf.p(i,o):i+":"+o+";")}return n+(e&&s?e+"{"+s+"}":s)+r},Wf={},jf=t=>{if("object"==typeof t){let e="";for(let n in t)e+=n+jf(t[n]);return e}return t};k.bind({g:1});let Uf=k.bind({k:1});var Gf={};class qf{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class Hf{refCount(t){return T("refCount")}incRef(t){return T("incRef")}timerAvailable(){return!0}time(t){return T("time")}read(t){return T("read")}readSync(t){return T("readSync")}readToGPU(t,e){return T("readToGPU")}numDataIds(){return T("numDataIds")}disposeData(t,e){return T("disposeData")}write(t,e,n){return T("write")}move(t,e,n,r,s){return T("move")}memory(){return T("memory")}floatPrecision(){return T("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return T("dispose")}}const Xf="tfjsflags";class Jf{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=bt,this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&!gt().getBool("IS_TEST")&&gt().getBool("PROD"),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];!gt().getBool("IS_TEST")&&gt().getBool("PROD"),this.set(t,e)}}getAsync(t){return cf(this,null,function*(){return t in this.flags||(this.flags[t]=yield this.evaluateFlag(t)),this.flags[t]})}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(yt(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=this.getQueryParams(this.global.location.search);Xf in t&&t[Xf].split(",").forEach(t=>{const[e,n]=t.split(":");this.urlFlags[e]=((t,e)=>{if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)})(e,n)})}}let Kf,Yf=null;const Zf="Abs",Qf="Acos",td="Acosh",ed="Add",nd="AddN",rd="All",sd="Any",id="ArgMax",od="ArgMin",ad="Asin",ud="Asinh",ld="Atan",cd="Atanh",hd="Atan2",fd="AvgPool",dd="AvgPoolGrad",pd="AvgPool3D",md="AvgPool3DGrad",yd="BatchMatMul",bd="BatchToSpaceND",gd="Bincount",wd="BroadcastTo",xd="BroadcastArgs",vd="Cast",$d="Ceil",kd="ClipByValue",Nd="Complex",Cd="ComplexAbs",Sd="Concat",Ed="Conv2D",Td="Conv2DBackpropFilter",_d="Conv2DBackpropInput",Rd="Conv3D",Ad="Conv3DBackpropFilterV2",Od="Conv3DBackpropInputV2",Id="Cos",Fd="Cosh",Md="Cumprod",Dd="Cumsum",Ld="CropAndResize",Pd="DenseBincount",Vd="DepthToSpace",Bd="DepthwiseConv2dNative",zd="DepthwiseConv2dNativeBackpropFilter",Wd="DepthwiseConv2dNativeBackpropInput",jd="Diag",Ud="Dilation2D",Gd="Dilation2DBackpropInput",qd="Dilation2DBackpropFilter",Hd="RealDiv",Xd="Einsum",Jd="Elu",Kd="EluGrad",Yd="Erf",Zd="Equal",Qd="Exp",tp="ExpandDims",ep="Expm1",np="FFT",rp="Fill",sp="FlipLeftRight",ip="Floor",op="FloorDiv",ap="FusedBatchNorm",up="GatherV2",lp="GatherNd",cp="Greater",hp="GreaterEqual",fp="Identity",dp="IFFT",pp="Imag",mp="IsFinite",yp="IsInf",bp="IsNan",gp="LeakyRelu",wp="Less",xp="LessEqual",vp="LinSpace",$p="Log",kp="Log1p",Np="LogicalAnd",Cp="LogicalNot",Sp="LogicalOr",Ep="LogSoftmax",Tp="LRN",_p="LRNGrad",Rp="Max",Ap="Maximum",Op="MaxPool",Ip="MaxPoolGrad",Fp="MaxPool3D",Mp="MaxPool3DGrad",Dp="MaxPoolWithArgmax",Lp="Mean",Pp="Min",Vp="Minimum",Bp="MirrorPad",zp="Mod",Wp="Multinomial",jp="Multiply",Up="Neg",Gp="NotEqual",qp="NonMaxSuppressionV3",Hp="NonMaxSuppressionV4",Xp="NonMaxSuppressionV5",Jp="OnesLike",Kp="OneHot",Yp="Pack",Zp="PadV2",Qp="Pow",tm="Prelu",em="Prod",nm="RaggedGather",rm="RaggedTensorToTensor",sm="Range",im="Real",om="Reciprocal",am="Relu",um="Reshape",lm="ResizeNearestNeighbor",cm="ResizeNearestNeighborGrad",hm="ResizeBilinear",fm="ResizeBilinearGrad",dm="Relu6",pm="Reverse",mm="Round",ym="Rsqrt",bm="ScatterNd",gm="SearchSorted",wm="Select",xm="Selu",vm="Slice",$m="Sin",km="Sinh",Nm="Sign",Cm="Sigmoid",Sm="Softplus",Em="Sqrt",Tm="Sum",_m="SpaceToBatchND",Rm="SplitV",Am="Softmax",Om="SparseFillEmptyRows",Im="SparseReshape",Fm="SparseSegmentMean",Mm="SparseSegmentSum",Dm="SparseToDense",Lm="SquaredDifference",Pm="Square",Vm="StridedSlice",Bm="StringNGrams",zm="StringSplit",Wm="StringToHashBucketFast",jm="Sub",Um="Tan",Gm="Tanh",qm="Tile",Hm="TopK",Xm="Transform",Jm="Transpose",Km="Unique",Ym="Unpack",Zm="UnsortedSegmentSum",Qm="ZerosLike",ty="Step",ey="FromPixels",ny="RotateWithOffset",ry="_FusedMatMul",sy="FusedConv2D",iy="FusedDepthwiseConv2D",oy=xt("kernelRegistry",()=>new Map),ay=xt("gradRegistry",()=>new Map);var uy=Tt,ly=null;try{ly=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(JJ){}Tt.prototype.h,Object.defineProperty(Tt.prototype,"h",{value:!0}),Tt.isLong=_t;var cy={},hy={};Tt.fromInt=Rt,Tt.fromNumber=At,Tt.fromBits=Ot;var fy=Math.pow;Tt.fromString=It,Tt.fromValue=Ft;var dy=4294967296,py=dy*dy,my=py/2,yy=Rt(1<<24),by=Rt(0);Tt.ZERO=by;var gy=Rt(0,!0);Tt.UZERO=gy;var wy=Rt(1);Tt.ONE=wy;var xy=Rt(1,!0);Tt.UONE=xy;var vy=Rt(-1);Tt.NEG_ONE=vy;var $y=Ot(-1,2147483647,!1);Tt.MAX_VALUE=$y;var ky=Ot(-1,-1,!0);Tt.MAX_UNSIGNED_VALUE=ky;var Ny=Ot(0,-2147483648,!1);Tt.MIN_VALUE=Ny;var Cy=Tt.prototype;Cy.toInt=function(){return this.unsigned?this.low>>>0:this.low},Cy.toNumber=function(){return this.unsigned?(this.high>>>0)*dy+(this.low>>>0):this.high*dy+(this.low>>>0)},Cy.toString=function(t){if(2>(t=t||10)||t>36)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(Ny)){var e=At(t),n=this.div(e),r=n.mul(e).sub(this);return n.toString(t)+r.toInt().toString(t)}return"-"+this.neg().toString(t)}for(var s=At(fy(t,6),this.unsigned),i=this,o="";;){var a=i.div(s),u=(i.sub(a.mul(s)).toInt()>>>0).toString(t);if((i=a).isZero())return u+o;for(;6>u.length;)u="0"+u;o=""+u+o}},Cy.getHighBits=function(){return this.high},Cy.getHighBitsUnsigned=function(){return this.high>>>0},Cy.getLowBits=function(){return this.low},Cy.getLowBitsUnsigned=function(){return this.low>>>0},Cy.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Ny)?64:this.neg().getNumBitsAbs();for(var t=0!=this.high?this.high:this.low,e=31;e>0&&!(t&1<<e);e--);return 0!=this.high?e+33:e+1},Cy.isZero=function(){return 0===this.high&&0===this.low},Cy.eqz=Cy.isZero,Cy.isNegative=function(){return!this.unsigned&&0>this.high},Cy.isPositive=function(){return this.unsigned||this.high>=0},Cy.isOdd=function(){return!(1&~this.low)},Cy.isEven=function(){return!(1&this.low)},Cy.equals=function(t){return _t(t)||(t=Ft(t)),(this.unsigned===t.unsigned||this.high>>>31!=1||t.high>>>31!=1)&&this.high===t.high&&this.low===t.low},Cy.eq=Cy.equals,Cy.notEquals=function(t){return!this.eq(t)},Cy.neq=Cy.notEquals,Cy.ne=Cy.notEquals,Cy.lessThan=function(t){return 0>this.comp(t)},Cy.lt=Cy.lessThan,Cy.lessThanOrEqual=function(t){return 0>=this.comp(t)},Cy.lte=Cy.lessThanOrEqual,Cy.le=Cy.lessThanOrEqual,Cy.greaterThan=function(t){return this.comp(t)>0},Cy.gt=Cy.greaterThan,Cy.greaterThanOrEqual=function(t){return this.comp(t)>=0},Cy.gte=Cy.greaterThanOrEqual,Cy.ge=Cy.greaterThanOrEqual,Cy.compare=function(t){if(_t(t)||(t=Ft(t)),this.eq(t))return 0;var e=this.isNegative(),n=t.isNegative();return e&&!n?-1:!e&&n?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1},Cy.comp=Cy.compare,Cy.negate=function(){return!this.unsigned&&this.eq(Ny)?Ny:this.not().add(wy)},Cy.neg=Cy.negate,Cy.add=function(t){_t(t)||(t=Ft(t));var e=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,i=t.high>>>16,o=65535&t.high,a=t.low>>>16,u=0,l=0,c=0,h=0;return c+=(h+=s+(65535&t.low))>>>16,l+=(c+=r+a)>>>16,u+=(l+=n+o)>>>16,u+=e+i,Ot((c&=65535)<<16|(h&=65535),(u&=65535)<<16|(l&=65535),this.unsigned)},Cy.subtract=function(t){return _t(t)||(t=Ft(t)),this.add(t.neg())},Cy.sub=Cy.subtract,Cy.multiply=function(t){if(this.isZero())return by;if(_t(t)||(t=Ft(t)),ly)return Ot(ly.mul(this.low,this.high,t.low,t.high),ly.get_high(),this.unsigned);if(t.isZero())return by;if(this.eq(Ny))return t.isOdd()?Ny:by;if(t.eq(Ny))return this.isOdd()?Ny:by;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(yy)&&t.lt(yy))return At(this.toNumber()*t.toNumber(),this.unsigned);var e=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,i=t.high>>>16,o=65535&t.high,a=t.low>>>16,u=65535&t.low,l=0,c=0,h=0,f=0;return h+=(f+=s*u)>>>16,c+=(h+=r*u)>>>16,h&=65535,c+=(h+=s*a)>>>16,l+=(c+=n*u)>>>16,c&=65535,l+=(c+=r*a)>>>16,c&=65535,l+=(c+=s*o)>>>16,l+=e*u+n*a+r*o+s*i,Ot((h&=65535)<<16|(f&=65535),(l&=65535)<<16|(c&=65535),this.unsigned)},Cy.mul=Cy.multiply,Cy.divide=function(t){if(_t(t)||(t=Ft(t)),t.isZero())throw Error("division by zero");var e,n,r;if(ly)return this.unsigned||-2147483648!==this.high||-1!==t.low||-1!==t.high?Ot((this.unsigned?ly.div_u:ly.div_s)(this.low,this.high,t.low,t.high),ly.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?gy:by;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return gy;if(t.gt(this.shru(1)))return xy;r=gy}else{if(this.eq(Ny))return t.eq(wy)||t.eq(vy)?Ny:t.eq(Ny)?wy:(e=this.shr(1).div(t).shl(1)).eq(by)?t.isNegative()?wy:vy:(n=this.sub(t.mul(e)),r=e.add(n.div(t)));if(t.eq(Ny))return this.unsigned?gy:by;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();r=by}for(n=this;n.gte(t);){e=Math.max(1,Math.floor(n.toNumber()/t.toNumber()));for(var s=Math.ceil(Math.log(e)/Math.LN2),i=s>48?fy(2,s-48):1,o=At(e),a=o.mul(t);a.isNegative()||a.gt(n);)a=(o=At(e-=i,this.unsigned)).mul(t);o.isZero()&&(o=wy),r=r.add(o),n=n.sub(a)}return r},Cy.div=Cy.divide,Cy.modulo=function(t){return _t(t)||(t=Ft(t)),ly?Ot((this.unsigned?ly.rem_u:ly.rem_s)(this.low,this.high,t.low,t.high),ly.get_high(),this.unsigned):this.sub(this.div(t).mul(t))},Cy.mod=Cy.modulo,Cy.rem=Cy.modulo,Cy.not=function(){return Ot(~this.low,~this.high,this.unsigned)},Cy.and=function(t){return _t(t)||(t=Ft(t)),Ot(this.low&t.low,this.high&t.high,this.unsigned)},Cy.or=function(t){return _t(t)||(t=Ft(t)),Ot(this.low|t.low,this.high|t.high,this.unsigned)},Cy.xor=function(t){return _t(t)||(t=Ft(t)),Ot(this.low^t.low,this.high^t.high,this.unsigned)},Cy.shiftLeft=function(t){return _t(t)&&(t=t.toInt()),0==(t&=63)?this:32>t?Ot(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):Ot(0,this.low<<t-32,this.unsigned)},Cy.shl=Cy.shiftLeft,Cy.shiftRight=function(t){return _t(t)&&(t=t.toInt()),0==(t&=63)?this:32>t?Ot(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):Ot(this.high>>t-32,0>this.high?-1:0,this.unsigned)},Cy.shr=Cy.shiftRight,Cy.shiftRightUnsigned=function(t){if(_t(t)&&(t=t.toInt()),0==(t&=63))return this;var e=this.high;return 32>t?Ot(this.low>>>t|e<<32-t,e>>>t,this.unsigned):Ot(32===t?e:e>>>t-32,0,this.unsigned)},Cy.shru=Cy.shiftRightUnsigned,Cy.shr_u=Cy.shiftRightUnsigned,Cy.toSigned=function(){return this.unsigned?Ot(this.low,this.high,!1):this},Cy.toUnsigned=function(){return this.unsigned?this:Ot(this.low,this.high,!0)},Cy.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()},Cy.toBytesLE=function(){var t=this.high,e=this.low;return[255&e,e>>>8&255,e>>>16&255,e>>>24,255&t,t>>>8&255,t>>>16&255,t>>>24]},Cy.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,255&t,e>>>24,e>>>16&255,e>>>8&255,255&e]},Tt.fromBytes=(t,e,n)=>n?Tt.fromBytesLE(t,e):Tt.fromBytesBE(t,e),Tt.fromBytesLE=(t,e)=>new Tt(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e),Tt.fromBytesBE=(t,e)=>new Tt(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e);const Sy=e(uy),Ey=Sy||t({__proto__:null,default:Sy},[uy]),Ty=Mt("c3a5c85c97cb3127"),_y=Mt("b492b66fbe98f273"),Ry=Mt("9ae16a3b2f90404f"),Ay=Object.freeze(Object.defineProperty({__proto__:null,arraysEqual:V,assert:F,assertNonNegativeIntegerDimensions:dt,assertNonNull:D,assertShapesMatch:M,bytesFromStringArray:tt,bytesPerElement:Q,checkConversionForErrors:J,clamp:R,computeStrides:at,createScalarValue:Ut,createShuffledIndices(t){const e=new Uint32Array(t);for(let n=0;t>n;++n)e[n]=n;return _(e),e},decodeString:Jt,distSquared(t,e){let n=0;for(let r=0;r<t.length;r++){const s=Number(t[r])-Number(e[r]);n+=s*s}return n},encodeString:Xt,fetch:Ht,fingerPrint64:jt,flatten:L,getArrayFromDType:X,getTypedArrayFromDType:H,hasEncodingLoss:Y,hexToLong:Mt,indexToLoc:mt,inferDtype:st,inferFromImplicitShape:U,isBoolean:nt,isFunction:it,isInt:B,isNumber:rt,isPromise:yt,isScalarShape(t){return 0===t.length},isString:et,isTypedArray:Z,isValidDtype:K,locToIndex:pt,makeOnesTypedArray:ct,makeZerosNestedTypedArray:ft,makeZerosTypedArray:ht,nearestDivisor:ot,nearestLargerEven:A,now:qt,parseAxisParam:G,randUniform(t,e){const n=Math.random();return e*n+(1-n)*t},repeatedTry:j,rightPad:W,shuffle:_,shuffleCombo(t,e){if(t.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${t.length}Second array length was ${e.length}`);let n=t.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,O(t,n,r),O(e,n,r)},sizeFromShape:P,sizeToSquarishShape:z,squeezeShape:q,sum:I,swap:O,tanh(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;{const e=Math.exp(2*t);return(e-1)/(e+1)}},toNestedArray:lt,toTypedArray:Gt},Symbol.toStringTag,{value:"Module"}));class Oy{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new Iy)}profileKernel(t,e,n){let r;const s=()=>{r=n()};let i;const o=qt();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(const t of r)t.dataSync();i=Promise.resolve({kernelMs:qt()-o})}if(gt().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let a=0;a<r.length;a++){const t=r[a];t.data().then(e=>{Kt(e,t.dtype)})}return{kernelName:t,outputs:r,inputs:e,timeMs:i.then(t=>t.kernelMs),extraInfo:i.then(t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:s,extraInfo:i}=t;n.forEach(t=>{Promise.all([t.data(),r,i]).then(n=>{this.logger.logKernelProfile(e,t,n[0],n[1],s,n[2])})})}}class Iy{logKernelProfile(t,e,n,r,s,i){"number"==typeof r?W(`${r}ms`,9):r.error,W(t,25),e.rank,e.size,W(e.shape.toString(),14);let o="";for(const a in s){const t=s[a];if(null!=t){const n=t.shape||e.shape,r=n.length;o+=`${a}: ${r}D ${r>0?n:""} `}}}}class Fy{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=P(t),null!=n){const t=n.length;F(t===this.size,()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||X(e,this.size),this.strides=at(t)}set(t,...e){0===e.length&&(e=[0]),F(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const r of t){if(0>r||r>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}e++}let n=t[t.length-1];for(let r=0;r<t.length-1;++r)n+=this.strides[r]*t[r];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return My().makeTensor(this.values,this.shape,this.dtype)}}let My=null,Dy=null;class Ly{constructor(t,e,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=P(t),this.strides=at(t),this.dataId=n,this.id=r,this.rankType=5>this.rank?this.rank.toString():"higher"}get rank(){return this.shape.length}buffer(){return cf(this,null,function*(){const t=yield this.data();return Dy.buffer(this.shape,this.dtype,t)})}bufferSync(){return Dy.buffer(this.shape,this.dtype,this.dataSync())}array(){return cf(this,null,function*(){const t=yield this.data();return lt(this.shape,t,"complex64"===this.dtype)})}arraySync(){return lt(this.shape,this.dataSync(),"complex64"===this.dtype)}data(){return cf(this,null,function*(){this.throwIfDisposed();const t=My().read(this.dataId);if("string"===this.dtype){const n=yield t;try{return n.map(t=>Jt(t))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t})}dataToGPU(t){return this.throwIfDisposed(),My().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=My().readSync(this.dataId);if("string"===this.dtype)try{return t.map(t=>Jt(t))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}bytes(){return cf(this,null,function*(){this.throwIfDisposed();const t=yield My().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)})}dispose(){this.isDisposed||(My().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Dy.print(this,t)}clone(){return this.throwIfDisposed(),Dy.clone(this)}toString(t=!1){return Yt(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Dy.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),My().makeVariable(this,t,e,n)}}Object.defineProperty(Ly,Symbol.hasInstance,{value(t){return!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed}}),ne();class Py extends Ly{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!V(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);My().disposeTensor(this),this.dataId=t.dataId,My().incRef(this,null)}dispose(){My().disposeVariable(this),this.isDisposedInternal=!0}}var Vy,By,zy,Wy,jy,Uy,Gy,qy,Hy,Xy;Object.defineProperty(Py,Symbol.hasInstance,{value(t){return t instanceof Ly&&null!=t.assign&&t.assign instanceof Function}}),(By=Vy||(Vy={})).R0="R0",By.R1="R1",By.R2="R2",By.R3="R3",By.R4="R4",By.R5="R5",By.R6="R6",(Wy=zy||(zy={})).float32="float32",Wy.int32="int32",Wy.bool="int32",Wy.complex64="complex64",(Uy=jy||(jy={})).float32="float32",Uy.int32="int32",Uy.bool="bool",Uy.complex64="complex64",(qy=Gy||(Gy={})).float32="float32",qy.int32="float32",qy.bool="float32",qy.complex64="complex64",(Xy=Hy||(Hy={})).float32="complex64",Xy.int32="complex64",Xy.bool="complex64",Xy.complex64="complex64";const Jy={float32:Gy,int32:zy,bool:jy,complex64:Hy},Ky=Object.freeze(Object.defineProperty({__proto__:null,assertTypesMatch:oe,getTensorsInContainer:ue,isTensorInList:ae,makeTypesMatch:ie},Symbol.toStringTag,{value:"Module"}));class Yy{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class Zy{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Yy}ready(){return cf(this,null,function*(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(yield this.initializeBackend(n).success)return void(yield this.setBackend(n))}throw new Error("Could not initialize any backends, all backend initializations failed.")})}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(vt(),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}setBackend(t){return cf(this,null,function*(){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?yield e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new Oy(this.backendInstance),!0})}setupRegisteredKernels(){Nt(this.backendName).forEach(t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){Nt(t).forEach(e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof Hf||"function"!=typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,r=n.then(n=>e>=this.pendingBackendInitId&&(this.registry[t]=n,this.pendingBackendInit=null,!0)).catch(t=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,vt(),vt(t.stack||t.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return vt(),vt(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,s=this.readSync(e),i=r.refCount(e);r.disposeData(e,!0),n.backend=t,t.move(e,s,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=e(),n))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(r){throw e(),r}}nextTensorId(){return Zy.nextTensorId++}nextVariableId(){return Zy.nextVariableId++}clone(t){const e=Qy.runKernel(fp,{x:t}),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],t=>({x(){const e={x:t};return Qy.runKernel(vd,e,{dtype:"float32"})}}),[],{}),e}runKernel(t,e,n){if(null==this.backendName&&this.backend,null==$t(t,this.backendName))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let s=0;n.forEach(t=>{s+="complex64"===t.dtype?3:1});const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-e-s-i;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${t}'`)}runKernelFunc(t){let e,n=[];const r=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;let o,a;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=ce(t)?t.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(ce(t)){const{kernelName:e,inputs:s,attrs:i}=t;null==this.backendName&&this.backend;const u=$t(e,this.backendName);F(null!=u,()=>`Cannot find registered kernel '${e}' for backend '${this.backendName}'`),o=()=>{const t=this.backend.numDataIds();a=u.kernelFunc({inputs:s,attrs:i,backend:this.backend});const o=Array.isArray(a)?a:[a];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(e,t,o);const l=o.map(t=>null!=t.rank?t:this.makeTensorFromTensorInfo(t));if(r){const t=this.getTensorsForGradient(e,s,l);n=this.saveTensorsForBackwardMode(t)}return l}}else{const{forwardFunc:e}=t,s=t=>{r&&(n=t.map(t=>this.keep(this.clone(t))))};o=()=>{const t=this.backend.numDataIds();a=this.tidy(()=>e(this.backend,s));const n=Array.isArray(a)?a:[a];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,t,n),n}}const{inputs:l,attrs:c}=t,h=ce(t)?null:t.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(u,l,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),e=f.outputs):e=o()}),r&&this.addTapeNode(u,l,e,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(t=>null!=l[t]?l[t].shape:null),outputShapes:e.map(t=>t.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(a)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(t,e,n){const r=kt(t);if(null!=r){const t=r.inputsToSave||[],s=r.outputsToSave||[];let i;r.saveAllInputs?(F(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(e).map(t=>e[t])):i=t.map(t=>e[t]);const o=n.filter((t,e)=>s[e]);return i.concat(o)}return[]}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=t;"string"===n&&et(t[0])&&(s=t.map(t=>Xt(t)));const i=r.write(s,e,n),o=new Ly(e,n,i,this.nextTensorId());if(this.trackTensor(o,r),"string"===n){const t=this.state.tensorInfo.get(i),e=tt(s);this.state.numBytes+=e-t.bytes,t.bytes=e}return o}makeTensorFromDataId(t,e,n,r){const s={dataId:t,shape:e,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(t,e){const{dataId:n,shape:r,dtype:s}=t,i=new Ly(r,s,n,this.nextTensorId());return this.trackTensor(i,e),i}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const s=new Py(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(t,e){this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*Q(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof Py||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,"string"===t.dtype&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),"complex64"!==t.dtype&&"string"!==t.dtype){const e=t.size*Q(t.dtype);this.state.numBytes-=e}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}profile(t){return cf(this,null,function*(){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=yield t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(t=>t.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const t of this.state.activeProfile.kernels)t.kernelTimeMs=yield t.kernelTimeMs,t.extraInfo=yield t.extraInfo;return this.state.activeProfile})}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,s,i){const o={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:s},a=kt(t);null!=a&&(r=a.gradFunc),null!=r&&(o.gradient=t=>(t=t.map((t,e)=>{if(null==t){const t=n[e],r=ht(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t}),r(t.length>1?t:t[0],s,i))),this.state.activeTape.push(o)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=ue(t),n=new Set(e.map(t=>t.id));for(let s=0;s<this.state.activeScope.track.length;s++){const t=this.state.activeScope.track[s];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(t=>{t.kept||t.scopeId!==r.id||this.track(t)})}gradients(t,e,n,r=!1){if(F(e.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));F(s instanceof Ly,()=>"The result y returned by f() must be a tensor.");const i=((t,e,n)=>{const r={},s={};for(let u=0;u<e.length;u++)r[e[u].id]=!0;for(let u=0;u<t.length;u++){const n=t[u],i=n.inputs;for(const t in i){const o=i[t];let a=!1;for(let t=0;t<e.length;t++)if(r[o.id]){n.outputs.forEach(t=>r[t.id]=!0),a=!0,s[n.id]=!0;break}if(a)break}}const i={};i[n.id]=!0;const o={};for(let u=t.length-1;u>=0;u--){const e=t[u],n=e.inputs;for(let t=0;t<e.outputs.length;t++)if(i[e.outputs[t].id]){for(const t in n)i[n[t].id]=!0,o[e.id]=!0;break}}const a=[];for(let u=0;u<t.length;u++){const e=t[u];if(s[e.id]&&o[e.id]){const t={};for(const s in e.inputs){const n=e.inputs[s];r[n.id]&&(t[s]=n)}const n=Object.assign({},e);n.inputs=t,n.outputs=e.outputs,a.push(n)}}return a})(this.state.activeTape,e,s);if(!r&&0===i.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const t={};t[s.id]=null==n?(t=>{const e=ct(P(t),"float32");return Qy.makeTensor(e,t,"float32")})(s.shape):n,((t,e,n,r)=>{for(let s=e.length-1;s>=0;s--){const i=e[s],o=[];if(i.outputs.forEach(e=>{const n=t[e.id];null!=n?o.push(n):o.push(null)}),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const a=i.gradient(o);for(const e in i.inputs){if(!(e in a))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(a)}.`);const s=n(()=>a[e]());if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${s.dtype}'`);const o=i.inputs[e];if(!V(s.shape,o.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${e}' has shape '${s.shape}', which does not match the shape of the input '${o.shape}'`);if(null==t[o.id])t[o.id]=s;else{const e=t[o.id];t[o.id]=r(e,s),e.dispose()}}}})(t,i,t=>this.tidy(t),fe);const r=e.map(e=>t[e.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(t=>{for(const e of t.saved)e.dispose()}),this.state.activeTape=null),{value:s,grads:r}})}customGrad(t){return F(it(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{let n;F(e.every(t=>t instanceof Ly),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};return e.forEach((t,e)=>{r[e]=t}),this.runKernelFunc({forwardFunc(r,s){return n=t(...e,s),F(n.value instanceof Ly,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),F(it(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value},backwardsFunc(t,r){const s=n.gradFunc(t,r),i=Array.isArray(s)?s:[s];F(i.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),F(i.every(t=>t instanceof Ly),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const o={};return i.forEach((t,e)=>{o[e]=()=>t}),o},inputs:r})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}time(t){return cf(this,null,function*(){const e=qt(),n=yield this.backend.time(t);return n.wallMs=qt()-e,n})}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Yy;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Zy.nextTensorId=0,Zy.nextVariableId=0;const Qy=he();let tb;const eb=Object.freeze(Object.defineProperty({__proto__:null,isBrowser:pe,isMobile:de,mockIsMobile(t){tb=t}},Symbol.toStringTag,{value:"Module"})),nb=gt();nb.registerFlag("DEBUG",()=>!1,t=>{}),nb.registerFlag("IS_BROWSER",()=>pe()),nb.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),nb.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),nb.registerFlag("PROD",()=>!1),nb.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>nb.getBool("DEBUG")),nb.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),nb.registerFlag("IS_TEST",()=>!1),nb.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0),nb.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),nb.registerFlag("ENGINE_COMPILE_ONLY",()=>!1),nb.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),nb.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);const rb="__op",sb=xe({complex_(t,e){const n=ge(t,"real","complex"),r=ge(e,"imag","complex");M(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return Qy.runKernel(Nd,s)}}),ib={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},ob="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);class ab{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==ab.instance&&(ab.instance=new ab),ab.instance}static registerSaveRouter(t){ab.getInstance().saveRouters.push(t)}static registerLoadRouter(t){ab.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return ab.getHandlers(t,"save")}static getLoadHandlers(t,e){return ab.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?ab.getInstance().loadRouters:ab.getInstance().saveRouters).forEach(e=>{const s=e(t,n);null!==s&&r.push(s)}),r}}const ub=t=>ab.getSaveHandlers(t),lb=(t,e)=>ab.getLoadHandlers(t,e),cb="tensorflowjs",hb="models_store",fb="model_info_store";class db{constructor(t){if(this.indexedDB=Me(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}save(t){return cf(this,null,function*(){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)})}load(){return cf(this,null,function*(){return this.databaseAction(this.modelPath)})}databaseAction(t,e){return new Promise((t,n)=>{const r=this.indexedDB.open(cb,1);r.onupgradeneeded=()=>De(r),r.onsuccess=()=>{const s=r.result;if(null==e){const e=s.transaction(hb,"readonly"),r=e.objectStore(hb).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(r.result.modelArtifacts)},r.onerror=t=>(s.close(),n(r.error)),e.oncomplete=()=>s.close()}else{const r=Oe(e),i=s.transaction(fb,"readwrite");let o=i.objectStore(fb);const a=o.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;a.onsuccess=()=>{u=s.transaction(hb,"readwrite");const a=u.objectStore(hb).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});a.onsuccess=()=>t({modelArtifactsInfo:r}),a.onerror=t=>{o=i.objectStore(fb);const e=o.delete(this.modelPath);e.onsuccess=()=>(s.close(),n(a.error)),e.onerror=t=>(s.close(),n(a.error))}},a.onerror=t=>(s.close(),n(a.error)),i.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}}},r.onerror=t=>n(r.error)})}}db.URL_SCHEME="indexeddb://";const pb=t=>{return gt().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(db.URL_SCHEME)?(e=t.slice(db.URL_SCHEME.length),new db(e)):null;var e};ab.registerSaveRouter(pb),ab.registerLoadRouter(pb);class mb{constructor(){this.indexedDB=Me()}listModels(){return cf(this,null,function*(){return new Promise((t,e)=>{const n=this.indexedDB.open(cb,1);n.onupgradeneeded=()=>De(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(fb,"readonly"),i=s.objectStore(fb).getAll();i.onsuccess=()=>{const e={};for(const t of i.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},i.onerror=t=>(r.close(),e(i.error)),s.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)})})}removeModel(t){return cf(this,null,function*(){var e;return t=(e=t).startsWith(db.URL_SCHEME)?e.slice(db.URL_SCHEME.length):e,new Promise((e,n)=>{const r=this.indexedDB.open(cb,1);r.onupgradeneeded=()=>De(r),r.onsuccess=()=>{const s=r.result,i=s.transaction(fb,"readwrite"),o=i.objectStore(fb),a=o.get(t);let u;a.onsuccess=()=>{if(null==a.result)return s.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const r=o.delete(t),i=()=>{u=s.transaction(hb,"readwrite");const r=u.objectStore(hb).delete(t);r.onsuccess=()=>e(a.result.modelArtifactsInfo),r.onerror=t=>n(a.error)};r.onsuccess=i,r.onerror=t=>(i(),s.close(),n(a.error))}},a.onerror=t=>(s.close(),n(a.error)),i.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},r.onerror=t=>n(r.error)})})}}const yb="/",bb="tensorflowjs_models",gb="info",wb="model_topology",xb="weight_specs",vb="weight_data",$b="model_metadata";class kb{constructor(t){if(!gt().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=Le(this.modelPath)}save(t){return cf(this,null,function*(){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(t.modelTopology),r=JSON.stringify(t.weightSpecs),s=Oe(t);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,(t=>{if(ob)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let r=0,s=e.length;s>r;r++)n+=String.fromCharCode(e[r]);return btoa(n)})(t.weightData));const e={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:null!=t.signature?t.signature:void 0,userDefinedMetadata:null!=t.userDefinedMetadata?t.userDefinedMetadata:void 0,modelInitializer:null!=t.modelInitializer?t.modelInitializer:void 0,trainingConfig:null!=t.trainingConfig?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(e)),{modelArtifactsInfo:s}}catch(e){throw Pe(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}})}load(){return cf(this,null,function*(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const t=JSON.parse(s);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer),null!=t.trainingConfig&&(e.trainingConfig=t.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=(t=>{if(ob){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let r=0;r<e.length;++r)n.set([e.charCodeAt(r)],r);return n.buffer})(i),e})}}kb.URL_SCHEME="localstorage://";const Nb=t=>{return gt().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(kb.URL_SCHEME)?(e=t.slice(kb.URL_SCHEME.length),new kb(e)):null;var e};ab.registerSaveRouter(Nb),ab.registerLoadRouter(Nb);class Cb{constructor(){F(gt().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),F("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}listModels(){return cf(this,null,function*(){const t={},e=bb+yb,n=yb+gb;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(e)&&s.endsWith(n)&&(t[Ve(s)]=JSON.parse(this.LS.getItem(s)))}return t})}removeModel(t){return cf(this,null,function*(){var e;const n=Le(t=(e=t).startsWith(kb.URL_SCHEME)?e.slice(kb.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(this.LS.getItem(n.info));return Pe(n),r})}}const Sb="://";class Eb{constructor(){this.managers={}}static getInstance(){return null==Eb.instance&&(Eb.instance=new Eb),Eb.instance}static registerManager(t,e){F(null!=t,()=>"scheme must not be undefined or null."),t.endsWith(Sb)&&(t=t.slice(0,t.indexOf(Sb))),F(t.length>0,()=>"scheme must not be an empty string.");const n=Eb.getInstance();F(null==n.managers[t],()=>`A model store manager is already registered for scheme '${t}'.`),n.managers[t]=e}static getManager(t){const e=Eb.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(Eb.getInstance().managers)}}class Tb{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){window&&gt().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",t=>{t.source===window&&t.data.name===this.messageName&&(t.stopPropagation(),(0,this.functionRefs[t.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))},!0))):setTimeout(t,e)}}if(gt().get("IS_BROWSER")){gt().setPlatform("browser",new Tb);try{Eb.registerManager(kb.URL_SCHEME,new Cb)}catch(KJ){}try{Eb.registerManager(db.URL_SCHEME,new mb)}catch(KJ){}}let _b;gt().get("IS_NODE")&&!gt().get("IS_BROWSER")&&gt().setPlatform("node",new class{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=gt().global.fetch?gt().global.fetch(t,e):(null==_b&&(_b=require("node-fetch")),_b(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}});const Rb=xe({cast_(t,e){const n=ge(t,"x","cast");if(!K(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:e};return Qy.runKernel(vd,r,s)}}),Ab=xe({clone_(t){const e={x:ge(t,"x","clone","string_or_numeric")};return Qy.runKernel(fp,e)}});he(),Dy={buffer:We,cast:Rb,clone:Ab,print:je};class Ob{constructor(t){if(!gt().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Ob.URL_SCHEME)&&(t=t.slice(Ob.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelJsonFileName=t+".json",this.weightDataFileName=t+".weights.bin"}save(t){return cf(this,null,function*(){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r=_e(t,n),s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),i=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=s,yield Ue(()=>i.dispatchEvent(new MouseEvent("click"))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,yield Ue(()=>t.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Oe(t)}}})}}Ob.URL_SCHEME="downloads://";class Ib{constructor(t){if(null==t||1>t.length)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.jsonFile=t[0],this.weightsFiles=t.slice(1)}load(){return cf(this,null,function*(){return new Promise((t,e)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),s=r.modelTopology;if(null==s)return void e(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void e(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void t({modelTopology:s});const i=Ae(r,t=>this.loadWeights(t));t(i)},n.onerror=t=>e(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})})}loadWeights(t){const e=[],n=[];for(const i of t)e.push(...i.weights),n.push(...i.paths);const r=this.checkManifestAndWeightFiles(t),s=n.map(t=>this.loadWeightsFile(t,r[t]));return Promise.all(s).then(t=>[e,Ee(t)])}loadWeightsFile(t,e){return new Promise((n,r)=>{const s=new FileReader;s.onload=t=>{const e=t.target.result;n(e)},s.onerror=e=>r(`Failed to weights data from file of path '${t}'.`),s.readAsArrayBuffer(e)})}checkManifestAndWeightFiles(t){const e=[],n=this.weightsFiles.map(t=>Te(t.name)),r={};for(const s of t)s.paths.forEach(t=>{const s=Te(t);if(-1!==e.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(e.push(s),-1===n.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);r[t]=this.weightsFiles[n.indexOf(s)]});if(e.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${e.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}ab.registerSaveRouter(t=>gt().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Ob.URL_SCHEME)?((t="model")=>new Ob(t))(t.slice(Ob.URL_SCHEME.length)):null);class Fb{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(F("function"==typeof e.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=gt().platform.fetch,F(null!=t&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&F(2===t.length,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}save(t){return cf(this,null,function*(){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r=_e(t,n);e.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=yield this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:Oe(t),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)})}load(){return cf(this,null,function*(){const t=yield this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=yield t.json()}catch(JJ){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,r=e.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Ae(e,t=>this.loadWeights(t))})}loadWeights(t){return cf(this,null,function*(){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=(t=>{const e=t.lastIndexOf("/"),n=t.lastIndexOf("?");return[t.substring(0,e)+"/",n>e?t.substring(n):""]})(e),s=this.weightPathPrefix||n,i=Ie(t),o=[],a=[];for(const u of t)for(const t of u.paths)null!=this.weightUrlConverter?a.push(this.weightUrlConverter(t)):o.push(s+t+r);return this.weightUrlConverter&&o.push(...yield Promise.all(a)),[i,Ee(yield qe(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]})}}Fb.URL_SCHEME_REGEX=/^https?:\/\//;const Mb=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every(t=>Je(t)):Je(t),n)return Ke(t,e)}return null};ab.registerSaveRouter(Mb),ab.registerLoadRouter(Mb);class Db{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}}class Lb{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}}class Pb{constructor(t){t.load&&(this.load=()=>Promise.resolve(t.load())),t.save&&(this.save=e=>Promise.resolve(t.save(e)))}}const Vb=Object.freeze(Object.defineProperty({__proto__:null,browserFiles(t){return new Ib(t)},browserHTTPRequest:Ye,concatenateArrayBuffers:Ee,copyModel(t,e){return cf(this,null,function*(){return ze(t,e,!1)})},decodeWeights:Ne,encodeWeights:ke,fromMemory(t,e,n,r){return new Pb(Ze(...arguments))},fromMemorySync:Ze,getLoadHandlers:lb,getModelArtifactsForJSON:Ae,getModelArtifactsForJSONSync:Re,getModelArtifactsInfoForJSON:Oe,getSaveHandlers:ub,getWeightSpecs:Ie,http:Ke,isHTTPScheme:Je,listModels(){return cf(this,null,function*(){const t=Eb.getSchemes(),e={};for(const n of t){const t=yield Eb.getManager(n).listModels();for(const r in t)e[n+Sb+r]=t[r]}return e})},loadWeights:He,moveModel(t,e){return cf(this,null,function*(){return ze(t,e,!0)})},registerLoadRouter(t){return ab.registerLoadRouter(t)},registerSaveRouter(t){return ab.registerSaveRouter(t)},removeModel(t){return cf(this,null,function*(){const e=Be(t);return Eb.getManager(e.scheme).removeModel(e.path)})},weightsLoaderFactory:Xe,withSaveHandler(t){return new Lb(t)},withSaveHandlerSync(t){return new Lb(t)}},Symbol.toStringTag,{value:"Module"})),Bb=xe({matMul_(t,e,n=!1,r=!1){let s=ge(t,"a","matMul"),i=ge(e,"b","matMul");[s,i]=ie(s,i);const o={a:s,b:i},a={transposeA:n,transposeB:r};return Qy.runKernel(yd,o,a)}}),zb=xe({oneHot_(t,e,n=1,r=0,s="int32"){if(2>e)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const i={indices:ge(t,"indices","oneHot","int32")},o={dtype:s,depth:e,onValue:n,offValue:r};return Qy.runKernel(Kp,i,o)}}),Wb=xe({imag_(t){const e={input:ge(t,"input","imag")};return Qy.runKernel(pp,e)}}),jb=xe({neg_(t){const e={x:ge(t,"x","neg")};return Qy.runKernel(Up,e)}}),Ub=xe({real_(t){const e={input:ge(t,"input","real")};return Qy.runKernel(im,e)}}),Gb=xe({transpose_(t,e,n){const r=ge(t,"x","transpose");if(null==e&&(e=r.shape.map((t,e)=>e).reverse()),F(r.rank===e.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${e}.`),e.forEach(t=>{F(t>=0&&t<r.rank,()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${e}`)}),1>=r.rank)return r.clone();const s={x:r},i={perm:e};return"complex64"===r.dtype?en(()=>{let t=Ub(r),e=Wb(r);return t=Qy.runKernel(Jm,{x:t},i),e=Qy.runKernel(Jm,{x:e},i),n&&(e=jb(e)),sb(t,e)}):Qy.runKernel(Jm,s,i)}}),qb=xe({confusionMatrix_(t,e,n){const r=ge(t,"labels","confusionMatrix"),s=ge(e,"predictions","confusionMatrix");F(null==n||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),F(1===r.rank,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),F(1===s.rank,()=>`Expected the rank of predictions to be 1, but got ${s.rank}`),F(r.shape[0]===s.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`),F(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);const i=zb(Rb(r,"int32"),n),o=zb(Rb(s,"int32"),n),a=Gb(i),u=Bb(a,o);return Rb(u,"int32")}}),Hb=Object.freeze(Object.defineProperty({__proto__:null,confusionMatrix:qb},Symbol.toStringTag,{value:"Module"})),Xb=Object.freeze(Object.defineProperty({__proto__:null,assertAndGetBroadcastShape:ln,getBroadcastDims:an,getReductionAxes:un},Symbol.toStringTag,{value:"Module"}));let Jb;const Kb=xe({fromPixels_:hn}),Yb=Object.freeze(Object.defineProperty({__proto__:null,fromPixels:Kb,fromPixelsAsync(t,e=3){return cf(this,null,function*(){let n=null;if(gt().getBool("WRAP_TO_IMAGEBITMAP")&&(t=>"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(t instanceof ImageBitmap)&&(t=>null!=t&&0!==t.width&&0!==t.height)(t)&&!(t=>null!=t&&t.data instanceof Uint8Array)(t))(t)){let e;try{e=yield createImageBitmap(t,{premultiplyAlpha:"none"})}catch(JJ){e=null}n=null!=e&&e.width===t.width&&e.height===t.height?e:t}else n=t;return hn(n,e)})},toPixels(t,e){return cf(this,null,function*(){let n=ge(t,"img","toPixels");if(!(t instanceof Ly)){const t=n;n=Rb(t,"int32"),t.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,s]=n.shape.slice(0,2),i=2===n.rank?1:n.shape[2];if(i>4||2===i)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${i}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const o=yield n.data(),a="float32"===n.dtype?255:1,u=new Uint8ClampedArray(s*r*4);for(let t=0;r*s>t;++t){const e=[0,0,0,255];for(let s=0;i>s;s++){const r=o[t*i+s];if("float32"===n.dtype){if(0>r||r>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${r}.`)}else if("int32"===n.dtype&&(0>r||r>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${r}.`);1===i?(e[0]=r*a,e[1]=r*a,e[2]=r*a):e[s]=r*a}const r=4*t;u[r+0]=Math.round(e[0]),u[r+1]=Math.round(e[1]),u[r+2]=Math.round(e[2]),u[r+3]=Math.round(e[3])}if(null!=e){e.width=s,e.height=r;const t=e.getContext("2d"),n=new ImageData(u,s,r);t.putImageData(n,0,0)}return n!==t&&n.dispose(),u})}},Symbol.toStringTag,{value:"Module"})),Zb=Object.freeze(Object.defineProperty({__proto__:null,prepareAndValidate:fn},Symbol.toStringTag,{value:"Module"})),Qb=Object.freeze(Object.defineProperty({__proto__:null,calculateShapes:mn,validateInput:pn,validateUpdateShape:dn},Symbol.toStringTag,{value:"Module"})),tg=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:yn,computeFlatOffset:En,computeOutShape:bn,getNormalizedAxes(t,e,n,r,s,i,o,a,u){const l=t.length;let c=new Array(l),h=new Array(l),f=new Array(l);if(e.length&&n>0){const u=e[0],l=n+1;c=vn(o,u,l,r,t),h=$n(a,u,l,s,t),f=gn(i,u,l,t)}else for(let d=0;l>d;d++)c[d]=Nn(o,r,i,t,d,u),h[d]=Cn(a,s,i,t,d,u),f[d]=kn(i,d,u);return{begin:c,end:h,strides:f}},isSliceContinous:Sn,maskToAxes(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e},parseSliceParams:Tn,sliceInfo:_n,startForAxis:Nn,startIndicesWithElidedDims:vn,stopForAxis:Cn,stopIndicesWithElidedDims:$n,stridesForAxis:kn,stridesWithElidedDims:gn},Symbol.toStringTag,{value:"Module"}));class eg{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class ng{constructor(){this.classNameMap={}}static getMap(){return null==ng.instance&&(ng.instance=new ng),ng.instance}static register(t){ng.getMap().classNameMap[t.className]=[t,t.fromConfig]}}const rg=Object.freeze(Object.defineProperty({__proto__:null,Serializable:eg,SerializationMap:ng,registerClass:An},Symbol.toStringTag,{value:"Module"})),sg=Object.freeze(Object.defineProperty({__proto__:null,TEST_EPSILON_FLOAT16:.1,createVideoElement(t){const e=document.createElement("video");return"playsInline"in e&&(e.playsInline=!0),e.muted=!0,e.loop=!0,e.style.position="fixed",e.style.left="0px",e.style.top="0px",e.preload="auto",e.appendChild(t),new Promise(t=>{e.addEventListener("loadeddata",n=>t(e)),e.load()})},encodeStrings:function t(e){for(let n=0;n<e.length;n++){const r=e[n];Array.isArray(r)?t(r):e[n]=Xt(r)}return e},expectArrayBuffersEqual(t,e){const n=new Float32Array(t),r=new Float32Array(e);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let s=0;s<r.length;s++)if(n[s]!==r[s])throw new Error(`Expected ArrayBuffer value at ${s} to be ${r[s]} but got ${n[s]} instead`)},expectArraysClose(t,e,n){return null==n&&(n=On()),In(t,e,(t,e)=>Fn(t,e,n))},expectArraysEqual(t,e){const n="string"==typeof e||"number"==typeof e||"boolean"==typeof e?[e]:e;return et(t)||et(t[0])||et(e)||et(e[0])?In(t,n,(t,e)=>t==e):In(t,e,(t,e)=>Fn(t,e,0))},expectNumbersClose(t,e,n){if(null==n&&(n=On()),!Fn(t,e,n))throw new Error(`Numbers differ: actual === ${t}, expected === ${e}`);"undefined"!=typeof expect&&expect().nothing()},expectPromiseToFail(t,e){t().then(()=>e.fail(),()=>e()),"undefined"!=typeof expect&&expect().nothing()},expectValuesInRange(t,e,n){for(let r=0;r<t.length;r++)if(t[r]<e||t[r]>n)throw new Error(`Value out of range:${t[r]} low: ${e}, high: ${n}`)},play(t){return cf(this,null,function*(){yield t.play(),"requestVideoFrameCallback"in t&&(yield new Promise(e=>{t.requestVideoFrameCallback(e)}))})},testEpsilon:On},Symbol.toStringTag,{value:"Module"})),ig="3.21.0",og=xe({add_(t,e){let n=ge(t,"a","add"),r=ge(e,"b","add");[n,r]=ie(n,r);const s={a:n,b:r};return Qy.runKernel(ed,s)}}),ag=xe({floorDiv_(t,e){let n=ge(t,"a","floorDiv"),r=ge(e,"b","floorDiv");[n,r]=ie(n,r);const s={a:n,b:r};return Qy.runKernel(op,s)}}),ug=xe({div_(t,e){let n=ge(t,"a","div"),r=ge(e,"b","div");if([n,r]=ie(n,r),"int32"===n.dtype&&"int32"===r.dtype)return ag(n,r);const s={a:n,b:r};return Qy.runKernel(Hd,s,{})}}),lg=xe({mul_(t,e){let n=ge(t,"a","mul"),r=ge(e,"b","mul");[n,r]=ie(n,r);const s={a:n,b:r};return Qy.runKernel(jp,s)}}),cg=xe({abs_(t){const e=ge(t,"x","abs");if("complex64"===e.dtype){const t={x:e};return Qy.runKernel(Cd,t)}{const t={x:e};return Qy.runKernel(Zf,t)}}}),hg=xe({acos_(t){const e={x:ge(t,"x","acos")};return Qy.runKernel(Qf,e)}}),fg=xe({acosh_(t){const e={x:ge(t,"x","acosh")};return Qy.runKernel(td,e)}}),dg=xe({addN_(t){F(Array.isArray(t),()=>"The argument passed to tf.addN() must be a list of tensors"),F(t.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${t.length}`);const e=t.map((t,e)=>ge(t,`tensors${e}`,"addN")),n=e[0];e.forEach(t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(t=>{if(!V(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=e;return Qy.runKernel(nd,r)}}),pg=xe({all_(t,e=null,n=!1){const r={x:ge(t,"x","all","bool")},s={axis:e,keepDims:n};return Qy.runKernel(rd,r,s)}}),mg=xe({any_(t,e=null,n=!1){const r={x:ge(t,"x","any","bool")},s={axis:e,keepDims:n};return Qy.runKernel(sd,r,s)}}),yg=xe({argMax_(t,e=0){const n={x:ge(t,"x","argMax")},r={axis:e};return Qy.runKernel(id,n,r)}}),bg=xe({argMin_(t,e=0){const n={x:ge(t,"x","argMin")},r={axis:e};return Qy.runKernel(od,n,r)}}),gg=xe({asin_(t){const e={x:ge(t,"x","asin")};return Qy.runKernel(ad,e)}}),wg=xe({asinh_(t){const e={x:ge(t,"x","asinh")};return Qy.runKernel(ud,e)}}),xg=xe({atan_(t){const e={x:ge(t,"x","atan")};return Qy.runKernel(ld,e)}}),vg=xe({atan2_(t,e){let n=ge(t,"a","atan2"),r=ge(e,"b","atan2");[n,r]=ie(n,r);const s={a:n,b:r};return Qy.runKernel(hd,s)}}),$g=xe({atanh_(t){const e={x:ge(t,"x","atanh")};return Qy.runKernel(cd,e)}}),kg=xe({reshape_(t,e){const n={x:ge(t,"x","reshape","string_or_numeric")},r={shape:e};return Qy.runKernel(um,n,r)}}),Ng=xe({avgPool_(t,e,n,r,s){const i=ge(t,"x","avgPool","float32");F(qn(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let o=i,a=!1;3===i.rank&&(a=!0,o=kg(i,[1,i.shape[0],i.shape[1],i.shape[2]])),F(4===o.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),Xn("avgPool",r,s);const u={x:o},l={filterSize:e,strides:n,pad:r,dimRoundingMode:s};let c=Qy.runKernel(fd,u,l);return c=Rb(c,i.dtype),a?kg(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Cg=xe({avgPool3d_(t,e,n,r,s,i="NDHWC"){const o=ge(t,"x","avgPool3d","float32");let a=o,u=!1;4===o.rank&&(u=!0,a=kg(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),F(5===a.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),F("NDHWC"===i,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),Xn("avgPool3d",r,s);const l={x:a},c={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:i};let h=Qy.runKernel(pd,l,c);return h=Rb(h,a.dtype),u?kg(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Sg=xe({concat_(t,e=0){F(t.length>=1,()=>"Pass at least one tensor to concat");const n=we(t,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach(t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)}),1===n.length)return Ab(n[0]);const r=n,s={axis:e};return Qy.runKernel(Sd,r,s)}}),Eg=xe({sigmoid_(t){const e={x:ge(t,"x","sigmoid","float32")};return Qy.runKernel(Cm,e)}}),Tg=xe({slice_(t,e,n){const r=ge(t,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},i={begin:e,size:n};return Qy.runKernel(vm,s,i)}}),_g=xe({tanh_(t){const e={x:ge(t,"x","tanh","float32")};return Qy.runKernel(Gm,e)}}),Rg=xe({basicLSTMCell_(t,e,n,r,s,i){const o=ge(t,"forgetBias","basicLSTMCell"),a=ge(e,"lstmKernel","basicLSTMCell"),u=ge(n,"lstmBias","basicLSTMCell"),l=ge(r,"data","basicLSTMCell"),c=ge(s,"c","basicLSTMCell"),h=ge(i,"h","basicLSTMCell"),f=Sg([l,h],1),d=Bb(f,a),p=og(d,u),m=p.shape[0],y=p.shape[1]/4,b=[m,y],g=Tg(p,[0,0],b),w=Tg(p,[0,y],b),x=Tg(p,[0,2*y],b),v=Tg(p,[0,3*y],b),$=og(lg(Eg(g),_g(w)),lg(c,Eg(og(o,x))));return[$,lg(_g($),Eg(v))]}}),Ag=xe({batchToSpaceND_(t,e,n){const r=ge(t,"x","batchToSpaceND"),s=e.reduce((t,e)=>t*e);F(r.rank>=1+e.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`),F(n.length===e.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`),F(r.shape[0]%s===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`);const i={x:r},o={blockShape:e,crops:n};return Qy.runKernel(bd,i,o)}}),Og=xe({batchNorm_(t,e,n,r,s,i){null==i&&(i=.001);const o=ge(t,"x","batchNorm"),a=ge(e,"mean","batchNorm"),u=ge(n,"variance","batchNorm");let l,c;null!=s&&(l=ge(s,"scale","batchNorm")),null!=r&&(c=ge(r,"offset","batchNorm")),F(a.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),F(null==c||a.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),F(null==l||a.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h={x:(t=>{let e;return e=0===t.rank||1===t.rank?kg(t,[1,1,1,t.size]):2===t.rank?kg(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?kg(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e})(o),scale:l,offset:c,mean:a,variance:u},f={varianceEpsilon:i},d=Qy.runKernel(ap,h,f);return kg(d,o.shape)}}),Ig=xe({batchNorm2d_(t,e,n,r,s,i){const o=ge(t,"x","batchNorm"),a=ge(e,"mean","batchNorm"),u=ge(n,"variance","batchNorm");let l,c;return null!=s&&(l=ge(s,"scale","batchNorm")),null!=r&&(c=ge(r,"offset","batchNorm")),F(2===o.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),F(2===a.rank||1===a.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),F(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=l&&F(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),null!=c&&F(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Og(o,a,u,c,l,i)}}),Fg=xe({batchNorm3d_(t,e,n,r,s,i){const o=ge(t,"x","batchNorm"),a=ge(e,"mean","batchNorm"),u=ge(n,"variance","batchNorm");let l,c;return null!=s&&(l=ge(s,"scale","batchNorm")),null!=r&&(c=ge(r,"offset","batchNorm")),F(3===o.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),F(3===a.rank||1===a.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),F(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=l&&F(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),null!=c&&F(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Og(o,a,u,c,l,i)}}),Mg=xe({batchNorm4d_(t,e,n,r,s,i){const o=ge(t,"x","batchNorm"),a=ge(e,"mean","batchNorm"),u=ge(n,"variance","batchNorm");let l,c;return null!=s&&(l=ge(s,"scale","batchNorm")),null!=r&&(c=ge(r,"offset","batchNorm")),F(4===o.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),F(4===a.rank||1===a.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),F(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=l&&F(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),null!=c&&F(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Og(o,a,u,c,l,i)}}),Dg=xe({bincount_(t,e,n){const r=ge(t,"x","bincount"),s=ge(e,"weights","bincount");F("int32"===r.dtype,()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),F(n>=0,()=>`size must be non-negative, but got ${n}.`),F(s.size===r.size||0===s.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`);const i={x:r,weights:s},o={size:n};return Qy.runKernel(gd,i,o)}}),Lg=xe({broadcastArgs_(t,e){const n=ge(t,"s0","broadcastArgs","int32"),r=ge(e,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:n,s1:r};return Qy.runKernel(xd,s)}}),Pg=xe({broadcastTo_(t,e){let n=ge(t,"broadcastTo","x");const r=n.shape;if(e.some(t=>!(t>0)||t%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=kg(n,t)}const s=n.shape,i=Array.from(e);for(let l=e.length-1;l>=0;l--)if(s[l]===e[l])i[l]=1;else if(1!==n.shape[l])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);const o=i.map((t,e)=>t>1?e:-1).filter(t=>t>=0);if(0===o.length)return Ab(n);const a={x:n},u={reps:i};return Qy.runKernel(qm,a,u)}}),Vg=xe({ceil_(t){const e={x:ge(t,"x","ceil","float32")};return Qy.runKernel($d,e)}}),Bg=xe({clipByValue_(t,e,n){const r=ge(t,"x","clipByValue");if(F(n>=e,()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`),e===n)return Jn(r.shape,e,r.dtype);const s={x:r},i={clipValueMin:e,clipValueMax:n};return Qy.runKernel(kd,s,i)}}),zg=xe({concat1d_(t){return Sg(t,0)}}),Wg=xe({concat2d_(t,e){return Sg(t,e)}}),jg=xe({concat3d_(t,e){return Sg(t,e)}}),Ug=xe({concat4d_(t,e){return Sg(t,e)}}),Gg=xe({conv2d_(t,e,n,r,s="NHWC",i=[1,1],o){const a=ge(t,"x","conv2d","float32"),u=ge(e,"filter","conv2d","float32");let l=a,c=!1;3===a.rank&&(c=!0,l=kg(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(4===l.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),F(4===u.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),Xn("conv2d",r,o);const h="NHWC"===s?l.shape[3]:l.shape[1];F(h===u.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`),F(qn(n,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);const f={x:l,filter:u},d={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:o},p=Qy.runKernel(Ed,f,d);return c?kg(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),qg=xe({conv1d_(t,e,n,r,s="NWC",i=1,o){const a=ge(t,"x","conv1d"),u=ge(e,"filter","conv1d");let l=a,c=!1;2===a.rank&&(c=!0,l=kg(a,[1,a.shape[0],a.shape[1]])),F(3===l.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),F(3===u.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),Xn("conv1d",r,o),F(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),F(qn(n,i),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`),F("NWC"===s,()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const h=kg(u,[1,u.shape[0],u.shape[1],u.shape[2]]),f=kg(l,[l.shape[0],1,l.shape[1],l.shape[2]]),d=Gg(f,h,[1,n],r,"NHWC",[1,i],o);return kg(d,c?[d.shape[2],d.shape[3]]:[d.shape[0],d.shape[2],d.shape[3]])}}),Hg=xe({conv2DBackpropInput_(t,e,n,r,s,i="NHWC",o){F(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let a=t,u=e,l=!1;3===e.rank&&(l=!0,u=kg(e,[1,e.shape[0],e.shape[1],e.shape[2]]),a=[1,t[0],t[1],t[2]]),F(4===a.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),F(4===u.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),F(4===n.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);const c="NHWC"===i?a[3]:a[1],h="NHWC"===i?u.shape[3]:u.shape[1];F(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),F(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),Xn("conv2dDerInput",s,o);const f={dy:u,filter:n},d={strides:r,pad:s,dataFormat:i,dimRoundingMode:o,inputShape:a},p=Qy.runKernel(_d,f,d);return l?kg(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Xg=xe({conv2dTranspose_(t,e,n,r,s,i){const o=ge(t,"x","conv2dTranspose"),a=ge(e,"filter","conv2dTranspose");return Hg(n,o,a,r,s,"NHWC",i)}}),Jg=xe({conv3d_(t,e,n,r,s="NDHWC",i=[1,1,1]){const o=ge(t,"x","conv3d"),a=ge(e,"filter","conv3d");let u=o,l=!1;4===o.rank&&(l=!0,u=kg(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),F(5===u.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),F(5===a.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),F(u.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${a.shape[3]}.`),F(qn(n,i),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),F("NDHWC"===s,()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`);const c={x:u,filter:a},h={strides:n,pad:r,dataFormat:s,dilations:i},f=Qy.runKernel(Rd,c,h);return l?kg(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),Kg=xe({conv3DBackpropInput_(t,e,n,r,s){F(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let i=t,o=e,a=!1;4===e.rank&&(a=!0,o=kg(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),i=[1,t[0],t[1],t[2],t[3]]);const u=i[4],l=o.shape[4];F(5===i.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`),F(5===o.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),F(5===n.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),F(u===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`),F(l===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`);const c={dy:o,filter:n},h={pad:s,strides:r,inputShape:i},f=Qy.runKernel(Od,c,h);return a?kg(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),Yg=xe({conv3dTranspose_(t,e,n,r,s){const i=ge(t,"x","conv3dTranspose"),o=ge(e,"filter","conv3dTranspose");return Kg(n,i,o,r,s)}}),Zg=xe({cos_(t){const e={x:ge(t,"x","cos","float32")};return Qy.runKernel(Id,e)}}),Qg=xe({cosh_(t){const e={x:ge(t,"x","cosh","float32")};return Qy.runKernel(Fd,e)}}),tw=xe({cumprod_(t,e=0,n=!1,r=!1){const s={x:ge(t,"x","cumprod")},i={axis:e,exclusive:n,reverse:r};return Qy.runKernel(Md,s,i)}}),ew=xe({cumsum_(t,e=0,n=!1,r=!1){const s={x:ge(t,"x","cumsum")},i={axis:e,exclusive:n,reverse:r};return Qy.runKernel(Dd,s,i)}}),nw=xe({denseBincount_(t,e,n,r=!1){const s=ge(t,"x","denseBincount"),i=ge(e,"weights","denseBincount");F("int32"===s.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`),F(2>=s.rank,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),F(n>=0,()=>`size must be non-negative, but got ${n}.`),F(i.size===s.size||0===i.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${i.shape}.`);const o={x:s,weights:i},a={size:n,binaryOutput:r};return Qy.runKernel(Pd,o,a)}}),rw=xe({depthToSpace_(t,e,n="NHWC"){const r=ge(t,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],i="NHWC"===n?r.shape[2]:r.shape[3],o="NHWC"===n?r.shape[3]:r.shape[1];F(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),F(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${e}  for depthToSpace with input shape\n    ${r.shape}`),F(i*e>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${e} for depthToSpace with input shape\n        ${r.shape}`),F(o%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${o} for depthToSpace with input shape ${r.shape}`);const a={x:r},u={blockSize:e,dataFormat:n};return Qy.runKernel(Vd,a,u)}}),sw=xe({depthwiseConv2d_(t,e,n,r,s="NHWC",i=[1,1],o){const a=ge(t,"x","depthwiseConv2d","float32"),u=ge(e,"filter","depthwiseConv2d","float32");let l=a,c=!1;3===a.rank&&(c=!0,l=kg(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(4===l.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),F(4===u.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);const h="NHWC"===s?l.shape[3]:l.shape[1];F(h===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${u.shape[2]}.`),Xn("depthwiseConv2d",r,o);const f={x:l,filter:u},d={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:o},p=Qy.runKernel(Bd,f,d);return c?kg(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),iw=xe({diag_(t){const e={x:ge(t,"x","diag")};return Qy.runKernel(jd,e)}}),ow=xe({dilation2d_(t,e,n,r,s=[1,1],i="NHWC"){const o=ge(t,"x","dilation2d"),a=ge(e,"filter","dilation2d");F(3===o.rank||4===o.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),F(3===a.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),F("NHWC"===i,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`);let u=o,l=!1;3===o.rank&&(u=kg(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=!0);const c={x:u,filter:a},h={strides:n,pad:r,dilations:s},f=Qy.runKernel(Ud,c,h);return l?kg(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),aw=xe({equal_(t,e){let n=ge(t,"a","equal","string_or_numeric"),r=ge(e,"b","equal","string_or_numeric");[n,r]=ie(n,r),ln(n.shape,r.shape);const s={a:n,b:r};return Qy.runKernel(Zd,s)}}),uw=xe({where_(t,e,n){const r=ge(e,"a","where"),s=ge(n,"b","where"),i=ge(t,"condition","where","bool"),o=ln(ln(i.shape,r.shape),s.shape),a={condition:Pg(i,o),t:Pg(r,o),e:Pg(s,o)};return Qy.runKernel(wm,a)}}),lw=xe({zerosLike_(t){const e={x:ge(t,"x","zerosLike")};return Qy.runKernel(Qm,e)}}),cw=xe({divNoNan_(t,e){let n=ge(t,"a","div"),r=ge(e,"b","div");[n,r]=ie(n,r);const s=ug(n,r),i=lw(s),o=aw(r,i);return uw(o,i,s)}}),hw=xe({dot_(t,e){const n=ge(t,"t1","dot"),r=ge(e,"t2","dot");F(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const s=1===n.rank?n.size:n.shape[1],i=1===r.rank?r.size:r.shape[0];if(F(s===i,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${i}.`),1===n.rank&&1===r.rank){const t=kg(n,[1,-1]),e=kg(r,[-1,1]),s=Bb(t,e);return kg(s,[])}if(1===n.rank&&2===r.rank){const t=kg(n,[1,-1]),e=kg(r,[r.shape[0],r.shape[1]]),s=Bb(t,e);return kg(s,[s.size])}if(2===n.rank&&1===r.rank){const t=kg(r,[-1,1]),e=Bb(n,t);return kg(e,[e.size])}{const t=kg(r,[r.shape[0],r.shape[1]]);return Bb(n,t)}}}),fw=xe({einsum_(t,...e){const n=e.map((t,e)=>ge(t,`tensors${e}`,"einsum")),r={equation:t};return Qy.runKernel(Xd,n,r)}}),dw=xe({elu_(t){const e={x:ge(t,"x","elu","float32")};return Qy.runKernel(Jd,e)}}),pw=xe({erf_(t){let e=ge(t,"x","erf");F("int32"===e.dtype||"float32"===e.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===e.dtype&&(e=Rb(e,"float32"));const n={x:e};return Qy.runKernel(Yd,n)}}),mw=xe({max_(t,e=null,n=!1){const r={x:ge(t,"x","max")},s={reductionIndices:e,keepDims:n};return Qy.runKernel(Rp,r,s)}}),yw=xe({min_(t,e=null,n=!1){const r={x:ge(t,"x","min")},s={axis:e,keepDims:n};return Qy.runKernel(Pp,r,s)}}),bw=xe({pow_(t,e){let n=ge(t,"base","pow"),r=ge(e,"exp","pow");[n,r]=ie(n,r);const s={a:n,b:r};return Qy.runKernel(Qp,s)}}),gw=xe({sqrt_(t){const e={x:ge(t,"x","sqrt","float32")};return Qy.runKernel(Em,e)}}),ww=xe({square_(t){const e=ge(t,"x","square");return Qy.runKernel("Square",{x:e},{})}}),xw=xe({sum_(t,e=null,n=!1){let r=ge(t,"x","sum");"bool"===r.dtype&&(r=Rb(r,"int32"));const s={x:r},i={axis:e,keepDims:n};return Qy.runKernel(Tm,s,i)}}),vw=xe({norm_(t,e="euclidean",n=null,r=!1){const s=ir(t=ge(t,"x","norm"),e,n);let i=s.shape;if(r){const e=G(n,t.shape);i=Qn(s.shape,e)}return kg(s,i)}}),$w=xe({euclideanNorm_(t,e=null,n=!1){return vw(t,"euclidean",e,n)}}),kw=xe({exp_(t){const e={x:ge(t,"x","exp")};return Qy.runKernel(Qd,e)}}),Nw=xe({expandDims_(t,e=0){const n=ge(t,"x","expandDims","string_or_numeric");F(e<=n.rank,()=>"Axis must be <= rank of the tensor");const r={input:n},s={dim:e};return Qy.runKernel(tp,r,s)}}),Cw=xe({expm1_(t){const e={x:ge(t,"x","expm1")};return Qy.runKernel(ep,e)}}),Sw=xe({tile_(t,e){const n=ge(t,"x","tile","string_or_numeric");F(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`);const r={x:n},s={reps:e};return Qy.runKernel(qm,r,s)}}),Ew=xe({eye_(t,e,n,r="float32"){null==e&&(e=t);const s=We([t,e],r),i=t>e?e:t;for(let a=0;i>a;++a)s.set(1,a,a);const o=kg(s.toTensor(),[t,e]);if(null==n)return o;if(1===n.length)return Sw(Nw(o,0),[n[0],1,1]);if(2===n.length)return Sw(Nw(Nw(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return Sw(Nw(Nw(Nw(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),Tw=xe({floor_(t){const e={x:ge(t,"x","floor","float32")};return Qy.runKernel(ip,e)}}),_w=xe({gather_(t,e,n=0,r=0){const s={x:ge(t,"x","gather"),indices:ge(e,"indices","gather","int32")},i={axis:n,batchDims:r};return Qy.runKernel(up,s,i)}}),Rw=xe({greater_(t,e){let n=ge(t,"a","greater","string_or_numeric"),r=ge(e,"b","greater","string_or_numeric");[n,r]=ie(n,r),ln(n.shape,r.shape);const s={a:n,b:r};return Qy.runKernel(cp,s)}}),Aw=xe({greaterEqual_(t,e){let n=ge(t,"a","greaterEqual","string_or_numeric"),r=ge(e,"b","greaterEqual","string_or_numeric");[n,r]=ie(n,r),ln(n.shape,r.shape);const s={a:n,b:r};return Qy.runKernel(hp,s)}}),Ow=xe({isFinite_(t){const e={x:ge(t,"x","isFinite")};return Qy.runKernel(mp,e)}}),Iw=xe({isInf_(t){const e={x:ge(t,"x","isInf")};return Qy.runKernel(yp,e)}}),Fw=xe({isNaN_(t){const e={x:ge(t,"x","isNaN")};return Qy.runKernel(bp,e)}}),Mw=xe({leakyRelu_(t,e=.2){const n={x:ge(t,"x","leakyRelu")},r={alpha:e};return Qy.runKernel(gp,n,r)}}),Dw=xe({less_(t,e){let n=ge(t,"a","less","string_or_numeric"),r=ge(e,"b","less","string_or_numeric");[n,r]=ie(n,r),ln(n.shape,r.shape);const s={a:n,b:r};return Qy.runKernel(wp,s)}}),Lw=xe({lessEqual_(t,e){let n=ge(t,"a","lessEqual","string_or_numeric"),r=ge(e,"b","lessEqual","string_or_numeric");[n,r]=ie(n,r),ln(n.shape,r.shape);const s={a:n,b:r};return Qy.runKernel(xp,s)}}),Pw=xe({localResponseNormalization_(t,e=5,n=1,r=1,s=.5){const i=ge(t,"x","localResponseNormalization");F(4===i.rank||3===i.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`),F(B(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let o=i,a=!1;3===i.rank&&(a=!0,o=kg(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const u={x:o},l={depthRadius:e,bias:n,alpha:r,beta:s},c=Qy.runKernel(Tp,u,l);return a?kg(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Vw=xe({log_(t){const e={x:ge(t,"x","log","float32")};return Qy.runKernel($p,e)}}),Bw=xe({log1p_(t){const e={x:ge(t,"x","log1p")};return Qy.runKernel(kp,e)}}),zw=xe({softplus_(t){const e={x:ge(t,"x","softplus")};return Qy.runKernel(Sm,e)}}),Ww=xe({logSigmoid_(t){const e=ge(t,"x","logSigmoid");return ur(t=>({value:jb(zw(jb(t))),gradFunc(e){return lg(e,Eg(jb(t)))}}))(e)}}),jw=xe({sub_(t,e){let n=ge(t,"a","sub"),r=ge(e,"b","sub");[n,r]=ie(n,r);const s={a:n,b:r};return Qy.runKernel(jm,s)}}),Uw=xe({logSoftmax_(t,e=-1){const n=ge(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);return ur((t,n)=>{const r=mw(t,e,!0),s=jw(t,r),i=jw(Rb(s,"float32"),Vw(xw(kw(s),e,!0)));return n([i]),{value:i,gradFunc(t,n){const[r]=n,s=kw(r);return jw(t,lg(xw(t,e,!0),s))}}})(n)}}),Gw=xe({logSumExp_(t,e=null,n=!1){const r=ge(t,"x","logSumExp"),s=G(e,r.shape),i=mw(r,s,!0),o=jw(r,i),a=kw(o),u=xw(a,s),l=Vw(u),c=og(kg(i,l.shape),l);if(n){const t=Qn(c.shape,s);return kg(c,t)}return c}}),qw=xe({logicalAnd_(t,e){const n=ge(t,"a","logicalAnd","bool"),r=ge(e,"b","logicalAnd","bool");ln(n.shape,r.shape);const s={a:n,b:r};return Qy.runKernel(Np,s)}}),Hw=xe({logicalNot_(t){const e={x:ge(t,"x","logicalNot","bool")};return Qy.runKernel(Cp,e)}}),Xw=xe({logicalOr_(t,e){const n=ge(t,"a","logicalOr","bool"),r=ge(e,"b","logicalOr","bool");ln(n.shape,r.shape);const s={a:n,b:r};return Qy.runKernel(Sp,s)}}),Jw=xe({logicalXor_(t,e){const n=ge(t,"a","logicalXor","bool"),r=ge(e,"b","logicalXor","bool");return ln(n.shape,r.shape),qw(Xw(t,e),Hw(qw(t,e)))}}),Kw=2147483648,Yw=xe({searchSorted_(t,e,n="left"){const r=ge(t,"sortedSequence","searchSorted"),s=ge(e,"values","searchSorted"),i=r.shape[r.shape.length-1],o=s.shape[s.shape.length-1],a=kg(r,[-1,i]),u=kg(s,[-1,o]);if(2>a.rank)throw new Error("Sorted input argument must be at least 2-dimensional");if(a.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(P(u.shape)>=Kw)throw new Error("values tensor size must less than 2147483648");if(a.shape[1]>=Kw)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${a.shape[1]}`);const l={sortedSequence:a,values:u},c={side:n};return Qy.runKernel(gm,l,c)}}),Zw=xe({maxPool_(t,e,n,r,s){const i=ge(t,"x","maxPool");let o=i,a=!1;3===i.rank&&(a=!0,o=kg(i,[1,i.shape[0],i.shape[1],i.shape[2]])),F(4===o.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),F(qn(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),Xn("maxPool",r,s);const u={x:o},l={filterSize:e,strides:n,pad:r,dimRoundingMode:s},c=Qy.runKernel(Op,u,l);return a?kg(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Qw=xe({maxPool3d_(t,e=[1,1,1],n,r,s,i="NDHWC"){const o=ge(t,"x","maxPool3d");let a=o,u=!1;4===o.rank&&(u=!0,a=kg(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),F(5===a.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),F("NDHWC"===i,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),Xn("maxPool3d",r,s);const l={x:a},c={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:i},h=Qy.runKernel(Fp,l,c);return u?kg(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),tx=xe({maxPoolWithArgmax_(t,e,n,r,s=!1){const i={x:ge(t,"x","maxPoolWithArgmax")},o={filterSize:e,strides:n,pad:r,includeBatchInIndex:s},a=Qy.runKernel(Dp,i,o);return{result:a[0],indexes:a[1]}}}),ex=xe({maximum_(t,e){let n=ge(t,"a","maximum"),r=ge(e,"b","maximum");[n,r]=ie(n,r),"bool"===n.dtype&&(n=Rb(n,"int32"),r=Rb(r,"int32")),ln(n.shape,r.shape);const s={a:n,b:r};return Qy.runKernel(Ap,s)}}),nx=xe({mean_(t,e=null,n=!1){const r={x:ge(t,"x","mean")},s={axis:e,keepDims:n};return Qy.runKernel(Lp,r,s)}}),rx=xe({minimum_(t,e){let n=ge(t,"a","minimum"),r=ge(e,"b","minimum");[n,r]=ie(n,r),"bool"===n.dtype&&(n=Rb(n,"int32"),r=Rb(r,"int32")),ln(n.shape,r.shape);const s={a:n,b:r};return Qy.runKernel(Vp,s)}}),sx=xe({mirrorPad_(t,e,n){F("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const r=ge(t,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");F(e.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`);const s="reflect"===n?1:0;for(let a=0;a<r.rank;a++)F(2===e[a].length,()=>"Invalid number of paddings. Must be length of 2 each."),F(!(0>e[a][0]||e[a][0]>r.shape[a]-s||0>e[a][1]||e[a][1]>r.shape[a]-s),()=>`Padding in dimension ${a} cannot be greater than or equal to ${r.shape[a]-s} or less than 0 for input of shape ${r.shape}`);const i={paddings:e,mode:n},o={x:r};return Qy.runKernel(Bp,o,i)}}),ix=xe({mod_(t,e){let n=ge(t,"a","mod"),r=ge(e,"b","mod");[n,r]=ie(n,r);const s={a:n,b:r};return Qy.runKernel(zp,s)}}),ox=xe({moments_(t,e=null,n=!1){const r=G(e,(t=ge(t,"x","moments")).shape),s=nx(t,r,n);let i=s.shape;n||(i=Qn(s.shape,r));const o=ww(jw(Rb(t,"float32"),kg(s,i)));return{mean:s,variance:nx(o,r,n)}}}),ax=xe({multiRNNCell_(t,e,n,r){const s=ge(e,"data","multiRNNCell"),i=we(n,"c","multiRNNCell"),o=we(r,"h","multiRNNCell");let a=s;const u=[];for(let h=0;h<t.length;h++){const e=t[h](a,i[h],o[h]);u.push(e[0]),u.push(e[1]),a=e[1]}const l=[],c=[];for(let h=0;h<u.length;h+=2)l.push(u[h]),c.push(u[h+1]);return[l,c]}}),ux=xe({multinomial_(t,e,n,r=!1){const s=ge(t,"logits","multinomial"),i=s.size,o=s.rank;if(2>i)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${i}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();const a={logits:1===o?kg(s,[1,-1]):s},u={numSamples:e,seed:n,normalized:r},l=Qy.runKernel(Wp,a,u);return 1===o?kg(l,[l.size]):l}}),lx=xe({notEqual_(t,e){let n=ge(t,"a","notEqual","string_or_numeric"),r=ge(e,"b","notEqual","string_or_numeric");[n,r]=ie(n,r),ln(n.shape,r.shape);const s={a:n,b:r};return Qy.runKernel(Gp,s)}}),cx=xe({onesLike_(t){const e={x:ge(t,"x","onesLike")};return Qy.runKernel(Jp,e)}}),hx=xe({outerProduct_(t,e){const n=ge(t,"v1","outerProduct"),r=ge(e,"v2","outerProduct");F(1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const s=kg(n,[-1,1]),i=kg(r,[1,-1]);return Bb(s,i)}}),fx=xe({pad_(t,e,n=0){const r=ge(t,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:n},i={x:r};return Qy.runKernel(Zp,i,s)}}),dx=xe({pad1d_(t,e,n=0){return F(2===e.length,()=>"Invalid number of paddings. Must be length of 2."),fx(t,[e],n)}}),px=xe({pad2d_(t,e,n=0){return F(2===e.length&&2===e[0].length&&2===e[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),fx(t,e,n)}}),mx=xe({pad3d_(t,e,n=0){return F(3===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),fx(t,e,n)}}),yx=xe({pad4d_(t,e,n=0){return F(4===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length&&2===e[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),fx(t,e,n)}}),bx=xe({spaceToBatchND_(t,e,n){const r=ge(t,"x","spaceToBatchND");F(r.rank>=1+e.length,()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`),F(n.length===e.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`),F(r.shape.reduce((t,r,s)=>s>0&&s<=e.length?t&&(r+n[s-1][0]+n[s-1][1])%e[s-1]===0:t,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`);const s={x:r},i={blockShape:e,paddings:n};return Qy.runKernel(_m,s,i)}}),gx=xe({pool_(t,e,n,r,s,i,o){null==s&&(s=[1,1]),null==i&&(i=1),0===r&&(r="valid");const a=ge(t,"x","maxPool");let u=a,l=!1;3===a.rank&&(l=!0,u=kg(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(qn(i,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${s}'`);const c=Dn(u.shape,e,i,s,r),h=[c.dilationHeight,c.dilationWidth];let f;f="same"===r?((t,e)=>{const n=t.map((t,n)=>t+(t-1)*(e[n]-1)),r=n.map(t=>t-1),s=r.map(t=>Math.floor(t/2)),i=r.map((t,e)=>t-s[e]);return r.map((t,e)=>[s[e],i[e]])})([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const d=1===h[0]&&1===h[1],[p,m]=((t,e,n)=>{const r=n.map(t=>t[0]),s=n.map(t=>t[1]),i=t.concat(r,s),o=e.map((t,e)=>(t-i[e]%t)%t),a=s.map((t,e)=>t+o[e]),u=e.map((t,e)=>[r[e],a[e]]),l=e.map((t,e)=>[0,o[e]]);return[u,l]})([c.inHeight,c.inWidth],h,f),y=d?r:"valid",b=d?u:bx(u,h,p),g=("avg"===n?()=>Ng(b,e,i,y,o):()=>Zw(b,e,i,y,o))(),w=d?g:Ag(g,h,m);return l?kg(w,[w.shape[1],w.shape[2],w.shape[3]]):w}}),wx=xe({prelu_(t,e){const n={x:ge(t,"x","prelu"),alpha:ge(e,"alpha","prelu")};return Qy.runKernel(tm,n)}}),xx=xe({prod_(t,e=null,n=!1){let r=ge(t,"x","prod");"bool"===r.dtype&&(r=Rb(r,"int32"));const s={x:r},i={axis:e,keepDims:n};return Qy.runKernel(em,s,i)}}),vx=xe({raggedGather_(t,e,n,r){const s=t.map((t,e)=>ge(t,`tensors${e}`,"raggedGather","int32")),i={paramsNestedSplits:s,paramsDenseValues:ge(e,"paramsDenseValues","raggedGather"),indices:ge(n,"indices","raggedGather","int32")},o={outputRaggedRank:r},a=Qy.runKernel(nm,i,o);return{outputNestedSplits:a.slice(0,a.length-1),outputDenseValues:a[a.length-1]}}}),$x=xe({raggedTensorToTensor_(t,e,n,r,s){const i=ge(t,"shape","raggedTensorToTensor","int32"),o=ge(e,"values","raggedTensorToTensor"),a=ge(n,"defaultValue","raggedTensorToTensor",o.dtype),u=r.map((t,e)=>ge(t,`tensors${e}`,"raggedTensorToTensor","int32")),l={shape:i,values:o,defaultValue:a,rowPartitionTensors:u},c={rowPartitionTypes:s};return Qy.runKernel(rm,l,c)}}),kx=xe({rand_(t,e,n){const r=P(t);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);s=new Uint8Array(r)}for(let i=0;r>i;i++)s[i]=e();return Qy.makeTensor(s,t,n)}});var Nx={exports:{}};!function(t,e){function n(t){var e,n=this,r=(e=4022871197,t=>{t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=()=>{var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),0>n.s0&&(n.s0+=1),n.s1-=r(t),0>n.s1&&(n.s1+=1),n.s2-=r(t),0>n.s2&&(n.s2+=1),r=null}function r(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function s(t,e){var s=new n(t),i=e&&e.state,o=s.next;return o.int32=()=>4294967296*s.next()|0,o.double=()=>o()+11102230246251565e-32*(2097152*o()|0),o.quick=o,i&&("object"==typeof i&&r(i,s),o.state=()=>r(s,{})),o}e&&e.exports?e.exports=s:this.alea=s}(0,Nx);var Cx=Nx.exports,Sx={exports:{}};!function(t,e){function n(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=()=>{var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function r(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function s(t,e){var s=new n(t),i=e&&e.state,o=()=>(s.next()>>>0)/4294967296;return o.double=()=>{do{var t=((s.next()>>>11)+(s.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},o.int32=s.next,o.quick=o,i&&("object"==typeof i&&r(i,s),o.state=()=>r(s,{})),o}e&&e.exports?e.exports=s:this.xor128=s}(0,Sx);var Ex=Sx.exports,Tx={exports:{}};!function(t,e){function n(t){var e=this,n="";e.next=()=>{var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function r(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function s(t,e){var s=new n(t),i=e&&e.state,o=()=>(s.next()>>>0)/4294967296;return o.double=()=>{do{var t=((s.next()>>>11)+(s.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},o.int32=s.next,o.quick=o,i&&("object"==typeof i&&r(i,s),o.state=()=>r(s,{})),o}e&&e.exports?e.exports=s:this.xorwow=s}(0,Tx);var _x=Tx.exports,Rx={exports:{}};!function(t,e){function n(t){var e=this;e.next=()=>{var t,n,r=e.x,s=e.i;return t=r[s],n=(t^=t>>>7)^t<<24,n^=(t=r[s+1&7])^t>>>10,n^=(t=r[s+3&7])^t>>>3,n^=(t=r[s+4&7])^t<<7,t=r[s+7&7],n^=(t^=t<<13)^t<<9,r[s]=n,e.i=s+1&7,n},((t,e)=>{var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;8>r.length;)r.push(0);for(n=0;8>n&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()})(e,t)}function r(t,e){return e.x=t.x.slice(),e.i=t.i,e}function s(t,e){null==t&&(t=+new Date);var s=new n(t),i=e&&e.state,o=()=>(s.next()>>>0)/4294967296;return o.double=()=>{do{var t=((s.next()>>>11)+(s.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},o.int32=s.next,o.quick=o,i&&(i.x&&r(i,s),o.state=()=>r(s,{})),o}e&&e.exports?e.exports=s:this.xorshift7=s}(0,Rx);var Ax=Rx.exports,Ox={exports:{}};!function(t,e){function n(t){var e=this;e.next=()=>{var t,n,r=e.w,s=e.X,i=e.i;return e.w=r=r+1640531527|0,n=s[i+34&127],t=s[i=i+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=s[i]=n^t,e.i=i,n+(r^r>>>16)|0},((t,e)=>{var n,r,s,i,o,a=[],u=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,u=Math.max(u,e.length)),s=0,i=-32;u>i;++i)e&&(r^=e.charCodeAt((i+32)%e.length)),0===i&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,0>i||(o=o+1640531527|0,s=0==(n=a[127&i]^=r+o)?s+1:0);for(128>s||(a[127&(e&&e.length||0)]=-1),s=127,i=512;i>0;--i)r=a[s+34&127],n=a[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,a[s]=r^n;t.w=o,t.X=a,t.i=s})(e,t)}function r(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function s(t,e){null==t&&(t=+new Date);var s=new n(t),i=e&&e.state,o=()=>(s.next()>>>0)/4294967296;return o.double=()=>{do{var t=((s.next()>>>11)+(s.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},o.int32=s.next,o.quick=o,i&&(i.X&&r(i,s),o.state=()=>r(s,{})),o}e&&e.exports?e.exports=s:this.xor4096=s}(0,Ox);var Ix=Ox.exports,Fx={exports:{}};!function(t,e){function n(t){var e=this,n="";e.next=()=>{var t=e.b,n=e.c,r=e.d,s=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^s,e.a=s-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function r(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function s(t,e){var s=new n(t),i=e&&e.state,o=()=>(s.next()>>>0)/4294967296;return o.double=()=>{do{var t=((s.next()>>>11)+(s.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},o.int32=s.next,o.quick=o,i&&("object"==typeof i&&r(i,s),o.state=()=>r(s,{})),o}e&&e.exports?e.exports=s:this.tychei=s}(0,Fx);var Mx=Fx.exports,Dx={exports:{}};const Lx=n(Object.freeze(Object.defineProperty({__proto__:null,default:{}},Symbol.toStringTag,{value:"Module"})));var Px;Px=Dx,function(t,e,n){function r(r,m,y){var b=[],g=a(o((m=1==m?{entropy:!0}:m||{}).entropy?[r,u(e)]:null==r?(()=>{try{var n;return l&&(n=l.randomBytes)?n=n(c):(n=new Uint8Array(c),(t.crypto||t.msCrypto).getRandomValues(n)),u(n)}catch(JJ){var r=t.navigator,s=r&&r.plugins;return[+new Date,t,s,t.screen,u(e)]}})():r,3),b),w=new s(b),x=()=>{for(var t=w.g(6),e=f,n=0;d>t;)t=(t+n)*c,e*=c,n=w.g(1);for(;t>=p;)t/=2,e/=2,n>>>=1;return(t+n)/e};return x.int32=()=>0|w.g(4),x.quick=()=>w.g(4)/4294967296,x.double=x,a(u(w.S),e),(m.pass||y||((t,e,r,s)=>(s&&(s.S&&i(s,w),t.state=()=>i(w,{})),r?(n[h]=t,e):t)))(x,g,"global"in m?m.global:this==n,m.state)}function s(t){var e,n=t.length,r=this,s=0,i=r.i=r.j=0,o=r.S=[];for(n||(t=[n++]);c>s;)o[s]=s++;for(s=0;c>s;s++)o[s]=o[i=m&i+t[s%n]+(e=o[s])],o[i]=e;(r.g=t=>{for(var e,n=0,s=r.i,i=r.j,o=r.S;t--;)e=o[s=m&s+1],n=n*c+o[m&(o[s]=o[i=m&i+e])+(o[i]=e)];return r.i=s,r.j=i,n})(c)}function i(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function o(t,e){var n,r=[],s=typeof t;if(e&&"object"==s)for(n in t)try{r.push(o(t[n],e-1))}catch(JJ){}return r.length?r:"string"==s?t:t+"\0"}function a(t,e){for(var n,r=t+"",s=0;s<r.length;)e[m&s]=m&(n^=19*e[m&s])+r.charCodeAt(s++);return u(e)}function u(t){return String.fromCharCode.apply(0,t)}var l,c=256,h="random",f=n.pow(c,6),d=n.pow(2,52),p=2*d,m=255;if(a(n.random(),e),Px.exports){Px.exports=r;try{l=Lx}catch(y){}}else n["seed"+h]=r}("undefined"!=typeof self?self:mf,[],Math);var Vx=Cx,Bx=Ex,zx=_x,Wx=Ax,jx=Ix,Ux=Mx,Gx=Dx.exports;Gx.alea=Vx,Gx.xor128=Bx,Gx.xorwow=zx,Gx.xorshift7=Wx,Gx.xor4096=jx,Gx.tychei=Ux;var qx=Gx;class Hx{constructor(t,e,n,r,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=s||Math.random();this.random=qx.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,s,i;do{r=2*this.random()-1,s=2*this.random()-1,i=r*r+s*s}while(i>=1||0===i);const o=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*r*o,e=this.mean+this.stdDev*s*o,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class Xx{constructor(t,e,n,r){this.alpha=t,this.beta=1/e,this.dtype=n;const s=r||Math.random();this.randu=qx.alea(s.toString()),this.randn=new Hx(0,1,n,!1,this.randu()),this.d=1>t?t+2/3:t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,n,r,s,i;for(;;){do{r=this.randn.nextValue(),i=1+this.c*r}while(0>=i);if(i*=i*i,t=r*r,e=1-.331*t*t,n=.5*t+this.d*(1-i+Math.log(i)),s=this.randu(),e>s||Math.log(s)<n)break}return i=1/this.beta*this.d*i,1>this.alpha&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(t){return"float32"===this.dtype?t:Math.round(t)}}class Jx{constructor(t=0,e=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&1>=this.range)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=qx.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Kx=xe({randomGamma_(t,e,n=1,r="float32",s){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const i=new Xx(e,n,r,s),o=We(t,r);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}}),Yx=xe({randomNormal_(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const i=new Hx(e,n,r,!1,s),o=We(t,r);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}}),Zx=xe({randomStandardNormal_(t,e,n){if(null!=e&&"bool"===e)throw new Error(`Unsupported data type ${e}`);return Yx(t,0,1,e,n)}}),Qx=xe({randomUniform_(t,e=0,n=1,r="float32",s){const i=We(t,r),o=new Jx(e,n,null,s);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}}),tv=xe({reciprocal_(t){const e={x:ge(t,"x","reciprocal")};return Qy.runKernel(om,e)}}),ev=xe({relu_(t){const e={x:ge(t,"x","relu")};return Qy.runKernel(am,e)}}),nv=xe({relu6_(t){const e={x:ge(t,"x","relu6")};return Qy.runKernel(dm,e)}}),rv=xe({reverse_(t,e){const n={x:ge(t,"x","reverse")},r={dims:e};return Qy.runKernel(pm,n,r)}}),sv=xe({reverse1d_(t){const e=ge(t,"x","reverse");return F(1===e.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),rv(e,0)}}),iv=xe({reverse2d_(t,e){const n=ge(t,"x","reverse");return F(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),rv(n,e)}}),ov=xe({reverse3d_(t,e){const n=ge(t,"x","reverse");return F(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),rv(n,e)}}),av=xe({reverse4d_(t,e){const n=ge(t,"x","reverse");return F(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),rv(n,e)}}),uv=xe({round_(t){const e={x:ge(t,"x","round")};return Qy.runKernel(mm,e)}}),lv=xe({rsqrt_(t){const e={x:ge(t,"x","rsqrt","float32")};return Qy.runKernel(ym,e)}}),cv=xe({selu_(t){const e={x:ge(t,"x","selu")};return Qy.runKernel(xm,e)}}),hv=xe({separableConv2d_(t,e,n,r,s,i=[1,1],o="NHWC"){const a=ge(t,"x","separableConv2d"),u=ge(e,"depthwiseFilter","separableConv2d"),l=ge(n,"pointwiseFilter","separableConv2d");let c=a,h=!1;if(3===a.rank&&(h=!0,c=kg(a,[1,a.shape[0],a.shape[1],a.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");F(4===c.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),F(4===u.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),F(4===l.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),F(1===l.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),F(1===l.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);const f=u.shape[2],d=u.shape[3];F(l.shape[2]===f*d,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${f*d}, but got ${l.shape[2]}.`);const p=sw(c,u,r,s,o,i),m=Gg(p,l,1,"valid",o);return h?kg(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),fv=function(t,e){return cf(this,null,function*(){const n=ge(t,"x","setdiff1d"),r=ge(e,"y","setdiff1d");F(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),F(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),F(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);const s=yield n.data(),i=yield r.data(),o=new Set(i);let a=0;for(let t=0;t<s.length;t++)o.has(s[t])||a++;const u=new Fy([a],n.dtype),l=new Fy([a],"int32");for(let t=0,e=0;t<s.length;t++)o.has(s[t])||(u.values[e]=s[t],l.values[e]=t,e++);return[u.toTensor(),l.toTensor()]})},dv=xe({sign_(t){const e={x:ge(t,"x","sign")};return Qy.runKernel(Nm,e)}}),pv=xe({sin_(t){const e={x:ge(t,"x","sin","float32")};return Qy.runKernel($m,e)}}),mv=xe({sinh_(t){const e={x:ge(t,"x","sinh")};return Qy.runKernel(km,e)}}),yv=xe({slice1d_(t,e,n){const r=ge(t,"x","slice1d");return F(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Tg(r,[e],[n])}}),bv=xe({slice2d_(t,e,n){const r=ge(t,"x","slice2d");return F(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Tg(r,e,n)}}),gv=xe({slice3d_(t,e,n){const r=ge(t,"x","slice3d");return F(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Tg(r,e,n)}}),wv=xe({slice4d_(t,e,n){const r=ge(t,"x","slice4d");return F(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Tg(r,e,n)}}),xv=xe({softmax_(t,e=-1){const n=ge(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const r={logits:n},s={dim:e};return Qy.runKernel(Am,r,s)}}),vv=xe({fft_(t){F("complex64"===t.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`);const e={input:t};return Qy.runKernel(np,e)}}),$v=xe({ifft_(t){F("complex64"===t.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`);const e={input:t};return Qy.runKernel(dp,e)}}),kv=xe({irfft_(t){const e=t.shape[t.shape.length-1],n=t.size/e;let r;if(e>2){const s=[n,2*(e-1)],i=kg(Ub(t),[n,e]),o=kg(Wb(t),[n,e]),a=rv(Tg(i,[0,1],[n,e-2]),1),u=lg(rv(Tg(o,[0,1],[n,e-2]),1),sr(-1)),l=Sg([i,a],1),c=Sg([o,u],1),h=kg(sb(l,c),[s[0],s[1]]);r=$v(h)}else{const s=kg(t,[n,e]);r=$v(s)}if(r=Ub(r),3===t.rank&&0!==t.shape[0]){const e=r,n=t.shape[0];r=kg(r,[n,r.shape[0]/n,r.shape[1]]),e.dispose()}return r}}),Nv=xe({split_(t,e,n=0){const r={x:ge(t,"x","split")},s={numOrSizeSplits:e,axis:n};return Qy.runKernel(Rm,r,s)}}),Cv=xe({rfft_(t,e){F("float32"===t.dtype,()=>`The dtype for rfft() must be real value but got ${t.dtype}`);let n=t.shape[t.shape.length-1];const r=t.size/n;let s;if(null!=e&&n>e){const r=t.shape.map(t=>0),i=t.shape.map(t=>t);i[t.shape.length-1]=e,s=Tg(t,r,i),n=e}else if(null!=e&&e>n){const r=t.shape.map(t=>t);r[t.shape.length-1]=e-n,s=Sg([t,hr(r)],t.shape.length-1),n=e}else s=t;const i=lw(s),o=kg(sb(s,i),[r,n]),a=vv(o),u=Math.floor(n/2)+1,l=Ub(a),c=Wb(a),h=Nv(l,[u,n-u],l.shape.length-1),f=Nv(c,[u,n-u],c.shape.length-1),d=s.shape.slice();return d[s.shape.length-1]=u,kg(sb(h[0],f[0]),d)}}),Sv=xe({squaredDifference_(t,e){let n=ge(t,"a","squaredDifference"),r=ge(e,"b","squaredDifference");[n,r]=ie(n,r),ln(n.shape,r.shape);const s={a:n,b:r};return Qy.runKernel(Lm,s,{})}}),Ev=xe({squeeze_(t,e){const n=ge(t,"x","squeeze","string_or_numeric");return kg(n,q(n.shape,e).newShape)}}),Tv=xe({stack_(t,e=0){const n=we(t,"tensors","stack","string_or_numeric");F(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&F(e<=n[0].rank,()=>"Axis must be <= rank of the tensor");const r=n,s={axis:e};return Qy.runKernel(Yp,r,s)}}),_v=xe({step_(t,e=0){const n={x:ge(t,"x","step")},r={alpha:e};return Qy.runKernel(ty,n,r)}}),Rv=xe({stridedSlice_(t,e,n,r,s=0,i=0,o=0,a=0,u=0){const l={x:ge(t,"x","stridedSlice","string_or_numeric")},c={begin:e,end:n,strides:r,beginMask:s,endMask:i,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:u};return Qy.runKernel(Vm,l,c)}}),Av=xe({tan_(t){const e={x:ge(t,"x","tan","float32")};return Qy.runKernel(Um,e)}}),Ov=xe({topk_(t,e=1,n=!0){const r=ge(t,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(0>e)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${e}`);const i={x:r},o={k:e,sorted:n},[a,u]=Qy.runKernel(Hm,i,o);return{values:a,indices:u}}}),Iv=xe({truncatedNormal_(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const i=new Hx(e,n,r,!0,s),o=We(t,r);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}}),Fv=xe({unique_(t,e=0){const n=ge(t,"x","unique","string_or_numeric");F(n.rank>0,()=>"The input tensor must be at least 1D");const r={x:n},s={axis:e},[i,o]=Qy.runKernel(Km,r,s);return{values:i,indices:o}}}),Mv=xe({unsortedSegmentSum_(t,e,n){const r=ge(t,"x","unsortedSegmentSum"),s=ge(e,"segmentIds","unsortedSegmentSum","int32");F(B(n),()=>"numSegments must be of dtype int");const i={x:r,segmentIds:s},o={numSegments:n};return Qy.runKernel(Zm,i,o)}}),Dv=xe({unstack_(t,e=0){const n=ge(t,"x","unstack","string_or_numeric");F(e>=-n.shape.length&&e<n.shape.length,()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`);const r={value:n},s={axis:e};return Qy.runKernel(Ym,r,s)}}),Lv=function(t){return cf(this,null,function*(){const e=ge(t,"condition","whereAsync","bool"),n=yield e.data(),r=$r(e.shape,n);return t!==e&&e.dispose(),r})},Pv=function(t,e,n){return cf(this,null,function*(){const r=ge(t,"tensor","boolMask"),s=ge(e,"mask","boolMask","bool"),i=null==n?0:n,o=s.rank,a=r.shape;F(o>0,()=>"mask cannot be scalar"),M(a.slice(i,i+o),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let t=i;i+o>t;t++)u*=a[t];const l=a.slice(0,i).concat([u],a.slice(i+o)),c=kg(r,l),h=kg(s,[-1]),f=yield Lv(h),d=Ev(f,[1]),p=_w(c,d,i);return t!==r&&r.dispose(),e!==s&&s.dispose(),d.dispose(),c.dispose(),h.dispose(),f.dispose(),p})},Vv=xe({movingAverage_(t,e,n,r,s=!0){const i=ge(t,"v","movingAverage"),o=ge(e,"x","movingAverage"),a=ge(n,"decay","movingAverage");oe(i,o),F(V(i.shape,o.shape),()=>"Shape mismatch in v and x");const u=sr(1),l=jw(u,a);let c=lg(jw(o,i),l);if(s){F(null!=r,()=>"When using zeroDebias: true, step is required.");const t=ge(r,"step","movingAverage");c=ug(c,jw(u,bw(a,t)))}return og(i,c)}}),Bv=xe({scatterND_(t,e,n){const r=ge(t,"indices","scatterND","int32"),s=ge(e,"updates","scatterND");pn(s,r,n);const i={indices:r,updates:s},o={shape:n};return Qy.runKernel(bm,i,o)}}),zv=xe({sparseToDense_(t,e,n,r=0){const s=ge(t,"sparseIndices","sparseToDense","int32"),i=ge(e,"sparseValues","sparseToDense","string_or_numeric"),o=ge(r,"defaultValue","sparseToDense",i.dtype);((t,e,n,r)=>{if("int32"!==t.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const s=t.rank>0?t.shape[0]:1,i=t.rank>1?t.shape[1]:1;if(n.length!==i)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${i}.`);const o=e.size;if(0!==e.rank&&(1!==e.rank||o!==s))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${s}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")})(s,i,n,o);const a={sparseIndices:s,sparseValues:i,defaultValue:o},u={outputShape:n};return Qy.runKernel(Dm,a,u)}}),Wv=xe({gatherND_(t,e){const n=ge(e,"indices","gatherND","int32"),r={params:ge(t,"x","gatherND","string_or_numeric"),indices:n};return Qy.runKernel(lp,r)}}),jv=xe({dropout_(t,e,n,r){const s=ge(t,"x","dropout");if(F("float32"===s.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),F(e>=0&&1>e,()=>`rate must be a float in the range [0, 1), but got ${e}.`),0===e)return t instanceof Ly?s.clone():s;const i=((t,e)=>{if(null==e)return t.shape.slice();if(V(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e})(s,n),o=1-e,a=ug(Tw(og(Qx(i,0,1,"float32",r),o)),o);return lg(s,a)}}),Uv=function(t,e,n=1){return cf(this,null,function*(){const r=ge(t,"predictions","inTopK"),s=ge(e,"targets","inTopK");F(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),F(r.rank-1===s.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`),M(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const i=r.shape[r.shape.length-1];F(n>0&&i>=n,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${i}), but got ${n}`);const o=yield r.data(),a=yield s.data(),[u,l]=[o.length/i,i],c=H("bool",u);for(let t=0;u>t;t++){const e=t*l,r=o.subarray(e,e+l),s=[];for(let t=0;t<r.length;t++)s.push({value:r[t],index:t});s.sort((t,e)=>e.value-t.value),c[t]=0;for(let i=0;n>i;i++)if(s[i].index===a[t]){c[t]=1;break}}return t!==r&&r.dispose(),e!==s&&s.dispose(),$e(c,s.shape,"bool")})},Gv=xe({conv2DBackpropFilter_(t,e,n,r,s,i="NHWC",o){let a=t;3===t.rank&&(a=kg(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u=e;3===u.rank&&(u=kg(e,[1,e.shape[0],e.shape[1],e.shape[2]])),F(4===a.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),F(4===u.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),F(4===n.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);const l="NHWC"===i?a.shape[3]:a.shape[1],c="NHWC"===i?u.shape[3]:u.shape[1];F(l===n[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`),F(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),Xn("conv2dDerFilter",s,o);const h={x:a,dy:u},f={strides:r,pad:s,dataFormat:i,dimRoundingMode:o,filterShape:n};return Qy.runKernel(Td,h,f)}}),qv=(t,e)=>!(t>0)||"linear"===e,Hv=xe({fusedConv2d_({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:a,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===qv(Qy.state.gradientDepth,u)){F("NHWC"===s,()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let h=Gg(t,e,n,r,s,i,o);return null!=a&&(h=og(h,a)),Er(h,u,l,c)}const h=ge(t,"x","conv2d","float32"),f=ge(e,"filter","conv2d","float32");let d=h,p=!1;3===h.rank&&(p=!0,d=kg(h,[1,h.shape[0],h.shape[1],h.shape[2]])),F(4===d.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`),F(4===f.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${f.rank}.`),Xn("fused conv2d",r,o);const m="NHWC"===s?d.shape[3]:d.shape[1];F(f.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${f.shape[2]}.`),F(qn(n,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);const y=Pn(d.shape,f.shape,n,i,r,o);let b,g;if(null!=a&&(b=ge(a,"bias","fused conv2d"),[b]=ie(b,h),"NHWC"===s?ln(y.outShape,b.shape):(F(1>=b.shape.length,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`),F(0===b.shape.length||b.shape[0]===y.outChannels||1===b.shape[0],()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${y.outChannels})`))),null!=l){const t=l.shape;if(F(1>=t.length||3===t.length,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${t.length}.`),1===t.length)F(1===t[0]||t[0]===y.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${t}) is not compatible with the number of output channels (${y.outChannels}).`);else if(3===t.length)try{ln(t,y.outShape)}catch(JJ){const n=`Error in fused conv2d: PReLU activation weights (${t}) is not compatible with the output shape of the conv2d (${y.outShape}).`;throw Error(n)}g=ge(l,"prelu weights","fused conv2d")}const w=(t,e)=>{F("NHWC"===s,()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`);const[o,a,l,c]=e,h=Cr(t,l,u);F(Gn(i),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`);const f=[Hg(a.shape,h,o,n,r),Gv(a,h,o.shape,n,r)];if(null!=c){const t=Sr(c,h);f.push(t)}return f},x={x:d,filter:f,bias:b,preluActivationWeights:g},v={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:o,activation:u,leakyreluAlpha:c};return null==a?ur((t,e,n)=>{let r=Qy.runKernel(sy,x,v);return n([e,t,r]),p&&(r=kg(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:w}})(d,f):ur((t,e,n,r)=>{let s=Qy.runKernel(sy,x,v);return r([e,t,s,n]),p&&(s=kg(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:w}})(d,f,b)}}),Xv=xe({depthwiseConv2dNativeBackpropFilter_(t,e,n,r,s,i=[1,1],o){let a=t;3===t.rank&&(a=kg(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u=e;3===u.rank&&(u=kg(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={x:a,dy:u},c={strides:r,pad:s,dimRoundingMode:o,dilations:i,filterShape:n};return Qy.runKernel(zd,l,c)}}),Jv=xe({depthwiseConv2dNativeBackpropInput_(t,e,n,r,s,i=[1,1],o){let a=e,u=!1;3===e.rank&&(u=!0,a=kg(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={dy:a,filter:n},c={strides:r,pad:s,dimRoundingMode:o,dilations:i,inputShape:t},h=Qy.runKernel(Wd,l,c);return u?kg(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Kv=xe({fusedDepthwiseConv2d_({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:a,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===qv(Qy.state.gradientDepth,u)){let h=sw(t,e,n,r,s,i,o);return null!=a&&(h=og(h,a)),Er(h,u,l,c)}const h=ge(t,"x","depthwiseConv2d","float32"),f=ge(e,"filter","depthwiseConv2d","float32");let d=h,p=!1;3===h.rank&&(p=!0,d=kg(h,[1,h.shape[0],h.shape[1],h.shape[2]])),F(4===d.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`),F(4===f.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`),F(d.shape[3]===f.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${f.shape[2]}.`),null==i&&(i=[1,1]),F(qn(n,i),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),Xn("fused depthwiseConv2d",r,o);const m=Pn(d.shape,f.shape,n,i,r,o,!0);let y,b;null!=a&&(y=ge(a,"bias","fused conv2d"),[y]=ie(y,h),ln(m.outShape,y.shape)),null!=l&&(b=ge(l,"prelu weights","fused depthwiseConv2d"));const g=(t,e)=>{F(Gn(i),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[s,a,l,c]=e,h=Cr(t,l,u),f=Jv(a.shape,h,s,n,r,i,o),d=Xv(a,h,s.shape,n,r,i,o);return null!=c?[f,d,Sr(y,h)]:[f,d]},w={x:d,filter:f,bias:y,preluActivationWeights:b},x={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:o,activation:u,leakyreluAlpha:c};return null==a?ur((t,e,n)=>{let r=Qy.runKernel(iy,w,x);return n([e,t,r]),p&&(r=kg(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:g}})(d,f):ur((t,e,n,r)=>{let s=Qy.runKernel(iy,w,x);return r([e,t,s,n]),p&&(s=kg(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:g}})(d,f,y)}}),Yv=xe({fusedMatMul_({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:s,activation:i="linear",preluActivationWeights:o,leakyreluAlpha:a=.2}){if(!1===qv(Qy.state.gradientDepth,i)){let u=Bb(t,e,n,r);return null!=s&&(u=og(u,s)),Er(u,i,o,a)}let u=ge(t,"a","fused matMul"),l=ge(e,"b","fused matMul");[u,l]=ie(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],f=n?u.shape[u.rank-1]:u.shape[u.rank-2],d=r?l.shape[l.rank-2]:l.shape[l.rank-1],p=u.shape.slice(0,-2),m=l.shape.slice(0,-2),y=P(p),b=P(m);F(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`);const g=ln(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([f,d]),w=kg(u,n?[y,c,f]:[y,f,c]),x=kg(l,r?[b,d,h]:[b,h,d]);let v,$;null!=s&&(v=ge(s,"bias","fused matMul"),[v]=ie(v,u),ln(g,v.shape)),null!=o&&($=ge(o,"prelu weights","fused matMul"));const k=(t,e)=>{const[o,a,u,l]=e,c=Cr(kg(t,u.shape),u,i);let h,f;return n||r?!n&&r?(h=Bb(c,a,!1,!1),f=Bb(c,o,!0,!1)):n&&!r?(h=Bb(a,c,!1,!0),f=Bb(o,c,!1,!1)):(h=Bb(a,c,!0,!0),f=Bb(c,o,!0,!0)):(h=Bb(c,a,!1,!0),f=Bb(o,c,!0,!1)),null!=s?[h,f,Sr(l,c)]:[h,f]},N={a:w,b:x,bias:v,preluActivationWeights:$},C={transposeA:n,transposeB:r,activation:i,leakyreluAlpha:a};return null==s?ur((t,e,n)=>{const r=Qy.runKernel(ry,N,C);return n([t,e,r]),{value:kg(r,g),gradFunc:k}})(w,x):ur((t,e,n,r)=>{const s=Qy.runKernel(ry,N,C);return r([t,e,s,n]),{value:kg(s,g),gradFunc:k}})(w,x,v)}}),Zv=Object.freeze(Object.defineProperty({__proto__:null,conv2d:Hv,depthwiseConv2d:Kv,matMul:Yv},Symbol.toStringTag,{value:"Module"})),Qv=xe({hammingWindow_(t){return Nr(t,.54,.46)}}),t$=xe({hannWindow_(t){return Nr(t,.5,.5)}}),e$=xe({frame_(t,e,n,r=!1,s=0){let i=0;const o=[];for(;i+e<=t.size;)o.push(Tg(t,i,e)),i+=n;if(r)for(;i<t.size;){const r=i+e-t.size,a=Sg([Tg(t,i,e-r),Jn([r],s)]);o.push(a),i+=n}return 0===o.length?yr([],[0,e]):kg(Sg(o),[o.length,e])}}),n$=xe({stft_(t,e,n,r,s=t$){null==r&&(r=kr(e));const i=e$(t,e,n),o=lg(i,s(e));return Cv(o,r)}}),r$=xe({cropAndResize_(t,e,n,r,s="bilinear",i=0){const o=ge(t,"image","cropAndResize"),a=ge(e,"boxes","cropAndResize","float32"),u=ge(n,"boxInd","cropAndResize","int32"),l=a.shape[0];F(4===o.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),F(2===a.rank&&4===a.shape[1],()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${a.shape}.`),F(1===u.rank&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${a.shape}.`),F(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),F(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),F("bilinear"===s||"nearest"===s,()=>`method must be bilinear or nearest, but was ${s}`);const c={image:o,boxes:a,boxInd:u},h={method:s,extrapolationValue:i,cropSize:r};return Qy.runKernel(Ld,c,h)}}),s$=xe({flipLeftRight_(t){const e=ge(t,"image","flipLeftRight","float32");F(4===e.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const n={image:e};return Qy.runKernel(sp,n,{})}}),i$=xe({grayscaleToRGB_(t){const e=ge(t,"image","grayscaleToRGB"),n=e.rank-1,r=e.shape[n];F(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),F(1===r,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);const s=new Array(e.rank);return s.fill(1,0,n),s[n]=3,Sw(e,s)}}),o$=xe({rotateWithOffset_(t,e,n=0,r=.5){const s=ge(t,"image","rotateWithOffset","float32");F(4===s.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`);const i={image:s},o={radians:e,fillValue:n,center:r};return Qy.runKernel(ny,i,o)}}),a$=xe({nonMaxSuppression_(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const i=ge(t,"boxes","nonMaxSuppression","float32"),o=ge(e,"scores","nonMaxSuppression","float32"),a=Tr(i,o,n,r,s),u={maxOutputSize:n=a.maxOutputSize,iouThreshold:r=a.iouThreshold,scoreThreshold:s=a.scoreThreshold};return Qy.runKernel(qp,{boxes:i,scores:o},u)}}),u$=xe({nonMaxSuppressionWithScore_(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const o=ge(t,"boxes","nonMaxSuppression"),a=ge(e,"scores","nonMaxSuppression"),u=Tr(o,a,n,r,s,i),l={boxes:o,scores:a},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:s=u.scoreThreshold,softNmsSigma:i=u.softNmsSigma},h=Qy.runKernel(Xp,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),l$=xe({nonMaxSuppressionPadded_(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const o=ge(t,"boxes","nonMaxSuppression"),a=ge(e,"scores","nonMaxSuppression"),u=Tr(o,a,n,r,s,null),l={boxes:o,scores:a},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:i},h=Qy.runKernel(Hp,l,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),c$=xe({resizeBilinear_(t,e,n=!1,r=!1){const s=ge(t,"images","resizeBilinear");F(3===s.rank||4===s.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),F(2===e.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),F(!1===r||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let i=s,o=!1;3===s.rank&&(o=!0,i=kg(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const a={images:i},u={alignCorners:n,halfPixelCenters:r,size:e},l=Qy.runKernel(hm,a,u);return o?kg(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),h$=xe({resizeNearestNeighbor_(t,e,n=!1,r=!1){const s=ge(t,"images","resizeNearestNeighbor");F(3===s.rank||4===s.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),F(2===e.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),F("float32"===s.dtype||"int32"===s.dtype,()=>"`images` must have `int32` or `float32` as dtype"),F(!1===r||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let i=s,o=!1;3===s.rank&&(o=!0,i=kg(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const a={images:i},u={alignCorners:n,halfPixelCenters:r,size:e},l=Qy.runKernel(lm,a,u);return o?kg(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),f$=xe({threshold_(t,e="binary",n=!1,r=.5){const s=ge(t,"image","threshold"),i=s.shape[0]*s.shape[1];let o,a,u,l,c=lg(mr([r]),255);if(F(3===s.rank,()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`),F(3===s.shape[2]||1===s.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`),F("int32"===s.dtype||"float32"===s.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`),F("otsu"===e||"binary"===e,()=>`Method must be binary or otsu, but was ${e}`),3===s.shape[2]){[o,a,u]=Nv(s,[1,1,1],-1);const t=lg(o,.2989),e=lg(a,.587),n=lg(u,.114);l=og(og(t,e),n)}else l=t;"otsu"===e&&(c=((t,e)=>{let n,r,s,i,o,a,u=mr([-1]),l=mr([0]),c=mr([0]);for(let h=0;h<t.size-1;h++){n=Tg(t,0,h+1),r=Tg(t,h+1),o=ug(xw(n),e),a=ug(xw(r),e);const f=xw(lg(n,pr(0,n.size)));s=ug(f,xw(n));const d=Jn(r.shape,n.size),p=og(pr(0,r.size),d),m=lg(r,p);i=ug(xw(m),xw(r));const y=jw(s,i),b=jw(s,i),g=lg(o,a);c=lg(lg(g,y),b);const w=Rw(c,l);l=uw(w,c,l),u=uw(w,mr([h]),u)}return u})(Dg(Rb(uv(l),"int32"),$e([]),256),i));const h=n?Lw(l,c):Rw(l,c);return Rb(lg(h,255),"int32")}}),d$=xe({transform_(t,e,n="nearest",r="constant",s=0,i){const o=ge(t,"image","transform","float32"),a=ge(e,"transforms","transform","float32");F(4===o.rank,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),F(2===a.rank&&(a.shape[0]===o.shape[0]||1===a.shape[0])&&8===a.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),F(null==i||2===i.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`);const u={image:o,transforms:a},l={interpolation:n,fillMode:r,fillValue:s,outputShape:i};return Qy.runKernel(Xm,u,l)}}),p$=xe({bandPart_(t,e,n){F(e%1==0,()=>`bandPart(): numLower must be an integer, got ${e}.`),F(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=ge(t,"a","bandPart");F(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[i,o]=r.shape.slice(-2);if(e>i)throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${i}).`);if(n>o)throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);0>e&&(e=i),0>n&&(n=o);const a=kg(pr(0,i,1,"int32"),[-1,1]),u=pr(0,o,1,"int32"),l=jw(a,u),c=qw(Lw(l,sr(+e,"int32")),Aw(l,sr(-n,"int32"))),h=hr([i,o],r.dtype);return kg(Tv(Dv(kg(r,[-1,i,o])).map(t=>uw(c,t,h))),s)}}),m$=xe({gramSchmidt_(t){let e;if(Array.isArray(t)){e=!1,F(null!=t&&t.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=t[0].shape[0];for(let e=1;e<t.length;++e)F(t[e].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`)}else e=!0,t=Nv(t,t.shape[0],0).map(t=>Ev(t,[0]));F(t.length<=t[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`);const n=[],r=t;for(let s=0;s<t.length;++s)n.push(Qy.tidy(()=>{let t=r[s];if(s>0)for(let e=0;s>e;++e){const r=lg(xw(lg(n[e],t)),n[e]);t=jw(t,r)}return ug(t,vw(t,"euclidean"))}));return e?Tv(n,0):n}}),y$=xe({qr_(t,e=!1){if(F(t.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`),2===t.rank)return Pr(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce((t,e)=>t*e),r=Dv(kg(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),s=[],i=[];return r.forEach(t=>{const[n,r]=Pr(t,e);s.push(n),i.push(r)}),[kg(Tv(s,0),t.shape),kg(Tv(i,0),t.shape)]}}});var b$,g$;(g$=b$||(b$={}))[g$.NONE=0]="NONE",g$[g$.MEAN=1]="MEAN",g$[g$.SUM=2]="SUM",g$[g$.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS";const w$=xe({computeWeightedLoss_(t,e,n=b$.SUM_BY_NONZERO_WEIGHTS){const r=ge(t,"losses","computeWeightedLoss");let s=null;null!=e&&(s=ge(e,"weights","computeWeightedLoss"));const i=null==s?r:lg(r,s);if(n===b$.NONE)return i;if(n===b$.SUM)return xw(i);if(n===b$.MEAN){if(null==s)return nx(i);{const t=r.size/s.size,e=ug(xw(i),xw(s));return t>1?ug(e,sr(t)):e}}if(n===b$.SUM_BY_NONZERO_WEIGHTS){if(null==s)return ug(xw(i),sr(r.size));{const t=lg(s,fr(r.shape)),e=Rb(xw(lx(t,sr(0))),"float32");return ug(xw(i),e)}}throw Error(`Unknown reduction: ${n}`)}}),x$=xe({absoluteDifference_(t,e,n,r=b$.SUM_BY_NONZERO_WEIGHTS){const s=ge(t,"labels","absoluteDifference"),i=ge(e,"predictions","absoluteDifference");let o=null;null!=n&&(o=ge(n,"weights","absoluteDifference")),M(s.shape,i.shape,"Error in absoluteDifference: ");const a=cg(jw(s,i));return w$(a,o,r)}}),v$=xe({cosineDistance_(t,e,n,r,s=b$.SUM_BY_NONZERO_WEIGHTS){const i=ge(t,"labels","cosineDistance"),o=ge(e,"predictions","cosineDistance");let a=null;null!=r&&(a=ge(r,"weights","cosineDistance")),M(i.shape,o.shape,"Error in cosineDistance: ");const u=sr(1),l=jw(u,xw(lg(i,o),n,!0));return w$(l,a,s)}}),$$=xe({hingeLoss_(t,e,n,r=b$.SUM_BY_NONZERO_WEIGHTS){let s=ge(t,"labels","hingeLoss");const i=ge(e,"predictions","hingeLoss");let o=null;null!=n&&(o=ge(n,"weights","hingeLoss")),M(s.shape,i.shape,"Error in hingeLoss: ");const a=sr(1);s=jw(lg(sr(2),s),a);const u=ev(jw(a,lg(s,i)));return w$(u,o,r)}}),k$=xe({huberLoss_(t,e,n,r=1,s=b$.SUM_BY_NONZERO_WEIGHTS){const i=ge(t,"labels","huberLoss"),o=ge(e,"predictions","huberLoss");let a=null;null!=n&&(a=ge(n,"weights","huberLoss")),M(i.shape,o.shape,"Error in huberLoss: ");const u=sr(r),l=cg(jw(o,i)),c=rx(l,u),h=jw(l,c),f=og(lg(sr(.5),ww(c)),lg(u,h));return w$(f,a,s)}}),N$=xe({logLoss_(t,e,n,r=1e-7,s=b$.SUM_BY_NONZERO_WEIGHTS){const i=ge(t,"labels","logLoss"),o=ge(e,"predictions","logLoss");let a=null;null!=n&&(a=ge(n,"weights","logLoss")),M(i.shape,o.shape,"Error in logLoss: ");const u=sr(1),l=sr(r),c=jb(lg(i,Vw(og(o,l)))),h=lg(jw(u,i),Vw(og(jw(u,o),l))),f=jw(c,h);return w$(f,a,s)}}),C$=xe({meanSquaredError_(t,e,n,r=b$.SUM_BY_NONZERO_WEIGHTS){const s=ge(t,"labels","meanSquaredError"),i=ge(e,"predictions","meanSquaredError");let o=null;null!=n&&(o=ge(n,"weights","meanSquaredError")),M(s.shape,i.shape,"Error in meanSquaredError: ");const a=Sv(s,i);return w$(a,o,r)}}),S$=xe({sigmoidCrossEntropy_(t,e,n,r=0,s=b$.SUM_BY_NONZERO_WEIGHTS){let i=ge(t,"multiClassLabels","sigmoidCrossEntropy");const o=ge(e,"logits","sigmoidCrossEntropy");let a=null;if(null!=n&&(a=ge(n,"weights","sigmoidCrossEntropy")),M(i.shape,o.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=sr(r),e=sr(1),n=sr(.5);i=og(lg(i,jw(e,t)),lg(n,t))}const u=((t,e)=>{const n=ge(t,"labels","sigmoidCrossEntropyWithLogits"),r=ge(e,"logits","sigmoidCrossEntropyWithLogits");M(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=ev(r),i=lg(r,n),o=Bw(kw(jb(cg(r))));return og(jw(s,i),o)})(i,o);return w$(u,a,s)}}),E$=xe({softmaxCrossEntropy_(t,e,n,r=0,s=b$.SUM_BY_NONZERO_WEIGHTS){let i=ge(t,"onehotLabels","softmaxCrossEntropy");const o=ge(e,"logits","softmaxCrossEntropy");let a=null;if(null!=n&&(a=ge(n,"weights","softmaxCrossEntropy")),M(i.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const t=sr(r),e=sr(1),n=sr(i.shape[1]);i=og(lg(i,jw(e,t)),ug(t,n))}const u=((t,e,n=-1)=>{if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);return ur((t,e,r)=>{const s=Gw(e,[n],!0),i=jw(Rb(e,"float32"),s);r([t,i]);const o=jb(lg(i,t));return{value:xw(o,[n]),gradFunc(t,e){const[r,s]=e,i=Qn(t.shape,[n]);return[lg(kg(t,i),jw(Rb(r,"float32"),kw(s))),lg(kg(t,i),jw(kw(s),Rb(r,"float32")))]}}})(t,e)})(i,o);return w$(u,a,s)}}),T$=xe({sparseFillEmptyRows_(t,e,n,r){const s=ge(t,"indices","sparseFillEmptyRows","int32"),i=ge(e,"values","sparseFillEmptyRows"),o=ge(n,"denseShape","sparseFillEmptyRows","int32"),a=ge(r,"defaultValue","sparseFillEmptyRows",i.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==i.rank)throw new Error(`Values should be Tensor1D but received shape ${i.shape}`);if(1!==o.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(0!==a.rank)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);const u={indices:s,values:i,denseShape:o,defaultValue:a},l=Qy.runKernel(Om,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}}),_$=xe({sparseReshape_(t,e,n){const r=ge(t,"inputIndices","sparseReshape","int32"),s=ge(e,"inputShape","sparseReshape","int32"),i=ge(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`New shape should be Tensor1D but received shape ${i.shape}`);const o={inputIndices:r,inputShape:s,newShape:i},a=Qy.runKernel(Im,o);return{outputIndices:a[0],outputShape:a[1]}}}),R$=xe({sparseSegmentMean_(t,e,n){const r=ge(t,"data","sparseSegmentMean"),s=ge(e,"indices","sparseSegmentMean","int32"),i=ge(n,"segmentIds","sparseSegmentMean","int32");if(1>r.rank)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==i.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${i.shape}`);const o={data:r,indices:s,segmentIds:i};return Qy.runKernel(Fm,o)}}),A$=xe({sparseSegmentSum_(t,e,n){const r=ge(t,"data","sparseSegmentSum"),s=ge(e,"indices","sparseSegmentSum","int32"),i=ge(n,"segmentIds","sparseSegmentSum","int32");if(1>r.rank)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==i.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${i.shape}`);const o={data:r,indices:s,segmentIds:i};return Qy.runKernel(Mm,o)}}),O$=xe({stringNGrams_(t,e,n,r,s,i,o,a){const u=ge(t,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=ge(e,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:s,rightPad:i,padWidth:o,preserveShortSequences:a},h={data:u,dataSplits:l},f=Qy.runKernel(Bm,h,c);return{nGrams:f[0],nGramsSplits:f[1]}}}),I$=xe({stringSplit_(t,e,n=!0){const r=ge(t,"input","stringSplit","string"),s=ge(e,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const i={skipEmpty:n},o={input:r,delimiter:s},a=Qy.runKernel(zm,o,i);return{indices:a[0],values:a[1],shape:a[2]}}}),F$=xe({stringToHashBucketFast_(t,e){const n=ge(t,"input","stringToHashBucketFast","string"),r={numBuckets:e};if(0>=e)throw new Error("Number of buckets must be at least 1");const s={input:n};return Qy.runKernel(Wm,s,r)}}),M$={fft:vv,ifft:$v,rfft:Cv,irfft:kv},D$={hammingWindow:Qv,hannWindow:t$,frame:e$,stft:n$},L$={flipLeftRight:s$,grayscaleToRGB:i$,resizeNearestNeighbor:h$,resizeBilinear:c$,rotateWithOffset:o$,cropAndResize:r$,nonMaxSuppression:a$,nonMaxSuppressionAsync(t,e,n){return cf(this,arguments,function*(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const i=ge(t,"boxes","nonMaxSuppressionAsync"),o=ge(e,"scores","nonMaxSuppressionAsync"),a=Tr(i,o,n,r,s);n=a.maxOutputSize,r=a.iouThreshold,s=a.scoreThreshold;const u=yield Promise.all([i.data(),o.data()]),l=u[0],c=u[1],{selectedIndices:h}=Ar(l,c,n,r,s);return i!==t&&i.dispose(),o!==e&&o.dispose(),mr(h,"int32")})},nonMaxSuppressionWithScore:u$,nonMaxSuppressionWithScoreAsync(t,e,n){return cf(this,arguments,function*(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const o=ge(t,"boxes","nonMaxSuppressionAsync"),a=ge(e,"scores","nonMaxSuppressionAsync"),u=Tr(o,a,n,r,s,i);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,i=u.softNmsSigma;const l=yield Promise.all([o.data(),a.data()]),c=l[0],h=l[1],{selectedIndices:f,selectedScores:d}=Ir(c,h,n,r,s,i);return o!==t&&o.dispose(),a!==e&&a.dispose(),{selectedIndices:mr(f,"int32"),selectedScores:mr(d)}})},nonMaxSuppressionPadded:l$,nonMaxSuppressionPaddedAsync(t,e,n){return cf(this,arguments,function*(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const o=ge(t,"boxes","nonMaxSuppressionAsync"),a=ge(e,"scores","nonMaxSuppressionAsync"),u=Tr(o,a,n,r,s,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[f,d]=yield Promise.all([o.data(),a.data()]),{selectedIndices:p,validOutputs:m}=Or(f,d,l,c,h,i);return o!==t&&o.dispose(),a!==e&&a.dispose(),{selectedIndices:mr(p,"int32"),validOutputs:sr(m,"int32")}})},threshold:f$,transform:d$},P$={bandPart:p$,gramSchmidt:m$,qr:y$},V$={absoluteDifference:x$,computeWeightedLoss:w$,cosineDistance:v$,hingeLoss:$$,huberLoss:k$,logLoss:N$,meanSquaredError:C$,sigmoidCrossEntropy:S$,softmaxCrossEntropy:E$},B$={sparseFillEmptyRows:T$,sparseReshape:_$,sparseSegmentMean:R$,sparseSegmentSum:A$},z$={stringNGrams:O$,stringSplit:I$,stringToHashBucketFast:F$};class W$ extends eg{minimize(t,e=!1,n){const{value:r,grads:s}=this.computeGradients(t,n);if(null!=n){const t=n.map(t=>({name:t.name,tensor:s[t.name]}));this.applyGradients(t)}else this.applyGradients(s);return nn(s),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return ar(t,e)}dispose(){null!=this.iterations_&&nn(this.iterations_)}saveIterations(){return cf(this,null,function*(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:sr(this.iterations_,"int32")}})}getWeights(){return cf(this,null,function*(){throw new Error("getWeights() is not implemented for this optimizer yet.")})}setWeights(t){return cf(this,null,function*(){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)})}extractIterations(t){return cf(this,null,function*(){return this.iterations_=(yield t[0].tensor.data())[0],t.slice(1)})}}Object.defineProperty(W$,Symbol.hasInstance,{value(t){return null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients}});class j$ extends W${constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Qy.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Qy.registeredVariables[e],s=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${e}/accum_grad`,variable:en(()=>lw(r).variable(s))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${e}/accum_var`,variable:en(()=>lw(r).variable(s))});const i=Array.isArray(t)?t[n].tensor:t[e];if(null==i)return;const o=this.accumulatedGrads[n].variable,a=this.accumulatedUpdates[n].variable;en(()=>{const t=og(lg(o,this.rho),lg(ww(i),1-this.rho)),e=lg(ug(gw(og(a,this.epsilon)),gw(og(o,this.epsilon))),i),n=og(lg(a,this.rho),lg(ww(e),1-this.rho));o.assign(t),a.assign(n);const s=og(lg(e,-this.learningRate),r);r.assign(s)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(nn(this.accumulatedGrads.map(t=>t.variable)),nn(this.accumulatedUpdates.map(t=>t.variable)))}getWeights(){return cf(this,null,function*(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[yield this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(t){return cf(this,null,function*(){const e=(t=yield this.extractIterations(t)).length/2,n=!1;this.accumulatedGrads=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)})),this.accumulatedUpdates=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)}))})}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}j$.className="Adadelta",An(j$);class U$ extends W${constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Qy.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:`${e}/accumulator`,variable:en(()=>Jn(r.shape,this.initialAccumulatorValue).variable(t))}}const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const i=this.accumulatedGrads[n].variable;en(()=>{const t=og(i,ww(s));i.assign(t);const e=og(lg(ug(s,gw(og(t,Qy.backend.epsilon()))),-this.learningRate),r);r.assign(e)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&nn(this.accumulatedGrads.map(t=>t.variable))}getWeights(){return cf(this,null,function*(){return[yield this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(t){return cf(this,null,function*(){t=yield this.extractIterations(t),this.accumulatedGrads=t.map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))})}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}U$.className="Adagrad",An(U$);class G$ extends W${constructor(t,e,n,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],en(()=>{this.accBeta1=sr(e).variable(),this.accBeta2=sr(n).variable()}),null==r&&(this.epsilon=Qy.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);en(()=>{const n=jw(1,this.accBeta1),r=jw(1,this.accBeta2);e.forEach((e,s)=>{const i=Qy.registeredVariables[e],o=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${e}/m`,variable:en(()=>lw(i).variable(o))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${e}/v`,variable:en(()=>lw(i).variable(o))});const a=Array.isArray(t)?t[s].tensor:t[e];if(null==a)return;const u=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,c=og(lg(u,this.beta1),lg(a,1-this.beta1)),h=og(lg(l,this.beta2),lg(ww(a),1-this.beta2)),f=ug(c,n),d=ug(h,r);u.assign(c),l.assign(h);const p=og(lg(ug(f,og(gw(d),this.epsilon)),-this.learningRate),i);i.assign(p)}),this.accBeta1.assign(lg(this.accBeta1,this.beta1)),this.accBeta2.assign(lg(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&nn(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedSecondMoment&&nn(this.accumulatedSecondMoment.map(t=>t.variable))}getWeights(){return cf(this,null,function*(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[yield this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(t){return cf(this,null,function*(){t=yield this.extractIterations(t),en(()=>{this.accBeta1.assign(bw(this.beta1,this.iterations_+1)),this.accBeta2.assign(bw(this.beta2,this.iterations_+1))});const e=t.length/2,n=!1;this.accumulatedFirstMoment=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)})),this.accumulatedSecondMoment=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)}))})}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}G$.className="Adam",An(G$);class q$ extends W${constructor(t,e,n,r=null,s=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],en(()=>{this.iteration=sr(0).variable(),this.accBeta1=sr(e).variable()}),null==r&&(this.epsilon=Qy.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);en(()=>{const n=jw(1,this.accBeta1),r=ug(-this.learningRate,og(lg(this.iteration,this.decay),1));e.forEach((e,s)=>{const i=Qy.registeredVariables[e],o=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${e}/m`,variable:lw(i).variable(o)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${e}/v`,variable:lw(i).variable(o)});const a=Array.isArray(t)?t[s].tensor:t[e];if(null==a)return;const u=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,c=og(lg(u,this.beta1),lg(a,1-this.beta1)),h=lg(l,this.beta2),f=cg(a),d=ex(h,f);u.assign(c),l.assign(d);const p=og(lg(ug(r,n),ug(c,og(d,this.epsilon))),i);i.assign(p)}),this.iteration.assign(og(this.iteration,1)),this.accBeta1.assign(lg(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&nn(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedWeightedInfNorm&&nn(this.accumulatedWeightedInfNorm.map(t=>t.variable))}getWeights(){return cf(this,null,function*(){throw new Error("getWeights() is not implemented for Adamax yet.")})}setWeights(t){return cf(this,null,function*(){throw new Error("setWeights() is not implemented for Adamax yet.")})}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}q$.className="Adamax",An(q$);class H$ extends W${constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const s=Qy.registeredVariables[e];en(()=>{const t=og(lg(this.c,r),s);s.assign(t)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=rn(sr(-t))}dispose(){this.c.dispose()}getWeights(){return cf(this,null,function*(){return[yield this.saveIterations()]})}setWeights(t){return cf(this,null,function*(){if(0!==(t=yield this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")})}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}H$.className="SGD",An(H$);class X$ extends H${constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=sr(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Qy.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:`${e}/momentum`,variable:en(()=>lw(r).variable(t))}}const s=this.accumulations[n].variable,i=Array.isArray(t)?t[n].tensor:t[e];null!=i&&en(()=>{let t;const e=og(lg(this.m,s),i);t=this.useNesterov?og(lg(this.c,og(i,lg(e,this.m))),r):og(lg(this.c,e),r),s.assign(e),r.assign(t)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&nn(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}getWeights(){return cf(this,null,function*(){return[yield this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(t){return cf(this,null,function*(){t=yield this.extractIterations(t),this.accumulations=t.map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))})}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}X$.className="Momentum",An(X$);class J$ extends W${constructor(t,e=.9,n=0,r=null,s=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=Qy.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Qy.registeredVariables[e],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${e}/rms`,variable:en(()=>lw(r).variable(s))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${e}/momentum`,variable:en(()=>lw(r).variable(s))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${e}/mg`,variable:en(()=>lw(r).variable(s))});const i=Array.isArray(t)?t[n].tensor:t[e];if(null==i)return;const o=this.accumulatedMeanSquares[n].variable,a=this.accumulatedMoments[n].variable;en(()=>{const t=og(lg(o,this.decay),lg(ww(i),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,s=og(lg(e,this.decay),lg(i,1-this.decay)),u=ug(lg(i,this.learningRate),gw(jw(t,og(ww(s),this.epsilon)))),l=og(lg(a,this.momentum),u);o.assign(t),e.assign(s),a.assign(l);const c=jw(r,l);r.assign(c)}else{const t=og(lg(o,this.decay),lg(ww(i),1-this.decay)),e=og(lg(a,this.momentum),ug(lg(i,this.learningRate),gw(og(t,this.epsilon))));o.assign(t),a.assign(e);const n=jw(r,e);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&nn(this.accumulatedMeanSquares.map(t=>t.variable)),null!=this.accumulatedMeanGrads&&this.centered&&nn(this.accumulatedMeanGrads.map(t=>t.variable)),null!=this.accumulatedMoments&&nn(this.accumulatedMoments.map(t=>t.variable))}getWeights(){return cf(this,null,function*(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[yield this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(t){return cf(this,null,function*(){t=yield this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)})),this.accumulatedMoments=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)})))})}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}J$.className="RMSProp",An(J$);class K${static sgd(t){return new H$(t)}static momentum(t,e,n=!1){return new X$(t,e,n)}static rmsprop(t,e=.9,n=0,r=null,s=!1){return new J$(t,e,n,r,s)}static adam(t=.001,e=.9,n=.999,r=null){return new G$(t,e,n,r)}static adadelta(t=.001,e=.95,n=null){return new j$(t,e,n)}static adamax(t=.002,e=.9,n=.999,r=null,s=0){return new q$(t,e,n,r,s)}static adagrad(t,e=.1){return new U$(t,e)}}const Y$={sgd:K$.sgd,momentum:K$.momentum,adadelta:K$.adadelta,adagrad:K$.adagrad,rmsprop:K$.rmsprop,adamax:K$.adamax,adam:K$.adam},Z$="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:t=>t();var Q$,tk;(tk=Q$||(Q$={}))[tk.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",tk[tk.VALUE_ROWIDS=1]="VALUE_ROWIDS",tk[tk.ROW_LENGTHS=2]="ROW_LENGTHS",tk[tk.ROW_SPLITS=3]="ROW_SPLITS",tk[tk.ROW_LIMITS=4]="ROW_LIMITS",tk[tk.ROW_STARTS=5]="ROW_STARTS";const ek=1.7580993408473768,nk=1.0507009873554805,rk=.3275911,sk=.254829592,ik=-.284496736,ok=1.421413741,ak=-1.453152027,uk=1.061405429,lk="->",ck=/->/g,hk=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:Ss,computeOutShape:Cs,segOpComputeOptimalWindowSize:Ns},Symbol.toStringTag,{value:"Module"})),fk=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:sk,ERF_A2:ik,ERF_A3:ok,ERF_A4:ak,ERF_A5:uk,ERF_P:rk,PARALLELIZE_THRESHOLD:30,get RowPartitionType(){return Q$},SELU_SCALE:nk,SELU_SCALEALPHA:ek,applyActivation:Er,assertAndGetBroadcastShape:ln,assertAxesAreInnerMostDims:tr,assertParamsConsistent:Br,assignToTypedArray:ss,axesAreInnerMostDims:Kn,calculateShapes:mn,checkEinsumDimSizes:ls,checkPadOnDimRoundingMode:Xn,combineLocations:Yn,combineRaggedTensorToTensorShapes:Wr,complexWithEvenIndex:es,complexWithOddIndex:ns,computeConv2DInfo:Pn,computeConv3DInfo:Vn,computeDefaultPad:Bn,computeDilation2DInfo:Mn,computeOptimalWindowSize:qr,computeOutAndReduceShapes:Zn,computeOutShape:zr,computePool2DInfo:Dn,computePool3DInfo:Ln,convertConv2DDataFormat:Hn,decodeEinsumEquation:as,eitherStridesOrDilationsAreOne:qn,expandShapeToKeepDim:Qn,exponent:os,exponents:is,fromStringArrayToUint8:Ts,fromUint8ToStringArray:Es,getAxesPermutation:er,getBroadcastDims:an,getComplexWithIndex:rs,getEinsumComputePath:cs,getEinsumPermutation:us,getFusedBiasGradient:Sr,getFusedDyActivation:Cr,getImageCenter:Hr,getInnerMostAxes:rr,getPermuted:Jr,getRaggedRank:Ur,getReductionAxes:un,getReshaped:Xr,getReshapedPermuted:Kr,getRowPartitionTypesHelper:jr,getSliceBeginCoords:Yr,getSliceSize:Zr,getSparseFillEmptyRowsIndicesDenseShapeMismatch:ps,getSparseFillEmptyRowsNegativeIndexErrorMessage:ms,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:ys,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero",getSparseReshapeInputOutputMismatchErrorMessage:xs,getSparseReshapeInputOutputMultipleErrorMessage:ws,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:bs,getSparseReshapeNegativeOutputDimErrorMessage:gs,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:ks,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>"segment ids must be >= 0",getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:vs,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:$s,getUndoAxesPermutation:nr,isIdentityPermutation:hs,log(...t){!gt().getBool("IS_TEST")&&gt().getBool("PROD")},mergeRealAndImagArrays:Qr,prepareAndValidate:fn,prepareSplitSize:ds,segment_util:hk,shouldFuse:qv,slice_util:tg,splitRealAndImagArrays:ts,tupleValuesAreOne:Gn,upcastType:re,validateDefaultValueShape:Gr,validateInput:pn,validateUpdateShape:dn,warn:vt},Symbol.toStringTag,{value:"Module"})),dk=Object.freeze(Object.defineProperty({__proto__:null,nonMaxSuppressionV3Impl:Ar,nonMaxSuppressionV4Impl:Or,nonMaxSuppressionV5Impl:Ir,whereImpl:$r},Symbol.toStringTag,{value:"Module"})),pk={kernelName:Zf,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return lg(t,_v(Rb(n,"float32"),-1))}}}},mk={kernelName:Qf,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){const e=ww(Rb(n,"float32")),r=gw(jw(sr(1),e));return jb(ug(t,r))}}}},yk={kernelName:td,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){const e=gw(jw(ww(Rb(n,"float32")),1));return ug(t,e)}}}},bk={kernelName:ed,inputsToSave:["a","b"],gradFunc(t,e){const[n,r]=e,s=ln(n.shape,r.shape);return{a(){let e=t;const r=un(n.shape,s);return r.length>0&&(e=xw(e,r)),kg(e,n.shape)},b(){let e=t;const n=un(r.shape,s);return n.length>0&&(e=xw(e,n)),kg(e,r.shape)}}}},gk={kernelName:nd,saveAllInputs:!0,gradFunc(t,e){const n={};return e.forEach((e,r)=>{n[r]=()=>t.clone()}),n}},wk={kernelName:id,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return lw(n)}}}},xk={kernelName:od,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return lw(n)}}}},vk={kernelName:ad,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return ug(t,gw(jw(sr(1),ww(Rb(n,"float32")))))}}}},$k={kernelName:ud,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){const e=gw(og(sr(1),ww(Rb(n,"float32"))));return ug(t,e)}}}},kk={kernelName:hd,inputsToSave:["a","b"],gradFunc(t,e){const[n,r]=e,s=ln(n.shape,r.shape);return{a(){const e=og(ww(n),ww(r));let i=lg(t,ug(r,e));const o=un(n.shape,s);return o.length>0&&(i=xw(i,o)),kg(i,n.shape)},b(){const e=og(ww(n),ww(r));let i=jb(lg(t,ug(n,e)));const o=un(r.shape,s);return o.length>0&&(i=xw(i,o)),kg(i,r.shape)}}}},Nk={kernelName:ld,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return ug(t,og(ww(Rb(n,"float32")),1))}}}},Ck={kernelName:cd,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return ug(t,jw(sr(1),ww(Rb(n,"float32"))))}}}},Sk=xe({avgPool3dGrad_(t,e,n,r,s,i){const o=ge(t,"dy","avgPool3dGrad"),a=ge(e,"input","avgPool3dGrad");let u=o,l=a,c=!1;4===a.rank&&(c=!0,u=kg(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),l=kg(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),F(5===u.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),F(5===l.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`),Xn("avgPool3dGrad",s,i);const h={dy:u,input:l},f={filterSize:n,strides:r,pad:s,dimRoundingMode:i},d=Qy.runKernel(md,h,f);return c?kg(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Ek={kernelName:pd,inputsToSave:["x"],gradFunc(t,e,n){const[r]=e,{filterSize:s,strides:i,pad:o,dimRoundingMode:a}=n;return{x(){return Sk(t,r,s,i,o,a)}}}},Tk=xe({avgPoolGrad_(t,e,n,r,s){const i=ge(t,"dy","avgPoolGrad"),o=ge(e,"input","avgPoolGrad");F(o.rank===i.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${i.rank})`);let a=o,u=i,l=!1;3===o.rank&&(l=!0,a=kg(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=kg(i,[1,i.shape[0],i.shape[1],i.shape[2]])),F(4===u.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),F(4===a.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);const c={dy:u,input:a},h={filterSize:n,strides:r,pad:s},f=Qy.runKernel(dd,c,h);return l?kg(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),_k={kernelName:fd,inputsToSave:["x"],gradFunc(t,e,n){const[r]=e,{filterSize:s,strides:i,pad:o}=n;return{x(){return Tk(t,r,s,i,o)}}}},Rk={kernelName:yd,inputsToSave:["a","b"],gradFunc(t,e,n){const[r,s]=e,{transposeA:i,transposeB:o}=n;return i||o?!i&&o?{a(){return Bb(t,s,!1,!1)},b(){return Bb(t,r,!0,!1)}}:i&&!o?{a(){return Bb(s,t,!1,!0)},b(){return Bb(r,t,!1,!1)}}:{a(){return Bb(s,t,!0,!0)},b(){return Bb(t,r,!0,!0)}}:{a(){return Bb(t,s,!1,!0)},b(){return Bb(r,t,!0,!1)}}}},Ak={kernelName:bd,gradFunc(t,e,n){const{blockShape:r,crops:s}=n;return{x(){return bx(t,r,s)}}}},Ok={kernelName:wd,gradFunc(t,e,n){const r=n,s=r.inputShape,i=r.shape,o=Array.from(i);for(let u=s.length-1;u>=0;u--)if(s[u]===i[u])o[u]=1;else if(1!==s[u])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${i}].`);const a=[];for(let u=0;u<o.length;u++)o[u]>1&&a.push(u);return{x(){return xw(t,a,!0)}}}},Ik={kernelName:vd,gradFunc(t){return{x(){return t.clone()}}}},Fk={kernelName:$d,gradFunc(t){return{x(){return lw(t)}}}},Mk={kernelName:kd,inputsToSave:["x"],gradFunc(t,e,n){const[r]=e,{clipValueMin:s,clipValueMax:i}=n;return{x(){return uw(qw(Aw(r,s),Lw(r,i)),t,lw(t))}}}},Dk={kernelName:Cd,inputsToSave:["x"],gradFunc:pk.gradFunc},Lk={kernelName:Sd,saveAllInputs:!0,gradFunc(t,e,n){const r=e.map(t=>t.shape),{axis:s}=n,i=G(s,e[0].shape)[0],o=r.map(t=>t[i]);return Nv(t,o,i).map(t=>()=>t)}},Pk={kernelName:Ed,inputsToSave:["x","filter"],gradFunc(t,e,n){const[r,s]=e,{dilations:i,strides:o,pad:a,dataFormat:u}=n;return F(Gn(i),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`),{x(){return Hg(r.shape,t,s,o,a,u)},filter(){return Gv(r,t,s.shape,o,a,u)}}}},Vk={kernelName:_d,inputsToSave:["dy","filter"],gradFunc(t,e,n){const[r,s]=e,{strides:i,pad:o,dataFormat:a,dimRoundingMode:u}=n;return{dy(){return Gg(t,s,i,o,a,1,u)},filter(){return Gv(t,r,s.shape,i,o,a,u)}}}},Bk=xe({conv3DBackpropFilter_(t,e,n,r,s){let i=t;4===t.rank&&(i=kg(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let o=e;4===o.rank&&(o=kg(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),F(5===i.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`),F(5===o.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`),F(5===n.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),F(i.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`),F(o.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`);const a={x:i,dy:o},u={strides:r,pad:s,filterShape:n};return Qy.runKernel(Ad,a,u)}}),zk={kernelName:Rd,inputsToSave:["x","filter"],gradFunc(t,e,n){const{dilations:r,strides:s,pad:i}=n;F(Gn(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[o,a]=e;return{x(){return Kg(o.shape,t,a,s,i)},filter(){return Bk(o,t,a.shape,s,i)}}}},Wk={kernelName:Id,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return lg(jb(pv(Rb(n,"float32"))),t)}}}},jk={kernelName:Fd,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return lg(mv(Rb(n,"float32")),t)}}}},Uk={kernelName:Dd,inputsToSave:["x"],gradFunc(t,e,n){const[r]=e,{axis:s,exclusive:i,reverse:o}=n;return{x(){const e=er([s],r.rank);let n=ew(t,s,i,!o);return null!=e&&(n=Gb(n,e)),n}}}},Gk={kernelName:Bd,inputsToSave:["x","filter"],gradFunc(t,e,n){const{dilations:r,strides:s,pad:i,dimRoundingMode:o}=n,a=null==r?[1,1]:r;F(Gn(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[u,l]=e;return F(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),F(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),F(u.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),F(qn(s,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${a}'.`),Xn("depthwiseConv2d",i,o),{x(){return Jv(u.shape,t,l,s,i,a,o)},filter(){return Xv(u,t,l.shape,s,i,a,o)}}}},qk={kernelName:Ud,inputsToSave:["x","filter"],gradFunc(t,e,n){const[r,s]=e,i={x:r,filter:s,dy:t},o={x:r,filter:s,dy:t};return{x(){return Qy.runKernel(Gd,i,n)},filter(){return Qy.runKernel(qd,o,n)}}}},Hk={kernelName:Jd,outputsToSave:[!0],gradFunc(t,e){const[n]=e,r={dy:t,y:n};return{x(){return Qy.runKernel(Kd,r)}}}},Xk={kernelName:Yd,inputsToSave:["x"],gradFunc(t,e){const[n]=e,r=lg(kw(jb(ww(n))),2/Math.sqrt(Math.PI));return{x(){return lg(t,r)}}}},Jk={kernelName:Qd,outputsToSave:[!0],gradFunc(t,e){const[n]=e;return{x(){return lg(t,n)}}}},Kk={kernelName:tp,inputsToSave:["input"],gradFunc(t,e){const[n]=e;return{input(){return kg(t,n.shape)}}}},Yk={kernelName:ep,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return lg(t,kw(n))}}}},Zk={kernelName:ip,gradFunc(t){return{x(){return lw(t)}}}},Qk={kernelName:op,inputsToSave:["a","b"],gradFunc(t,e){const[n,r]=e,s=ln(n.shape,r.shape);return{a(){const e=ug(t,Rb(r,"float32")),i=un(n.shape,s);return i.length>0?kg(xw(e,i),n.shape):e},b(){let e=lg(t,Rb(n,"float32"));const i=un(r.shape,s);i.length>0&&(e=kg(xw(e,i),r.shape));const o=ww(r);return jb(ug(e,Rb(o,"float32")))}}}},tN={kernelName:ap,inputsToSave:["x","mean","variance","scale"],gradFunc(t,e,n){const{varianceEpsilon:r}=n,[s,i,o,a]=e,u=null==a?sr(1):a,l=un(i.shape,s.shape),c=[];if(1===i.rank){for(let t=0;t<s.shape.length-1;++t)c.push(s.shape[t]);c.push(1)}const h=jw(s,i),f=lg(t,u),d=lv(og(o,sr(r))),p=lg(lg(lg(d,d),d),sr(-.5));return{x(){return 1===i.rank?kg(lg(lg(t,Sw(kg(d,[1,1,1,i.shape[0]]),c)),u),s.shape):kg(lg(lg(t,d),u),s.shape)},mean(){let t=lg(lg(d,sr(-1)),f);return 1===i.rank&&(t=xw(t,l)),kg(t,i.shape)},variance(){let t=lg(lg(p,h),f);return 1===i.rank&&(t=xw(t,l)),kg(t,i.shape)},scale(){const e=lg(h,d);let n=lg(t,e);return 1===i.rank&&(n=xw(n,l)),kg(n,i.shape)},offset(){let e=t;return 1===i.rank&&(e=xw(e,l)),kg(e,i.shape)}}}},eN={kernelName:up,inputsToSave:["x","indices"],gradFunc(t,e,n){const[r,s]=e,{axis:i}=n,o=G(i,r.shape)[0];return{x(){const e=r.shape,n=s.size,a=e.slice(0,o),u=a.length,l=e.slice(i,e.length).slice(1),c=l.length,h=_s(0,u),f=_s(u+1,u+1+c),d=Rs([a,[n],l]),p=kg(t,d),m=kg(s,[n]),y=Rs([[u],h,f]),b=Gb(p,y);let g=Mv(b,m,r.shape[o]);const w=nr(y);return g=Gb(g,w),g},indices(){return s}}}},nN={kernelName:hp,inputsToSave:["a","b"],gradFunc(t,e){const[n,r]=e;return{a(){return lw(n)},b(){return lw(r)}}}},rN={kernelName:fp,gradFunc(t){return{x(){return Rb(t,"float32")}}}},sN={kernelName:mp,gradFunc(t){return{x(){return lw(t)}}}},iN={kernelName:yp,gradFunc(t){return{x(){return lw(t)}}}},oN={kernelName:bp,gradFunc(t){return{x(){return lw(t)}}}},aN={kernelName:gp,inputsToSave:["x"],gradFunc(t,e,n){const[r]=e,{alpha:s}=n,i=Rw(r,0);return{x(){return uw(i,t,lg(t,s))}}}},uN={kernelName:kp,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return ug(t,og(n,1))}}}},lN={kernelName:$p,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return ug(t,Rb(n,"float32"))}}}},cN={kernelName:Ep,inputsToSave:[],outputsToSave:[!0],gradFunc(t,e,n){const[r]=e,{axis:s}=n;return{logits(){const e=kw(r);return jw(t,lg(xw(t,s,!0),e))}}}},hN=xe({localResponseNormalizationBackprop_(t,e,n,r=5,s=1,i=1,o=.5){const a={x:t,y:e,dy:n},u={depthRadius:r,bias:s,alpha:i,beta:o};return Qy.runKernel(_p,a,u)}}),fN={kernelName:Tp,inputsToSave:["x"],outputsToSave:[!0],gradFunc(t,e,n){const[r,s]=e,{depthRadius:i,bias:o,alpha:a,beta:u}=n;return{x(){return hN(r,s,t,i,o,a,u)}}}},dN={kernelName:Rp,inputsToSave:["x"],outputsToSave:[!0],gradFunc(t,e,n){const r=n,{reductionIndices:s}=r,i=e[0],o=As(t,e[1],i,G(s,i.shape));return{x(){return o.x()}}}},pN={kernelName:Ap,inputsToSave:["a","b"],gradFunc(t,e){const[n,r]=e;return{a(){return lg(t,Rb(Aw(n,r),"float32"))},b(){return lg(t,Rb(Dw(n,r),"float32"))}}}},mN=xe({maxPool3dGrad_(t,e,n,r,s,i,o){const a=ge(t,"dy","maxPool3dGrad"),u=ge(e,"input","maxPool3dGrad"),l=ge(n,"output","maxPool3dGrad");let c=a,h=u,f=l,d=!1;4===u.rank&&(d=!0,c=kg(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),h=kg(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),f=kg(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),F(5===c.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),F(5===h.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),F(5===f.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${f.rank}.`),Xn("maxPool3dGrad",i,o);const p={dy:c,input:h,output:f},m={filterSize:r,strides:s,pad:i,dimRoundingMode:o},y=Qy.runKernel(Mp,p,m);return d?kg(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),yN={kernelName:Fp,inputsToSave:["x"],outputsToSave:[!0],gradFunc(t,e,n){const[r,s]=e,{filterSize:i,strides:o,pad:a,dimRoundingMode:u}=n;return{x(){return mN(t,r,s,i,o,a,u)}}}},bN=xe({maxPoolGrad_(t,e,n,r,s,i,o){const a=ge(t,"dy","maxPoolGrad"),u=ge(e,"input","maxPoolGrad"),l=ge(n,"output","maxPoolGrad");F(u.rank===a.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${a.rank})`),F(4===a.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),F(4===u.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),Xn("maxPoolGrad",i,o);const c={dy:a,input:u,output:l},h={filterSize:r,strides:s,pad:i,dimRoundingMode:o};return Qy.runKernel(Ip,c,h)}}),gN={kernelName:Op,inputsToSave:["x"],outputsToSave:[!0],gradFunc(t,e,n){const[r,s]=e,{filterSize:i,strides:o,pad:a}=n;return{x(){return bN(t,r,s,i,o,a)}}}},wN={kernelName:Lp,inputsToSave:["x"],gradFunc(t,e,n){const[r]=e,{axis:s}=n,i=G(s,r.shape),o=P(Zn(r.shape,i)[1]);return{x(){const e=r.shape.slice();i.forEach(t=>{e[t]=1});const n=kg(t,e);return ug(lg(n,fr(r.shape,"float32")),o)}}}},xN={kernelName:Pp,inputsToSave:["x"],outputsToSave:[!0],gradFunc(t,e,n){const r=n,{axis:s}=r,[i,o]=e,a=As(t,o,i,G(s,i.shape));return{x(){return a.x()}}}},vN={kernelName:Vp,inputsToSave:["a","b"],gradFunc(t,e){const[n,r]=e;return{a(){return lg(t,Rb(Lw(n,r),"float32"))},b(){return lg(t,Rb(Rw(n,r),"float32"))}}}},$N={kernelName:Bp,inputsToSave:["x"],gradFunc(t,e,n){const r=e[0],{paddings:s}=n,i=s.map(t=>t[0]);return{x(){return Tg(t,i,r.shape)}}}},kN={kernelName:zp,inputsToSave:["a","b"],gradFunc(t,e){const[n,r]=e,s=ln(n.shape,r.shape);return{a(){const e=un(n.shape,s);return e.length>0?kg(xw(t,e),n.shape):t},b(){const e=lg(t,jb(Tw(ug(n,r)))),i=un(r.shape,s);return i.length>0?kg(xw(e,i),r.shape):e}}}},NN={kernelName:jp,inputsToSave:["a","b"],gradFunc(t,e){const[n,r]=e,s=ln(n.shape,r.shape);return{a(){const e=lg(t,Rb(r,"float32")),i=un(n.shape,s);return i.length>0?kg(xw(e,i),n.shape):e},b(){const e=lg(t,Rb(n,"float32")),i=un(r.shape,s);return i.length>0?kg(xw(e,i),r.shape):e}}}},CN={kernelName:Up,gradFunc(t){return{x(){return jb(t)}}}},SN={kernelName:Kp,inputsToSave:["indices"],gradFunc(t,e){const n=e[0];return{indices(){return hr(n.shape,"float32")}}}},EN={kernelName:Jp,gradFunc(t){return{x(){return lw(t)}}}},TN={kernelName:Yp,saveAllInputs:!0,gradFunc(t,e,n){const{axis:r}=n;return Dv(t,r).map(t=>()=>t)}},_N={kernelName:Zp,inputsToSave:["x"],gradFunc(t,e,n){const r=e[0],{paddings:s}=n,i=s.map(t=>t[0]);return{x(){return Tg(t,i,r.shape)}}}},RN={kernelName:Qp,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc(t,e){const[n,r,s]=e,i=n,o=r,a=ln(i.shape,o.shape);return{a(){const e=Rb(o,"float32");let n=lg(t,lg(e,bw(i,jw(e,sr(1)))));const r=un(i.shape,a);return r.length>0&&(n=xw(n,r)),kg(n,i.shape)},b(){const e=Rw(i,0),n=uw(e,Vw(i),lw(i));let r=lg(t,lg(s,n));const u=un(o.shape,a);return u.length>0&&(r=xw(r,u)),kg(r,o.shape)}}}},AN={kernelName:tm,inputsToSave:["x","alpha"],gradFunc(t,e){const[n,r]=e,s=Rw(n,0);return{x(){return uw(s,t,lg(t,r))},alpha(){let e=uw(s,lw(t),lg(t,n));const i=un(r.shape,t.shape);return i.length>0&&(e=xw(e,i)),kg(e,r.shape)}}}},ON={kernelName:em,inputsToSave:["x"],gradFunc(t,e,n){const[r]=e,{axis:s}=n;let i=[];return i=null==s?r.shape.map((t,e)=>e):"number"==typeof s?[s]:s,{x(){return((t,e,n)=>{const r=t.shape.length,s=r-n.length,i=er(n,r);let o=t;null!=i&&(o=Gb(t,i));const a=o.shape.slice(),u=a.splice(r-n.length,n.length).reduce((t,e)=>t*e,1);a.push(u);let l=((t,e,n)=>{const r=t.shape.slice();r[n]=1;const s=kg(e,r),i=tw(t,n,!0,!1),o=tw(t,n,!0,!0),a=lg(i,o);return lg(s,a)})(o.reshape(a),e,s);if(l=l.reshape(o.shape),null!=i){const t=nr(i);l=Gb(l,t)}return l})(r,t,i)}}}},IN={kernelName:Hd,inputsToSave:["a","b"],gradFunc(t,e){const[n,r]=e,s=ln(n.shape,r.shape);return{a(){const e=ug(t,Rb(r,"float32")),i=un(n.shape,s);return i.length>0?kg(xw(e,i),n.shape):e},b(){let e=lg(t,Rb(n,"float32"));const i=un(r.shape,s);i.length>0&&(e=kg(xw(e,i),r.shape));const o=ww(r);return jb(ug(e,Rb(o,"float32")))}}}},FN={kernelName:om,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return ug(t,jb(ww(n)))}}}},MN={kernelName:dm,inputsToSave:["x"],gradFunc(t,e){const[n]=e,r=lg(Lw(n,6),_v(n));return{x(){return lg(t,Rb(r,"float32"))}}}},DN={kernelName:am,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return lg(t,Rb(_v(n),"float32"))}}}},LN={kernelName:um,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return kg(t,n.shape)}}}},PN={kernelName:hm,inputsToSave:["images"],gradFunc(t,e,n){const[r]=e,s={dy:t,images:r};return{images(){return Qy.runKernel(fm,s,n)}}}},VN={kernelName:lm,inputsToSave:["images"],gradFunc(t,e,n){const[r]=e,s={dy:t,images:r};return{images(){return Qy.runKernel(cm,s,n)}}}},BN={kernelName:pm,gradFunc(t,e,n){const{dims:r}=n,s=G(r,t.shape);return{x(){return rv(t,s)}}}},zN={kernelName:mm,gradFunc(t){return{x(){return lw(t)}}}},WN={kernelName:ym,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return jb(ug(t,lg(bw(n,1.5),2)))}}}},jN={kernelName:wm,inputsToSave:["condition"],gradFunc(t,e){const[n]=e;return{condition(){return Rb(lw(n),"float32")},t(){return lg(t,Rb(n,t.dtype))},e(){return lg(t,Rb(Hw(n),t.dtype))}}}},UN={kernelName:xm,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){const e=Rw(n,sr(0)),r=sr(ek),s=sr(nk),i=lg(t,s),o=lg(lg(t,r),kw(Rb(n,"float32")));return uw(e,i,o)}}}},GN={kernelName:Cm,outputsToSave:[!0],gradFunc(t,e){const[n]=e;return{x(){return lg(t,lg(n,jw(sr(1),n)))}}}},qN={kernelName:Nm,gradFunc(t){return{x(){return lw(t)}}}},HN={kernelName:$m,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return lg(Zg(Rb(n,"float32")),t)}}}},XN={kernelName:km,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return lg(Qg(Rb(n,"float32")),t)}}}},JN={kernelName:vm,inputsToSave:["x"],gradFunc(t,e,n){const[r]=e,{begin:s,size:i}=n,o=r.shape,[a,u]=Tn(r,s,i),l=[];for(let c=0;c<t.rank;c++)l.push([a[c],o[c]-a[c]-u[c]]);return{x(){return fx(t,l)}}}},KN={kernelName:Am,outputsToSave:[!0],gradFunc(t,e,n){const[r]=e,{dim:s}=n,i=lg(t,r);return{logits(){return jw(i,lg(xw(i,[s],!0),r))}}}},YN={kernelName:Sm,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return lg(t,Eg(n))}}}},ZN={kernelName:_m,gradFunc(t,e,n){const{blockShape:r,paddings:s}=n;return{x(){return Ag(t,r,s)}}}},QN={kernelName:Rm,gradFunc(t,e,n){const{axis:r}=n;return{x(){return Sg(t,r)}}}},tC={kernelName:Em,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return ug(t,lg(gw(Rb(n,"float32")),2))}}}},eC={kernelName:Pm,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return lg(t,lg(Rb(n,"float32"),2))}}}},nC={kernelName:Lm,inputsToSave:["a","b"],gradFunc(t,e){const[n,r]=e,s=sr(2);return{a(){return lg(t,lg(s,jw(n,r)))},b(){return lg(t,lg(s,jw(r,n)))}}}},rC={kernelName:ty,gradFunc(t){return{x(){return lw(t)}}}},sC={kernelName:jm,inputsToSave:["a","b"],gradFunc(t,e){const[n,r]=e,s=ln(n.shape,r.shape);return{a(){let e=t;const r=un(n.shape,s);return r.length>0&&(e=xw(e,r)),kg(e,n.shape)},b(){let e=t;const n=un(r.shape,s);return n.length>0&&(e=xw(e,n)),kg(jb(e),r.shape)}}}},iC={kernelName:Tm,inputsToSave:["x"],gradFunc(t,e,n){const[r]=e,s=r.shape.slice(),{axis:i}=n;G(i,r.shape).forEach(t=>{s[t]=1});const o=kg(t,s),a=lg(o,fr(r.shape,"float32"));return{x(){return a}}}},oC={kernelName:Um,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return ug(t,ww(Zg(n)))}}}},aC={kernelName:Gm,outputsToSave:[!0],gradFunc(t,e){const[n]=e;return{x(){return lg(jw(sr(1),ww(n)),t)}}}},uC={kernelName:qm,inputsToSave:["x"],gradFunc(t,e,n){const[r]=e,{reps:s}=n;return{x(){let e=lw(r);if(1===r.rank)for(let n=0;n<s[0];++n)e=og(e,Tg(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)e=og(e,Tg(t,[n*r.shape[0],i*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let o=0;o<s[2];++o)e=og(e,Tg(t,[n*r.shape[0],i*r.shape[1],o*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let o=0;o<s[2];++o)for(let a=0;a<s[3];++a)e=og(e,Tg(t,[n*r.shape[0],i*r.shape[1],o*r.shape[2],a*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},lC={kernelName:Jm,gradFunc(t,e,n){const r=n,{perm:s}=r,i=nr(s);return{x(){return Gb(t,i)}}}},cC={kernelName:Ym,gradFunc(t,e,n){const r=n,{axis:s}=r;return{value(){return Tv(t,s)}}}},hC={kernelName:Zm,inputsToSave:["segmentIds"],gradFunc(t,e){const[n]=e;return{x(){return((t,e)=>{const n=ex(e,lw(e)),r=_w(t,n);let s=Aw(e,sr(0,"int32"));const i=r.rank-s.rank;for(let a=0;i>a;++a)s=Nw(s,a+1);s=qw(s,fr(r.shape,"bool"));const o=lw(r);return uw(s,r,o)})(t,n)}}}},fC=[pk,mk,yk,bk,gk,wk,xk,vk,$k,kk,Nk,Ck,Ek,_k,Rk,Ak,Ok,Ik,Fk,Mk,Dk,Lk,Vk,Pk,zk,Wk,jk,Uk,Gk,qk,IN,Hk,Xk,Jk,Kk,Yk,Qk,Zk,tN,eN,nN,rN,sN,iN,oN,aN,uN,lN,cN,fN,dN,dN,pN,yN,gN,wN,xN,vN,$N,kN,NN,CN,SN,EN,TN,_N,_N,RN,AN,ON,FN,MN,DN,LN,PN,VN,BN,zN,WN,jN,UN,GN,qN,HN,XN,JN,KN,YN,ZN,ZN,QN,QN,tC,nC,eC,rC,sC,iC,oC,aC,uC,lC,cC,hC,{kernelName:Qm,gradFunc(t){return{x(){return lw(t)}}}}];for(const ZJ of fC)St(ZJ);ne().prototype.abs=function(){return this.throwIfDisposed(),cg(this)},ne().prototype.acos=function(){return this.throwIfDisposed(),hg(this)},ne().prototype.acosh=function(){return this.throwIfDisposed(),fg(this)},ne().prototype.add=function(t){return this.throwIfDisposed(),og(this,t)},ne().prototype.all=function(t,e){return this.throwIfDisposed(),pg(this,t,e)},ne().prototype.any=function(t,e){return this.throwIfDisposed(),mg(this,t,e)},ne().prototype.argMax=function(t){return this.throwIfDisposed(),yg(this,t)},ne().prototype.argMin=function(t){return this.throwIfDisposed(),bg(this,t)},ne().prototype.asScalar=function(){return this.throwIfDisposed(),F(1===this.size,()=>"The array must have only 1 element."),kg(this,[])},ne().prototype.asType=function(t){return this.throwIfDisposed(),Rb(this,t)},ne().prototype.as1D=function(){return this.throwIfDisposed(),kg(this,[this.size])},ne().prototype.as2D=function(t,e){return this.throwIfDisposed(),kg(this,[t,e])},ne().prototype.as3D=function(t,e,n){return this.throwIfDisposed(),kg(this,[t,e,n])},ne().prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),kg(this,[t,e,n,r])},ne().prototype.as5D=function(t,e,n,r,s){return this.throwIfDisposed(),kg(this,[t,e,n,r,s])},ne().prototype.asin=function(){return this.throwIfDisposed(),gg(this)},ne().prototype.asinh=function(){return this.throwIfDisposed(),wg(this)},ne().prototype.atan=function(){return this.throwIfDisposed(),xg(this)},ne().prototype.atan2=function(t){return this.throwIfDisposed(),vg(this,t)},ne().prototype.atanh=function(){return this.throwIfDisposed(),$g(this)},ne().prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),Ng(this,t,e,n,r)},ne().prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),Ag(this,t,e)},ne().prototype.batchNorm=function(t,e,n,r,s){return this.throwIfDisposed(),Og(this,t,e,n,r,s)},ne().prototype.broadcastTo=function(t){return this.throwIfDisposed(),Pg(this,t)},ne().prototype.cast=function(t){return this.throwIfDisposed(),Rb(this,t)},ne().prototype.ceil=function(){return this.throwIfDisposed(),Vg(this)},ne().prototype.clipByValue=function(t,e){return this.throwIfDisposed(),Bg(this,t,e)},ne().prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof Ly&&(t=[t]),Sg([this,...t],e)},ne().prototype.conv1d=function(t,e,n,r,s,i){return this.throwIfDisposed(),qg(this,t,e,n,r,s,i)},ne().prototype.conv2dTranspose=function(t,e,n,r,s){return this.throwIfDisposed(),Xg(this,t,e,n,r,s)},ne().prototype.conv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),Gg(this,t,e,n,r,s,i)},ne().prototype.cos=function(){return this.throwIfDisposed(),Zg(this)},ne().prototype.cosh=function(){return this.throwIfDisposed(),Qg(this)},ne().prototype.cumprod=function(t,e,n){return this.throwIfDisposed(),tw(this,t,e,n)},ne().prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),ew(this,t,e,n)},ne().prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),rw(this,t,e)},ne().prototype.depthwiseConv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),sw(this,t,e,n,r,s,i)},ne().prototype.dilation2d=function(t,e,n,r,s){return this.throwIfDisposed(),ow(this,t,e,n,r,s)},ne().prototype.divNoNan=function(t){return this.throwIfDisposed(),cw(this,t)},ne().prototype.div=function(t){return this.throwIfDisposed(),ug(this,t)},ne().prototype.dot=function(t){return this.throwIfDisposed(),hw(this,t)},ne().prototype.elu=function(){return this.throwIfDisposed(),dw(this)},ne().prototype.equal=function(t){return this.throwIfDisposed(),aw(this,t)},ne().prototype.erf=function(){return this.throwIfDisposed(),pw(this)},ne().prototype.euclideanNorm=function(t,e){return this.throwIfDisposed(),$w(this,t,e)},ne().prototype.exp=function(){return this.throwIfDisposed(),kw(this)},ne().prototype.expandDims=function(t){return this.throwIfDisposed(),Nw(this,t)},ne().prototype.expm1=function(){return this.throwIfDisposed(),Cw(this)},ne().prototype.fft=function(){return this.throwIfDisposed(),vv(this)},ne().prototype.flatten=function(){return this.throwIfDisposed(),kg(this,[this.size])},ne().prototype.floor=function(){return this.throwIfDisposed(),Tw(this)},ne().prototype.floorDiv=function(t){return this.throwIfDisposed(),ag(this,t)},ne().prototype.gather=function(t,e){return this.throwIfDisposed(),_w(this,t,e)},ne().prototype.greaterEqual=function(t){return this.throwIfDisposed(),Aw(this,t)},ne().prototype.greater=function(t){return this.throwIfDisposed(),Rw(this,t)},ne().prototype.ifft=function(){return this.throwIfDisposed(),$v(this)},ne().prototype.irfft=function(){return this.throwIfDisposed(),kv(this)},ne().prototype.isFinite=function(){return this.throwIfDisposed(),Ow(this)},ne().prototype.isInf=function(){return this.throwIfDisposed(),Iw(this)},ne().prototype.isNaN=function(){return this.throwIfDisposed(),Fw(this)},ne().prototype.leakyRelu=function(t){return this.throwIfDisposed(),Mw(this,t)},ne().prototype.lessEqual=function(t){return this.throwIfDisposed(),Lw(this,t)},ne().prototype.less=function(t){return this.throwIfDisposed(),Dw(this,t)},ne().prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),Pw(this,t,e,n,r)},ne().prototype.logSigmoid=function(){return this.throwIfDisposed(),Ww(this)},ne().prototype.logSoftmax=function(t){return this.throwIfDisposed(),Uw(this,t)},ne().prototype.logSumExp=function(t,e){return this.throwIfDisposed(),Gw(this,t,e)},ne().prototype.log=function(){return this.throwIfDisposed(),Vw(this)},ne().prototype.log1p=function(){return this.throwIfDisposed(),Bw(this)},ne().prototype.logicalAnd=function(t){return this.throwIfDisposed(),qw(this,t)},ne().prototype.logicalNot=function(){return this.throwIfDisposed(),Hw(this)},ne().prototype.logicalOr=function(t){return this.throwIfDisposed(),Xw(this,t)},ne().prototype.logicalXor=function(t){return this.throwIfDisposed(),Jw(this,t)},ne().prototype.matMul=function(t,e,n){return this.throwIfDisposed(),Bb(this,t,e,n)},ne().prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),Zw(this,t,e,n,r)},ne().prototype.max=function(t,e){return this.throwIfDisposed(),mw(this,t,e)},ne().prototype.maximum=function(t){return this.throwIfDisposed(),ex(this,t)},ne().prototype.mean=function(t,e){return this.throwIfDisposed(),nx(this,t,e)},ne().prototype.min=function(t,e){return this.throwIfDisposed(),yw(this,t,e)},ne().prototype.minimum=function(t){return this.throwIfDisposed(),rx(this,t)},ne().prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),sx(this,t,e)},ne().prototype.mod=function(t){return this.throwIfDisposed(),ix(this,t)},ne().prototype.mul=function(t){return this.throwIfDisposed(),lg(this,t)},ne().prototype.neg=function(){return this.throwIfDisposed(),jb(this)},ne().prototype.norm=function(t,e,n){return this.throwIfDisposed(),vw(this,t,e,n)},ne().prototype.notEqual=function(t){return this.throwIfDisposed(),lx(this,t)},ne().prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),zb(this,t,e,n)},ne().prototype.onesLike=function(){return this.throwIfDisposed(),cx(this)},ne().prototype.pad=function(t,e){return this.throwIfDisposed(),fx(this,t,e)},ne().prototype.pool=function(t,e,n,r,s,i){return this.throwIfDisposed(),gx(this,t,e,n,r,s,i)},ne().prototype.pow=function(t){return this.throwIfDisposed(),bw(this,t)},ne().prototype.prelu=function(t){return this.throwIfDisposed(),wx(this,t)},ne().prototype.prod=function(t,e){return this.throwIfDisposed(),xx(this,t,e)},ne().prototype.reciprocal=function(){return this.throwIfDisposed(),tv(this)},ne().prototype.relu=function(){return this.throwIfDisposed(),ev(this)},ne().prototype.relu6=function(){return this.throwIfDisposed(),nv(this)},ne().prototype.reshapeAs=function(t){return this.throwIfDisposed(),kg(this,t.shape)},ne().prototype.reshape=function(t){return this.throwIfDisposed(),kg(this,t)},ne().prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),c$(this,t,e,n)},ne().prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),h$(this,t,e,n)},ne().prototype.reverse=function(t){return this.throwIfDisposed(),rv(this,t)},ne().prototype.rfft=function(){return this.throwIfDisposed(),Cv(this)},ne().prototype.round=function(){return this.throwIfDisposed(),uv(this)},ne().prototype.rsqrt=function(){return this.throwIfDisposed(),lv(this)},ne().prototype.selu=function(){return this.throwIfDisposed(),cv(this)},ne().prototype.separableConv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),hv(this,t,e,n,r,s,i)},ne().prototype.sigmoid=function(){return this.throwIfDisposed(),Eg(this)},ne().prototype.sign=function(){return this.throwIfDisposed(),dv(this)},ne().prototype.sin=function(){return this.throwIfDisposed(),pv(this)},ne().prototype.sinh=function(){return this.throwIfDisposed(),mv(this)},ne().prototype.slice=function(t,e){return this.throwIfDisposed(),Tg(this,t,e)},ne().prototype.softmax=function(t){return this.throwIfDisposed(),xv(this,t)},ne().prototype.softplus=function(){return this.throwIfDisposed(),zw(this)},ne().prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),bx(this,t,e)},ne().prototype.split=function(t,e){return this.throwIfDisposed(),Nv(this,t,e)},ne().prototype.sqrt=function(){return this.throwIfDisposed(),gw(this)},ne().prototype.square=function(){return this.throwIfDisposed(),ww(this)},ne().prototype.squaredDifference=function(t){return this.throwIfDisposed(),Sv(this,t)},ne().prototype.squeeze=function(t){return this.throwIfDisposed(),Ev(this,t)},ne().prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof Ly?[this,t]:[this,...t];return Tv(n,e)},ne().prototype.step=function(t){return this.throwIfDisposed(),_v(this,t)},ne().prototype.stridedSlice=function(t,e,n,r,s,i,o,a){return this.throwIfDisposed(),Rv(this,t,e,n,r,s,i,o,a)},ne().prototype.sub=function(t){return this.throwIfDisposed(),jw(this,t)},ne().prototype.sum=function(t,e){return this.throwIfDisposed(),xw(this,t,e)},ne().prototype.tan=function(){return this.throwIfDisposed(),Av(this)},ne().prototype.tanh=function(){return this.throwIfDisposed(),_g(this)},ne().prototype.tile=function(t){return this.throwIfDisposed(),Sw(this,t)},ne().prototype.toBool=function(){return this.throwIfDisposed(),Rb(this,"bool")},ne().prototype.toFloat=function(){return this.throwIfDisposed(),Rb(this,"float32")},ne().prototype.toInt=function(){return this.throwIfDisposed(),Rb(this,"int32")},ne().prototype.topk=function(t,e){return this.throwIfDisposed(),Ov(this,t,e)},ne().prototype.transpose=function(t){return this.throwIfDisposed(),Gb(this,t)},ne().prototype.unique=function(t){return this.throwIfDisposed(),Fv(this,t)},ne().prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),Mv(this,t,e)},ne().prototype.unstack=function(t){return this.throwIfDisposed(),Dv(this,t)},ne().prototype.where=function(t,e){return this.throwIfDisposed(),uw(t,this,e)},ne().prototype.zerosLike=function(){return this.throwIfDisposed(),lw(this)};class dC extends Error{constructor(t){super(t),Object.setPrototypeOf(this,dC.prototype)}}class pC extends Error{constructor(t){super(t),Object.setPrototypeOf(this,pC.prototype)}}class mC extends Error{constructor(t){super(t),Object.setPrototypeOf(this,mC.prototype)}}class yC extends Error{constructor(t){super(t),Object.setPrototypeOf(this,yC.prototype)}}class bC extends Error{constructor(t){super(t),Object.setPrototypeOf(this,bC.prototype)}}class gC{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const t=this.cache.keys().next().value;this.cache.delete(t)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(0>t)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const t=this.cache.keys().next().value;this.cache.delete(t)}this.maxEntries=t}}let wC={},xC=0;const vC={},$C=["channelsFirst","channelsLast"],kC=["nearest","bilinear"],NC=["valid","same","causal"],CC=["max","avg"],SC=["sum","mul","concat","ave"],EC=new Map,TC=[],_C=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);let RC;const AC=["fanIn","fanOut","fanAvg"],OC=["normal","uniform","truncatedNormal"];class IC extends eg{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class FC extends IC{apply(t,e){return hr(t,e)}}FC.className="Zeros",An(FC);class MC extends IC{apply(t,e){return fr(t,e)}}MC.className="Ones",An(MC);class DC extends IC{constructor(t){if(super(),"object"!=typeof t)throw new mC(`Expected argument of type ConstantConfig but got ${t}`);if(void 0===t.value)throw new mC(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return en(()=>lg(sr(this.value),fr(t,e)))}getConfig(){return{value:this.value}}}DC.className="Constant",An(DC);class LC extends IC{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Qx(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}LC.className="RandomUniform",An(LC);class PC extends IC{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new yC(`randomNormal does not support dType ${e}.`);return wi(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}PC.className="RandomNormal",An(PC);class VC extends IC{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new yC(`truncatedNormal does not support dType ${e}.`);return Iv(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}VC.className="TruncatedNormal",An(VC);class BC extends IC{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return en(()=>{if(2!==t.length||t[0]!==t[1])throw new mC("Identity matrix initializer can only be used for 2D square matrices.");return lg(this.gain,Ew(t[0]))})}getConfig(){return{gain:this.gain}}}BC.className="Identity",An(BC);class zC extends IC{constructor(t){if(super(),0>t.scale)throw new mC(`scale must be a positive float. Got: ${t.scale}`);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,Gs(AC,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,(t=>{Gs(OC,"Distribution",t)})(this.distribution),this.seed=t.seed}apply(t,e){const n=((t,e="channelsLast")=>{let n,r;if(Zs(e),2===t.length)n=t[0],r=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=oi(t,2);n=t[1]*e,r=t[0]*e}else if("channelsLast"===e){const e=oi(t,0,t.length-2);n=t[t.length-2]*e,r=t[t.length-1]*e}}else{const e=oi(t);n=Math.sqrt(e),r=Math.sqrt(e)}return[n,r]})(t),r=n[0],s=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,r):"fanOut"===this.mode?i/=Math.max(1,s):i/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new yC(`${this.getClassName()} does not support dType ${e}.`);return Iv(t,0,n,e,this.seed)}{const n=Math.sqrt(3*i);return Qx(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}zC.className="VarianceScaling",An(zC);class WC extends zC{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return zC.className}}WC.className="GlorotUniform",An(WC);class jC extends zC{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return zC.className}}jC.className="GlorotNormal",An(jC);class UC extends zC{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return zC.className}}UC.className="HeNormal",An(UC);class GC extends zC{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return zC.className}}GC.className="HeUniform",An(GC);class qC extends zC{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return zC.className}}qC.className="LeCunNormal",An(qC);class HC extends zC{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return zC.className}}HC.className="LeCunNormal",An(HC);class XC extends IC{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new yC("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return en(()=>{if(2>t.length)throw new yC("Shape must be at least 2D.");t[0],t[1];const e=wi(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=P$.gramSchmidt(e);return t[0]>t[1]&&(n=Gb(n)),lg(this.gain,n)})}getConfig(){return{gain:this.gain,seed:this.seed}}}XC.className="Orthogonal",An(XC);const JC={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"},KC="Variable";class YC{constructor(t,e="float32",n=KC,r=!0,s=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=Ks(),n=null==n?KC:n,this.originalName=ni(n),this.name=ri(this.originalName),this.trainable_=r,this.constraint=s,this.val=vr(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),((t,e)=>{if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))})(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}class ZC{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class QC{constructor(t,e,n,r,s,i,o){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=o,this.id=Ks(),null!=i&&(this.originalName=ni(i),this.name=ri(this.originalName)),this.rank=e.length}}let tS=0;class eS{constructor(t,e){this.callArgs=e,this.id=tS++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const n of t.inboundLayers)null!=n&&n.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let nS=0;class rS extends eg{constructor(t={}){super(),this.G=null,this.q=[],this.H=!1,this.id=nS++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this.J=[],this.K=[],this.Y=[],this.Z=[],this.tt=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=Ls(t)+"_"+Ys(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this.et=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new pC(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new mC(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return Ms(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return Ms(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new dC(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new dC(`Layer ${this.name} is not connected, no input to return.`);return Ms(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new dC(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new dC(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Ms(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this.Y}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this.Z}get built(){return this.tt}set built(t){this.tt=t}get trainable(){return this.trainable_}set trainable(t){this.J.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this.J.filter(t=>t.trainable):[]}set trainableWeights(t){this.J=t}get nonTrainableWeights(){return this.trainable?this.J.filter(t=>!t.trainable).concat(this.K):this.J.concat(this.K)}set nonTrainableWeights(t){this.K=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this.H}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=Ds(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=Ds(this.inputSpec);if(t.length!==e.length)throw new mC(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){const r=t[n],s=e[n];if(null==s)continue;const i=r.rank;if(null!=s.ndim&&i!==s.ndim)throw new mC(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${i}`);if(null!=s.maxNDim&&i>s.maxNDim)throw new mC(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${i}`);if(null!=s.minNDim&&i<s.minNDim)throw new mC(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${i}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new mC(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const t=r.shape;for(const e in s.axes){const r=Number(e),i=s.axes[e],o=0>r?t[t.length+r]:t[r];if(null!=i&&-1===[i,null].indexOf(o))throw new mC(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${i} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const e=s.shape[t],i=r.shape[t];if(null!=e&&null!=i&&e!==i)throw new mC(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this.G&&this.G(t,e)}setCallHook(t){this.G=t}clearCallHook(){this.G=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=Ds(t);let r=!0;for(const i of n)if(!(i instanceof QC)){r=!1;break}let s=!0;for(const i of n)if(i instanceof QC){s=!1;break}if(r===s)throw new mC("Arguments to apply() must be all SymbolicTensors or all Tensors");return ei(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of Ds(t))e.push(n.shape);this.build(Ms(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this.et&&s&&(this.et=1)}if(this.assertInputCompatibility(t),s){let r=this.call(t,e);const s=Ds(r),i=[];for(let t of s)-1!==n.indexOf(t)&&(t=t.clone()),i.push(t);if(r=Ms(i),null!=this.activityRegularizer)throw new yC("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=(t=>{t=Ds(t);const e=[];for(const n of t)e.push(n.shape);return Ms(e)})(t),r=this.computeOutputShape(n);let s;const i="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,r)=>new QC(i,n,this,Ds(t),e,this.name,r)):new QC(i,r,this,Ds(t),e,this.name),this.addInboundNode(t,s,null,null,n,r,e),this.et++,null!=this.activityRegularizer)throw new yC("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}})}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length);else{let e=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)})}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new dC(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new dC(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new pC(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Fi(this.weights)}build(t){this.built=!0}getWeights(t=!1){return Mi(t?this.trainableWeights:this.weights)}setWeights(t){en(()=>{const e=this.weights;if(e.length!==t.length)throw new mC(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],r=Mi(e);for(let s=0;s<r.length;++s){const i=r[s],o=e[s],a=t[s];if(!V(i.shape,a.shape))throw new mC(`Layer weight shape ${i.shape} not compatible with provided weight shape ${a.shape}`);n.push([o,a])}Di(n)})}addWeight(t,e,n,r,s,i,o,a){if(-1!==this.q.indexOf(t))throw new mC(`Duplicate weight name ${t} for layer ${this.name}`);this.q.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=a?a():_i("zeros"));const u=r.apply(e,n),l=new YC(u,n,t,i,o);return u.dispose(),null!=s&&this.addLoss(()=>s.apply(l.read())),null==i&&(i=!0),i?this.J.push(l):this.K.push(l),l}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=Ds(t),void 0!==this.Y&&null!==this.Y&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach(t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return e}addInboundNode(t,e,n,r,s,i,o=null){const a=Ds(t);e=Ds(e),n=Ds(n),r=Ds(r),s=Ai(s),i=Ai(i);const u=[],l=[],c=[];for(const h of a)u.push(h.sourceLayer),l.push(h.nodeIndex),c.push(h.tensorIndex);new eS({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:a,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:i},o);for(let h=0;h<e.length;h++)e[h].sourceLayer=this,e[h].nodeIndex=this.inboundNodes.length-1,e[h].tensorIndex=h}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(0===this.et)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this.et)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0===--this.et&&(t=this.disposeWeights()),{refCountAfterDispose:this.et,numDisposedVariables:t}}}class sS extends rS{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:Ys("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new mC("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new mC("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new mC("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new QC(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new eS({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new mC(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this.et,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}sS.className="InputLayer",An(sS);class iS{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof iS)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new mC(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=((t,e)=>{if(null==t.dtype||t.dtype===e.dtype)return e;try{return Rb(e,t.dtype)}catch(KJ){throw new mC(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}})(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof QC){if(null==this.id2Value[t.id])throw new mC(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new mC(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof QC){if(null==this.id2Value[t.id])throw new mC(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new mC(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&nn(this.id2Mask)}}const oS=new gC,aS=new gC;gt().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,t=>{null!=oS&&oS.setMaxEntries(t),null!=aS&&aS.setMaxEntries(t)});class uS extends eg{getConfig(){return{}}}class lS extends uS{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return en(()=>{const e=ji(t,this.axis),n=Bg(e,0,this.maxValue);return lg(t,ug(n,og(ci(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}lS.className="MaxNorm",An(lS);class cS extends uS{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return en(()=>ug(t,og(ci(),ji(t,this.axis))))}getConfig(){return{axis:this.axis}}}cS.className="UnitNorm",An(cS);class hS extends uS{apply(t){return ev(t)}}hS.className="NonNeg",An(hS);class fS extends uS{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return en(()=>{const e=ji(t,this.axis),n=og(lg(this.rate,Bg(e,this.minValue,this.maxValue)),lg(1-this.rate,e));return lg(t,ug(n,og(ci(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}fS.className="MinMaxNorm",An(fS);const dS={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"},pS=Object.freeze(Object.defineProperty({__proto__:null,maxNorm(t){return new lS(t)},minMaxNorm(t){return new fS(t)},nonNeg(){return new hS},unitNorm(t){return new cS(t)}},Symbol.toStringTag,{value:"Module"})),mS=Object.freeze(Object.defineProperty({__proto__:null,constant(t){return new DC(t)},glorotNormal(t){return new jC(t)},glorotUniform(t){return new WC(t)},heNormal(t){return new UC(t)},heUniform(t){return new GC(t)},identity(t){return new BC(t)},leCunNormal(t){return new qC(t)},leCunUniform(t){return new HC(t)},ones(){return new MC},orthogonal(t){return new XC(t)},randomNormal(t){return new PC(t)},randomUniform(t){return new LC(t)},truncatedNormal(t){return new VC(t)},varianceScaling(t){return new zC(t)},zeros(){return new FC}},Symbol.toStringTag,{value:"Module"}));var yS,bS;(bS=yS||(yS={}))[bS.SILENT=0]="SILENT",bS[bS.VERBOSE=1]="VERBOSE";class gS{constructor(){this.validationData=null}setParams(t){this.params=t}onEpochBegin(t,e){return cf(this,null,function*(){})}onEpochEnd(t,e){return cf(this,null,function*(){})}onBatchBegin(t,e){return cf(this,null,function*(){})}onBatchEnd(t,e){return cf(this,null,function*(){})}onTrainBegin(t){return cf(this,null,function*(){})}onTrainEnd(t){return cf(this,null,function*(){})}setModel(t){}}class wS{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}onEpochBegin(t,e){return cf(this,null,function*(){null==e&&(e={});for(const n of this.callbacks)yield n.onEpochBegin(t,e)})}onEpochEnd(t,e){return cf(this,null,function*(){null==e&&(e={});for(const n of this.callbacks)yield n.onEpochEnd(t,e)})}onBatchBegin(t,e){return cf(this,null,function*(){null==e&&(e={});for(const n of this.callbacks)yield n.onBatchBegin(t,e)})}onBatchEnd(t,e){return cf(this,null,function*(){null==e&&(e={});for(const n of this.callbacks)yield n.onBatchEnd(t,e)})}onTrainBegin(t){return cf(this,null,function*(){null==t&&(t={});for(const e of this.callbacks)yield e.onTrainBegin(t)})}onTrainEnd(t){return cf(this,null,function*(){null==t&&(t={});for(const e of this.callbacks)yield e.onTrainEnd(t)})}}class xS extends gS{constructor(){super()}onEpochBegin(t){return cf(this,null,function*(){this.seen=0,this.totals={}})}onBatchEnd(t,e){return cf(this,null,function*(){null==e&&(e={});const t=null==e.size?0:e.size;this.seen+=t;for(const n in e){const r=e[n];if("number"==typeof r)this.totals.hasOwnProperty(n)||(this.totals[n]=0),this.totals[n]=this.totals[n]+r*t;else{let e;n in this.totals?e=this.totals[n]:this.totals[n]=0;const s=en(()=>og(this.totals[n],lg(r,t)));this.totals[n]=s,null!=e&&e.dispose()}}})}onEpochEnd(t,e){return cf(this,null,function*(){if(null!=e)for(const t of this.params.metrics)null!=this.totals[t]&&("number"==typeof this.totals[t]?e[t]=this.totals[t]/this.seen:en(()=>{const n=lg(ug(1,this.seen),this.totals[t]);e[t]=n,this.totals[t].dispose(),rn(e[t])}))})}}class vS extends gS{onTrainBegin(t){return cf(this,null,function*(){this.epoch=[],this.history={}})}onEpochEnd(t,e){return cf(this,null,function*(){null==e&&(e={}),this.epoch.push(t);for(const t in e)null==this.history[t]&&(this.history[t]=[]),this.history[t].push(e[t])})}syncData(){return cf(this,null,function*(){const t=[],e=[],n=[];for(const s in this.history){const r=this.history[s];for(let i=0;i<r.length;++i)if("number"!=typeof r[i]){const o=r[i];t.push(o.data()),e.push(s),n.push(i)}}const r=yield Promise.all(t);for(let s=0;s<r.length;++s)this.history[e[s]][n[s]].dispose(),this.history[e[s]][n[s]]=r[s][0]})}}class $S extends gS{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||Vr,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");rt(this.yieldEvery)&&(this.maybeWait=((t,e,n)=>{let r,s=null!=n?n():qt();return(...i)=>{const o=null!=n?n():qt();return e>o-s||(s=o,r=t(...i)),r}})(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}maybeWait(t,e,n){return cf(this,null,function*(){const r=[];null!=this.yield&&(yield Hi(n),r.push(this.yield(t,e,n))),r.push(this.nextFrameFunc()),yield Promise.all(r)})}onEpochBegin(t,e){return cf(this,null,function*(){this.currentEpoch=t,null!=this.epochBegin&&(yield Hi(e),yield this.epochBegin(t,e))})}onEpochEnd(t,e){return cf(this,null,function*(){const n=[];null!=this.epochEnd&&(yield Hi(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),yield Promise.all(n)})}onBatchBegin(t,e){return cf(this,null,function*(){null!=this.batchBegin&&(yield Hi(e),yield this.batchBegin(t,e))})}onBatchEnd(t,e){return cf(this,null,function*(){const n=[];null!=this.batchEnd&&(yield Hi(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):rt(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),yield Promise.all(n)})}onTrainBegin(t){return cf(this,null,function*(){null!=this.trainBegin&&(yield Hi(t),yield this.trainBegin(t))})}onTrainEnd(t){return cf(this,null,function*(){null!=this.trainEnd&&(yield Hi(t),yield this.trainEnd(t))})}}class kS{constructor(){}static registerCallbackConstructor(t,e){F(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),kS.checkForDuplicate(e),null==kS.constructors[t]&&(kS.constructors[t]=[]),kS.constructors[t].push(e)}static checkForDuplicate(t){for(const e in kS.constructors)kS.constructors[+e].forEach(e=>{if(e===t)throw new mC("Duplicate callback constructor.")})}static clear(){kS.constructors={}}static createCallbacks(t){const e=[];for(const n in kS.constructors){const r=+n;r>t||e.push(...kS.constructors[r])}return e.map(t=>new t)}}kS.constructors={};const NS={meanSquaredError:Qi,meanAbsoluteError:to,meanAbsolutePercentageError:eo,meanSquaredLogarithmicError(t,e){return en(()=>{const n=Bg(e,ci(),Number.MAX_VALUE),r=Vw(og(1,n)),s=Bg(t,ci(),Number.MAX_VALUE),i=Vw(og(1,s));return nx($i(jw(r,i)),-1)})},squaredHinge(t,e){return en(()=>{const n=ex(0,jw(1,lg(t,e)));return nx($i(n),-1)})},hinge(t,e){return en(()=>{const n=ex(0,jw(1,lg(t,e)));return nx(n,-1)})},categoricalHinge(t,e){return en(()=>{const n=xw(lg(t,e),-1),r=mw(lg(jw(1,t),e),-1);return ex(0,og(1,jw(r,n)))})},logcosh(t,e){return en(()=>{const n=Math.log(2),r=jw(e,t),s=jw(og(r,zw(lg(-2,r))),n);return nx(s,-1)})},categoricalCrossentropy:no,sparseCategoricalCrossentropy:ro,binaryCrossentropy:so,kullbackLeiblerDivergence(t,e){return en(()=>{const n=Bg(t,ci(),1),r=Bg(e,ci(),1);return xw(lg(t,Vw(ug(n,r))),-1)})},poisson(t,e){return en(()=>{const n=Vw(og(ci(),e));return nx(jw(e,lg(t,n)),-1)})},cosineProximity:io},CS=no,SS=ro,ES={binaryAccuracy:ao,categoricalAccuracy:uo,precision:co,categoricalCrossentropy:CS,sparseCategoricalCrossentropy:SS,mse:Qi,MSE:Qi,mae:to,MAE:to,mape:eo,MAPE:eo,cosine:io},TS="3.21.0";class _S extends rS{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=Ys(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],js(this.inputs).length!==this.inputs.length)throw new mC(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(t=>t.name)}`);js(this.outputs).length,this.outputs.length,this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const b of this.outputs){const t=b.sourceLayer,e=b.nodeIndex,n=b.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(e),this.outputLayersTensorIndices.push(n)}for(const b of this.inputs){const t=b.sourceLayer,e=b.nodeIndex,n=b.tensorIndex;Is(0===e,"input layer has >1 nodes"),Is(0===n,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(e),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){const e=this.inputLayers[b];if(!(e instanceof sS))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${b} (0-based) originates from layer type ${e.getClassName()}.`);this.inputNames.push(e.name),this.feedInputShapes.push(e.batchInputShape),this.feedInputNames.push(e.name)}for(const b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(t=>t.shape),this.internalOutputShapes=this.outputs.map(t=>t.shape);const e={},n={},r={},s={},i={},o=[],a=(t,e,n,r,s,u)=>{null!=r&&null!=s&&null!=u||(r=t.sourceLayer,s=t.nodeIndex,u=t.tensorIndex);const l=r.inboundNodes[s];if(-1!==n.indexOf(l))throw new pC(`The tensor ${t.name} at layer "${r.name}" is part of a cycle.`);if(-1!==e.indexOf(l))return;this.containerNodes.add(_S.nodeKey(r,s)),r.id in i||(i[r.id]=Object.keys(i).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let i=0;c>i;i++){const t=l.inputTensors[i],r=l.inboundLayers[i],s=l.nodeIndices[i],o=l.tensorIndices[i];a(t,e,n,r,s,o)}for(e.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);o.push(l)},u=[],l=[];for(const b of this.outputs)a(b,u,l);const c=o.slice().reverse();for(const b of c){n[b.id]=b,b.id in e||(e[b.id]=0);let t=e[b.id];const i=null==r[b.outboundLayer.id]?0:r[b.outboundLayer.id];t=Math.max(t,i),r[b.outboundLayer.id]=t,s[b.outboundLayer.id]=b.outboundLayer,e[b.id]=t;for(let r=0;r<b.inboundLayers.length;r++){const s=b.inboundLayers[r],i=b.nodeIndices[r],o=s.inboundNodes[i],a=null==e[o.id]?0:e[o.id];e[o.id]=Math.max(t+1,a),n[o.id]=o}}const h={};for(const b in e){const t=e[b];t in h||(h[t]=[]),h[t].push(n[b])}const f={};for(const b in r){const t=r[b];t in f||(f[t]=[]),f[t].push(s[b])}let d=Object.keys(f).map(t=>parseInt(t,10)).sort(Ws);this.layers=[];for(const b of d){const t=f[b];t.sort((t,e)=>{const n=i[t.id],r=i[e.id];return r>n?-1:n>r?1:0});for(const e of t)e instanceof _S&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=f,d=Object.keys(h).map(t=>parseInt(t,10)).sort(Ws);const p=this.inputs.slice(),m=[];for(const b of d)for(const t of h[b]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===p.indexOf(n))throw new pC(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)p.push(e);m.push(e.name)}}this.nodesByDepth=h;const y=this.layers.map(t=>t.name);for(const b of y){const t=y.filter(t=>t===b).length;if(1!==t)throw new pC(`The name "${b}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new eS({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(t=>null),outputMasks:this.outputs.map(t=>null),inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs.map(t=>t.shape)}),this.built=!0,this.et=1}assertNotDisposed(){if(0===this.et)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this.et){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this.et,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e.J.forEach(e=>e.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this.J.length>0)throw new mC("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let r=0;for(const i of this.layers)for(const t of i.weights){if(null!=n[t.originalName])throw new mC(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const s=[];for(const i in t){let r=i;if(null==n[i]){const t=i.split("/");r=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[r])s.push([n[r],t[i]]);else if(e)throw new mC(`Provided weight data has no target variable: ${i}`);delete n[r]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new mC(`${t.length} of ${r} weights are not set: ${t}`)}Di(s)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${TS}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=ko(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return en(()=>{t=Ds(t);const n=new iS;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return Vi(this.outputs,n,e)})}computeMask(t,e){return en(()=>{let n;return t=Ds(t),n=null==e?Os(null,t.length):Ds(e),this.runInternalGraph(t,n)[1]})}computeOutputShape(t){const e=Ai(t);if(e.length!==this.inputLayers.length)throw new mC(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let o=0;o<e.length;o++){const t=this.inputLayers[o],r=e[o];n[t.name+"_0_0"]=r}const r=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(Ws);if(r.length>1)for(const o of r){const t=this.nodesByDepth[o];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map(t=>t.id).indexOf(t.id))continue;const r=[];for(let o=0;o<e.inboundLayers.length;o++){const t=e.inboundLayers[o],s=e.nodeIndices[o],i=e.tensorIndices[o],a=n[`${t.name}_${s}_${i}`];r.push(a)}const s=Ai(t.computeOutputShape(Ms(r))),i=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++)n[`${t.name}_${i}_${e}`]=s[e]}}const s=[],i=[];for(let o=0;o<this.outputLayers.length;o++){const t=this.outputLayers[o],e=this.outputLayersNodeIndices[o],n=this.outputLayersTensorIndices[o],r=`${t.name}_${e}_${n}`;i.push(r)}for(let o=0;o<i.length;o++){const t=i[o];Is(t in n),s.push(n[t])}return Ms(s)}runInternalGraph(t,e){null==e&&(e=Os(null,t.length));const n={};for(let a=0;a<this.inputs.length;++a){const r=this.inputs[a],s=t[a],i=e[a];n[r.id]=[s,i]}const r=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(Ws);for(const a of r){const t=this.nodesByDepth[a];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,s=e.outputTensors,i=new Array;for(const e of r)e.id in n&&i.push(n[e.id]);if(i.length===r.length){let r,o,a,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===i.length){const[e,n]=i[0];null==l.mask&&(l.mask=n),a=Ds(t.call(e,l)),u=Ds(t.computeMask(e,n)),r=[e],o=[n]}else r=i.map(t=>t[0]),o=i.map(t=>t[1]),null==l.mask&&(l.mask=o),a=Ds(t.call(r,l)),u=Ds(t.computeMask(r,o));if(t.activityRegularizer)throw new yC("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<s.length;++t){const e=s[t],r=a[t],i=u[t];n[e.id]=[r,i]}}}}const s=[],i=[],o=[];for(const a of this.outputs){Is(a.id in n,`Could not compute output ${a.name} : ${a.id}`);const[t,e]=n[a.id];o.push(t.shape),s.push(t),i.push(e)}return[s,i,o]}buildNodeConversionMap(t){const e={};let n;for(const r of this.layers){n=r instanceof _S?1:0;for(let t=0;t<r.inboundNodes.length;t++){const s=_S.nodeKey(r,t);this.containerNodes.has(s)&&(e[s]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length>e)return this.layers[e];throw new mC(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`)}if(null==t)throw new mC("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===t)return n;throw new mC(`No such layer: ${t}`)}calculateLosses(){return en(()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=_S.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const i of this.layers){const t=i.getClassName(),r=i.getConfig(),s=[];for(let n=0;n<i.inboundNodes.length;n++){const t=i.inboundNodes[n],r=_S.nodeKey(i,n);let o={};if(this.containerNodes.has(r)){if(t.callArgs)try{JSON.stringify(t.callArgs),o=t.callArgs}catch(KJ){o={}}if(t.inboundLayers.length>0){const n=[];for(let r=0;r<t.inboundLayers.length;r++){const s=t.inboundLayers[r],i=t.nodeIndices[r],a=t.tensorIndices[r];let u=e[_S.nodeKey(s,i)];null==u&&(u=0),n.push([s.name,u,a,o])}s.push(n)}}}const o={};o.name=i.name,o.className=t,o.config=r,o.inboundNodes=s,n.push(o)}t.layers=n;const r=[];for(let i=0;i<this.inputLayers.length;i++){const t=this.inputLayers[i],n=this.inputLayersNodeIndices[i],s=_S.nodeKey(t,n);if(!this.containerNodes.has(s))continue;let o=e[s];null==o&&(o=0);const a=this.inputLayersTensorIndices[i];r.push([t.name,o,a])}t.inputLayers=r;const s=[];for(let i=0;i<this.outputLayers.length;i++){const t=this.outputLayers[i],n=this.outputLayersNodeIndices[i],r=_S.nodeKey(t,n);if(!this.containerNodes.has(r))continue;let o=e[r];null==o&&(o=0);const a=this.outputLayersTensorIndices[i];s.push([t.name,o,a])}return t.outputLayers=s,t}static fromConfig(t,e,n={},r=!1){function s(t,e){t.name in u?u[t.name].push(e):u[t.name]=[e]}function i(t,e){const n=[];let r;for(const i of e){const o=i[0],u=i[1],l=i[2];if(r=null==i[3]?{}:i[3],!(o in a))return void s(t,e);const c=a[o];if(c.inboundNodes.length<=u)return void s(t,e);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&t.apply(Ms(n),r)}function o(t){const n=t.name,i=Yi(t,null!=e.customObjects?e.customObjects:{});i.setFastWeightInitDuringBuild(r),a[n]=i,t.inboundNodes.forEach(t=>{if(!(t instanceof Array))throw new mC(`Corrupted configuration, expected array for nodeData: ${t}`);s(i,t)})}const a={},u={},l=e.name,c=e.layers;for(const m of c)o(m);for(;!Us(u);)for(const t of c){const e=a[t.name];if(e.name in u){const t=u[e.name];delete u[e.name];for(const n of t)i(e,n)}}const h=[],f=[],d=e.inputLayers;for(const m of d){const t=m[0],e=m[1],n=m[2];Is(t in a);const r=a[t].inboundNodes[e].outputTensors;h.push(r[n])}const p=e.outputLayers;for(const m of p){const t=m[0],e=m[1],n=m[2];Is(t in a);const r=a[t].inboundNodes[e].outputTensors;f.push(r[n])}return new t({inputs:h,outputs:f,name:l})}get stateful(){if(this.H)throw new mC("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){en(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}class RS extends _S{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new mC("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");((t,e,n,r=console.log)=>{const s=(t=>{let e=!0;const n=[],r=[];for(const s in t.nodesByDepth)n.push(t.nodesByDepth[s]);for(const s of n){if(s.length>1||1===s.length&&s[0].inboundLayers.length>1){e=!1;break}r.push(...s)}if(e)for(const s of t.layers){let t=!1;for(const n of s.inboundNodes)if(-1!==r.indexOf(n)){if(t){e=!1;break}t=!0}if(!e)break}return e})(t),i=["Layer (type)","Input Shape","Output shape","Param #"];let o;if(s?(e=e||90,n=n||[.32,.61,.89,1]):(e=e||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]>1||(n=n.map(t=>Math.floor(e*t))),!s){i.push("Receives inputs"),o=[];for(const e in t.nodesByDepth)o.push(...t.nodesByDepth[e])}r("_".repeat(e)),go(i,n,r),r("=".repeat(e));const a=t.layers;for(let c=0;c<a.length;++c)s?wo(a[c],n,r):xo(a[c],n,o,r),r((c===a.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const u=(t=>{let e;return e=null!=t.collectedTrainableWeights?Fi(t.collectedTrainableWeights):Fi(t.trainableWeights),e})(t),l=Fi(t.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(e))})(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=(t=>{const e={Adagrad:()=>Y$.adagrad(.01),Adadelta:()=>Y$.adadelta(1,.95,ci()),Adam:()=>Y$.adam(.001,.9,.999,ci()),Adamax:()=>Y$.adamax(.002,.9,.999,ci(),0),RMSProp:()=>Y$.rmsprop(.001,.9,0,ci()),SGD:()=>Y$.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new mC(`Unknown Optimizer ${t}`)})(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof W$))throw new mC("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new mC(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map(t=>oo(t))}else{const n=oo(t.loss);this.outputs.forEach(t=>{e.push(n)})}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new mC(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)t.loss[n],e.push(oo(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const t=this.internalOutputShapes[i],e=this.outputNames[i];this.feedOutputNames.push(e),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[i])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],ei("loss",()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}});const r=((t,e)=>{if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>[]);let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);n=t}if(Array.isArray(n))return e.map(t=>n);{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}})(t.metrics,this.outputNames),s=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};ei("metric",()=>{for(let t=0;t<this.outputs.length;++t)-1===n.indexOf(t)&&(e=>{let n,r,i;for(const o of e){if("string"==typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const e=this.internalOutputShapes[t];let s;1===e[e.length-1]||this.lossFunctions[t]===so?-1!==["accuracy","acc"].indexOf(o)?r=ao:-1!==["crossentropy","ce"].indexOf(o)&&(r=ho):this.lossFunctions[t]===ro?-1!==["accuracy","acc"].indexOf(o)?r=fo:-1!==["crossentropy","ce"].indexOf(o)&&(r=SS):-1!==["accuracy","acc"].indexOf(o)?r=uo:-1!==["crossentropy","ce"].indexOf(o)&&(r=CS),-1!==["accuracy","acc"].indexOf(o)?s="acc":-1!==["crossentropy","ce"].indexOf(o)&&(s="ce"),i=r,n=""+s}else{const t=po(o);i=t,n=""+mo(o)}let e;ei(n,()=>{e=i}),s(t,n,e)}})(r[t])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&(this.trainableWeights.length,this.collectedTrainableWeights.length)}evaluate(t,e,n={}){const r=null==n.batchSize?32:n.batchSize;Ro(r);const s=this.standardizeUserDataXY(t,e,!0,r);try{const t=s[0].concat(s[1]);this.makeTestFunction();const e=this.testFunction;return Ms(this.testLoop(e,t,r,n.verbose,n.steps))}finally{Mo(s[0],t),Mo(s[1],e)}}evaluateDataset(t,e){return cf(this,null,function*(){return this.makeTestFunction(),function(t,e,n){return cf(this,null,function*(){const r=null!=(n=n||{}).batches,s=t.testFunction;let i=[];if(n.verbose>0)throw new yC("Verbose mode is not implemented yet.");F(!r||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);const o="function"==typeof e.next?e:yield e.iterator();let a=0,u=0;for(;!r||u<n.batches;){const e=yield o.next();if(i=en(()=>{if(e.value){const{xs:n,ys:r}=Eo(t,e.value),o=n.concat(r),l=en(()=>s(o));if(nn(o),0===u)for(let t=0;t<l.length;++t)i.push(sr(0));const c=o[0].shape[0];for(let t=0;t<l.length;++t){const e=l[t],n=i[t];i[t]=en(()=>og(i[t],lg(c,e))),u>0&&nn(n)}nn(l),a+=c,++u}return i}),e.done)break}for(let t=0;t<i.length;++t){const e=i[t];i[t]=ug(i[t],a),nn(e)}return Ms(i)})}(this,t,e)})}checkNumSamples(t,e,n,r="steps"){let s;if(null!=n){if(s=null,null!=e)throw new mC(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(null==t)throw new mC(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return s}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new mC("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),r=n?e:[e],s=this.retrieveSymbolicTensors(r),i=new iS;if(t instanceof Ly&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new mC(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)i.add(this.inputs[e],t[e])}else for(const a of this.inputs){const e=t[a.name];if(null==e)throw new mC(`No value is provided for the model's input ${a.name}`);i.add(a,e)}const o=Vi(s,i);return n?o:o[0]}retrieveSymbolicTensors(t){const e=Os(null,t.length);let n=t.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],i=s.map(t=>t.name);for(let r=0;r<t.length;++r){const o=i.indexOf(t[r]);if(-1!==o&&(e[r]=s[o],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach((e,r)=>{null==e&&n.push(t[r])}),new mC(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return e}predictLoop(t,e=32,n=!1){return en(()=>{const r=this.checkNumSamples(t);if(n)throw new yC("Verbose predictLoop() is not implemented yet.");const s=Io(r,e),i=this.outputs.map(t=>[]);for(let e=0;e<s.length;++e){const n=en(()=>{const n=s[e][0],r=s[e][1],i=Ao(t,n,r),o=[];if(Array.isArray(i))for(let t=0;t<i.length;++t)o.push({key:this.inputs[t],value:i[t]});else o.push({key:this.inputs[0],value:i});const a=new iS(o);return Vi(this.outputs,a)});n.forEach((t,e)=>i[e].push(t))}return Ms(i.map(t=>Sg(t,0)))})}predict(t,e={}){const n=Fo(t);Vo(n,this.inputNames,this.feedInputShapes,!1);try{const t=null==e.batchSize?32:e.batchSize;return Ro(t),this.predictLoop(n,t)}finally{Mo(n,t)}}predictOnBatch(t){Vo(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,r){if(null==this.optimizer_)throw new pC("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let i=0;i<this.feedOutputShapes.length;++i){const t=this.feedOutputShapes[i];this.feedLossFns[i]===ro?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(((t,e)=>{const n=js(t.map(t=>t.shape[0]));n.sort();const r=js(e.map(t=>t.shape[0]));if(r.sort(),n.length>1)throw new mC(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(t=>t.shape))}`);if(r.length>1)throw new mC(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(t=>t.shape))}`);if(n.length>0&&r.length>0&&!V(n,r))throw new mC(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${r[0]} target sample(s).`)})(t=Po(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=Po(e,this.feedOutputNames,s,!1,"target")),((t,e,n)=>{const r=[Qi,so,no];for(let s=0;s<t.length;++s){const i=t[s],o=e[s],a=n[s];if(null!=o){if(o===no&&1===i.shape[i.shape.length-1])throw new mC(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(o)){const t=i.shape.slice(1),e=a.slice(1);for(let n=0;n<t.length;++n){const r=t[n],s=e[n];if(null!=s&&r!==s)throw new mC(`A target Tensor with shape ${i.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}})(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&t[0].shape[0]%r!==0)throw new mC(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}standardizeUserData(t,e,n,r,s=!0,i){return cf(this,null,function*(){const[o,a]=this.standardizeUserDataXY(t,e,s,i);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const t=No(r,this.outputNames);u=[];for(let e=0;e<t.length;++e)u.push(yield Co(a[e],0,t[e]))}return[o,a,u]})}testLoop(t,e,n,r=0,s){return en(()=>{const i=this.checkNumSamples(e,n,s,"steps"),o=[];if(r>0)throw new yC("Verbose mode is not implemented yet.");if(null!=s)throw new yC("steps mode in testLoop() is not implemented yet");{const r=Io(i,n),s=mr(li(0,i));for(let n=0;n<r.length;++n){const i=r[n][0],a=r[n][1],u=di(s,i,a-i),l=Oo(e,u),c=t(l);if(0===n)for(let t=0;t<c.length;++t)o.push(sr(0));for(let t=0;t<c.length;++t){const e=c[t];o[t]=og(o[t],lg(a-i,e))}}for(let t=0;t<o.length;++t)o[t]=ug(o[t],i)}return o})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const r=t[n];let s=r;Fs(t,r)>1&&(s+=`_${Fs(t.slice(0,n),r)}`),e.push(s)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],o=this.collectedTrainableWeights.map(t=>t.read()),a=this.optimizer_.minimize(()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const o=new iS(t),a=Vi(this.outputs,o,{training:!0});let u;for(let n=0;n<this.lossFunctions.length;++n){let t=(0,this.lossFunctions[n])(r[n],a[n]);null!=s[n]&&(t=So(t,s[n]));const i=nx(t);e.push(i),u=0===n?t:og(u,t)}for(let n=0;n<this.metricsTensors.length;++n){let t;if(this.outputs.length>1&&n<this.outputs.length)t=e[n];else{const e=this.metricsTensors[n][0],s=this.metricsTensors[n][1];t=nx(e(r[s],a[s]))}rn(t),i.push(t)}return u=nx(u),this.calculateLosses().forEach(t=>{u=og(u,t)}),u},!0,o);return[a].concat(i)}}makeTestFunction(){this.testFunction=t=>en(()=>{const e=[];let n;const r=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let t=0;t<this.inputs.length;++t)i.push({key:this.inputs[t],value:r[t]});const o=new iS(i),a=Vi(this.outputs,o);for(let t=0;t<this.lossFunctions.length;++t){const r=this.lossFunctions[t],i=nx(r(s[t],a[t]));n=0===t?i:og(n,i),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],r=this.metricsTensors[t][1],i=nx(n(s[r],a[r]));e.push(i)}return e})}fit(t,e){return cf(this,arguments,function*(t,e,n={}){return function(t,e,n){return cf(this,arguments,function*(t,e,n,r={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,i,o,a,u,l,c,h,f;t.isTraining=!0;try{const d=null==r.batchSize?32:r.batchSize;Ro(d);const p=!1,m=yield t.standardizeUserData(e,n,r.sampleWeight,r.classWeight,p,d);s=m[0],i=m[1],f=m[2];let y,b=!1;if(null!=r.validationData&&r.validationData.length>0){if(b=!0,2!==r.validationData.length)throw 3===r.validationData.length?new yC("validationData including sample weights is not supported yet."):new mC(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);u=r.validationData[0],l=r.validationData[1];const e=!0,n=yield t.standardizeUserData(u,l,null,null,e,d);c=n[0],h=n[1],y=c.concat(h)}else if(null!=r.validationSplit&&r.validationSplit>0&&1>r.validationSplit){b=!0;const t=Math.floor(s[0].shape[0]*(1-r.validationSplit)),e=s[0].shape[0];c=Ao(s,t,e),o=s,s=Ao(s,0,t),h=Ao(i,t,e),a=i,i=Ao(i,0,t),y=c.concat(h)}else null!=r.validationSteps&&(b=!0);const g=s.concat(i).concat(f);t.checkTrainableWeightsConsistency();const w=t.makeTrainFunction(),x=t.getDedupedMetricsNames();let v,$;b?(t.makeTestFunction(),v=t.testFunction,$=x.slice().concat(x.map(t=>"val_"+t))):(v=null,y=[],$=x.slice());const k=Ji(r.callbacks,r.yieldEvery),N=yield function(t,e,n,r,s,i,o,a,u,l,c,h,f){return cf(this,null,function*(){null==s&&(s=32),null==i&&(i=1),null==c&&(c=!0),null==f&&(f=0);let d=!1;null!=u&&null!=l&&(d=!0);const p=t.checkNumSamples(n,s,null,"steps_per_epoch");let m;null!=p&&(m=li(0,p)),null==o&&(o=1);const{callbackList:y,history:b}=Ki(a,o,i,f,p,null,s,d,h);y.setModel(t),t.history=b,yield y.onTrainBegin(),t.stopTraining_=!1;for(let o=f;i>o;++o){yield y.onEpochBegin(o);const i={};{if("batch"===c)throw new yC("batch shuffling is not implemneted yet");c&&_(m);const o=mr(m),a=Io(p,s);for(let c=0;c<a.length;++c){const h={};if(yield y.onBatchBegin(c,h),en(()=>{const f=a[c][0],p=a[c][1],m=di(o,f,p-f);h.batch=c,h.size=p-f;const y=Oo(n,m),b=e(y);for(let t=0;t<r.length;++t){const e=r[t],n=b[t];h[e]=n,rn(n)}if(c===a.length-1&&d){const e=t.testLoop(u,l,s);for(let t=0;t<r.length;++t){const n=r[t],s=e[t];rn(s),i["val_"+n]=s}}}),yield y.onBatchEnd(c,h),Xi(h),t.stopTraining_)break}o.dispose()}if(yield y.onEpochEnd(o,i),t.stopTraining_)break}return yield y.onTrainEnd(),yield t.history.syncData(),t.history})}(t,w,g,x,d,r.epochs,r.verbose,k,v,y,r.shuffle,$,r.initialEpoch);return N}finally{t.isTraining=!1,Mo(s,e),Mo(i,n),Mo(o,e),Mo(a,n),Mo(c,u),Mo(h,l),null!=f&&nn(f)}})}(this,t,e,n)})}fitDataset(t,e){return cf(this,null,function*(){return function(t,e,n){return cf(this,null,function*(){const r=null!=n.batchesPerEpoch;if(F(null!=t.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),F(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),F(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),F(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),F(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const s=null!=n.validationData;let i,o;if(s)if(_o(n.validationData))F(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{const t=(t=>{if(3===t.length)throw new yC("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}})(n.validationData);i=t.xs,o=t.ys}const a=t.makeTrainFunction(),u=t.getDedupedMetricsNames();let l;l=s?u.slice().concat(u.map(t=>"val_"+t)):u.slice();const c=Ji(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:f,history:d}=Ki(c,h,n.epochs,null,null,((t,e)=>{let n=null;return null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n})(e,n),null,s,l);f.setModel(t),t.history=d,yield f.onTrainBegin(),t.stopTraining_=!1;let p=null==n.initialEpoch?0:n.initialEpoch,m=yield e.iterator();for(;p<n.epochs;){const l={};yield f.onEpochBegin(p);let c=0,h=0;for(r||(m=yield e.iterator());!r||c<n.batchesPerEpoch;){const e=yield m.next();if(r&&e.done)break;if(null!=e.value){const{xs:r,ys:s}=Eo(t,e.value),i={};i.batch=h,i.size=r[0].shape[0],yield f.onBatchBegin(h,i);const o=[];if(null!=n.classWeight){const e=No(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)o.push(yield Co(s[t],0,e[t]))}const l=r.concat(s).concat(o),d=a(l);nn(l);for(let t=0;t<u.length;++t){const e=u[t],n=d[t];i[e]=n,rn(n)}yield f.onBatchEnd(h,i),Xi(i),h++,c++}if(r?c>=n.batchesPerEpoch:e.done){if(s){let e;e=_o(n.validationData)?Ds(yield t.evaluateDataset(n.validationData,{batches:n.validationBatches})):Ds(t.evaluate(i,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)l[`val_${t.metricsNames[n]}`]=e[n]}break}if(t.stopTraining_)break}if(yield f.onEpochEnd(p,l),p++,t.stopTraining_)break}return yield f.onTrainEnd(),yield t.history.syncData(),t.history}finally{t.isTraining=!1}})}(this,t,e)})}trainOnBatch(t,e){return cf(this,null,function*(){const n=yield this.standardizeUserData(t,e),r=n[0],s=n[1],i=this.makeTrainFunction()(r.concat(s)),o=[];for(const t of i){const e=yield t.data();o.push(e[0])}return nn(i),Mo(n[0],t),Mo(n[1],e),Ms(o)})}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let i=0;i<r.length;++i)n&&!r[i].trainable||e.push({name:r[i].originalName,tensor:s[i]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=tn().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-tn().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=Ls(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(t=>Ls(t))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=Ls(n[r])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Ls(mo(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>Ls(mo(t)));{const t={};for(const e in this.metrics)t[e]=Ls(mo(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=Yi($o(t.optimizer_config));let n,r;if("string"==typeof t.loss)n=Ps(t.loss);else if(Array.isArray(t.loss))n=t.loss.map(t=>Ps(t));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=Ps(t.loss[e])}if(Array.isArray(t.metrics))r=t.metrics.map(t=>Ps(t));else if(null!=t.metrics){r={};for(const e in t.metrics)r[e]=Ps(t.metrics[e])}this.compile({loss:n,metrics:r,optimizer:e})}save(t,e){return cf(this,null,function*(){if("string"==typeof t){const e=ub(t);if(0===e.length)throw new mC(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new mC(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new mC("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=yield ke(this.getNamedWeights(e)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${TS}`,convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:s}=yield ke(yield this.optimizer.getWeights(),t);n.specs.push(...s),n.data=Ee([n.data,e])}if(null!=this.userDefinedMetadata){const t=!0;yo(this.userDefinedMetadata,this.name,t),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,t.save(r)})}setUserDefinedMetadata(t){yo(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}RS.className="Model",An(RS);class AS extends RS{}AS.className="Functional",An(AS);class OS extends RS{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:Ys("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(t=>0>t))throw new mC(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof OS||t instanceof RS;let n;if(e){if(n=t,1!==n.outputs.length)throw new mC("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new mC("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new mC("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=Pi({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new mC(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new mC("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=Li(this.outputs[0])}this.inboundNodes=[],new eS({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Os(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(Ii(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new RS({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new pC("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}evaluateDataset(t,e){return cf(this,null,function*(){if(!this.built)throw new pC("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)})}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}fit(t,e){return cf(this,arguments,function*(t,e,n={}){if(!this.built)throw new pC("The model needs to be compiled before being used.");return this.model.fit(t,e,n)})}fitDataset(t,e){return cf(this,null,function*(){if(!this.built)throw new pC("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)})}trainOnBatch(t,e){return cf(this,null,function*(){return this.model.trainOnBatch(t,e)})}static fromConfig(t,e,n={},r=!1){let s,i={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new mC("Legacy serialization format not supported yet.");s=e}else F(null!=e.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=e.layers,delete e.layers,i=e;const o=new t(i);if(!(o instanceof OS))throw new yC(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(const a of s){const t=Yi(a,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),o.add(t)}return o}set stopTraining(t){if(null==this.model)throw new mC("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new mC("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}OS.className="Sequential",An(OS);let IS=class extends eg{getConfig(){return{}}};class FS extends IS{apply(t,e=1){return((t,e=1)=>{if(1!==e)throw new yC(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return dw(t)})(t,e)}}FS.className="elu",An(FS);class MS extends IS{apply(t){return cv(t)}}MS.className="selu",An(MS);class DS extends IS{apply(t){return ev(t)}}DS.className="relu",An(DS);class LS extends IS{apply(t){return en(()=>rx(6,ev(t)))}}LS.className="relu6",An(LS);class PS extends IS{apply(t){return t}}PS.className="linear",An(PS);class VS extends IS{apply(t){return Eg(t)}}VS.className="sigmoid",An(VS);class BS extends IS{apply(t){return(t=>en(()=>{const e=og(.5,lg(.2,t));return Bg(e,0,1)}))(t)}}BS.className="hardSigmoid",An(BS);class zS extends IS{apply(t){return zw(t)}}zS.className="softplus",An(zS);class WS extends IS{apply(t){return(t=>en(()=>ug(t,og(cg(t),1))))(t)}}WS.className="softsign",An(WS);class jS extends IS{apply(t){return _g(t)}}jS.className="tanh",An(jS);let US=class extends IS{apply(t,e=-1){return xv(t,e)}};US.className="softmax",An(US);class GS extends IS{apply(t,e=-1){return Uw(t,e)}}GS.className="logSoftmax",An(GS);class qS extends IS{apply(t,e=1){return en(()=>lg(Eg(lg(t,e)),t))}}qS.className="swish",An(qS);class HS extends IS{apply(t){return en(()=>lg(t,_g(zw(t))))}}HS.className="mish",An(HS);class XS extends eg{}class JS extends XS{constructor(t){super(),Uo(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return en(()=>{let e=hr([1]);return this.hasL1&&(e=og(e,xw(lg(this.l1,cg(t))))),this.hasL2&&(e=og(e,xw(lg(this.l2,$i(t))))),kg(e,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}JS.className="L1L2",An(JS);const KS={l1l2:"L1L2"};class YS extends rS{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=Oi(t);let n=ev(t);return null!=this.maxValue&&(n=Bg(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}YS.className="ReLU",An(YS);class ZS extends rS{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Oi(t);return Mw(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}ZS.className="LeakyReLU",An(ZS);class QS extends rS{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=_i(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Ho(t.alphaRegularizer),this.alphaConstraint=qi(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new mC(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=Ii(t)).slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)e[r-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<t.length;++r)n[r]=t[r];this.inputSpec=[new ZC({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=Oi(t),wx(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Ti(this.alphaInitializer),alphaRegularizer:Go(this.alphaRegularizer),alphaConstraint:Ui(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}QS.className="PReLU",An(QS);let tE=class extends rS{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new yC(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Oi(t);return dw(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}};tE.className="ELU",An(tE);class eE extends rS{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=Oi(t);return lg(n,Rb(Rw(n,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}eE.className="ThresholdedReLU",An(eE);class nE extends rS{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new US).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=Oi(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}nE.className="Softmax",An(nE);class rE extends rS{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",rE.verifyArgs(e),this.rank=t,Hs(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new yC(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Xo(e.kernelSize,t,"kernelSize"),this.strides=Xo(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,Qs(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Zs(this.dataFormat),this.activation=jo(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=_i(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=qi(e.biasConstraint),this.biasRegularizer=Ho(e.biasRegularizer),this.activityRegularizer=Ho(e.activityRegularizer),this.dilationRate=Xo(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new mC(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new mC(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new mC(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if(Is("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!qs(t.kernelSize,"number",1,3))throw new mC(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:zo(this.activation),useBias:this.useBias,biasInitializer:Ti(this.biasInitializer),biasRegularizer:Go(this.biasRegularizer),activityRegularizer:Go(this.activityRegularizer),biasConstraint:Ui(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class sE extends rE{constructor(t,e){super(t,e),this.kernel=null,sE.verifyArgs(e),this.filters=e.filters,Hs(this.filters,"filters"),this.kernelInitializer=_i(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=qi(e.kernelConstraint),this.kernelRegularizer=Ho(e.kernelRegularizer)}build(t){t=Ii(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new mC(`The channel dimension of the input should be defined. Found ${t[e]}`);const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return en(()=>{let e;t=Oi(t);const n=null==this.bias?null:this.bias.read(),r=Js(this.activation.getClassName());if(null!=r&&2===this.rank)e=Qo(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=((t,e,n,r=1,s="valid",i,o=1)=>en(()=>{if(null==i&&(i="channelsLast"),Zs(i),3!==t.shape.length)throw new mC(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(3!==e.shape.length)throw new mC(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new mC(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if("channelsFirst"===i&&(t=Gb(t,[0,2,1])),"causal"===s)throw new yC("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=qg(t,e,r,"same"===s?"same":"valid","NWC",o);return null!=n&&(a=Ni(a,n)),a}))(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=Qo(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new yC("convolutions greater than 3D are not implemented yet.");e=((t,e,n,r=[1,1,1],s="valid",i,o)=>en(()=>{if(null==i&&(i="channelsLast"),Zs(i),4!==t.rank&&5!==t.rank)throw new mC(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(4!==e.rank&&5!==e.rank)throw new mC(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let a=Zo(t,i);if("causal"===s)throw new yC("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=Jg(a,e,r,"same"===s?"same":"valid","NDHWC",o),null!=n&&(a=Ni(a,n)),"channelsFirst"===i&&(a=Gb(a,[0,4,1,2,3])),a}))(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e})}computeOutputShape(t){t=Ii(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let s=0;s<n.length;++s){const t=Jo(n[s],this.kernelSize[s],this.padding,this.strides[s],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[s]);e.push(t)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:Ti(this.kernelInitializer),kernelRegularizer:Go(this.kernelRegularizer),kernelConstraint:Ui(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||1>t.filters)throw new mC(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class iE extends sE{constructor(t){super(2,t),iE.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!qs(t.kernelSize,"number",1,2))throw new mC(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}iE.className="Conv2D",An(iE);class oE extends sE{constructor(t){super(3,t),oE.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new mC(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}oE.className="Conv3D",An(oE);class aE extends iE{constructor(t){if(super(t),this.inputSpec=[new ZC({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new mC(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(4!==(t=Ii(t)).length)throw new mC("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new mC("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ZC({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return en(()=>{let e=Oi(t);if(4!==e.shape.length)throw new mC(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,r=n[0];let s,i;"channelsFirst"===this.dataFormat?(s=2,i=3):(s=1,i=2);const o=n[s],a=n[i],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],h=this.strides[1],f=[r,Ko(o,c,u,this.padding),Ko(a,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=Gb(e,[0,2,3,1]));let d=Xg(e,this.kernel.read(),f,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=Gb(d,[0,3,1,2])),null!=this.bias&&(d=Ni(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d})}computeOutputShape(t){const e=(t=Ii(t)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const i=this.kernelSize[0],o=this.kernelSize[1],a=this.strides[0],u=this.strides[1];return e[n]=this.filters,e[r]=Ko(e[r],a,i,this.padding),e[s]=Ko(e[s],u,o,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}aE.className="Conv2DTranspose",An(aE);class uE extends oE{constructor(t){if(super(t),this.inputSpec=[new ZC({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new mC(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(5!==(t=Ii(t)).length)throw new mC("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new mC("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ZC({ndim:5,axes:{[e]:n}})],this.built=!0}call(t,e){return en(()=>{let e=Oi(t);if(5!==e.shape.length)throw new mC(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,r=n[0];let s,i,o;"channelsFirst"===this.dataFormat?(o=2,s=3,i=4):(o=1,s=2,i=3);const a=n[o],u=n[s],l=n[i],c=this.kernelSize[0],h=this.kernelSize[1],f=this.kernelSize[2],d=this.strides[0],p=this.strides[1],m=this.strides[2],y=[r,Ko(a,d,c,this.padding),Ko(u,p,h,this.padding),Ko(l,m,f,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=Gb(e,[0,2,3,4,1]));let b=Yg(e,this.kernel.read(),y,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=Gb(b,[0,4,1,2,3])),null!==this.bias&&(b=Ni(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b})}computeOutputShape(t){const e=(t=Ii(t)).slice();let n,r,s,i;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,i=4):(n=4,r=1,s=2,i=3);const o=this.kernelSize[0],a=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],h=this.strides[2];return e[n]=this.filters,e[r]=Ko(e[r],l,o,this.padding),e[s]=Ko(e[s],c,a,this.padding),e[i]=Ko(e[i],h,u,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}uE.className="Conv3DTranspose",An(uE);class lE extends sE{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new mC("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new mC("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new mC(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=_i(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Ho(e.depthwiseRegularizer),this.depthwiseConstraint=qi(e.depthwiseConstraint),this.pointwiseInitializer=_i(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Ho(e.pointwiseRegularizer),this.pointwiseConstraint=qi(e.pointwiseConstraint)}build(t){if((t=Ii(t)).length<this.rank+2)throw new mC(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||0>t[e])throw new mC(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let o=0;o<this.rank;++o)s.push(1);s.push(n*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new ZC({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return en(()=>{let e;if(t=Oi(t),1===this.rank)throw new yC("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=Gb(t,[0,2,3,1])),e=hv(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=Ni(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=Gb(e,[0,3,1,2])),e})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Ti(this.depthwiseInitializer),t.pointwiseInitializer=Ti(this.pointwiseInitializer),t.depthwiseRegularizer=Go(this.depthwiseRegularizer),t.pointwiseRegularizer=Go(this.pointwiseRegularizer),t.depthwiseConstraint=Ui(this.depthwiseConstraint),t.pointwiseConstraint=Ui(this.pointwiseConstraint),t}}lE.className="SeparableConv";class cE extends lE{constructor(t){super(2,t)}}cE.className="SeparableConv2D",An(cE);class hE extends sE{constructor(t){super(1,t),hE.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!qs(t.kernelSize,"number",1,1))throw new mC(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}hE.className="Conv1D",An(hE);class fE extends rS{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return en(()=>{if(t=Oi(t),"channelsLast"===this.dataFormat){const e=mi(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return mi(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=mi(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return mi(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}fE.className="Cropping2D",An(fE);class dE extends rS{constructor(t){var e;super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Zs(this.dataFormat),this.interpolation=null==t.interpolation?"nearest":t.interpolation,e=this.interpolation,Gs(kC,"InterpolationFormat",e)}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return en(()=>{let e=Oi(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=Gb(e,[0,2,3,1]);const t=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?L$.resizeNearestNeighbor(e,[t,r]):L$.resizeBilinear(e,[t,r]);return Gb(s,[0,3,1,2])}{const t=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?L$.resizeNearestNeighbor(e,[t,r]):L$.resizeBilinear(e,[t,r])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}dE.className="UpSampling2D",An(dE);class pE extends rE{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=_i(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=qi(t.depthwiseConstraint),this.depthwiseRegularizer=Ho(t.depthwiseRegularizer)}build(t){if(4>(t=Ii(t)).length)throw new mC(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||0>t[e])throw new mC(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return en(()=>{let e=((t,e,n=[1,1],r="valid",s,i)=>en(()=>{null==s&&(s="channelsLast"),Zs(s);let o=Yo(t,s);if(4!==t.rank)throw new mC(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(4!==e.rank)throw new mC(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return o=sw(o,e,n,"same"===r?"same":"valid","NHWC",i),"channelsFirst"===s&&(o=Gb(o,[0,3,1,2])),o}))(t=Oi(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=Ni(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e})}computeOutputShape(t){t=Ii(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,s=Jo(e,this.kernelSize[0],this.padding,this.strides[0]),i=Jo(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,s,i]:[t[0],s,i,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Ti(this.depthwiseInitializer),t.depthwiseRegularizer=Go(this.depthwiseRegularizer),t.depthwiseConstraint=Ui(this.depthwiseRegularizer),t}}pE.className="DepthwiseConv2D",An(pE);class mE extends rS{constructor(t){let e;if(super(t),null==t.cell)throw new mC("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new kE({cells:t.cell}):t.cell,null==e.stateSize)throw new mC("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this.H=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new ZC({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?li(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(t=>null):this.states_}setStates(t){this.states_=t}computeOutputShape(t){Ri(t)&&(t=t[0]);let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,e){return en(()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map(t=>null);return[t].concat(e)}return t})}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;t>n;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new yC("Constants support is not implemented in RNN yet.");Ri(t)&&(t=t[0]);const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new ZC({shape:[e,null,...n]});const r=[t[0]].concat(t.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!V(this.stateSpec.map(t=>t.shape[t.shape.length-1]),s))throw new mC(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map(t=>new ZC({shape:[null,t]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){en(()=>{if(!this.stateful)throw new dC("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new mC("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>hr([n,t])):this.states_=[hr([n,this.cell.stateSize])];else if(null==t)nn(this.states_),null!=this.keptStates&&(nn(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>hr([n,t])):this.states_[0]=hr([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new mC(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);!0===e?this.keptStates.push(this.states_.slice()):nn(this.states_);for(let e=0;e<this.states_.length;++e){const r=t[e],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,i=[n,s];if(!V(r.shape,i))throw new mC(`State ${e} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[e]=r}}this.states_=this.states_.map(t=>rn(t.clone()))})}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=ta(t,n,r,this.numConstants);t=s.inputs,n=s.initialState,r=s.constants;let i=[],o=[];if(null!=n){e.initialState=n,i=i.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new ZC({shape:t.shape}));o=o.concat(this.stateSpec)}if(null!=r&&(e.constants=r,i=i.concat(r),this.numConstants=r.length),i[0]instanceof QC){const n=[t].concat(i),r=this.inputSpec.concat(o),s=this.inputSpec;this.inputSpec=r;const a=super.apply(n,e);return this.inputSpec=s,a}return super.apply(t,e)}call(t,e){return en(()=>{const n=null==e?null:e.mask,r=null==e?null:e.training;let s=null==e?null:e.initialState;t=Oi(t),null==s&&(s=this.stateful?this.states_:this.getInitialState(t));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==i)throw new mC(`RNN Layer has ${i} state(s) but was passed ${s.length} initial state(s).`);this.unroll;const o={training:r},a=ea((t,e)=>{const n=this.cell.call([t].concat(e),o);return[n[0],n.slice(1)]},t,s,this.goBackwards,n,0,this.unroll,this.returnSequences),u=a[0],l=a[1],c=a[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h})}getInitialState(t){return en(()=>{let e=hr(t.shape);return e=xw(e,[1,2]),e=fi(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(t=>t>1?gi(e,[1,t]):e):this.cell.stateSize>1?[gi(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===mE.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e,n={}){const r=Yi(e.cell,n);return new t(Object.assign(e,{cell:r}))}}mE.className="RNN",An(mE);class yE extends rS{}class bE extends yE{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Hs(this.units,"units"),this.activation=jo(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=_i(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=_i(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=_i(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ho(t.kernelRegularizer),this.recurrentRegularizer=Ho(t.recurrentRegularizer),this.biasRegularizer=Ho(t.biasRegularizer),this.kernelConstraint=qi(t.kernelConstraint),this.recurrentConstraint=qi(t.recurrentConstraint),this.biasConstraint=qi(t.biasConstraint),this.dropout=ai([1,ui([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=ai([1,ui([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Ii(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return en(()=>{if(2!==t.length)throw new mC(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const r=null!=e.training&&e.training;let s;this.dropout>0&&1>this.dropout&&null==this.dropoutMask&&(this.dropoutMask=na({ones(){return cx(t)},rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),this.recurrentDropout>0&&1>this.recurrentDropout&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=na({ones(){return cx(n)},rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=this.recurrentDropoutMask;s=xi(null!=i?lg(t,i):t,this.kernel.read()),null!=this.bias&&(s=Ni(s,this.bias.read())),null!=o&&(n=lg(n,o));let a=og(s,xi(n,this.recurrentKernel.read()));return null!=this.activation&&(a=this.activation.apply(a)),[a,a]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:zo(this.activation),useBias:this.useBias,kernelInitializer:Ti(this.kernelInitializer),recurrentInitializer:Ti(this.recurrentInitializer),biasInitializer:Ti(this.biasInitializer),kernelRegularizer:Go(this.kernelRegularizer),recurrentRegularizer:Go(this.recurrentRegularizer),biasRegularizer:Go(this.biasRegularizer),activityRegularizer:Go(this.activityRegularizer),kernelConstraint:Ui(this.kernelConstraint),recurrentConstraint:Ui(this.recurrentConstraint),biasConstraint:Ui(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}bE.className="SimpleRNNCell",An(bE);class gE extends mE{constructor(t){t.cell=new bE(t),super(t)}call(t,e){return en(()=>{null!=this.cell.dropoutMask&&(nn(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(nn(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})})}static fromConfig(t,e){return new t(e)}}gE.className="SimpleRNN",An(gE);class wE extends yE{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new mC("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Hs(this.units,"units"),this.activation=jo(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=jo(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=_i(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=_i(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=_i(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ho(t.kernelRegularizer),this.recurrentRegularizer=Ho(t.recurrentRegularizer),this.biasRegularizer=Ho(t.biasRegularizer),this.kernelConstraint=qi(t.kernelConstraint),this.recurrentConstraint=qi(t.recurrentConstraint),this.biasConstraint=qi(t.biasConstraint),this.dropout=ai([1,ui([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=ai([1,ui([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=Ii(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return en(()=>{if(2!==t.length)throw new mC(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const n=null!=e.training&&e.training;let r=t[1];t=t[0],this.dropout>0&&1>this.dropout&&null==this.dropoutMask&&(this.dropoutMask=na({ones(){return cx(t)},rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),this.recurrentDropout>0&&1>this.recurrentDropout&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=na({ones(){return cx(r)},rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,a,u;this.dropout>0&&1>this.dropout&&(t=lg(t,s[0]));let l=xi(t,this.kernel.read());this.useBias&&(l=Ni(l,this.bias.read())),this.recurrentDropout>0&&1>this.recurrentDropout&&(r=lg(r,i[0]));const c=this.recurrentKernel.read(),[h,f]=Nv(c,[2*this.units,this.units],c.rank-1),d=xi(r,h),[p,m,y]=Nv(l,3,l.rank-1),[b,g]=Nv(d,2,d.rank-1);o=this.recurrentActivation.apply(og(p,b)),a=this.recurrentActivation.apply(og(m,g));const w=xi(lg(a,r),f);u=this.activation.apply(og(y,w));const x=og(lg(o,r),lg(og(1,jb(o)),u));return[x,x]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:zo(this.activation),recurrentActivation:zo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ti(this.kernelInitializer),recurrentInitializer:Ti(this.recurrentInitializer),biasInitializer:Ti(this.biasInitializer),kernelRegularizer:Go(this.kernelRegularizer),recurrentRegularizer:Go(this.recurrentRegularizer),biasRegularizer:Go(this.biasRegularizer),activityRegularizer:Go(this.activityRegularizer),kernelConstraint:Ui(this.kernelConstraint),recurrentConstraint:Ui(this.recurrentConstraint),biasConstraint:Ui(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}wE.className="GRUCell",An(wE);class xE extends mE{constructor(t){t.implementation,t.cell=new wE(t),super(t)}call(t,e){return en(()=>{null!=this.cell.dropoutMask&&(nn(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(nn(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})})}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}xE.className="GRU",An(xE);class vE extends yE{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Hs(this.units,"units"),this.activation=jo(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=jo(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=_i(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=_i(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=_i(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=Ho(t.kernelRegularizer),this.recurrentRegularizer=Ho(t.recurrentRegularizer),this.biasRegularizer=Ho(t.biasRegularizer),this.kernelConstraint=qi(t.kernelConstraint),this.recurrentConstraint=qi(t.recurrentConstraint),this.biasConstraint=qi(t.biasConstraint),this.dropout=ai([1,ui([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=ai([1,ui([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=Ii(t))[t.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;r=new((e=class extends IC{apply(e,r){const s=t.apply([n]),i=(new MC).apply([n]),o=t.apply([2*n]);return bi(bi(s,i),o)}}).className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return en(()=>{const n=null!=e.training&&e.training;if(3!==t.length)throw new mC(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let r=t[1];const s=t[2];t=t[0],this.dropout>0&&1>this.dropout&&null==this.dropoutMask&&(this.dropoutMask=na({ones(){return cx(t)},rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),this.recurrentDropout>0&&1>this.recurrentDropout&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=na({ones(){return cx(r)},rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=this.recurrentDropoutMask;let a,u,l,c;this.dropout>0&&1>this.dropout&&(t=lg(t,i[0]));let h=xi(t,this.kernel.read());this.recurrentDropout>0&&1>this.recurrentDropout&&(r=lg(r,o[0])),h=og(h,xi(r,this.recurrentKernel.read())),this.useBias&&(h=Ni(h,this.bias.read()));const[f,d,p,m]=Nv(h,4,h.rank-1);a=this.recurrentActivation.apply(f),u=this.recurrentActivation.apply(d),l=og(lg(u,s),lg(a,this.activation.apply(p))),c=this.recurrentActivation.apply(m);const y=lg(c,this.activation.apply(l));return[y,y,l]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:zo(this.activation),recurrentActivation:zo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ti(this.kernelInitializer),recurrentInitializer:Ti(this.recurrentInitializer),biasInitializer:Ti(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Go(this.kernelRegularizer),recurrentRegularizer:Go(this.recurrentRegularizer),biasRegularizer:Go(this.biasRegularizer),activityRegularizer:Go(this.activityRegularizer),kernelConstraint:Ui(this.kernelConstraint),recurrentConstraint:Ui(this.recurrentConstraint),biasConstraint:Ui(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}vE.className="LSTMCell",An(vE);class $E extends mE{constructor(t){t.implementation,t.cell=new vE(t),super(t)}call(t,e){return en(()=>{null!=this.cell.dropoutMask&&(nn(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(nn(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})})}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}$E.className="LSTM",An($E);class kE extends yE{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return en(()=>{let n=t.slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let i;for(let o=0;o<this.cells.length;++o){const a=this.cells[o];n=r[o],i=0===o?[t[0]].concat(n):[i[0]].concat(n),i=a.call(i,e),s.push(i.slice(1))}n=[];for(const t of s.slice().reverse())n.push(...t);return[i[0]].concat(n)})}build(t){let e;Ri(t)&&(t=t[0]),this.cells.forEach((n,r)=>{ei(`RNNCell_${r}`,()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map(t=>({className:t.getClassName(),config:t.getConfig()}))};return Object.assign({},t,e)}static fromConfig(t,e,n={}){const r=[];for(const s of e.cells)r.push(Yi(s,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return Mi(t)}setWeights(t){const e=[];for(const n of this.cells){const r=n.weights.length,s=t.splice(r);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],s[t]])}Di(e)}}kE.className="StackedRNNCells",An(kE);class NE extends mE{constructor(t){if(t.unroll)throw new yC("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new yC("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new ZC({ndim:5})]}call(t,e){return en(()=>{if(null!=this.cell.dropoutMask&&(nn(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(nn(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new mC("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return en(()=>{const{stateSize:e}=this.cell,n=t.shape,r=this.computeSingleOutputShape(n),s=hr([r[0],...r.slice(2)]);return Array.isArray(e)?Array(e.length).fill(s):[s]})}resetStates(t,e=!1){en(()=>{if(!this.stateful)throw new dC("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new mC("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>hr(s)):this.states_=[hr(s)];else if(null==t)nn(this.states_),null!=this.keptStates&&(nn(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>hr(s)):this.states_[0]=hr(s);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new mC(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):nn(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],r=s;if(!V(n.shape,r))throw new mC(`State ${e} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map(t=>rn(t.clone()))})}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:r,padding:s,strides:i,dilationRate:o}=this.cell,a="channelsFirst"===e,u=t[a?3:2],l=t[a?4:3],c=Jo(u,r[0],s,i[0],o[0]),h=Jo(l,r[1],s,i[1],o[1]);return[...t.slice(0,2),...a?[n,c,h]:[c,h,n]]}}NE.className="ConvRNN2D";class CE extends vE{constructor(t){const{filters:e,kernelSize:n,strides:r,padding:s,dataFormat:i,dilationRate:o}=t;super(Object.assign({},t,{units:e})),this.filters=e,Hs(this.filters,"filters"),this.kernelSize=Xo(n,2,"kernelSize"),this.kernelSize.forEach(t=>Hs(t,"kernelSize")),this.strides=Xo(r||1,2,"strides"),this.strides.forEach(t=>Hs(t,"strides")),this.padding=s||"valid",Qs(this.padding),this.dataFormat=i||"channelsLast",Zs(this.dataFormat),this.dilationRate=Xo(o||1,2,"dilationRate"),this.dilationRate.forEach(t=>Hs(t,"dilationRate"))}build(t){var e;t=Ii(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new mC(`The channel dimension of the input should be defined. Found ${t[n]}`);const r=t[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;t=new((e=class extends IC{apply(t,e){return yi([n.apply([r]),fr([r]),n.apply([2*r])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return en(()=>{if(3!==t.length)throw new mC(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training||!1,r=t[0],s=t[1],i=t[2];this.dropout>0&&1>this.dropout&&null==this.dropoutMask&&(this.dropoutMask=na({ones(){return cx(r)},rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,a=(t,e,n)=>e&&e[n]?lg(e[n],t):t;let u=a(r,o,0),l=a(r,o,1),c=a(r,o,2),h=a(r,o,3);this.recurrentDropout>0&&1>this.recurrentDropout&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=na({ones(){return cx(s)},rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const f=this.recurrentDropoutMask;let d=a(s,f,0),p=a(s,f,1),m=a(s,f,2),y=a(s,f,3);const[b,g,w,x]=Nv(this.kernel.read(),4,3),[v,$,k,N]=this.useBias?Nv(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,b,v,this.padding),l=this.inputConv(l,g,$,this.padding),c=this.inputConv(c,w,k,this.padding),h=this.inputConv(h,x,N,this.padding);const[C,S,E,T]=Nv(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,C),p=this.recurrentConv(p,S),m=this.recurrentConv(m,E),y=this.recurrentConv(y,T);const _=this.recurrentActivation.apply(og(u,d)),R=this.recurrentActivation.apply(og(l,p)),A=og(lg(R,i),lg(_,this.activation.apply(og(c,m)))),O=lg(this.recurrentActivation.apply(og(h,y)),this.activation.apply(A));return[O,O,A]})}getConfig(){const t=super.getConfig(),{units:e}=t,n=((t,e)=>{var n={};for(var r in t)({}).hasOwnProperty.call(t,r)&&0>e.indexOf(r)&&(n[r]=t[r]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(t);s<r.length;s++)0>e.indexOf(r[s])&&{}.propertyIsEnumerable.call(t,r[s])&&(n[r[s]]=t[r[s]])}return n})(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(t,e,n,r){const s=Gg(t,e,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Ni(s,n,this.dataFormat):s}recurrentConv(t,e){return Gg(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}CE.className="ConvLSTM2DCell",An(CE);class SE extends NE{constructor(t){const e=new CE(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}SE.className="ConvLSTM2D",An(SE);class EE extends rS{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?e[r]:this.noiseShape[r]);return n}call(t,e){return en(()=>{this.invokeCallHook(t,e);const n=Oi(t);if(this.rate>0&&1>this.rate){const t=null!=e.training&&e.training,r=this.getNoiseShape(n);return Si(()=>Ci(n,this.rate,r,this.seed),()=>n,t)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}EE.className="Dropout",An(EE);class TE extends EE{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}TE.className="SpatialDropout1D",An(TE);class _E extends rS{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Hs(this.units,"units"),this.activation=jo(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=_i(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=_i(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=qi(t.kernelConstraint),this.biasConstraint=qi(t.biasConstraint),this.kernelRegularizer=Ho(t.kernelRegularizer),this.biasRegularizer=Ho(t.biasRegularizer),this.activityRegularizer=Ho(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=Ii(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=Ii(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return en(()=>{this.invokeCallHook(t,e);const n=Oi(t),r=Js(this.activation.getClassName());let s;return null!=r?s=xi(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=xi(n,this.kernel.read()),null!=this.bias&&(s=Ni(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s})}getConfig(){const t={units:this.units,activation:zo(this.activation),useBias:this.useBias,kernelInitializer:Ti(this.kernelInitializer),biasInitializer:Ti(this.biasInitializer),kernelRegularizer:Go(this.kernelRegularizer),biasRegularizer:Go(this.biasRegularizer),activityRegularizer:Go(this.activityRegularizer),kernelConstraint:Ui(this.kernelConstraint),biasConstraint:Ui(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}_E.className="Dense",An(_E);class RE extends rS{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Ii(t);for(const e of t.slice(1))if(null==e)throw new mC(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],oi(t,1)]}call(t,e){return en(()=>{this.invokeCallHook(t,e);let n=Oi(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=Gb(n,t)}return(t=>{if(1>=t.rank)throw new mC(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],oi(t.shape,1)];return kg(t,e)})(n)})}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}RE.className="Flatten",An(RE);class AE extends rS{constructor(t){super(t),this.supportsMasking=!0,this.activation=jo(t.activation)}call(t,e){return en(()=>{this.invokeCallHook(t,e);const n=Oi(t);return this.activation.apply(n)})}getConfig(){const t={activation:zo(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}AE.className="Activation",An(AE);class OE extends rS{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return en(()=>{return t=Oi(t),e=t,n=this.n,en(()=>{if(2!==e.shape.length)throw new mC(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return gi(fi(e,1),[1,n,1])});var e,n})}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}OE.className="RepeatVector",An(OE);class IE extends rS{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return 0>t||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let s=1,i=null;for(let a=0;a<r.length;++a){const t=r[a];if(this.isUnknown(t)){if(null!==i)throw new mC("Can only specifiy one unknown dimension.");i=a}else s*=t}const o=oi(t);if(null!==i){if(0===s||o%s!==0)throw new mC(n);r[i]=o/s}else if(o!==s)throw new mC(n);return r}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return en(()=>{this.invokeCallHook(t,e);const n=Oi(t),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return kg(n,s)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}IE.className="Reshape",An(IE);class FE extends rS{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=li(1,t.dims.length+1);if(!V(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new ZC({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=Ii(t)).slice();return this.dims.forEach((n,r)=>{e[r+1]=t[n]}),e}call(t,e){return Gb(Oi(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}FE.className="Permute",An(FE);class ME extends rS{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=Oi(t);return mg(lx(n,this.maskValue),-1)}call(t,e){return en(()=>{this.invokeCallHook(t,e);const n=Oi(t),r=mg(lx(n,this.maskValue),-1,!0);return lg(n,Rb(r,n.dtype))})}}ME.className="Masking",An(ME);class DE extends rS{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(Ds(t.inputLength))}this.inputDim=t.inputDim,Hs(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Hs(this.outputDim,"outputDim"),this.embeddingsInitializer=_i(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Ho(t.embeddingsRegularizer),this.activityRegularizer=Ho(t.activityRegularizer),this.embeddingsConstraint=qi(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return en(()=>this.maskZero?(t=Oi(t),lx(t,lw(t))):null)}computeOutputShape(t){if(t=Ii(t),null==this.inputLength)return[...t,this.outputDim];const e=Ds(this.inputLength);if(e.length!==t.length-1)throw new mC(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let r=0;r<e.length;++r){const s=e[r],i=t[r+1];if(null!=s&&null!=i&&s!==i)throw new mC(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);null==s&&(e[n]=i),n++}}return[t[0],...e,this.outputDim]}call(t,e){return en(()=>{this.invokeCallHook(t,e);let n=Oi(t);"int32"!==n.dtype&&(n=hi(n,"int32"));const r=vi(this.embeddings.read(),kg(n,[n.size]));return kg(r,Ii(this.computeOutputShape(n.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ti(this.embeddingsInitializer),embeddingsRegularizer:Go(this.embeddingsRegularizer),activityRegularizer:Go(this.activityRegularizer),embeddingsConstraint:Ui(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}DE.className="Embedding",An(DE);class LE extends rS{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new yC}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const s=t[t.length-e.length+r],i=e[r];if(null==s||null==i||0>s||0>i)n.push(null);else if(1===s)n.push(i);else if(1===i)n.push(s);else{if(s!==i)throw new mC("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(s)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Ii(t)]),2>t.length)throw new mC(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const s of t)null!=s&&null!==s[0]&&e.push(s[0]);if(e=js(e),e.length>1)throw new mC(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let s=1;s<t.length;++s){const e=null==t[s]?null:t[s].slice(1);n=this.computeElementwiseOpOutputShape(n,e)}const r=t.map(t=>t.length);-1===t.indexOf(null)&&1===js(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return en(()=>{if(this.reshapeRequired){const e=[],n=t.map(t=>t.rank);if(-1===n.indexOf(null)){const r=ui(n);for(let n of t){const t=n.rank;for(let e=0;r-t>e;++e)n=fi(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const i of t){const t=i.rank;if(null==t){const t=i.shape,r=t[0],s=t.slice(1).concat([r]);let o=kg(i,[r].concat(oi(t.slice(1))));o=Gb(o,[1,0]),o=kg(o,s),e.push(o),n=!0}else if(t>1){const r=li(1,t).concat([0]);e.push(Gb(i,r)),n=!0}else e.push(i)}let r=this.mergeFunction(e);const s=r.rank;if(n)if(null==s){const t=r.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));r=kg(Gb(kg(r,[-1,e]),[1,0]),n)}else if(s>1){const t=[s-1].concat(li(0,s-1));r=Gb(r,t)}return r}}return this.mergeFunction(t)})}computeOutputShape(t){let e;e=null==t[0]?null:t[0].slice(1);for(let r=1;r<t.length;++r){const n=null==t[r]?null:t[r].slice(1);e=this.computeElementwiseOpOutputShape(e,n)}let n=[];for(const r of t)null!=r&&null!==r[0]&&n.push(r[0]);return n=js(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return en(()=>{if(null==e)return null;if(!Array.isArray(e))throw new mC("`mask` should be an Array");if(!Array.isArray(t))throw new mC("`inputs` should be an Array");if(e.length!==t.length)throw new mC(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(t=>null==t))return null;let n=(e=e.map(t=>null==t?t:Nw(t,0)))[0];for(let t=1;t<e.length-1;++t)n=qw(n,e[t]);return n})}}class PE extends LE{constructor(t){super(t)}mergeFunction(t){return en(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=og(e,t[n]);return e})}}PE.className="Add",An(PE);class VE extends LE{constructor(t){super(t)}mergeFunction(t){return en(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=lg(e,t[n]);return e})}}VE.className="Multiply",An(VE);class BE extends LE{constructor(t){super(t)}mergeFunction(t){return en(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=og(e,t[n]);return lg(1/t.length,e)})}}BE.className="Average",An(BE);class zE extends LE{constructor(t){super(t)}mergeFunction(t){return en(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=ex(e,t[n]);return e})}}zE.className="Maximum",An(zE);class WE extends LE{constructor(t){super(t)}mergeFunction(t){return en(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=rx(e,t[n]);return e})}}WE.className="Minimum",An(WE);class jE extends LE{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new mC("A `Concatenate` layer should be called on a list of at least 2 inputs");let e=!0;for(const r of t)if(null!=r){e=!1;break}if(e)return;const n=[];for(let r=0;r<t.length;++r){const e=t[r].slice();e.splice(this.axis,1);let s=!1;for(const t of n)if(V(t,e)){s=!0;break}s||n.push(e)}if(n.length>1)throw new mC("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return en(()=>yi(t,this.axis))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new mC("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=0>this.axis?n.length+this.axis:this.axis;for(const s of e.slice(1)){if(null==n[r]||null==s[r]){n[r]=null;break}n[r]+=s[r]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new mC("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new mC("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new mC(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return en(()=>{let n=!0;if(e.forEach(t=>{null==t||(n=!1)}),n)return null;const r=[];for(let i=0;i<t.length;++i)null==e[i]?r.push(Rb(cx(t[i]),"bool")):e[i].rank<t[i].rank?r.push(Nw(e[i],-1)):r.push(e[i]);const s=Sg(r,this.axis);return pg(s,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}jE.className="Concatenate",An(jE);class UE extends LE{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){F(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new yC("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);if(e[r[0]]!==n[r[1]])throw new mC(`Dimension incompatibility: ${e[r[0]]} !== ${n[r[1]]}`)}mergeFunction(t){if(2!==t.length)throw new mC(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],r=t[1];return e=Array.isArray(this.axes)?this.axes.map((e,n)=>ra(e,t[n].shape.length)):[ra(this.axes,n.shape.length),ra(this.axes,r.shape.length)],this.normalize&&(n=Zi(n,e[0]),r=Zi(r,e[1])),((t,e,n)=>{if(t.shape.length>3||e.shape.length>3)throw new yC("batchDot is not implemented for tensors of 4D or higher rank yet");if(F(t.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`),F(t.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new yC("batchDot is not implemented for complex64-type Tensors yet.");const r=t.shape.length,s=e.shape.length;null==n&&(n=[r-1,s-2]);const i=n;return en(()=>{let n,o;if(r>s){n=r-s;const t=[];for(let e=0;n>e;++e)t.push(1);e=kg(e,e.shape.concat(t))}else if(s>r){n=s-r;const e=[];for(let t=0;n>t;++t)e.push(1);t=kg(t,t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)o=i[0]===i[1]?xw(lg(t,e),i[0]):xw(lg(Gb(t,[1,0]),e),i[1]);else{const n=i[0]!==t.shape.length-1,r=i[1]===e.shape.length-1;o=Bb(t,e,n,r)}if(n>0){let t;t=r>s?r+s-3:r-1;const e=[];for(let r=t;t+n>r;++r)e.push(r);o=Ev(o,e)}return 1===o.shape.length&&(o=Nw(o,1)),o})})(n,r,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[ra(this.axes,t.length),ra(this.axes,e.length)],n}computeOutputShape(t){F(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new yC("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);e.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=e.concat(n);return 1===s.length&&s.push(1),s}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}UE.className="Dot",An(UE);class GE extends rS{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return en(()=>{this.invokeCallHook(t,e);const n=Oi(t);return Si(()=>og(wi(n.shape,0,this.stddev),n),()=>n,e.training||!1)})}}GE.className="GaussianNoise",An(GE);class qE extends rS{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return en(()=>{this.invokeCallHook(t,e);const n=Oi(t);return this.rate>0&&1>this.rate?Si(()=>{const t=Math.sqrt(this.rate/(1-this.rate));return lg(n,wi(n.shape,1,t))},()=>n,e.training||!1):n})}}qE.className="GaussianDropout",An(qE);class HE extends rS{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}nt(t){return this.noiseShape||Oi(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return en(()=>{if(1>this.rate&&this.rate>0){const n=this.nt(t);return Si(()=>{const e=Oi(t),r=-1.7580993408473766;let s=Aw(Qx(n),this.rate);s=hi(s,"float32");const i=lf((1-this.rate)*(1+this.rate*lf(r,2)),-.5),o=-i*r*this.rate,a=og(lg(e,s),lg(og(s,-1),r));return og(lg(a,i),o)},()=>Oi(t),e.training||!1)}return t})}}HE.className="AlphaDropout",An(HE);class XE extends rS{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=_i(t.betaInitializer||"zeros"),this.gammaInitializer=_i(t.gammaInitializer||"ones"),this.movingMeanInitializer=_i(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=_i(t.movingVarianceInitializer||"ones"),this.betaConstraint=qi(t.betaConstraint),this.gammaConstraint=qi(t.gammaConstraint),this.betaRegularizer=Ho(t.betaRegularizer),this.gammaRegularizer=Ho(t.gammaRegularizer)}build(t){t=Ii(t);const e=0>this.axis?this.axis+t.length:this.axis,n=t[e];if(null==n)throw new mC(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new ZC({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return en(()=>{const n=null!=e.training&&e.training,r=Oi(t),s=r.shape,i=s.length,o=li(0,i),a=0>this.axis?this.axis+i:this.axis;o.splice(a,1);const u=Os(1,i);u[a]=s[a];const l=o.slice();l.sort();const c=!V(l,li(0,i).slice(0,i-1));if(!n)return(()=>{if(c){const t=kg(this.movingMean.read(),u),e=kg(this.movingVariance.read(),u),n=this.center?kg(this.beta.read(),u):null,s=this.scale?kg(this.gamma.read(),u):null;return sa(r,t,e,n,s,this.epsilon)}return sa(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,f,d]=((t,e,n,r,s=.001)=>V(r.slice().sort(),li(0,t.rank-1))?((t,e,n,r,s=.001)=>en(()=>{const i=ox(t,r),o=i.mean,a=i.variance;return[sa(t,o,a,n,e,s),o,a]}))(t,e,n,r,s):((t,e,n,r,s=.001)=>en(()=>{const i=ox(t,r),o=i.mean,a=i.variance,u=[];for(const e of li(0,t.rank))-1!==r.indexOf(e)?u.push(1):u.push(t.shape[e]);const l=kg(o,u),c=kg(a,u),h=null==e?null:kg(e,u),f=null==n?null:kg(n,u);return[sa(t,l,c,f,h,s),o,a]}))(t,e,n,r,s))(r,this.gamma.read(),this.beta.read(),o,this.epsilon),p=(t,e,n)=>{en(()=>{const r=1-n,s=t.read(),i=lg(jw(s,e),r);t.write(jw(s,i))})};return(()=>{p(this.movingMean,f,this.momentum),p(this.movingVariance,d,this.momentum)})(),h})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ti(this.betaInitializer),gammaInitializer:Ti(this.gammaInitializer),movingMeanInitializer:Ti(this.movingMeanInitializer),movingVarianceInitializer:Ti(this.movingVarianceInitializer),betaRegularizer:Go(this.betaRegularizer),gammaRegularizer:Go(this.gammaRegularizer),betaConstraint:Ui(this.betaConstraint),gammaConstraint:Ui(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}XE.className="BatchNormalization",An(XE);class JE extends rS{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=_i(t.betaInitializer||"zeros"),this.gammaInitializer=_i(t.gammaInitializer||"ones"),this.betaRegularizer=Ho(t.betaRegularizer),this.gammaRegularizer=Ho(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=Ii(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)0>this.axis[s]&&(this.axis[s]+=e);for(const s of this.axis)if(0>s||s>=e)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==js(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map(e=>t[e]),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(t,e){const n=Oi(t),r=n.shape,s=r.length;return en(()=>{let{mean:t,variance:e}=ox(n,this.axis,!0);const i=Os(1,s);for(const n of this.axis)i[n]=r[n];const o=t=>null!=t&&t.shape.length!==s?kg(t,i):t;let a=this.scale?o(this.gamma.read()):null,u=this.center?o(this.beta.read()):null;const l=[],c=[];for(let n=0;s>n;++n)-1!==this.axis.indexOf(n)?(l.push(r[n]),c.push(1)):(l.push(1),c.push(r[n]));return t=Sw(t,l),e=Sw(e,l),null!=a&&(a=Sw(a,c)),null!=u&&(u=Sw(u,c)),sa(n,t,e,u,a,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ti(this.betaInitializer),gammaInitializer:Ti(this.gammaInitializer),betaRegularizer:Go(this.betaRegularizer),gammaRegularizer:Go(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}JE.className="LayerNormalization",An(JE);class KE extends rS{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new mC(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new mC(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new mC(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new ZC({ndim:4})]}computeOutputShape(t){let e,n;return t=Ii(t),"channelsFirst"===this.dataFormat?(e=null==t[2]||0>t[2]?null:t[2]+this.padding[0][0]+this.padding[0][1],n=null==t[3]||0>t[3]?null:t[3]+this.padding[1][0]+this.padding[1][1],[t[0],t[1],e,n]):(e=null==t[1]||0>t[1]?null:t[1]+this.padding[0][0]+this.padding[0][1],n=null==t[2]||0>t[2]?null:t[2]+this.padding[1][0]+this.padding[1][1],[t[0],e,n,t[3]])}call(t,e){return en(()=>{return e=Oi(t),n=this.padding,r=this.dataFormat,en(()=>{if(4!==e.rank)throw new mC(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new mC("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new mC(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],fx(e,t)});var e,n,r})}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}KE.className="ZeroPadding2D",An(KE);class YE extends rS{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new mC(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(Hs(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new mC(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}Hs(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,Qs(this.padding),this.inputSpec=[new ZC({ndim:3})]}computeOutputShape(t){const e=Jo((t=Ii(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return en(()=>{this.invokeCallHook(t,e),t=fi(Oi(t),2);const n=this.poolingFunction(Oi(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Ev(n,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class ZE extends YE{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Zs(s),Qs(r),ia(t,e,n,r,s,"max")}}ZE.className="MaxPooling1D",An(ZE);class QE extends YE{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Zs(s),Qs(r),ia(t,e,n,r,s,"avg")}}QE.className="AveragePooling1D",An(QE);class tT extends rS{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new mC(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];Hs(this.poolSize,"poolSize"),Hs(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Zs(this.dataFormat),Qs(this.padding),this.inputSpec=[new ZC({ndim:4})]}computeOutputShape(t){t=Ii(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=Jo(e,this.poolSize[0],this.padding,this.strides[0]),n=Jo(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return en(()=>(this.invokeCallHook(t,e),this.poolingFunction(Oi(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class eT extends tT{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Zs(s),Qs(r),ia(t,e,n,r,s,"max")}}eT.className="MaxPooling2D",An(eT);class nT extends tT{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Zs(s),Qs(r),ia(t,e,n,r,s,"avg")}}nT.className="AveragePooling2D",An(nT);class rT extends rS{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new mC(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Hs(this.poolSize,"poolSize"),Hs(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Zs(this.dataFormat),Qs(this.padding),this.inputSpec=[new ZC({ndim:5})]}computeOutputShape(t){t=Ii(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=Jo(e,this.poolSize[0],this.padding,this.strides[0]),n=Jo(n,this.poolSize[1],this.padding,this.strides[1]),r=Jo(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return en(()=>(this.invokeCallHook(t,e),this.poolingFunction(Oi(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class sT extends rT{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Zs(s),Qs(r),oa(t,e,n,r,s,"max")}}sT.className="MaxPooling3D",An(sT);class iT extends rT{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Zs(s),Qs(r),oa(t,e,n,r,s,"avg")}}iT.className="AveragePooling3D",An(iT);class oT extends rS{constructor(t){super(t),this.inputSpec=[new ZC({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new yC}}class aT extends oT{constructor(t){super(t||{})}call(t,e){return en(()=>{const e=Oi(t);return nx(e,1)})}}aT.className="GlobalAveragePooling1D",An(aT);class uT extends oT{constructor(t){super(t||{})}call(t,e){return en(()=>{const e=Oi(t);return mw(e,1)})}}uT.className="GlobalMaxPooling1D",An(uT);class lT extends rS{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Zs(this.dataFormat),this.inputSpec=[new ZC({ndim:4})]}computeOutputShape(t){return"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new yC}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class cT extends lT{call(t,e){return en(()=>{const e=Oi(t);return"channelsLast"===this.dataFormat?nx(e,[1,2]):nx(e,[2,3])})}}cT.className="GlobalAveragePooling2D",An(cT);class hT extends lT{call(t,e){return en(()=>{const e=Oi(t);return"channelsLast"===this.dataFormat?mw(e,[1,2]):mw(e,[2,3])})}}hT.className="GlobalMaxPooling2D",An(hT);class fT extends rS{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer.Z}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const r=Yi(e.layer,n);delete e.layer;const s={layer:r};return Object.assign(s,e),new t(s)}}class dT extends fT{constructor(t){super(t),this.supportsMasking=!0}build(t){if(3>(t=Ii(t)).length)throw new mC(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=Ii(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))}call(t,e){return en(()=>ea((t,n)=>[Oi(this.layer.call(t,e)),[]],t=Oi(t),[],!1,null,0,!1,!0)[1])}}dT.className="TimeDistributed",An(dT);class pT extends fT{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=Yi(n),e.goBackwards=!0!==e.goBackwards;const r={};var s;if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=Yi(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,s=this.mergeMode,Gs(SC,"BidirectionalMergeMode",s),t.weights)throw new yC("weights support is not implemented for Bidirectional layer yet.");this.H=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this.rt=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this.rt}set trainable(t){this.rt=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,r,s=this.forwardLayer.computeOutputShape(t);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),e=s[0]):e=s[0],"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):Ms(n)}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=ta(t,n,r,this.numConstants);if(t=s.inputs,n=s.initialState,r=s.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const i=[],o=[];if(null!=n){const t=n.length;if(t%2>0)throw new mC("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,i.push(...n);const r=n.map(t=>new ZC({shape:t.shape}));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),o.push(...r)}if(null!=r)throw new yC("Support for constants in Bidirectional layers is not implemented yet.");const a=i[0]instanceof QC;for(const u of i)if(u instanceof QC!==a)throw new mC("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(a){const n=[t].concat(i),r=this.inputSpec.concat(o),s=this.inputSpec;this.inputSpec=r;const a=super.apply(n,e);return this.inputSpec=s,a}return super.apply(t,e)}call(t,e){return en(()=>{const n=e.initialState;let r,s,i,o;if(null==n)r=this.forwardLayer.call(t,e),s=this.backwardLayer.call(t,e);else{const i=n.slice(0,n.length/2),o=n.slice(n.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:i})),s=this.backwardLayer.call(t,Object.assign(e,{initialState:o}))}return this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=rv(s,1)),"concat"===this.mergeMode?o=yi([r,s]):"sum"===this.mergeMode?o=og(r,s):"ave"===this.mergeMode?o=lg(.5,og(r,s)):"mul"===this.mergeMode?o=lg(r,s):null==this.mergeMode&&(o=[r,s]),this.returnState?null==this.mergeMode?o.concat(i):[o].concat(i):o})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){ei(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),ei(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map(t=>null);return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=Yi(e.layer);if(delete e.layer,null!=e.numConstants)throw new yC("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=n,new t(r)}}pT.className="Bidirectional",An(pT);class mT extends rS{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){const t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return en(()=>("float32"!==(t=Oi(t)).dtype&&(t=hi(t,"float32")),og(lg(t,this.scale),this.offset)))}}mT.className="Rescaling",An(mT);const yT=ca,bT=ha,gT=fa,wT=da,xT=Object.freeze(Object.defineProperty({__proto__:null,Layer:rS,RNN:mE,RNNCell:yE,activation(t){return new AE(t)},add(t){return new PE(t)},alphaDropout(t){return new HE(t)},average(t){return new BE(t)},averagePooling1d:aa,averagePooling2d:ua,averagePooling3d:la,avgPool1d(t){return aa(t)},avgPool2d(t){return ua(t)},avgPool3d(t){return la(t)},avgPooling1d(t){return aa(t)},avgPooling2d(t){return ua(t)},avgPooling3d(t){return la(t)},batchNormalization(t){return new XE(t)},bidirectional(t){return new pT(t)},concatenate(t){return new jE(t)},conv1d(t){return new hE(t)},conv2d(t){return new iE(t)},conv2dTranspose(t){return new aE(t)},conv3d(t){return new oE(t)},conv3dTranspose(t){return new uE(t)},convLstm2d(t){return new SE(t)},convLstm2dCell(t){return new CE(t)},cropping2D(t){return new fE(t)},dense(t){return new _E(t)},depthwiseConv2d(t){return new pE(t)},dot(t){return new UE(t)},dropout(t){return new EE(t)},elu(t){return new tE(t)},embedding(t){return new DE(t)},flatten(t){return new RE(t)},gaussianDropout(t){return new qE(t)},gaussianNoise(t){return new GE(t)},globalAveragePooling1d(t){return new aT(t)},globalAveragePooling2d(t){return new cT(t)},globalMaxPool1d:yT,globalMaxPool2d:bT,globalMaxPooling1d:ca,globalMaxPooling2d:ha,gru(t){return new xE(t)},gruCell(t){return new wE(t)},input:Bo,inputLayer(t){return new sS(t)},layerNormalization(t){return new JE(t)},leakyReLU(t){return new ZS(t)},lstm(t){return new $E(t)},lstmCell(t){return new vE(t)},masking(t){return new ME(t)},maxPool1d:gT,maxPool2d:wT,maxPooling1d:fa,maxPooling2d:da,maxPooling3d(t){return new sT(t)},maximum(t){return new zE(t)},minimum(t){return new WE(t)},multiply(t){return new VE(t)},permute(t){return new FE(t)},prelu(t){return new QS(t)},reLU(t){return new YS(t)},repeatVector(t){return new OE(t)},rescaling(t){return new mT(t)},reshape(t){return new IE(t)},rnn(t){return new mE(t)},separableConv2d(t){return new cE(t)},simpleRNN(t){return new gE(t)},simpleRNNCell(t){return new bE(t)},softmax(t){return new nE(t)},spatialDropout1d(t){return new TE(t)},stackedRNNCells(t){return new kE(t)},thresholdedReLU(t){return new eE(t)},timeDistributed(t){return new dT(t)},upSampling2d(t){return new dE(t)},zeroPadding2d(t){return new KE(t)}},Symbol.toStringTag,{value:"Module"})),vT=Object.freeze(Object.defineProperty({__proto__:null,MAPE(t,e){return eo(t,e)},MSE(t,e){return Qi(t,e)},binaryAccuracy(t,e){return ao(t,e)},binaryCrossentropy(t,e){return ho(t,e)},categoricalAccuracy(t,e){return uo(t,e)},categoricalCrossentropy(t,e){return CS(t,e)},cosineProximity(t,e){return io(t,e)},mape(t,e){return eo(t,e)},meanAbsoluteError(t,e){return to(t,e)},meanAbsolutePercentageError(t,e){return eo(t,e)},meanSquaredError(t,e){return Qi(t,e)},mse(t,e){return Qi(t,e)},precision(t,e){return co(t,e)},recall(t,e){return((t,e)=>en(()=>{const n=lo(t,e),r=((t,e)=>en(()=>Rb(xw(qw(aw(t,1),aw(e,0))),"float32")))(t,e),s=og(n,r);return Rb(uw(Rw(s,0),ug(n,s),0),"float32")}))(t,e)},sparseCategoricalAccuracy(t,e){return fo(t,e)}},Symbol.toStringTag,{value:"Module"})),$T=Object.freeze(Object.defineProperty({__proto__:null,modelFromJSON(t,e){return cf(this,null,function*(){"modelTopology"in t||(t={modelTopology:t});let n=t.modelTopology;null!=n.model_config&&(n=n.model_config);const r=Yi($o(n),e);if(null!=t.weightsManifest){const e=yield He(t.weightsManifest,t.pathPrefix,r.weights.map(t=>t.originalName)),n={};for(const t of r.weights)n[t.originalName]=e[t.originalName];r.loadWeights(n),nn(e)}return r})}},Symbol.toStringTag,{value:"Module"})),kT=Object.freeze(Object.defineProperty({__proto__:null,l1(t){return Uo(e=t),new JS({l1:null!=e?e.l1:null,l2:0});var e},l1l2(t){return new JS(t)},l2(t){return Uo(e=t),new JS({l2:null!=e?e.l2:null,l1:0});var e}},Symbol.toStringTag,{value:"Module"}));class NT extends gS{constructor(){super(...arguments),this.model=null}setModel(t){if(!(t instanceof RS))throw new Error("model must be a LayersModel, not some other Container");this.model=t}}class CT extends NT{constructor(t){if(super(),null==t&&(t={}),t.restoreBestWeights)throw new yC("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=t.monitor||"val_loss",this.minDelta=Math.abs(t.minDelta||0),this.patience=t.patience||0,this.verbose=t.verbose||0,this.mode=t.mode||"auto",this.baseline=t.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(this.mode="auto"),"min"===this.mode?this.monitorFunc=pa:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=ma:this.monitorFunc=pa,this.monitorFunc===pa&&(this.minDelta*=-1)}onTrainBegin(t){return cf(this,null,function*(){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===pa?1/0:-1/0})}onEpochEnd(t,e){return cf(this,null,function*(){yield Hi(e);const n=this.getMonitorValue(e);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait<this.patience||(this.stoppedEpoch=t,this.model.stopTraining=!0)))})}onTrainEnd(t){return cf(this,null,function*(){this.stoppedEpoch>0&&this.verbose})}getMonitorValue(t){return null==t&&(t={}),t[this.monitor]}}const ST={earlyStopping(t){return new CT(t)}};var ET,TT,_T,RT,AT;gt().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,t=>{}),(TT=ET||(ET={}))[TT.DT_INVALID=0]="DT_INVALID",TT[TT.DT_FLOAT=1]="DT_FLOAT",TT[TT.DT_DOUBLE=2]="DT_DOUBLE",TT[TT.DT_INT32=3]="DT_INT32",TT[TT.DT_UINT8=4]="DT_UINT8",TT[TT.DT_INT16=5]="DT_INT16",TT[TT.DT_INT8=6]="DT_INT8",TT[TT.DT_STRING=7]="DT_STRING",TT[TT.DT_COMPLEX64=8]="DT_COMPLEX64",TT[TT.DT_INT64=9]="DT_INT64",TT[TT.DT_BOOL=10]="DT_BOOL",TT[TT.DT_QINT8=11]="DT_QINT8",TT[TT.DT_QUINT8=12]="DT_QUINT8",TT[TT.DT_QINT32=13]="DT_QINT32",TT[TT.DT_BFLOAT16=14]="DT_BFLOAT16",TT[TT.DT_QINT16=15]="DT_QINT16",TT[TT.DT_QUINT16=16]="DT_QUINT16",TT[TT.DT_UINT16=17]="DT_UINT16",TT[TT.DT_COMPLEX128=18]="DT_COMPLEX128",TT[TT.DT_HALF=19]="DT_HALF",TT[TT.DT_RESOURCE=20]="DT_RESOURCE",TT[TT.DT_VARIANT=21]="DT_VARIANT",TT[TT.DT_UINT32=22]="DT_UINT32",TT[TT.DT_UINT64=23]="DT_UINT64",TT[TT.DT_FLOAT_REF=101]="DT_FLOAT_REF",TT[TT.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",TT[TT.DT_INT32_REF=103]="DT_INT32_REF",TT[TT.DT_UINT8_REF=104]="DT_UINT8_REF",TT[TT.DT_INT16_REF=105]="DT_INT16_REF",TT[TT.DT_INT8_REF=106]="DT_INT8_REF",TT[TT.DT_STRING_REF=107]="DT_STRING_REF",TT[TT.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",TT[TT.DT_INT64_REF=109]="DT_INT64_REF",TT[TT.DT_BOOL_REF=110]="DT_BOOL_REF",TT[TT.DT_QINT8_REF=111]="DT_QINT8_REF",TT[TT.DT_QUINT8_REF=112]="DT_QUINT8_REF",TT[TT.DT_QINT32_REF=113]="DT_QINT32_REF",TT[TT.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",TT[TT.DT_QINT16_REF=115]="DT_QINT16_REF",TT[TT.DT_QUINT16_REF=116]="DT_QUINT16_REF",TT[TT.DT_UINT16_REF=117]="DT_UINT16_REF",TT[TT.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",TT[TT.DT_HALF_REF=119]="DT_HALF_REF",TT[TT.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",TT[TT.DT_VARIANT_REF=121]="DT_VARIANT_REF",TT[TT.DT_UINT32_REF=122]="DT_UINT32_REF",TT[TT.DT_UINT64_REF=123]="DT_UINT64_REF",(AT=(RT=_T||(_T={})).CheckpointFormatVersion||(RT.CheckpointFormatVersion={}))[AT.LEGACY=0]="LEGACY",AT[AT.V1=1]="V1",AT[AT.V2=2]="V2";const OT={},IT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},Symbol.toStringTag,{value:"Module"})),FT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},Symbol.toStringTag,{value:"Module"})),MT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}]},Symbol.toStringTag,{value:"Module"})),DT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]},Symbol.toStringTag,{value:"Module"})),LT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]},Symbol.toStringTag,{value:"Module"})),PT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},Symbol.toStringTag,{value:"Module"})),VT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}]},Symbol.toStringTag,{value:"Module"})),BT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]},Symbol.toStringTag,{value:"Module"})),zT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}]},Symbol.toStringTag,{value:"Module"})),WT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}]},Symbol.toStringTag,{value:"Module"})),jT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},Symbol.toStringTag,{value:"Module"})),UT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}]},Symbol.toStringTag,{value:"Module"})),GT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]},Symbol.toStringTag,{value:"Module"})),qT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]},Symbol.toStringTag,{value:"Module"})),HT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}]},Symbol.toStringTag,{value:"Module"})),XT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]},Symbol.toStringTag,{value:"Module"})),JT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}]},Symbol.toStringTag,{value:"Module"})),KT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}]},Symbol.toStringTag,{value:"Module"}));class YT{static get Instance(){return this.st||(this.st=new this)}constructor(){const t=[].concat(...[IT,FT,MT,DT,LT,PT,VT,BT,zT,WT,jT,UT,GT,qT,hf,HT,XT,JT,KT].map(t=>t.json));this.opMappers=t.reduce((t,e)=>(t[e.tfOpName]=e,t),{})}transformGraph(t,e={}){const n=t.node,r=[],s=[],i=[],o=n.reduce((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?r.push(t[e.name]):"Const"===e.op?s.push(t[e.name]):null!=e.input&&0!==e.input.length||i.push(t[e.name]),t),{});let a=[];const u=[];let l={},c={};null!=e&&(l=this.mapSignatureEntries(e.inputs),c=this.mapSignatureEntries(e.outputs));const h=Object.keys(o);h.forEach(t=>{const e=o[t];e.inputNames.forEach((t,n)=>{const[r,,s]=wa(t),i=o[r];if(null!=i.outputs){const t=i.outputs.indexOf(s);if(-1!==t){const s=`${r}:${t}`;e.inputNames[n]=s}}e.inputs.push(i),i.children.push(e)})}),0===Object.keys(c).length?h.forEach(t=>{const e=o[t];0===e.children.length&&u.push(e)}):Object.keys(c).forEach(t=>{const[e]=wa(t),n=o[e];null!=n&&(n.signatureKey=c[t],u.push(n))}),Object.keys(l).length>0?Object.keys(l).forEach(t=>{const[e]=wa(t),n=o[e];n&&(n.signatureKey=l[t],a.push(n))}):a=r;let f={};null!=t.library&&null!=t.library.function&&(f=t.library.function.reduce((t,e)=>(t[e.signature.name]=this.mapFunction(e),t),{}));const d={nodes:o,inputs:a,outputs:u,weights:s,placeholders:r,signature:e,functions:f};return i.length>0&&(d.initNodes=i),d}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,n)=>(e[t[n].name]=n,e),{})}mapNode(t){const e=ya(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(t=>t.startsWith("^")?t.slice(1):t),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:e.outputs};return null!=e.inputs&&(n.inputParams=e.inputs.reduce((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce((e,n)=>{const r=n.type;let s;switch(n.type){case"string":s=Ca(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Ca(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=Ma(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Ma(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=Ea(t.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=Ea(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=Fa(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Fa(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=Sa(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Sa(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=La(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=La(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=Ia(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Ia(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=Da(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Da(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=Ra(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Ra(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=Aa(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Aa(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=_a(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=_a(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${t.op}`)}return e[n.name]={value:s,type:r},e},{})),n}mapFunction(t){const e=t.nodeDef,n=[];let r={};null!=e&&(r=e.reduce((t,e)=>(t[e.name]=this.mapNode(e),"Const"===e.op&&n.push(t[e.name]),t),{}));const s=[],i=[];t.signature.inputArg.forEach(t=>{const[e]=wa(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Ta(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,s.push(n),r[e]=n}),Object.keys(r).forEach(t=>{const e=r[t];e.inputNames.forEach((t,n)=>{const[s,,i]=wa(t),o=r[s];if(null!=o.outputs){const t=o.outputs.indexOf(i);if(-1!==t){const r=`${s}:${t}`;e.inputNames[n]=r}}e.inputs.push(o),o.children.push(e)})});const o=t.ret;t.signature.outputArg.forEach(t=>{const[e,n]=wa(o[t.name]),s=r[e];null!=s&&(s.defaultOutput=n,i.push(s))});const a=this.mapArgsToSignature(t);return{nodes:r,inputs:s,outputs:i,weights:n,placeholders:[],signature:a}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((t,e)=>(t[e.name]=this.mapArgToTensorInfo(e),t),{}),outputs:t.signature.outputArg.reduce((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}class ZT{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(t=>this.getInput(t)),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce((t,e)=>(t[e]=this.getAttr(e),t),{}))}getInput(t){return ga(t,this.tensorMap,this.context)}getAttr(t,e){const n=this.node.rawAttrs[t];if(null!=n.tensor)return ga(t,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Ea(this.node.rawAttrs,t,e);if(null!=n.s)return Ca(this.node.rawAttrs,t,e);if(null!=n.b)return Sa(this.node.rawAttrs,t,e);if(null!=n.shape)return Ia(this.node.rawAttrs,t,e);if(null!=n.type)return Ra(this.node.rawAttrs,t,e);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Fa(this.node.rawAttrs,t,e);if(null!=n.list.s)return Ma(this.node.rawAttrs,t,e);if(null!=n.list.shape)return Da(this.node.rawAttrs,t,e);if(null!=n.list.b)return La(this.node.rawAttrs,t,e);if(null!=n.list.type)return Aa(this.node.rawAttrs,t,e)}return e}}const QT=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:rb,abs:cg,acos:hg,acosh:fg,add:og,addN:dg,all:pg,any:mg,argMax:yg,argMin:bg,asin:gg,asinh:wg,atan:xg,atan2:vg,atanh:$g,avgPool:Ng,avgPool3d:Cg,basicLSTMCell:Rg,batchNorm:Og,batchNorm2d:Ig,batchNorm3d:Fg,batchNorm4d:Mg,batchToSpaceND:Ag,bincount:Dg,booleanMaskAsync:Pv,broadcastArgs:Lg,broadcastTo:Pg,buffer:We,cast:Rb,ceil:Vg,clipByValue:Bg,clone:Ab,complex:sb,concat:Sg,concat1d:zg,concat2d:Wg,concat3d:jg,concat4d:Ug,conv1d:qg,conv2d:Gg,conv2dTranspose:Xg,conv3d:Jg,conv3dTranspose:Yg,cos:Zg,cosh:Qg,cosineWindow:Nr,cumprod:tw,cumsum:ew,denseBincount:nw,depthToSpace:rw,depthwiseConv2d:sw,diag:iw,dilation2d:ow,div:ug,divNoNan:cw,dot:hw,dropout:jv,einsum:fw,elu:dw,enclosingPowerOfTwo:kr,equal:aw,erf:pw,euclideanNorm:$w,exp:kw,expandDims:Nw,expm1:Cw,eye:Ew,fft:vv,fill:Jn,floor:Tw,floorDiv:ag,fused:Zv,gather:_w,gatherND:Wv,greater:Rw,greaterEqual:Aw,ifft:$v,imag:Wb,image:L$,inTopKAsync:Uv,irfft:kv,isFinite:Ow,isInf:Iw,isNaN:Fw,leakyRelu:Mw,less:Dw,lessEqual:Lw,linalg:P$,linspace:or,localResponseNormalization:Pw,log:Vw,log1p:Bw,logSigmoid:Ww,logSoftmax:Uw,logSumExp:Gw,logicalAnd:qw,logicalNot:Hw,logicalOr:Xw,logicalXor:Jw,losses:V$,lowerBound:cr,matMul:Bb,max:mw,maxPool:Zw,maxPool3d:Qw,maxPoolWithArgmax:tx,maximum:ex,mean:nx,meshgrid:dr,min:yw,minimum:rx,mirrorPad:sx,mod:ix,moments:ox,movingAverage:Vv,mul:lg,multiRNNCell:ax,multinomial:ux,neg:jb,norm:vw,notEqual:lx,oneHot:zb,ones:fr,onesLike:cx,op:xe,outerProduct:hx,pad:fx,pad1d:dx,pad2d:px,pad3d:mx,pad4d:yx,pool:gx,pow:bw,prelu:wx,print:je,prod:xx,raggedGather:vx,raggedTensorToTensor:$x,rand:kx,randomGamma:Kx,randomNormal:Yx,randomStandardNormal:Zx,randomUniform:Qx,range:pr,real:Ub,reciprocal:tv,relu:ev,relu6:nv,reshape:kg,reverse:rv,reverse1d:sv,reverse2d:iv,reverse3d:ov,reverse4d:av,rfft:Cv,round:uv,rsqrt:lv,scalar:sr,scatterND:Bv,searchSorted:Yw,selu:cv,separableConv2d:hv,setdiff1dAsync:fv,sigmoid:Eg,sign:dv,signal:D$,sin:pv,sinh:mv,slice:Tg,slice1d:yv,slice2d:bv,slice3d:gv,slice4d:wv,softmax:xv,softplus:zw,spaceToBatchND:bx,sparse:B$,sparseToDense:zv,spectral:M$,split:Nv,sqrt:gw,square:ww,squaredDifference:Sv,squeeze:Ev,stack:Tv,step:_v,stridedSlice:Rv,string:z$,sub:jw,sum:xw,tan:Av,tanh:_g,tensor:$e,tensor1d:mr,tensor2d:yr,tensor3d:cn,tensor4d:br,tensor5d:gr,tensor6d:wr,tile:Sw,topk:Ov,transpose:Gb,truncatedNormal:Iv,unique:Fv,unsortedSegmentSum:Mv,unstack:Dv,upperBound:xr,variable:vr,where:uw,whereAsync:Lv,zeros:hr,zerosLike:lw},Symbol.toStringTag,{value:"Module"}));class t_{constructor(t,e,n,r,s,i,o){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=i,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=sr(0),rn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{null!=t&&t.has(e.tensor.id)||e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(0>t||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(t=>this.read(t))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(0>t||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},\n          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),Pa(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);n.tensor=e,rn(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((t,n)=>this.write(t,e[n]))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let e=0;e<this.size();e++)t.push(e)}if(0===t.length)return $e([],[0].concat(this.elementShape));const n=this.readMany(t);return Pa(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Tv(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(0===this.size())return $e([],[0].concat(this.elementShape));const e=[];for(let r=0;r<this.size();r++)e.push(r);const n=this.readMany(e);return Pa(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Sg(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(t,Dv(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let n=0;const r=t.map(t=>(n+=t,n));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:e.size/n,i=[];en(()=>{e=kg(e,[1,n,s]);for(let n=0;n<t.length;++n){const o=[0,0===n?0:r[n-1],0],a=[1,t[n],s];i[n]=kg(Tg(e,o,a),this.elementShape)}return i});const o=[];for(let a=0;a<t.length;a++)o[a]=a;this.writeMany(o,i)}}class e_{constructor(t,e,n,r=-1){this.tensors=t,this.elementShape=e,this.elementDtype=n,null!=t&&t.forEach(t=>{if(n!==t.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${t.dtype}`);Pa(e,t.shape,"TensorList shape mismatch: "),rn(t)}),this.idTensor=sr(0),this.maxNumElements=r,rn(this.idTensor)}get id(){return this.idTensor.id}copy(){return new e_([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{null!=t&&t.has(e.id)||e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,n=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Pa(t,this.elementShape,"TensorList shape mismatch: ");const r=Ba(this.elementShape,this.tensors,t);return en(()=>{const t=this.tensors.map(t=>kg(t,r));return Tv(t,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=Ba(this.elementShape,this.tensors,t),r=this.tensors.pop();return r.kept=!1,Pa(r.shape,t,"TensorList shape mismatch: "),kg(r,n)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(Pa(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");rn(t),this.tensors.push(t)}resize(t){if(0>t)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);const e=new e_([],this.elementShape,this.elementDtype,this.maxNumElements);e.tensors.length=t;for(let n=0;n<Math.min(this.tensors.length,t);++n)e.tensors[n]=this.tensors[n];return e}getItem(t,e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(0>t||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[t])throw new Error(`element at index ${t} is null.`);Pa(this.tensors[t].shape,e,"TensorList shape mismatch: ");const r=Ba(this.elementShape,this.tensors,e);return kg(this.tensors[t],r)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(0>t||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);Pa(this.elementShape,e.shape,"TensorList shape mismatch: "),rn(e),null!=this.tensors[t]&&(this.tensors[t].kept=!1),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);Pa(this.elementShape,n,"TensorList shape mismatch: "),t=t.slice(0,this.size());const r=Ba(this.elementShape,this.tensors,n);return 0===t.length?$e([],[0].concat(r)):en(()=>{const e=t.map(t=>kg(this.tensors[t],r));return Tv(e,0)})}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);Pa(this.elementShape,e,"TensorList shape mismatch: ");const n=Ba(this.elementShape,this.tensors,e);return 0===this.size()?$e([],[0].concat(n)):en(()=>{const t=this.tensors.map(t=>kg(t,n));return Sg(t,0)})}}class n_{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=sr(0),this.tensorMap=new Map,rn(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return sr(this.size(),"int32")}import(t,e){return cf(this,null,function*(){this.checkKeyAndValueTensor(t,e);const n=yield t.data();return this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),en(()=>{const t=Dv(e),r=n.length,s=t.length;F(r===s,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`);for(let e=0;r>e;e++){const r=n[e],s=t[e];rn(s),this.tensorMap.set(r,s)}return this.handle})})}find(t,e){return cf(this,null,function*(){this.checkKeyAndValueTensor(t,e);const n=yield t.data();return en(()=>{const t=[];for(let r=0;r<n.length;r++){const s=n[r],i=this.findWithDefault(s,e);t.push(i)}return Tv(t)})})}findWithDefault(t,e){const n=this.tensorMap.get(t);return null!=n?n:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}}class r_{constructor(t={},e={},n={},r={}){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this.it[0]}get currentContextIds(){return this.it}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this.it=t}contextIdforContexts(t){return t?t.map(t=>0===t.id&&0===t.iterationId?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this.it.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!this.contexts||1>=this.contexts.length)throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!this.contexts||0>=this.contexts.length)throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this.it.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}const s_=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],i_=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],o_=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];class a_{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this.ot={},this.SEPERATOR=",",this.ut={},this.ct={},this.intermediateTensors={},this.keepTensorForDebug=!1,this.ht=t.outputs,this.ft=t.inputs,this.dt=t.initNodes,this.yt=t.signature,this.ut=t.functions,null!=t.functions&&Object.keys(t.functions).forEach(e=>{this.ct[e]=new a_(t.functions[e],this)})}get weightIds(){return this.parent?this.parent.weightIds:this.bt}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this.ct}get weightMap(){return this.parent?this.parent.weightMap:this.ot}set weightMap(t){const e=Object.keys(t).map(e=>t[e].map(t=>t.id));this.bt=[].concat(...e),this.ot=t}set resourceManager(t){this.wt=t}get inputs(){return this.ft.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this.ht.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this.ft.map(t=>t.signatureKey||t.name)}get outputNodes(){return this.ht.map(t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this.ut).reduce((t,e)=>(t[e]=this.ut[e].signature,t),{})}getCompilationKey(t,e){const n=t.map(t=>t.name).sort(),r=e.map(t=>t.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(t,e){const n=Ga(t,e,this.weightMap,this.dt),{missingInputs:r,dynamicNode:s,syncInputs:i}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(r.length>0){const n=e.map(t=>t.name),s=Object.keys(t);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}return((t,e,n)=>{const{usedNodes:r,inputs:s}=n,i=[],o=Object.keys(s).map(t=>va(t)[0]).map(e=>t.nodes[e]),a=t.initNodes;o.forEach(t=>{r.has(t.name)&&i.push(t)}),t.weights.forEach(t=>{r.has(t.name)&&i.push(t)}),null!=a&&a.forEach(t=>{r.has(t.name)&&i.push(t)});const u=new Set,l=[];for(;i.length>0;){const t=i.pop();u.add(t.name),e[t.name]||l.push(t),t.children.forEach(t=>{!u.has(t.name)&&r.has(t.name)&&t.inputs.every(t=>u.has(t.name))&&i.push(t)})}return l})(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);const n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const r=n.map(t=>this.graph.nodes[va(t)[0]]),s=e.map(t=>va(t)[0]);let i=s.map(t=>this.graph.nodes[t]);this.resetIntermediateTensors(),0===i.length&&(i=this.ht);const o=this.getCompilationKey(r,i);let a=this.compiledMap.get(o);null==a&&(a=this.compile(t,i),this.compiledMap.set(o,a));const u={},l={};return en(()=>{const n=new r_(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(t).forEach(e=>{const[n,s]=va(e),i=[];i[s]=t[e],r[n]=i});const i=this.getFrozenTensorIds(r),o={};for(let t=0;t<a.length;t++){const e=a[t];if(!r[e.name]){const t=Ua(e,r,n,this.wt);if(yt(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.checkTensorForDisposal(e.name,e,r,n,i,s,o)}}return null==this.parent&&n.dispose(i),e.map(t=>ga(t,r,n))})}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map(e=>t[e]).map(t=>t.map(t=>t.id)));return new Set(e)}checkTensorForDisposal(t,e,n,r,s,i,o){"control"!==e.category&&-1===i.indexOf(t)&&(n[t].forEach(t=>{null!=t&&(o[t.id]=(o[t.id]||0)+e.children.length)}),e.inputs.forEach(t=>{if("control"!==t.category){const i=((t,e,n)=>e[xa(t,n.currentContextId)])(t.name,n,r);null!=i&&i.forEach(t=>{if(t&&!t.kept&&!s.has(t.id)){const n=o[t.id];if(1===n){if(this.keepTensorForDebug){const[n,s]=wa(e.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][s]=t}else t.dispose();delete o[t.id]}else null!=n&&o[t.id]--}})}}))}executeAsync(t,e){return cf(this,null,function*(){return this.xt(t,e)})}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach(t=>this.intermediateTensors[t].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach(t=>{this.tensorsMap[t].forEach(t=>{!t||t.kept||t.isDisposed||this.keepIds.has(t.id)||t.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const t in this.intermediateTensors)this.intermediateTensors[t].forEach(t=>t.dispose()),delete this.intermediateTensors[t]}xt(t,e){return cf(this,arguments,function*(t,e,n=!1,r={},s={}){n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));try{this.keepTensorForDebug=gt().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(JJ){}this.resetIntermediateTensors();const i=new r_(this.weightMap,r,s,this.functionExecutorMap);this.tensorsMap=yield this.executeWithControlFlow(t,i,e,n);const o=e.map(t=>ga(t,this.tensorsMap,i)),a=o.map(t=>t.id),u=Object.keys(t).map(e=>t[e].id);return this.keepIds=new Set([...a,...u,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&i.dispose(this.keepIds),o})}executeFunctionAsync(t,e,n){return cf(this,null,function*(){const r=t.reduce((t,e,n)=>(t[this.inputs[n].name]=e,t),{});return this.xt(r,this.outputNodes,!0,e,n)})}executeWithControlFlow(t,e,n,r){return cf(this,null,function*(){const r=Object.keys(t),s=r.map(t=>this.graph.nodes[va(t)[0]]),i=n.map(t=>va(t)[0]);let o=i.map(t=>this.graph.nodes[t]);0===o.length&&(o=this.ht);const{usedNodes:a,missingInputs:u,dynamicNode:l,syncInputs:c}=Ga(t,o,this.weightMap,this.dt),h=[...s,...this.graph.weights,...this.dt||[]].map(t=>({node:t,contexts:e.currentContext})),f=Object.assign({},this.weightMap);Object.keys(t).forEach(e=>{const[n,r]=va(e),s=[];s[r]=t[e],f[n]=s});const d={},p=this.getFrozenTensorIds(f),m={};for(;h.length>0;){const t=this.processStack(s,h,e,f,m,p,i,d,a);yield Promise.all(t)}const y=o.filter(t=>!qa(t)&&!ga(t.name,f,e)).map(t=>t.name);if(y.length>0){let t="";throw null!=l&&(t=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${c}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${r}]. Consider providing the following inputs: [${u}]. ${t}`)}return f})}processStack(t,e,n,r,s,i,o,a,u){const l=[];for(;e.length>0;){const t=e.pop();n.currentContext=t.contexts;let c="";if("Enter"===t.node.op&&ba("isConstant",t.node,r,n)&&([c]=wa(t.node.name,n)),null==r[t.node.name]){const h=Ua(t.node,r,n,this.wt);c||([c]=wa(t.node.name,n));const f=n.currentContext;yt(h)?l.push(h.then(l=>(r[c]=l,n.currentContext=f,this.checkTensorForDisposal(c,t.node,r,n,i,o,a),this.processChildNodes(t.node,e,n,r,s,u),l))):(r[c]=h,this.checkTensorForDisposal(c,t.node,r,n,i,o,a),this.processChildNodes(t.node,e,n,r,s,u))}else this.processChildNodes(t.node,e,n,r,s,u)}return l}processChildNodes(t,e,n,r,s,i){t.children.forEach(t=>{const[o]=wa(t.name,n);!s[o]&&i.has(t.name)&&("Merge"===t.op?t.inputNames.some(t=>!!ga(t,r,n))&&(s[o]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every(t=>!!ga(t,r,n))&&(s[o]=!0,e.push({contexts:n.currentContext,node:t})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(t=>t.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{const n=t[e],[r]=va(e),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const t=s.attrParams.shape.value;F(t.length===n.shape.length&&n.shape.every((e,n)=>-1===t[n]||t[n]===e),()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${t}], but was [${n.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&F(n.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(t){const e={};for(const n in t)null!=this.yt&&null!=this.yt.inputs&&null!=this.yt.inputs[n]?e[this.yt.inputs[n].name]=t[n]:e[n]=t[n];return e}checkInputs(t){const e=Object.keys(t).filter(t=>{const[e]=va(t);return null==this.graph.nodes[e]});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(t=>null!=this.yt&&null!=this.yt.outputs&&null!=this.yt.outputs[t]?this.yt.outputs[t].name:t,{})}checkOutputs(t){t.forEach(t=>{const[e]=va(t);if(!this.graph.nodes[e])throw new Error(`The output '${t}' is not found in the graph`)})}}class u_{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}class l_{constructor(t,e={},n=Vb){this.modelUrl=t,this.loadOptions=e,this.version="n/a",this.io=n,null==e&&(this.loadOptions={}),this.resourceManager=new u_}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(t,this.loadOptions);else{const e=this.io.getLoadHandlers(t,this.loadOptions);if(0===e.length)e.push(this.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=this.handler.load();return yt(t)?t.then(t=>this.loadSync(t)):this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let n=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const t=this.artifacts.userDefinedMetadata;null!=t.signature&&(n=t.signature),null!=t.structuredOutputKeys&&(this.structuredOutputKeys=t.structuredOutputKeys)}this.signature=n,this.version=`${e.versions.producer}.${e.versions.minConsumer}`;const r=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new a_(YT.Instance.transformGraph(e,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer&&null!=t.modelInitializer.node){const e=YT.Instance.transformGraph(t.modelInitializer);this.initializer=new a_(e),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}save(t,e){return cf(this,null,function*(){if("string"==typeof t){const e=this.io.getSaveHandlers(t);if(0===e.length)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Error(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)})}predict(t,e){const n=this.execute(t,this.outputNodes);if(this.structuredOutputKeys){const t={};return(n instanceof Ly?[n]:n).forEach((e,n)=>t[this.structuredOutputKeys[n]]=e),t}return n}normalizeInputs(t){if(!(t instanceof Ly||Array.isArray(t)))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce((e,n,r)=>(e[n]=t[r],e),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=this.executor.execute(t,e);return n.length>1?n:n[0]}executeAsync(t,e){return cf(this,null,function*(){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=yield this.executor.executeAsync(t,e);return n.length>1?n:n[0]})}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,n)=>(e[n]=[t[n]],e),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}const c_="3.21.0";class h_{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(1>t)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;0>t;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(0>t)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(0>t)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return 0>t&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class f_ extends h_{constructor(){super(f_.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let r=0;n>r;r++)e[r]=this.get(this.wrap(this.begin+r));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}f_.INITIAL_CAPACITY=32;class d_{toArray(){return cf(this,null,function*(){const t=[];let e=yield this.next();for(;!e.done;)t.push(e.value),e=yield this.next();return t})}toArrayForTest(){return cf(this,null,function*(){const t=this.prefetch(100),e=[];let n=yield t.next();for(;!n.done;)e.push(n.value),n=yield t.next();return e})}resolveFully(){return cf(this,null,function*(){let t=yield this.next();for(;!t.done;)t=yield this.next()})}resolveWhile(t){return cf(this,null,function*(){let e=yield this.next(),n=t(e.value);for(;!e.done&&n;)e=yield this.next(),n=t(e.value)})}handleErrors(t){return new $_(this,t)}filter(t){return new x_(this,t)}map(t){return new v_(this,t)}mapAsync(t){return new k_(this,t)}serialMapAsync(t){return new k_(this,t).serial()}flatmap(t){return new C_(this,t)}forEachAsync(t){return cf(this,null,function*(){return this.map(t).resolveFully()})}serialForEach(t){return cf(this,null,function*(){return this.serialMapAsync(t).resolveWhile(t=>!0===t)})}rowMajorBatch(t,e=!0){return new w_(this,t,e)}columnMajorBatch(t,e=!0,n=Za){return this.rowMajorBatch(t,e).map(t=>Ka(t,n))}concatenate(t,e){return new S_(nu([this,t]),e)}take(t){return 0>t||null==t?this:new g_(this,t)}skip(t){return 0>t||null==t?this:new b_(this,t)}prefetch(t){return new R_(this,t)}shuffle(t,e){return new A_(this,t,e)}serial(){return new y_(this)}}class p_ extends d_{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}next(){return cf(this,null,function*(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:(e=t,Ja(e,eu)),done:!1};var e})}}class m_ extends d_{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}next(){return cf(this,null,function*(){try{return this.nextFn()}catch(JJ){throw JJ.message=`Error thrown while iterating through a dataset: ${JJ.message}`,JJ}})}}class y_ extends d_{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}next(){return cf(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}serialNext(){return cf(this,null,function*(){return this.upstream.next()})}}class b_ extends d_{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}next(){return cf(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}serialNext(){return cf(this,null,function*(){for(;this.count++<this.maxCount;){const t=yield this.upstream.next();if(t.done)return t;nn(t.value)}return this.upstream.next()})}}class g_ extends d_{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}next(){return cf(this,null,function*(){return this.count++<this.maxCount?this.upstream.next():{value:null,done:!0}})}}class w_ extends d_{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}next(){return cf(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}serialNext(){return cf(this,null,function*(){const t=[];for(;t.length<this.batchSize;){const e=yield this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}})}}class x_ extends d_{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}next(){return cf(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}serialNext(){return cf(this,null,function*(){for(;;){const t=yield this.upstream.next();if(t.done||this.predicate(t.value))return t;nn(t.value)}})}}class v_ extends d_{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}next(){return cf(this,null,function*(){const t=yield this.upstream.next();if(t.done)return{value:null,done:!0};const e=ue(t.value),n=this.transform(t.value),r=ue(n);for(const s of e)ae(s,r)||s.dispose();return{value:n,done:!1}})}}class $_ extends d_{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}next(){return cf(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}serialNext(){return cf(this,null,function*(){for(;;)try{return yield this.upstream.next()}catch(JJ){if(!this.handler(JJ))return{value:null,done:!0}}})}}class k_ extends d_{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}next(){return cf(this,null,function*(){const t=yield this.upstream.next();if(t.done)return{value:null,done:!0};const e=ue(t.value),n=yield this.transform(t.value),r=ue(n);for(const s of e)ae(s,r)||s.dispose();return{value:n,done:!1}})}}class N_ extends d_{constructor(){super(),this.outputQueue=new f_,this.lastRead=Promise.resolve({value:null,done:!1})}next(){return cf(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}serialNext(){return cf(this,null,function*(){for(;0===this.outputQueue.length();)if(!(yield this.pump()))return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}})}}class C_ extends N_{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}pump(){return cf(this,null,function*(){const t=yield this.upstream.next();if(t.done)return!1;const e=ue(t.value),n=this.transform(t.value),r=ue(n);this.outputQueue.pushAll(n);for(const s of e)ae(s,r)||s.dispose();return!0})}}class S_ extends d_{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}next(){return cf(this,null,function*(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead})}readFromChain(t){return cf(this,null,function*(){if(yield t,null==this.iterator){const t=yield this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=yield this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e})}}var E_,T_;(T_=E_||(E_={}))[T_.FAIL=0]="FAIL",T_[T_.SHORTEST=1]="SHORTEST",T_[T_.LONGEST=2]="LONGEST";class __ extends d_{constructor(t,e=E_.FAIL){super(),this.iterators=t,this.mismatchMode=e,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}nextState(t){return cf(this,null,function*(){yield t;let e=0,n=0;const r=yield Qa(this.iterators,t=>t instanceof d_?{value:t.next().then(t=>(e++,t.done&&n++,t.value)),recurse:!1}:{value:null,recurse:!0});if(e===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case E_.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case E_.SHORTEST:return{value:null,done:!0};case E_.LONGEST:}return this.count++,{value:r,done:!1}})}next(){return cf(this,null,function*(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise})}}class R_ extends d_{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new h_(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class A_ extends R_{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=qx.alea(n||qt().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}next(){return cf(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}serialNext(){return cf(this,null,function*(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=yield this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}})}}class O_{constructor(){this.size=null}batch(t,e=!0){const n=this;let r;return F(t>0,()=>`batchSize needs to be positive, but it is\n      ${t}`),r=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),su(()=>cf(this,null,function*(){return(yield n.iterator()).columnMajorBatch(t,e,iu)}),r)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,su(()=>cf(this,null,function*(){return(yield e.iterator()).concatenate(yield t.iterator())}),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,su(()=>cf(this,null,function*(){return(yield e.iterator()).filter(e=>en(()=>t(e)))}),n)}forEachAsync(t){return cf(this,null,function*(){return(yield this.iterator()).forEachAsync(t)})}map(t){const e=this;return su(()=>cf(this,null,function*(){return(yield e.iterator()).map(e=>en(()=>t(e)))}),this.size)}mapAsync(t){const e=this;return su(()=>cf(this,null,function*(){return(yield e.iterator()).mapAsync(t)}),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return su(()=>cf(this,null,function*(){return(yield e.iterator()).prefetch(t)}),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null==this.size||void 0!==t&&t>=0?null:1/0,su(()=>cf(this,null,function*(){return n=ru(()=>cf(this,null,function*(){return{value:yield e.iterator(),done:!1}})).take(t),new S_(n,void 0);var n}),n)}skip(t){const e=this;let n;return n=null==this.size||0>t||this.size<t?null!=this.size&&(this.size<t||void 0===t||0>t)?0:null:this.size-t,su(()=>cf(this,null,function*(){return(yield e.iterator()).skip(t)}),n)}shuffle(t,e,n=!0){if(null==t||0>t)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=qx.alea(e||qt().toString());return su(()=>cf(this,null,function*(){let e=s.int32();return n&&(e+=s.int32()),(yield r.iterator()).shuffle(t,e.toString())}),this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null==this.size||this.size>t?null:this.size,su(()=>cf(this,null,function*(){return(yield e.iterator()).take(t)}),n)}toArray(){return cf(this,null,function*(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(yield this.iterator()).toArray()})}toArrayForTest(){return cf(this,null,function*(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(yield this.iterator()).toArrayForTest()})}}O_.MAX_BUFFER_SIZE=1e4;class I_ extends O_{constructor(t){super(),this.input=t}iterator(){return cf(this,null,function*(){return(yield this.input.iterator()).decodeUTF8().split("\n").map(t=>(t.endsWith("\r")&&(t=t.slice(0,-1)),t))})}}const F_='"',M_=Symbol("out"),D_=Symbol("field"),L_=Symbol("quote"),P_=Symbol("quoteafterquote"),V_=Symbol("quoteinquote");class B_ extends O_{constructor(t,e){super(),this.input=t,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new I_(t),e||(e={}),this.hasHeader=!1!==e.hasHeader,this.fullColumnNames=e.columnNames,this.columnConfigs=e.columnConfigs,this.configuredColumnsOnly=e.configuredColumnsOnly,e.delimWhitespace?(F(null==e.delimiter,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=e.delimiter?e.delimiter:","}columnNames(){return cf(this,null,function*(){return this.columnNamesValidated||(yield this.setColumnNames()),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames})}setColumnNames(){return cf(this,null,function*(){const t=yield this.maybeReadHeaderLine();if(!this.fullColumnNames&&!t)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&t&&F(t.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+t.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=t);const e=this.fullColumnNames.reduce((t,e)=>(t[e]=t[e]+1||1,t),{}),n=Object.keys(e).filter(t=>e[t]>1);if(F(0===n.length,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs)for(const r of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(r))throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0})}maybeReadHeaderLine(){return cf(this,null,function*(){if(this.hasHeader){const t=yield this.base.iterator(),e=yield t.next();if(e.done)throw new Error("No data was found for CSV parsing.");const n=e.value;return this.parseRow(n,!1)}return null})}iterator(){return cf(this,null,function*(){this.columnNamesValidated||(yield this.setColumnNames());let t=yield this.base.iterator();return this.hasHeader&&(t=t.skip(1)),t.map(t=>this.makeDataElement(t))})}makeDataElement(t){const e=this.parseRow(t),n={},r={};for(let s=0;s<this.fullColumnNames.length;s++){const i=this.fullColumnNames[s],o=this.columnConfigs?this.columnConfigs[i]:null;if(!this.configuredColumnsOnly||o){const a=e[s];let u=null;if(""===a)if(o&&void 0!==o.default)u=o.default;else{if(o&&(o.required||o.isLabel))throw new Error(`Required column ${i} is empty in this line: ${t}`);u=void 0}else{const t=Number(a);if(isNaN(t))u=o&&"bool"===o.dtype?this.getBoolean(a):a;else if(o&&o.dtype)switch(o.dtype){case"float32":default:u=t;break;case"int32":u=Math.floor(t);break;case"bool":u=this.getBoolean(a)}else u=t}o&&o.isLabel?r[i]=u:n[i]=u}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(t){return"1"===t||"true"===t.toLowerCase()?1:0}parseRow(t,e=!0){const n=[];let r=0;const s=t.length;let i=M_;for(let o=0;s>o;o++)switch(i){case M_:switch(t.charAt(o)){case F_:r=o+1,i=L_;break;case this.delimiter:if(r=o+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),i=M_;break;default:i=D_,r=o}break;case D_:t.charAt(o)===this.delimiter&&(n.push(t.substring(r,o)),i=M_,r=o+1);break;case L_:t.charAt(o)===F_&&(i=P_);break;case P_:switch(t.charAt(o)){case this.delimiter:n.push(t.substring(r,o-1)),i=M_,r=o+1;break;case F_:i=L_;break;default:i=V_}break;case V_:t.charAt(o)===F_&&(i=L_)}if(i===P_?n.push(t.substring(r,s-1)):n.push(t.substring(r)),e&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class z_ extends d_{constructor(t){super(),this.microphoneConfig=t,this.isClosed=!1,this.fftSize=t.fftSize||1024;const e=Math.log2(this.fftSize);if(0>this.fftSize||4>e||e>14||!Number.isInteger(e))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=t.numFramesPerSpectrogram||43,this.sampleRateHz=t.sampleRateHz,this.columnTruncateLength=t.columnTruncateLength||this.fftSize,this.audioTrackConstraints=t.audioTrackConstraints,this.smoothingTimeConstant=t.smoothingTimeConstant||0,this.includeSpectrogram=!1!==t.includeSpectrogram,this.includeWaveform=!0===t.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static create(){return cf(this,arguments,function*(t={}){if(!gt().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");const e=new z_(t);return yield e.start(),e})}start(){return cf(this,null,function*(){try{this.stream=yield navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(JJ){throw new Error(`Error thrown while initializing video stream: ${JJ.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const t=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new t,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const e=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,e.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)})}next(){return cf(this,null,function*(){if(this.isClosed)return{value:null,done:!0};let t,e;const n=yield this.getAudioData();if(this.includeSpectrogram){const e=this.flattenQueue(n.freqDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const t=this.flattenQueue(n.timeDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:t,waveform:e},done:!1}})}capture(){return cf(this,null,function*(){return(yield this.next()).value})}getAudioData(){return cf(this,null,function*(){const t=[],e=[];let n=0;return new Promise(r=>{const s=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:t,timeDataQueue:e}),t.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),e.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),r({freqDataQueue:t,timeDataQueue:e}))},this.fftSize/this.sampleRateHz*1e3)})})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(t){const e=t[0].length,n=new Float32Array(t.length*e);return t.forEach((t,r)=>n.set(t,r*e)),n}getTensorFromAudioDataArray(t,e){const n=new Float32Array(P(e));return n.set(t,n.length-t.length),$e(n,e)}}class W_ extends d_{constructor(t,e){if(super(),this.webcamVideoElement=t,this.webcamConfig=e,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=mr([0],"int32"),this.webcamConfig.centerCrop){const t=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,e=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-t)/2,r=(1-e)/2,s=n+t,i=e+r;this.cropBox=yr([r,n,i,s],[1,4])}else this.cropBox=yr([0,0,1,1],[1,4])}summary(){return"webcam"}static create(t){return cf(this,arguments,function*(t,e={}){if(!gt().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!t){if(t=document.createElement("video"),!e.resizeWidth||!e.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");t.width=e.resizeWidth,t.height=e.resizeHeight}const n=new W_(t,e);return yield n.start(),n})}start(){return cf(this,null,function*(){this.webcamConfig.facingMode&&F("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=yield navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(JJ){throw JJ.message=`Error thrown while initializing video stream: ${JJ.message}`,JJ}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(t){this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(t=>{this.webcamVideoElement.onloadedmetadata=()=>{t()}})})}next(){return cf(this,null,function*(){if(this.isClosed)return{value:null,done:!0};let t;try{t=Kb(this.webcamVideoElement)}catch(JJ){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(JJ)}`)}if(!this.resize)return{value:t,done:!1};try{return{value:this.cropAndResizeFrame(t),done:!1}}catch(JJ){throw new Error(`Error thrown cropping the video: ${JJ.message}`)}finally{t.dispose()}})}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(t){return en(()=>{const e=Nw(Rb(t,"float32"),0);let n;n=L$.cropAndResize(e,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return kg(n,r.slice(1))})}capture(){return cf(this,null,function*(){return(yield this.next()).value})}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class j_{}class U_ extends d_{split(t){return new G_(this,t)}}class G_ extends U_{constructor(t,e){super(),this.upstream=t,this.impl=new q_(t,e)}summary(){return this.impl.summary()}next(){return cf(this,null,function*(){return this.impl.next()})}}class q_ extends N_{constructor(t,e){super(),this.upstream=t,this.separator=e,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}pump(){return cf(this,null,function*(){const t=yield this.upstream.next();if(t.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const e=t.value.split(this.separator);e[0]=this.carryover+e[0];for(const n of e.slice(0,-1))this.outputQueue.push(n);return this.carryover=e[e.length-1],!0})}}class H_ extends d_{decodeUTF8(){return new X_(this)}}class X_ extends U_{constructor(t){super(),this.upstream=t,this.impl=new J_(t)}summary(){return this.impl.summary()}next(){return cf(this,null,function*(){return this.impl.next()})}}class J_ extends N_{constructor(t){if(super(),this.upstream=t,gt().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:t}=require("string_decoder");this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}pump(){return cf(this,null,function*(){const t=yield this.upstream.next();let e,n;return!t.done&&(e=t.value,n=gt().get("IS_BROWSER")?this.decoder.decode(e,{stream:!0}):this.decoder.write(Buffer.from(e.buffer)),this.outputQueue.push(n),!0)})}}class K_ extends H_{constructor(t,e={}){super(),this.file=t,this.options=e,F(t instanceof Uint8Array||!!gt().get("IS_BROWSER")&&(t instanceof File||t instanceof Blob),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=e.offset||0,this.chunkSize=e.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}next(){return cf(this,null,function*(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const t=new Promise((t,e)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let s=r.result;if(s instanceof ArrayBuffer&&(s=new Uint8Array(s)),!(s instanceof Uint8Array))return e(new TypeError("FileReader returned unknown type."));t(s)},r.onabort=t=>e(new Error("Aborted")),r.onerror=t=>e(new Error(t.type));const s=this.file.slice(this.offset,n);r.readAsArrayBuffer(s)}this.offset=n});return{value:yield t,done:!1}})}}class Y_ extends j_{constructor(t,e={}){super(),this.input=t,this.options=e}iterator(){return cf(this,null,function*(){if(ou(this.input)&&gt().get("IS_NODE")){const t=require("fs");this.input=t.readFileSync(this.input.slice(7))}return new K_(this.input,this.options)})}}class Z_ extends j_{constructor(t,e={}){super(),this.url=t,this.fileOptions=e}iterator(){return cf(this,null,function*(){return ou(this.url)?new Y_(this.url,this.fileOptions).iterator():function(t){return cf(this,arguments,function*(t,e={},n){let r,s;var i;"string"==typeof t?r=t:(r=t.url,s={method:(i=t).method,headers:i.headers,body:i.body,mode:i.mode,credentials:i.credentials,cache:i.cache,redirect:i.redirect,referrer:i.referrer,integrity:i.integrity});const o=yield Ht(r,s);if(o.ok){const t=new Uint8Array(yield o.arrayBuffer());return new K_(t,e)}throw new Error(o.statusText)})}(this.url,this.fileOptions)})}}const Q_="3.21.0",tR=Object.freeze(Object.defineProperty({__proto__:null,CSVDataset:B_,Dataset:O_,FileDataSource:Y_,TextLineDataset:I_,URLDataSource:Z_,array(t){return su(()=>cf(this,null,function*(){return nu(t)}),t.length)},csv(t,e={}){return new B_(new Z_(t),e)},func(t){const e=ru(t);return su(()=>cf(this,null,function*(){return e}))},generator(t){return su(()=>cf(this,null,function*(){const e=yield t();return ru(()=>e.next())}))},microphone(t){return cf(this,null,function*(){return z_.create(t)})},version_data:Q_,webcam(t,e){return cf(this,null,function*(){return W_.create(t,e)})},zip(t){if(!tu(t))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(t))for(let n=0;n<t.length;n++)e=null==e?t[n].size:Math.min(e,t[n].size);else if(t instanceof Object)for(const n in t)e=null==e?t[n].size:Math.min(e,t[n].size);return su(()=>cf(this,null,function*(){return((t,e=E_.FAIL)=>new __(t,e))(yield Qa(t,t=>{if(t instanceof O_)return{value:t.iterator(),recurse:!1};if(tu(t))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")}),E_.SHORTEST)}),e)}},Symbol.toStringTag,{value:"Module"})),eR=$r;class nR extends Hf{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new qf(this,Qe())}nextDataId(){return nR.nextDataId++}write(t,e,n){this.firstUse&&(this.firstUse=!1,gt().get("IS_NODE")&&vt());const r={id:this.nextDataId()};return this.data.set(r,{values:t,dtype:n,refCount:1}),r}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&et(n[0])){const s=n.map(t=>Xt(t));r=this.write(s,t,e)}else r=this.write(n,t,e);return{dataId:r,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){this.data.get(t).refCount++}decRef(t){this.data.has(t)&&this.data.get(t).refCount--}move(t,e,n,r,s){this.data.set(t,{values:e,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}read(t){return cf(this,null,function*(){return this.readSync(t)})}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);return"complex64"===e?Qr(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);if("string"===t.dtype)try{const n=e.map(t=>Jt(t));return We(t.shape,t.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return We(t.shape,t.dtype,e)}makeOutput(t,e,n){return Qe().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,t),this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(t);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}time(t){return cf(this,null,function*(){const e=qt();return t(),{kernelMs:qt()-e}})}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){au([t],"where");const e=this.readSync(t.dataId);return eR(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}nR.nextDataId=0;const rR={kernelName:Zf,backendName:"cpu",kernelFunc(t){const{x:e}=t.inputs,n=t.backend;au(e,"abs");let r=new Float32Array(P(e.shape));return r=uu(n.data.get(e.dataId).values),n.makeOutput(r,e.shape,e.dtype)}},sR={kernelName:Nd,backendName:"cpu",kernelFunc:cu},iR={kernelName:fp,backendName:"cpu",kernelFunc:fu},oR={kernelName:im,backendName:"cpu",kernelFunc:du},aR={kernelName:vd,backendName:"cpu",kernelFunc:mu},uR=lu((t,e)=>t+e),lR=bu((t,e,n,r)=>({real:t+n,imag:e+r})),cR=yu(ed,uR,lR),hR={kernelName:ed,backendName:"cpu",kernelFunc:cR},fR=xu(t=>Math.ceil(t)),dR=$u($d,fR),pR={kernelName:$d,backendName:"cpu",kernelFunc:dR},mR=lu((t,e)=>t===e?1:0),yR=yu(Zd,mR,null,"bool"),bR={kernelName:Zd,backendName:"cpu",kernelFunc:yR},gR=xu(t=>Math.exp(t)),wR=$u(Qd,gR,"float32"),xR={kernelName:Qd,backendName:"cpu",kernelFunc:wR},vR=xu(t=>Math.expm1(t)),$R=$u(ep,vR),kR={kernelName:ep,backendName:"cpu",kernelFunc:$R},NR=xu(t=>Math.floor(t)),CR=$u(ip,NR),SR={kernelName:ip,backendName:"cpu",kernelFunc:CR},ER=lu((t,e)=>t>e?1:0),TR=yu(cp,ER,null,"bool"),_R={kernelName:cp,backendName:"cpu",kernelFunc:TR},RR=lu((t,e)=>e>t?0:1),AR=yu(hp,RR,null,"bool"),OR={kernelName:hp,backendName:"cpu",kernelFunc:AR},IR=lu((t,e)=>e>t?1:0),FR=yu(wp,IR,null,"bool"),MR={kernelName:wp,backendName:"cpu",kernelFunc:FR},DR=lu((t,e)=>t>e?0:1),LR=yu(xp,DR,null,"bool"),PR={kernelName:xp,backendName:"cpu",kernelFunc:LR},VR=xu(t=>Math.log(t)),BR=$u($p,VR),zR={kernelName:$p,backendName:"cpu",kernelFunc:BR},WR=lu((t,e)=>Math.max(t,e)),jR=yu(Ap,WR),UR={kernelName:Ap,backendName:"cpu",kernelFunc:jR},GR=lu((t,e)=>Math.min(t,e)),qR=yu(Vp,GR),HR={kernelName:Vp,backendName:"cpu",kernelFunc:qR},XR=lu((t,e)=>t*e),JR=bu((t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n})),KR=yu(jp,XR,JR),YR={kernelName:jp,backendName:"cpu",kernelFunc:KR},ZR={kernelName:Up,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n}=t,{x:r}=e;au(r,"neg");const s=n.data.get(r.dataId).values,[i,o]=Tu(s,r.shape,r.dtype);return n.makeTensorInfo(o,r.dtype,i)}},QR=lu((t,e)=>t!==e?1:0),tA=yu(Gp,QR,null,"bool"),eA={kernelName:Gp,backendName:"cpu",kernelFunc:tA},nA={kernelName:Jm,backendName:"cpu",kernelFunc:Ru},rA={kernelName:em,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r;au(s,"prod");const a=s.shape.length,u=G(i,s.shape),l=er(u,a);let c=u,h=s;const f=[];null!=l&&(h=Ru({inputs:{x:s},backend:n,attrs:{perm:l}}),f.push(h),c=rr(c.length,a));const d=n.data.get(h.dataId).values,{outVals:p,outShape:m,outDtype:y}=Au(h.shape,h.dtype,d,c);let b=m;return o&&(b=Qn(m,u)),f.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(b,y,p)}};var sA=Q$;class iA{constructor(t,e,n,r,s,i,o,a,u,l){this.shape=t,this.shapeShape=e,this.values=n,this.valuesShape=r,this.valuesDType=s,this.defaultValue=i,this.defaultValueShape=o,this.rowPartitionValues=a,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=jr(l),this.raggedRank=Ur(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===sA.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===sA.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case sA.VALUE_ROWIDS:return iA.getMaxWidthValueRowID(e);case sA.ROW_SPLITS:return iA.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${sA[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){const e=t.length;if(0===e||1===e)return 0;let n=0;for(let r=0;e-1>r;++r){const e=t[r+1]-t[r];e>n&&(n=e)}return n}static getMaxWidthValueRowID(t){const e=t.length;if(0===e)return 0;let n=0,r=t[0],s=0;for(let i=1;e>i;++i){const e=t[i];e!==r&&(r=e,s=Math.max(i-n,s),n=i)}return Math.max(e-n,s)}tensorShapeFromTensor(t,e,n=!0){if(0===e.length){if(-1===t[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Mu(t,n)}calculateOutputSize(t){const e=this.valuesShape;Gr(this.defaultValueShape,e);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=Wr(this.raggedRank,n,e);0>r[0]&&(r[0]=t);for(let s=1;s<=this.raggedRank;++s)0>r[s]&&(r[s]=this.getMaxWidth(s));return r}calculateFirstParentOutputIndex(t,e,n){const r=Math.min(t,n),s=[];let i=0;for(let o=0;r>o;++o,i+=e)s.push(i);for(let o=r;t>o;++o)s.push(-1);return F(s.length===t,()=>"Final length of result must be equal to firstDimension."),s}calculateOutputIndexRowSplit(t,e,n,r){const s=t.length,i=[];for(let o=0;s-1>o;++o){const s=t[o+1]-t[o];let a=Math.min(r,s),u=e[o];-1===u&&(a=0);for(let t=0;a>t;++t)i.push(u),u+=n;for(let t=0;s-a>t;++t)i.push(-1)}if(s>0&&i.length!==t[s-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(t,e,n,r){const s=t.length,i=[];if(0===s)return[];let o=0,a=t[0];if(a>=e.length)throw new Error(`Got currentValueRowId=${a}, which is not less than ${e.length}`);let u=e[a];i.push(u);for(let l=1;s>l;++l){const s=t[l];if(s===a)0>u||(++o,r>o?u+=n:u=-1);else{if(o=0,a=s,s>=e.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${e.length}`);u=e[s]}i.push(u)}if(i.length!==t.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(t,e,n,r){const s=this.getRowPartitionTensor(t),i=this.getRowPartitionTypeByDimension(t);switch(i){case sA.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,e,n,r);case sA.ROW_SPLITS:if(s.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(s,e,n,r);default:throw new Error(`Unsupported partition type: ${sA[i]}`)}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case sA.FIRST_DIM_SIZE:return t[0];case sA.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case sA.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${sA[e]}`)}}compute(){if(0>=this.rowPartitionValues[0].length)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),e=this.calculateOutputSize(t),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let i=n.length-2;i>=0;--i)n[i]=n[i+1]*e[i+1];const r=Mu(e,!1),s=X(this.valuesDType,P(r));if(n[0]*e[0]>0){let i=this.calculateFirstParentOutputIndex(t,n[0],e[0]);for(let t=1;t<=this.raggedRank;++t)i=this.calculateOutputIndex(t-1,i,n[t],e[t]);this.setOutput(this.raggedRank,i,s,r)}return[r,s]}setOutput(t,e,n,r){if(0===n.length)return;const s=this.values,i=n;let o=r.slice();o=o.slice(t+1);const a=P(o),u=e.length;let l=this.defaultValue;if(l.length!==a&&1!==l.length){const t=this.defaultValueShape;en(()=>{const e=kg(l,t),n=Pg(e,o);l=n.dataSync()})}let c=0,h=0,f=0;for(let d=0;u>=d;++d){let t=u>d?e[d]:-1;if(t!==f){if(f>h){const t=s.subarray(c*a);Fu(i.subarray(h*a),t,(f-h)*a)}if(d>=u){const e=n.length;t=Math.floor(e/a)}if(t>f)if(1===this.defaultValue.length)i.subarray(f*a,t*a).fill(this.defaultValue[0]),f=t;else for(;t>f;)Fu(i.slice(f*a),l,a),++f;0>t?(c=d+1,h=f):(c=d,h=f,f=h+1)}else++f}}}const oA=xu(t=>1/Math.sqrt(t)),aA=$u(ym,oA),uA={kernelName:ym,backendName:"cpu",kernelFunc:aA},lA=xu(t=>1/(1+Math.exp(-t))),cA=vu(Cm,t=>1/(1+Math.exp(-t))),hA={kernelName:Cm,backendName:"cpu",kernelFunc:cA},fA={kernelName:vm,backendName:"cpu",kernelFunc:Bu},dA=xu(t=>Math.sqrt(t)),pA=vu(Em,t=>Math.sqrt(t)),mA={kernelName:Em,backendName:"cpu",kernelFunc:pA},yA=lu((t,e)=>{const n=t-e;return n*n}),bA=yu(Lm,yA),gA={kernelName:Lm,backendName:"cpu",kernelFunc:bA};class wA{constructor(t,e,n,r,s,i){this.separator=Xt(t),this.nGramWidths=e,this.leftPad=Xt(n),this.rightPad=Xt(r),this.padWidth=s,this.preserveShort=i}getPadWidth(t){return Math.min(0>this.padWidth?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const n=this.getPadWidth(e);return Math.max(0,t+2*n-e+1)}createNGrams(t,e,n,r,s,i){for(let o=0;s>o;++o){const a=this.getPadWidth(i),u=Math.max(0,a-o),l=Math.max(0,a-(s-(o+1))),c=i-(u+l),h=e+(u>0?0:o-a);let f=0;f+=u*this.leftPad.length;for(let e=0;c>e;++e)f+=t[h+e].length;f+=l*this.rightPad.length,f+=(u+l+c-1)*this.separator.length,n[r+o]=new Uint8Array(f);const d=n[r+o];let p=0;const m=t=>t.forEach(t=>d[p++]=t);for(let t=0;u>t;++t)m(this.leftPad),m(this.separator);for(let e=0;c-1>e;++e)m(t[h+e]),m(this.separator);if(c>0){m(t[h+c-1]);for(let t=0;l>t;++t)m(this.separator),m(this.rightPad)}else{for(let t=0;l-1>t;++t)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(t,e){const n=t.length,r=e.length;if(r>0){let t=e[0];if(0!==t)throw new Error(`First split value must be 0, got ${t}`);for(let s=1;r>s;++s){let r=e[s]>=t;if(r=r&&e[s]<=n,!r)throw new Error(`Invalid split value ${e[s]}, must be in [${t}, ${n}]`);t=e[s]}if(t!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${t}`)}const s=r-1,i=X("int32",r);if(0===n||0===r){const t=new Array(n);for(let e=0;s>=e;++e)i[e]=0;return[t,i]}i[0]=0;for(let a=1;s>=a;++a){const t=e[a]-e[a-1];let n=0;this.nGramWidths.forEach(e=>{n+=this.getNumNGrams(t,e)}),this.preserveShort&&t>0&&0===n&&(n=1),i[a]=i[a-1]+n}const o=new Array(i[s]);for(let a=0;s>a;++a){const n=e[a];let r=i[a];if(this.nGramWidths.forEach(s=>{const i=e[a+1]-e[a],u=this.getNumNGrams(i,s);this.createNGrams(t,n,o,r,u,s),r+=u}),this.preserveShort&&r===i[a]){const s=e[a+1]-e[a];if(0===s)continue;const i=s+2*this.padWidth,u=1;this.createNGrams(t,n,o,r,u,i)}}return[o,i]}}const xA=lu((t,e)=>t-e),vA=bu((t,e,n,r)=>({real:t-n,imag:e-r})),$A=yu(jm,xA,vA),kA={kernelName:jm,backendName:"cpu",kernelFunc:$A},NA=(t,e)=>{const n=e.value-t.value;return 0===n?t.index-e.index:n},CA=Object.freeze(Object.defineProperty({__proto__:null,addImpl:uR,bincountImpl:gu,bincountReduceImpl:wu,castImpl:pu,ceilImpl:fR,concatImpl:ku,equalImpl:mR,expImpl:gR,expm1Impl:vR,floorImpl:NR,gatherNdImpl:Nu,gatherV2Impl:Cu,greaterEqualImpl:RR,greaterImpl:ER,lessEqualImpl:DR,lessImpl:IR,linSpaceImpl:Su,logImpl:VR,maxImpl:Eu,maximumImpl:WR,minimumImpl:GR,multiplyImpl:XR,negImpl:Tu,notEqualImpl:QR,prodImpl:Au,raggedGatherImpl:Iu,raggedTensorToTensorImpl:Du,rangeImpl:Lu,rsqrtImpl:oA,scatterImpl:Pu,sigmoidImpl:lA,simpleAbsImpl:uu,sliceImpl:Vu,sparseFillEmptyRowsImpl:zu,sparseReshapeImpl:Wu,sparseSegmentReductionImpl:ju,sqrtImpl:dA,squaredDifferenceImpl:yA,stridedSliceImpl:Uu,stringNGramsImpl:Gu,stringSplitImpl:Hu,stringToHashBucketFastImpl:Xu,subImpl:xA,tileImpl:Ju,topKImpl:Yu,transposeImpl:_u,uniqueImpl:Zu},Symbol.toStringTag,{value:"Module"}));sn("cpu",()=>new nR,1);const SA=vu(Jd,t=>0>t?Math.exp(t)-1:t),EA={kernelName:Jd,backendName:"cpu",kernelFunc:SA},TA={kernelName:gp,backendName:"cpu",kernelFunc:Qu},_A=lu((t,e)=>0>t?e*t:t),RA={kernelName:tm,backendName:"cpu",kernelFunc:tl},AA=vu(am,t=>Math.max(0,t)),OA={kernelName:am,backendName:"cpu",kernelFunc:AA},IA=vu(dm,t=>Math.min(Math.max(0,t),6)),FA={kernelName:dm,backendName:"cpu",kernelFunc:IA},MA={kernelName:um,backendName:"cpu",kernelFunc:nl},DA={kernelName:yd,backendName:"cpu",kernelFunc:rl},LA={kernelName:ry,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:i,bias:o,preluActivationWeights:a}=e,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;let f,d,p;const m=[];f=rl({inputs:{a:s,b:i},attrs:{transposeA:u,transposeB:l},backend:n}),o&&(d=cR({inputs:{a:f,b:o},backend:n}),m.push(f),f=d),c&&(p=el(n,f,c,a,h),m.push(f),f=p);for(const y of m)n.disposeIntermediateTensorInfo(y);return f}},PA=vu(Qf,t=>Math.acos(t)),VA={kernelName:Qf,backendName:"cpu",kernelFunc:PA},BA=vu(td,t=>Math.acosh(t)),zA={kernelName:td,backendName:"cpu",kernelFunc:BA},WA={kernelName:nd,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n}=t,r=e;au(e,"addN");const s=r.map(t=>n.data.get(t.dataId).values),i=We(r[0].shape,r[0].dtype),o=i.values;for(let a=0;a<r.length;a++){const t=s[a];for(let e=0;e<o.length;e++)o[e]+=t[e]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}},jA={kernelName:rd,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r;au(s,"all");const a=G(i,s.shape);let u=a;const l=er(u,s.shape.length);let c=s;null!=l&&(c=Ru({inputs:{x:s},backend:n,attrs:{perm:l}}),u=rr(u.length,s.shape.length)),tr("all",u,c.shape.length);const[h,f]=Zn(c.shape,u),d=P(f),p=ht(P(h),c.dtype),m=n.data.get(c.dataId).values;for(let b=0;b<p.length;++b){const t=b*d;let e=m[t];for(let n=0;d>n;++n){const r=m[t+n];e=e&&r}p[b]=e}null!=l&&n.disposeIntermediateTensorInfo(c);const y=n.makeTensorInfo(h,c.dtype,p);if(o){const t=nl({inputs:{x:y},backend:n,attrs:{shape:Qn(h,a)}});return n.disposeIntermediateTensorInfo(y),t}return y}},UA={kernelName:sd,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r;au(s,"any");const a=G(i,s.shape);let u=a;const l=er(u,s.shape.length);let c=s;null!=l&&(c=Ru({inputs:{x:s},backend:n,attrs:{perm:l}}),u=rr(u.length,s.shape.length)),tr("any",u,c.shape.length);const[h,f]=Zn(c.shape,u),d=P(f),p=ht(P(h),c.dtype),m=n.data.get(c.dataId).values;for(let b=0;b<p.length;++b){const t=b*d;let e=m[t];for(let n=0;d>n;++n){const r=m[t+n];e=e||r}p[b]=e}null!=l&&n.disposeIntermediateTensorInfo(c);const y=n.makeTensorInfo(h,c.dtype,p);if(o){const t=nl({inputs:{x:y},backend:n,attrs:{shape:Qn(h,a)}});return n.disposeIntermediateTensorInfo(y),t}return y}},GA={kernelName:id,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i}=r;au(s,"argMax");let o=G(i,s.shape);const a=er(o,s.shape.length);let u=s;const l=[];null!=a&&(u=Ru({inputs:{x:s},backend:n,attrs:{perm:a}}),l.push(u),o=rr(o.length,u.shape.length)),o=[o[0]],tr("argMax",o,u.shape.length);const[c,h]=Zn(u.shape,o),f=ht(P(c),"int32"),d=P(h),p=n.data.get(u.dataId).values;for(let m=0;m<f.length;++m){const t=m*d;let e=p[t],n=0;for(let r=0;d>r;++r){const s=p[t+r];s>e&&(e=s,n=r)}f[m]=n}return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(c,"int32",f)}},qA={kernelName:od,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i}=r;au(s,"argMin");let o=G(i,s.shape);const a=er(o,s.shape.length);let u=s;const l=[];null!=a&&(u=Ru({inputs:{x:s},backend:n,attrs:{perm:a}}),l.push(u),o=rr(o.length,u.shape.length)),o=[o[0]],tr("argMin",o,u.shape.length);const[c,h]=Zn(u.shape,o),f=ht(P(c),"int32"),d=P(h),p=n.data.get(u.dataId).values;for(let m=0;m<f.length;++m){const t=m*d;let e=p[t],n=0;for(let r=0;d>r;++r){const s=p[t+r];e>s&&(e=s,n=r)}f[m]=n}return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(c,"int32",f)}},HA=vu(ad,t=>Math.asin(t)),XA={kernelName:ad,backendName:"cpu",kernelFunc:HA},JA=vu(ud,t=>Math.asinh(t)),KA={kernelName:ud,backendName:"cpu",kernelFunc:JA},YA=vu(ld,t=>Math.atan(t)),ZA={kernelName:ld,backendName:"cpu",kernelFunc:YA},QA=lu((t,e)=>Math.atan2(t,e)),tO=yu(hd,QA),eO={kernelName:hd,backendName:"cpu",kernelFunc:tO},nO=vu(cd,t=>Math.atanh(t)),rO={kernelName:cd,backendName:"cpu",kernelFunc:nO},sO={kernelName:fd,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;au(s,"avgPool");const{filterSize:i,strides:o,pad:a,dimRoundingMode:u}=r;F(qn(o,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const l=Dn(s.shape,i,o,1,a,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&V(l.inShape,l.outShape))c=fu({inputs:{x:s},backend:n});else{const t=n.data.get(s.dataId).values,e=at(s.shape),r=sl(t,s.shape,s.dtype,e,l,"avg");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}},iO={kernelName:pd,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:i,strides:o,pad:a,dimRoundingMode:u,dataFormat:l}=r;au(s,"avgPool3d");const c=Ln(s.shape,i,o,1,a,u,l),h=ol(n.data.get(s.dataId).values,s.shape,s.dtype,at(s.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},oO={kernelName:md,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,{filterSize:o,strides:a,pad:u,dimRoundingMode:l}=r;au([s,i],"avgPool3DGrad");const c=Ln(i.shape,o,a,1,u,l),h=c.strideDepth,f=c.strideHeight,d=c.strideWidth,p=c.filterDepth,m=c.filterHeight,y=c.filterWidth,b=c.dilationDepth,g=c.dilationHeight,w=c.dilationWidth,x=c.effectiveFilterDepth,v=c.effectiveFilterHeight,$=c.effectiveFilterWidth,k=x-1-c.padInfo.front,N=$-1-c.padInfo.left,C=v-1-c.padInfo.top,S=We(i.shape,"float32"),E=1/(p*m*y),T=n.bufferSync(s);for(let _=0;_<c.batchSize;++_)for(let t=0;t<c.inChannels;++t)for(let e=0;e<c.inDepth;++e)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=e-k,i=n-C,o=r-N;let a=0;for(let e=0;x>e;e+=b){const n=(s+e)/h;if(n>=0&&n<c.outDepth&&Math.floor(n)===n)for(let e=0;v>e;e+=g){const r=(i+e)/f;if(r>=0&&r<c.outHeight&&Math.floor(r)===r)for(let e=0;$>e;e+=w){const s=(o+e)/d;s>=0&&s<c.outWidth&&Math.floor(s)===s&&(a+=T.get(_,n,r,s,t))}}}S.set(a*E,_,e,n,r,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},aO={kernelName:dd,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,o=i;au([s,i],"avgPoolGrad");const{filterSize:a,strides:u,pad:l}=r,c=Dn(o.shape,a,u,1,l),h=c.strideHeight,f=c.strideWidth,d=c.filterHeight,p=c.filterWidth,m=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterHeight,g=c.effectiveFilterWidth,w=g-1-c.padInfo.left,x=b-1-c.padInfo.top,v=We(o.shape,"float32"),$=1/(d*p),k=n.data.get(s.dataId).values,N=We(s.shape,"float32",k);for(let C=0;C<c.batchSize;++C)for(let t=0;t<c.inChannels;++t)for(let e=0;e<c.inHeight;++e)for(let n=0;n<c.inWidth;++n){const r=e-x,s=n-w;let i=0;for(let e=0;b>e;e+=m){const n=(r+e)/h;if(n>=0&&n<c.outHeight&&Math.floor(n)===n)for(let e=0;g>e;e+=y){const r=(s+e)/f;r>=0&&r<c.outWidth&&Math.floor(r)===r&&(i+=N.get(C,n,r,t))}}v.set(i*$,C,e,n,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},uO={kernelName:ap,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,scale:i,offset:o,mean:a,variance:u}=e;F(a.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),F(null==o||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),F(null==i||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),au([s,a,u,i,o],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,f=n.data.get(u.dataId).values,d=i?n.data.get(i.dataId).values:new Float32Array([1]),p=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),y=p.length,b=d.length,g=f.length,w=h.length;let x=0,v=0,$=0,k=0;for(let N=0;N<c.length;++N)m[N]=p[x++]+(c[N]-h[v++])*d[$++]/Math.sqrt(f[k++]+l),y>x||(x=0),w>v||(v=0),b>$||($=0),g>k||(k=0);return n.makeTensorInfo(s.shape,s.dtype,m)}},lO={kernelName:bd,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:i,crops:o}=r;au([s],"batchToSpaceND");const a=i.reduce((t,e)=>t*e),u=Xr(s.shape,i,a),l=Jr(u.length,i.length),c=Kr(s.shape,i,a),h=Yr(o,i.length),f=Zr(c,o,i.length),d=nl({inputs:{x:s},backend:n,attrs:{shape:u}}),p=Ru({inputs:{x:d},backend:n,attrs:{perm:l}}),m=nl({inputs:{x:p},backend:n,attrs:{shape:c}}),y=Bu({inputs:{x:m},backend:n,attrs:{begin:h,size:f}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),y}},cO={kernelName:gd,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:i}=e,{size:o}=r,a=gu(n.data.get(s.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,o);return n.makeTensorInfo([o],i.dtype,a)}},hO={kernelName:xd,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n}=t,{s0:r,s1:s}=e,i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,a=ln(Array.from(i),Array.from(o));return n.makeTensorInfo([a.length],"int32",Int32Array.from(a))}},fO=vu(kd,(t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t}),dO={kernelName:kd,backendName:"cpu",kernelFunc:fO},pO={kernelName:Cd,backendName:"cpu",kernelFunc(t){const{x:e}=t.inputs,n=t.backend,r=new Float32Array(P(e.shape)),s=n.data.get(e.dataId),i=s.complexTensorInfos.real,o=s.complexTensorInfos.imag,a=n.data.get(i.dataId).values,u=n.data.get(o.dataId).values;for(let l=0;l<a.length;l++){const t=a[l],e=u[l];r[l]=Math.hypot(t,e)}return n.makeOutput(r,e.shape,"float32")}},mO={kernelName:pp,backendName:"cpu",kernelFunc:al},yO={kernelName:Sd,backendName:"cpu",kernelFunc:ul},bO={kernelName:Ed,backendName:"cpu",kernelFunc:ll},gO={kernelName:Td,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:o,pad:a,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;au([s,i],"conv2dBackpropFilter");const h=Hn(u),f=Pn(s.shape,c,o,1,a,l,!1,h),{strideHeight:d,strideWidth:p,filterHeight:m,filterWidth:y}=f,b="channelsLast"===f.dataFormat,g=new Fy(f.filterShape,"float32"),w=f.padInfo.left,x=f.padInfo.top,v=n.data.get(s.dataId).values,$=n.data.get(i.dataId).values,k=new Fy(s.shape,s.dtype,v),N=new Fy(i.shape,i.dtype,$);for(let C=0;m>C;++C){const t=Math.max(0,Math.ceil((x-C)/d)),e=Math.min(f.outHeight,(f.inHeight+x-C)/d);for(let n=0;y>n;++n){const r=Math.max(0,Math.ceil((w-n)/p)),s=Math.min(f.outWidth,(f.inWidth+w-n)/p);for(let i=0;i<f.inChannels;++i)for(let o=0;o<f.outChannels;++o){let a=0;for(let u=0;u<f.batchSize;++u)for(let l=t;e>l;++l){const t=C+l*d-x;for(let e=r;s>e;++e){const r=n+e*p-w;a+=b?k.get(u,t,r,i)*N.get(u,l,e,o):k.get(u,i,t,r)*N.get(u,o,l,e)}}g.set(a,C,n,i,o)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},wO={kernelName:_d,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{inputShape:o,strides:a,pad:u,dataFormat:l,dimRoundingMode:c}=r;au([s,i],"conv2dBackpropInput");const h=at(i.shape),f=at(s.shape);let d=Hn(l);const p=Pn(o,i.shape,a,1,u,c,!1,d),m=new Fy(p.inShape,"float32"),y=m.values,b=n.data.get(s.dataId).values,g=n.data.get(i.dataId).values,[w,x,v]=h,{batchSize:$,filterHeight:k,filterWidth:N,inChannels:C,inHeight:S,inWidth:E,outChannels:T,outHeight:_,outWidth:R,strideHeight:A,strideWidth:O}=p;d=p.dataFormat;const I=k-1-p.padInfo.top,F=N-1-p.padInfo.left,M="channelsLast"===d,D=m.strides[0],L=M?m.strides[1]:m.strides[2],P=M?m.strides[2]:1,V=M?1:m.strides[1],B=f[0],z=M?f[1]:f[2],W=M?f[2]:1,j=M?1:f[1];for(let U=0;$>U;++U)for(let t=0;C>t;++t)for(let e=0;S>e;++e){const n=e-I,r=Math.max(0,Math.ceil(n/A)),s=Math.min(_,(k+n)/A);for(let i=0;E>i;++i){const o=i-F,a=Math.max(0,Math.ceil(o/O)),u=Math.min(R,(N+o)/O);let l=0;for(let e=r;s>e;++e){const r=e*A-n;for(let n=a;u>n;++n){const s=B*U+z*e+W*n,i=w*(k-1-r)+x*(N-1-(n*O-o))+v*t;for(let t=0;T>t;++t)l+=b[s+j*t]*g[i+t]}}y[D*U+L*e+P*i+V*t]=l}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},xO={kernelName:Rd,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:o,pad:a,dilations:u}=r;au([s,i],"conv3d");const l=Vn(s.shape,i.shape,o,u,a),{filterDepth:c,filterHeight:h,filterWidth:f,dilationDepth:d,dilationHeight:p,dilationWidth:m,padInfo:y}=l,b=y.front,g=y.left,w=y.top,x=new Fy(l.outShape,s.dtype),v=n.data.get(s.dataId).values,$=n.data.get(i.dataId).values,k=x.values,N=at(s.shape),C=at(i.shape);for(let S=0;S<l.batchSize;++S){const t=S*N[0],e=S*x.strides[0];for(let n=0;n<l.outDepth;++n){const r=e+n*x.strides[1],s=n*l.strideDepth-b;for(let e=0;c>e;++e){const n=s+e*d;if(0>n||n>=l.inDepth)continue;const i=e*C[0],o=t+n*N[1];for(let t=0;t<l.outHeight;++t){const e=r+t*x.strides[2],n=t*l.strideHeight-w;for(let t=0;h>t;++t){const r=n+t*p;if(0>r||r>=l.inHeight)continue;const s=i+t*C[1],a=o+r*N[2];for(let t=0;t<l.outWidth;++t){const n=e+t*l.outChannels,r=t*l.strideWidth-g;for(let t=0;f>t;++t){const e=r+t*m;if(0>e||e>=l.inWidth)continue;const i=s+t*C[2],o=a+e*l.inChannels;let u=i;for(let t=0;t<l.inChannels;++t){const e=v[o+t];for(let t=0;t<l.outChannels;++t)k[n+t]+=e*$[u+t];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},vO={kernelName:Ad,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:o,pad:a,filterShape:u}=r;au([s,i],"conv3dBackpropFilterV2");const l=at(s.shape),c=at(i.shape),h=Vn(s.shape,u,o,1,a),f=h.strideDepth,d=h.strideHeight,p=h.strideWidth,m=h.filterDepth,y=h.filterHeight,b=h.filterWidth,g=new Fy(h.filterShape,"float32"),w=g.values,[x,v,$,k]=g.strides,N=n.data.get(i.dataId).values,[C,S,E,T]=c,_=n.data.get(s.dataId).values,[R,A,O,I]=l,F=h.padInfo.front,M=h.padInfo.left,D=h.padInfo.top;for(let L=0;m>L;++L){const t=Math.max(0,Math.ceil((F-L)/f)),e=Math.min(h.outDepth,(h.inDepth+F-L)/f),n=L*x;for(let r=0;y>r;++r){const s=Math.max(0,Math.ceil((D-r)/d)),i=Math.min(h.outHeight,(h.inHeight+D-r)/d),o=r*v+n;for(let n=0;b>n;++n){const a=Math.max(0,Math.ceil((M-n)/p)),u=Math.min(h.outWidth,(h.inWidth+M-n)/p),l=n*$+o;for(let o=0;o<h.inChannels;++o){const c=o*k+l;for(let l=0;l<h.outChannels;++l){let m=0;for(let c=0;c<h.batchSize;++c){const h=c*R,y=c*C;for(let c=t;e>c;++c){const t=(L+c*f-F)*A+h,e=c*S+y;for(let c=s;i>c;++c){const s=(r+c*d-D)*O+t,i=c*E+e;for(let t=a;u>t;++t){const e=t*T+i;m+=_[(n+t*p-M)*I+s+o]*N[e+l]}}}}w[c+l]=m}}}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},$O={kernelName:Od,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{pad:o,strides:a,inputShape:u}=r;au([s],"conv3dBackpropInputV2");const l=at(s.shape),c=at(i.shape),h=Vn(u,i.shape,a,1,o),f=new Fy(h.inShape,"float32"),d=f.values,[p,m,y,b]=f.strides,g=n.data.get(s.dataId).values,[w,x,v,$]=l,k=n.data.get(i.dataId).values,[N,C,S,E]=c,{batchSize:T,filterDepth:_,filterHeight:R,filterWidth:A,inChannels:O,inDepth:I,inHeight:F,inWidth:M,outChannels:D,outDepth:L,outHeight:P,outWidth:V,strideDepth:B,strideHeight:z,strideWidth:W}=h,j=_-1-h.padInfo.front,U=R-1-h.padInfo.top,G=A-1-h.padInfo.left;for(let q=0;T>q;++q)for(let t=0;O>t;++t)for(let e=0;I>e;++e){const n=e-j,r=Math.max(0,Math.ceil(n/B)),s=Math.min(L,(_+n)/B);for(let i=0;F>i;++i){const o=i-U,a=Math.max(0,Math.ceil(o/z)),u=Math.min(P,(R+o)/z);for(let l=0;M>l;++l){const c=l-G,h=Math.max(0,Math.ceil(c/W)),f=Math.min(V,(A+c)/W);let T=0;for(let e=r;s>e;++e){const r=e*B-n;for(let n=a;u>n;++n){const s=n*z-o;for(let i=h;f>i;++i){const o=w*q+x*e+v*n+$*i,a=N*(_-1-r)+C*(R-1-s)+S*(A-1-(i*W-c))+E*t;for(let t=0;D>t;++t)T+=g[o+t]*k[a+t]}}}d[p*q+m*e+y*i+b*l+t]=T}}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},kO=vu(Id,t=>Math.cos(t)),NO={kernelName:Id,backendName:"cpu",kernelFunc:kO},CO=vu(Fd,t=>Math.cosh(t)),SO={kernelName:Fd,backendName:"cpu",kernelFunc:CO},EO={kernelName:Ld,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{image:s,boxes:i,boxInd:o}=e,{cropSize:a,method:u,extrapolationValue:l}=r,[c,h,f,d]=s.shape,p=i.shape[0],[m,y]=a,b=We([p,m,y,d],"float32"),g=n.data.get(i.dataId).values,w=n.data.get(o.dataId).values,x=n.data.get(s.dataId).values,v=at(s.shape),$=at(b.shape);for(let k=0;p>k;k++){const t=4*k,e=g[t],n=g[t+1],r=g[t+2],s=g[t+3],i=w[k];if(i>=c)continue;const o=m>1?(r-e)*(h-1)/(m-1):0,a=y>1?(s-n)*(f-1)/(y-1):0;for(let c=0;m>c;c++){const t=m>1?e*(h-1)+c*o:.5*(e+r)*(h-1);if(0>t||t>h-1)for(let e=0;y>e;e++)for(let t=0;d>t;t++){const n=t+e*$[2]+c*$[1]+k*$[0];b.values[n]=l}else if("bilinear"===u){const e=Math.floor(t),r=Math.ceil(t),o=t-e;for(let t=0;y>t;t++){const u=y>1?n*(f-1)+t*a:.5*(n+s)*(f-1);if(0>u||u>f-1){for(let e=0;d>e;e++){const n=e+t*$[2]+c*$[1]+k*$[0];b.values[n]=l}continue}const h=Math.floor(u),p=Math.ceil(u),m=u-h;for(let n=0;d>n;n++){let s=n+h*v[2]+e*v[1]+i*v[0];const a=x[s];s=n+p*v[2]+e*v[1]+i*v[0];const u=x[s];s=n+h*v[2]+r*v[1]+i*v[0];const l=x[s];s=n+p*v[2]+r*v[1]+i*v[0];const f=a+(u-a)*m,d=l+(x[s]-l)*m;s=n+t*$[2]+c*$[1]+k*$[0],b.values[s]=f+(d-f)*o}}}else for(let e=0;y>e;++e){const r=y>1?n*(f-1)+e*a:.5*(n+s)*(f-1);if(0>r||r>f-1){for(let t=0;d>t;t++){const n=t+e*$[2]+c*$[1]+k*$[0];b.values[n]=l}continue}const o=Math.round(r),u=Math.round(t);for(let t=0;d>t;t++){const n=t+o*v[2]+u*v[1]+i*v[0],r=t+e*$[2]+c*$[1]+k*$[0];b.values[r]=x[n]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},TO={kernelName:Md,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,exclusive:o,reverse:a}=r;au(s,"cumprod");const u=er([i],s.shape.length);let l=s;null!=u&&(l=Ru({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=rr(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=re(l.dtype,"int32"),f=ct(P(l.shape),h),d=n.data.get(l.dataId).values,p=l.shape[l.shape.length-1],m=a?(t,e)=>t+p-e-1:(t,e)=>t+e;for(let b=0;b<d.length;b+=p)for(let t=0;p>t;t++){const e=m(b,t);if(0===t)f[e]=o?1:d[e];else{const n=m(b,t-1);f[e]=o?d[n]*f[n]:d[e]*f[n]}}const y=n.makeTensorInfo(l.shape,h,f);if(null!=u){const t=Ru({inputs:{x:y},backend:n,attrs:{perm:nr(u)}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(l),t}return y}},_O={kernelName:Dd,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,exclusive:o,reverse:a}=r;au(s,"cumsum");const u=er([i],s.shape.length);let l=s;null!=u&&(l=Ru({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=rr(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=re(l.dtype,"int32"),f=ht(P(l.shape),h),d=n.data.get(l.dataId).values,p=l.shape[l.shape.length-1],m=a?(t,e)=>t+p-e-1:(t,e)=>t+e;for(let b=0;b<d.length;b+=p)for(let t=0;p>t;t++){const e=m(b,t);if(0===t)f[e]=o?0:d[e];else{const n=m(b,t-1);f[e]=o?d[n]+f[n]:d[e]+f[n]}}const y=n.makeTensorInfo(l.shape,h,f);if(null!=u){const t=Ru({inputs:{x:y},backend:n,attrs:{perm:nr(u)}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(l),t}return y}},RO={kernelName:Pd,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:i}=e,{size:o,binaryOutput:a}=r;if(1===s.shape.length){const t=gu(n.data.get(s.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,o);return n.makeTensorInfo([o],i.dtype,t)}if(2===s.shape.length){const t=wu(n.bufferSync(s),n.bufferSync(i),o,a);return n.makeTensorInfo(t.shape,i.dtype,t.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},AO={kernelName:Vd,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockSize:i,dataFormat:o}=r;F("NHWC"===o,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`);const a=s.shape[0],u=s.shape[1],l=s.shape[2],c=s.shape[3],h=u*i,f=l*i,d=c/(i*i),p=n.data.get(s.dataId).values,m=new Float32Array(a*h*f*d);let y=0;for(let b=0;a>b;++b)for(let t=0;h>t;++t){const e=Math.floor(t/i),n=t%i;for(let t=0;f>t;++t){const r=Math.floor(t/i),s=(n*i+t%i)*d;for(let t=0;d>t;++t){const n=t+s+c*(r+l*(e+u*b));m[y++]=p[n]}}}return n.makeTensorInfo([a,h,f,d],s.dtype,m)}},OO={kernelName:Bd,backendName:"cpu",kernelFunc:cl},IO={kernelName:zd,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:o,dilations:a,pad:u,dimRoundingMode:l,filterShape:c}=r;au([s,i],"depthwiseConv2dNativeBackpropFilter");const h=Pn(s.shape,c,o,a,u,l,!0),{strideHeight:f,strideWidth:d,filterHeight:p,filterWidth:m}=h,y=new Fy(h.filterShape,"float32"),b=h.padInfo.left,g=h.padInfo.top,w=h.outChannels/h.inChannels,x=n.data.get(s.dataId).values,v=new Fy(s.shape,s.dtype,x),$=n.data.get(i.dataId).values,k=new Fy(i.shape,i.dtype,$);for(let N=0;p>N;++N){const t=Math.max(0,Math.ceil((g-N)/f)),e=Math.min(h.outHeight,(h.inHeight+g-N)/f);for(let n=0;m>n;++n){const r=Math.max(0,Math.ceil((b-n)/d)),s=Math.min(h.outWidth,(h.inWidth+b-n)/d);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/w),a=i%w;let u=0;for(let l=0;l<h.batchSize;++l)for(let a=t;e>a;++a){const t=N+a*f-g;for(let e=r;s>e;++e){const r=n+e*d-b;u+=v.get(l,t,r,o)*k.get(l,a,e,i)}}y.set(u,N,n,o,a)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},FO={kernelName:Wd,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{strides:o,dilations:a,pad:u,dimRoundingMode:l,inputShape:c}=r;au([s,i],"depthwiseConv2DNativeBackpropInput");const h=at(s.shape),f=at(i.shape),d=Pn(c,i.shape,o,a,u,l,!0),p=new Fy(d.inShape,"float32"),m=p.values,[y,b,g]=p.strides,w=n.data.get(s.dataId).values,[x,v,$]=h,k=n.data.get(i.dataId).values,[N,C,S]=f,{batchSize:E,filterHeight:T,filterWidth:_,inChannels:R,inHeight:A,inWidth:O,outChannels:I,outHeight:F,outWidth:M,strideHeight:D,strideWidth:L}=d,P=T-1-d.padInfo.top,V=_-1-d.padInfo.left,B=I/R;for(let z=0;E>z;++z)for(let t=0;R>t;++t)for(let e=0;A>e;++e){const n=e-P,r=Math.max(0,Math.ceil(n/D)),s=Math.min(F,(T+n)/D);for(let i=0;O>i;++i){const o=i-V,a=Math.max(0,Math.ceil(o/L)),u=Math.min(M,(_+o)/L);let l=0;for(let e=r;s>e;++e){const r=e*D-n;for(let n=a;u>n;++n){const s=x*z+v*e+$*n,i=N*(T-1-r)+C*(_-1-(n*L-o))+S*t;for(let e=0;B>e;++e)l+=w[s+(t*B+e)]*k[i+e]}}m[y*z+b*e+g*i+t]=l}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},MO={kernelName:jd,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n}=t,{x:r}=e,s=P(r.shape),i=n.data.get(r.dataId).values,o=We([s,s],r.dtype),a=o.values;for(let l=0;l<i.length;l++)a[l*s+l]=i[l];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,o.dtype,o.values)}},DO={kernelName:Ud,backendName:"cpu",kernelFunc({inputs:t,backend:e,attrs:n}){const{x:r,filter:s}=t,{strides:i,pad:o,dilations:a}=n,u=e,l=u.data.get(r.dataId).values,c=r.shape.length,h=u.data.get(s.dataId).values,f=s.shape.length,{batchSize:d,inHeight:p,inWidth:m,inChannels:y,outHeight:b,outWidth:g,padInfo:w,strideHeight:x,strideWidth:v,filterHeight:$,filterWidth:k,dilationHeight:N,dilationWidth:C,outShape:S}=Mn(r.shape,s.shape,i,o,"NHWC",a),E=P(S),T=S.length,_=X(r.dtype,E);for(let R=0;d>R;++R)for(let t=0;b>t;++t){const e=t*x-w.top;for(let n=0;g>n;++n){const i=n*v-w.left;for(let o=0;y>o;++o){let a=Number.MIN_SAFE_INTEGER;for(let t=0;$>t;++t){const n=e+t*N;if(n>=0&&p>n)for(let e=0;k>e;++e){const u=i+e*C;if(u>=0&&m>u){const i=pt([R,n,u,o],c,at(r.shape)),d=pt([t,e,o],f,at(s.shape)),p=l[i]+h[d];p>a&&(a=p)}}}_[pt([R,t,n,o],T,at(S))]=a}}}return{dataId:u.write(Gt(_,r.dtype),S,r.dtype),shape:S,dtype:r.dtype}}},LO={kernelName:qd,backendName:"cpu",kernelFunc({inputs:t,backend:e,attrs:n}){const{x:r,filter:s,dy:i}=t,{strides:o,pad:a,dilations:u}=n,l=e,c=lt(r.shape,l.data.get(r.dataId).values),h=lt(s.shape,l.data.get(s.dataId).values),{batchSize:f,inHeight:d,inWidth:p,inChannels:m,outHeight:y,outWidth:b,padInfo:g,strideHeight:w,strideWidth:x,filterHeight:v,filterWidth:$,dilationHeight:k,dilationWidth:N,outShape:C}=Mn(r.shape,s.shape,o,a,"NHWC",u);F(i.rank===C.length,()=>`Error in ${qd}, dy must have the same rank as output ${C.length}, but got ${i.rank}`);const S=lt(C,l.data.get(i.dataId).values),E=ft(s.shape,s.dtype);for(let T=0;f>T;++T)for(let t=0;y>t;++t){const e=t*w-g.top;for(let n=0;b>n;++n){const r=n*x-g.left;for(let s=0;m>s;++s){let i=Number.MIN_SAFE_INTEGER,o=0,a=0;for(let t=0;v>t;++t){const n=e+t*k;if(n>=0&&d>n)for(let e=0;$>e;++e){const u=r+e*N;if(u>=0&&p>u){const r=c[T][n][u][s]+h[t][e][s];r>i&&(i=r,o=t,a=e)}}}E[o][a][s]+=S[T][t][n][s]}}}return{dataId:l.write(Gt(E,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},PO={kernelName:Gd,backendName:"cpu",kernelFunc({inputs:t,backend:e,attrs:n}){const{x:r,filter:s,dy:i}=t,{strides:o,pad:a,dilations:u}=n,l=e,c=lt(r.shape,l.data.get(r.dataId).values),h=lt(s.shape,l.data.get(s.dataId).values),{batchSize:f,inHeight:d,inWidth:p,inChannels:m,outHeight:y,outWidth:b,padInfo:g,strideHeight:w,strideWidth:x,filterHeight:v,filterWidth:$,dilationHeight:k,dilationWidth:N,outShape:C}=Mn(r.shape,s.shape,o,a,"NHWC",u);F(i.rank===C.length,()=>`Error in ${Gd}, dy must have the same rank as output ${C.length}, but got ${i.rank}`);const S=lt(C,l.data.get(i.dataId).values),E=ft(r.shape,r.dtype);for(let T=0;f>T;++T)for(let t=0;y>t;++t){const e=t*w-g.top;for(let n=0;b>n;++n){const r=n*x-g.left;for(let s=0;m>s;++s){let i=Number.MIN_SAFE_INTEGER,o=0>e?0:e,a=0>r?0:r;for(let t=0;v>t;++t){const n=e+t*k;if(n>=0&&d>n)for(let e=0;$>e;++e){const u=r+e*N;if(u>=0&&p>u){const r=c[T][n][u][s]+h[t][e][s];r>i&&(i=r,o=n,a=u)}}}E[T][o][a][s]+=S[T][t][n][s]}}}return{dataId:l.write(Gt(E,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},VO={kernelName:Tm,backendName:"cpu",kernelFunc:hl},BO={kernelName:Xd,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{equation:s}=r,i=e,{allDims:o,summedDims:a,idDims:u}=as(s,i.length);ls(o.length,u,i);const{path:l,steps:c}=cs(a,u),h=c.length;let f=null,d=o.length;const p=[];for(let m=0;h>m;++m){for(const t of c[m]){const{permutationIndices:e,expandDims:r}=us(d,u[t]);let s;hs(e)?s=i[t]:(s=Ru({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),p.push(s));const o=s.shape.slice();for(let t=0;t<r.length;++t)o.splice(r[t],0,1);V(s.shape,o)||(s=nl({inputs:{x:s},backend:n,attrs:{shape:o}}),p.push(s)),null===f?f=s:(f=KR({inputs:{a:s,b:f},backend:n}),p.push(f))}h-1>m&&(0>l[m]||(f=hl({inputs:{x:f},backend:n,attrs:{axis:l[m]-(o.length-d),keepDims:!1}}),p.push(f)),d--)}for(const m of p)m!==f&&n.disposeIntermediateTensorInfo(m);return f}},zO={kernelName:Kd,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n}=t,{dy:r,y:s}=e;au([r,s],"eluGrad");const i=new Float32Array(P(s.shape)),o=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values;for(let u=0;u<o.length;++u){const t=o[u];i[u]=1>t?a[u]*(t+1):a[u]}return n.makeTensorInfo(s.shape,"float32",i)}},WO=rk,jO=sk,UO=ik,GO=ok,qO=ak,HO=uk,XO=vu(Yd,t=>{const e=Math.sign(t),n=Math.abs(t),r=1/(1+WO*n);return e*(1-((((HO*r+qO)*r+GO)*r+UO)*r+jO)*r*Math.exp(-n*n))}),JO={kernelName:Yd,backendName:"cpu",kernelFunc:XO},KO={kernelName:tp,backendName:"cpu",kernelFunc:fl},YO=lu((t,e)=>t/e),ZO=yu(Hd,YO),QO={kernelName:Hd,backendName:"cpu",kernelFunc:ZO},tI={kernelName:np,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n}=t,{input:r}=e,s=P(r.shape),i=r.shape[r.shape.length-1],o=nl({inputs:{x:r},backend:n,attrs:{shape:[s/i,i]}}),a=dl(o,!1,n),u=nl({inputs:{x:a},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),u}},eI={kernelName:rp,backendName:"cpu",kernelFunc:yl},nI={kernelName:sp,backendName:"cpu",kernelFunc({inputs:t,attrs:e,backend:n}){const{image:r}=t,s=n,i=H(r.dtype,P(r.shape)),[o,a,u,l]=r.shape,c=s.data.get(r.dataId).values;for(let h=0;o>h;h++){const t=h*u*a*l;for(let e=0;a>e;e++){const n=e*(u*l);for(let e=0;u>e;e++){const r=e*l;for(let s=0;l>s;s++){const o=Math.round(u-e-1),a=t+n+r+s;let h=c[a];o>=0&&u>o&&(h=c[t+n+o*l+s]),i[a]=h}}}}return{dataId:s.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},rI=lu((t,e)=>Math.floor(t/e)),sI=yu(op,rI,null,"int32"),iI={kernelName:op,backendName:"cpu",kernelFunc:sI},oI={kernelName:sy,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i,bias:o,preluActivationWeights:a}=e,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:f,activation:d,leakyreluAlpha:p}=r;let m=ll({inputs:{x:s,filter:i},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:f}});if(o){const t=m;if("NCHW"===c&&1===o.shape.length&&1!==o.shape[0]){const t=nl({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=cR({inputs:{a:m,b:t},backend:n}),n.disposeIntermediateTensorInfo(t)}else m=cR({inputs:{a:m,b:o},backend:n});n.disposeIntermediateTensorInfo(t)}if(d){const t=m;if("NCHW"===c&&"prelu"===d&&1===a.shape.length&&1!==a.shape[0]){const t=nl({inputs:{x:a},backend:n,attrs:{shape:[a.shape[0],1,1]}});m=el(n,m,d,t,p),n.disposeIntermediateTensorInfo(t)}else m=el(n,m,d,a,p);n.disposeIntermediateTensorInfo(t)}return m}},aI={kernelName:iy,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i,bias:o,preluActivationWeights:a}=e,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:f,activation:d,leakyreluAlpha:p}=r;let m=cl({inputs:{x:s,filter:i},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:f}});if(o){const t=m;m=cR({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(t)}if(d){const t=m;m=el(n,m,d,a,p),n.disposeIntermediateTensorInfo(t)}return m}},uI={kernelName:lp,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n}=t,{params:r,indices:s}=e,i=P(r.shape),o=s.shape,a=o[o.length-1],[u,l,c,h]=fn(r,s);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const f=Nu(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,l,a,c,h,r.shape,i);return n.makeTensorInfo(u,r.dtype,f.values)}},lI={kernelName:up,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,indices:i}=e,{axis:o,batchDims:a}=r;au([s,i],"gatherV2");const u=G(o,s.shape)[0],l=n.data.get(i.dataId).values,c=s.shape[u];for(let w=0;w<l.length;++w){const t=l[w];F(c-1>=t&&t>=0,()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`)}let h=a;null==a&&(h=0);const f=P(i.shape),d=Ss(s,i,u,h),p=nl({inputs:{x:s},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),m=nl({inputs:{x:i},backend:n,attrs:{shape:[d.batchSize,f/d.batchSize]}}),y=[d.batchSize,d.outerSize,f/d.batchSize,d.sliceSize],b=n.bufferSync(m),g=Cu(n.bufferSync(p),b,y);return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(d.outputShape,g.dtype,g.values)}},cI={kernelName:dp,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n}=t,{input:r}=e,s=P(r.shape),i=r.shape[r.shape.length-1],o=nl({inputs:{x:r},backend:n,attrs:{shape:[s/i,i]}}),a=dl(o,!0,n),u=nl({inputs:{x:a},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),u}},hI=vu(mp,t=>Number.isFinite(t)?1:0,"bool"),fI={kernelName:mp,backendName:"cpu",kernelFunc:hI},dI=vu(yp,t=>Math.abs(t)===1/0?1:0,"bool"),pI={kernelName:yp,backendName:"cpu",kernelFunc:dI},mI=vu(bp,t=>Number.isNaN(t)?1:0,"bool"),yI={kernelName:bp,backendName:"cpu",kernelFunc:mI},bI={kernelName:vp,backendName:"cpu",kernelFunc(t){const{backend:e,attrs:n}=t,{start:r,stop:s,num:i}=n,o=Su(r,s,i);return e.makeTensorInfo([o.length],"float32",o)}},gI=vu(kp,t=>Math.log1p(t)),wI={kernelName:kp,backendName:"cpu",kernelFunc:gI},xI=lu((t,e)=>t&&e),vI=yu(Np,xI,null,"bool"),$I={kernelName:Np,backendName:"cpu",kernelFunc:vI},kI=vu(Cp,t=>t?0:1,"bool"),NI={kernelName:Cp,backendName:"cpu",kernelFunc:kI},CI=lu((t,e)=>t||e),SI=yu(Sp,CI,null,"bool"),EI={kernelName:Sp,backendName:"cpu",kernelFunc:SI},TI={kernelName:Tp,backendName:"cpu",kernelFunc(t){function e(t){const e=t%c;let n=t-e+Math.max(0,e-o);const r=t-e+Math.min(e+o,h);let s=0;for(;r>=n;n++){const t=f[n];s+=t*t}return s}const{inputs:n,backend:r,attrs:s}=t,{x:i}=n,{depthRadius:o,bias:a,alpha:u,beta:l}=s;au(i,"LRN");const c=i.shape[3],h=c-1,f=r.data.get(i.dataId).values,d=P(i.shape),p=new Float32Array(d);for(let m=0;d>m;m++){const t=e(m),n=f[m]*Math.pow(a+u*t,-l);p[m]=n}return r.makeTensorInfo(i.shape,i.dtype,p)}},_I={kernelName:_p,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,y:i,dy:o}=e,{depthRadius:a,bias:u,alpha:l,beta:c}=r;au(o,"LRNGrad");const h=P(o.shape),f=o.shape[3],d=n.data.get(o.dataId).values,p=n.data.get(s.dataId).values,m=n.data.get(i.dataId).values,y=new Float32Array(h),b=h;for(let g=0;b>g;g++){const t=g%f,e=g-t+Math.max(0,t-a),n=g-t+Math.min(f,t+a+1);let r=0;for(let s=e;n>s;s++)r+=Math.pow(p[s],2);r=l*r+u;for(let s=e;n>s;s++){let t=-2*l*c*p[s]*m[g]/r;g===s&&(t+=Math.pow(r,-c)),t*=d[g],y[s]+=t}}return n.makeTensorInfo(o.shape,s.dtype,y)}},RI={kernelName:Rp,backendName:"cpu",kernelFunc:bl},AI={kernelName:Op,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;au(s,"maxPool");const{filterSize:i,strides:o,pad:a,dimRoundingMode:u}=r;F(qn(o,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const l=Dn(s.shape,i,o,1,a,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&V(l.inShape,l.outShape))c=fu({inputs:{x:s},backend:n});else{const t=n.data.get(s.dataId).values,e=at(s.shape),r=sl(t,s.shape,s.dtype,e,l,"max");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}},OI={kernelName:Fp,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:i,strides:o,pad:a,dimRoundingMode:u,dataFormat:l}=r;au(s,"maxPool3d");const c=Ln(s.shape,i,o,1,a,u,l),h=ol(n.data.get(s.dataId).values,s.shape,s.dtype,at(s.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},II={kernelName:Mp,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,{filterSize:o,strides:a,pad:u,dimRoundingMode:l}=r;au([s,i],"maxPool3DGrad");const c=Ln(i.shape,o,a,1,u,l),h=((t,e)=>{const n=We(e.outShape,"int32"),r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,a=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,f=e.padInfo.front,d=e.padInfo.top,p=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let y=0;y<e.inChannels;++y)for(let b=0;b<e.outDepth;++b){const g=b*r-f;let w=g;for(;0>w;)w+=o;const x=Math.min(e.inDepth,l+g);for(let r=0;r<e.outHeight;++r){const l=r*s-d;let f=l;for(;0>f;)f+=a;const v=Math.min(e.inHeight,c+l);for(let s=0;s<e.outWidth;++s){const d=s*i-p;let $=d;for(;0>$;)$+=u;const k=Math.min(e.inWidth,h+d);let N=Number.NEGATIVE_INFINITY,C=-1;for(let e=w;x>e;e+=o){const n=e-g;for(let r=f;v>r;r+=a){const s=r-l;for(let i=$;k>i;i+=u){const o=i-d,a=t.get(m,e,r,i,y);N>a||(N=a,C=n*c*h+s*c+o)}}}n.set(C,m,b,r,s,y)}}}return n})(n.bufferSync(i),c),f=c.strideDepth,d=c.strideHeight,p=c.strideWidth,m=c.dilationDepth,y=c.dilationHeight,b=c.dilationWidth,g=c.effectiveFilterDepth,w=c.effectiveFilterHeight,x=c.effectiveFilterWidth,v=g-1-c.padInfo.front,$=x-1-c.padInfo.left,k=w-1-c.padInfo.top,N=We(i.shape,"float32"),C=n.bufferSync(s);for(let S=0;S<c.batchSize;++S)for(let t=0;t<c.inChannels;++t)for(let e=0;e<c.inDepth;++e)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=e-v,i=n-k,o=r-$;let a=0;for(let e=0;g>e;e+=m){const n=(s+e)/f;if(n>=0&&n<c.outDepth&&Math.floor(n)===n)for(let r=0;w>r;r+=y){const s=(i+r)/d;if(s>=0&&s<c.outHeight&&Math.floor(s)===s)for(let i=0;x>i;i+=b){const u=(o+i)/p;if(0>u||u>=c.outWidth||Math.floor(u)!==u)continue;const l=g*w*x-1-h.get(S,n,s,u,t)===e*w*x+r*x+i?1:0;0!==l&&(a+=C.get(S,n,s,u,t)*l)}}}N.set(a,S,e,n,r,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},FI={kernelName:Ip,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i,output:o}=e,a=i;au([i,o],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,f=Dn(a.shape,u,l,1,c,h),d=n.data.get(a.dataId).values,p=We(f.outShape,a.dtype,il(d,a.shape,a.dtype,f).values),m=f.strideHeight,y=f.strideWidth,b=f.dilationHeight,g=f.dilationWidth,w=f.effectiveFilterHeight,x=f.effectiveFilterWidth,v=x-1-f.padInfo.left,$=w-1-f.padInfo.top,k=We(a.shape,"float32"),N=n.data.get(s.dataId).values,C=We(s.shape,"float32",N);for(let S=0;S<f.batchSize;++S)for(let t=0;t<f.inChannels;++t)for(let e=0;e<f.inHeight;++e)for(let n=0;n<f.inWidth;++n){const r=e-$,s=n-v;let i=0;for(let e=0;w>e;e+=b){const n=(r+e)/m;if(n>=0&&n<f.outHeight&&Math.floor(n)===n)for(let r=0;x>r;r+=g){const o=(s+r)/y;if(0>o||o>=f.outWidth||Math.floor(o)!==o)continue;const a=w*x-1-p.get(S,n,o,t)===e*x+r?1:0;0!==a&&(i+=C.get(S,n,o,t)*a)}}k.set(i,S,e,n,t)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},MI={kernelName:Dp,backendName:"cpu",kernelFunc({inputs:t,attrs:e,backend:n}){const{x:r}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:a}=e,u=n;au(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=Dn(r.shape,s,i,[1,1],o),[h,f]=((t,e,n,r,s)=>{const i=sl(t,0,n,at(e),s,"max"),o=il(t,e,n,s,!0,r);return[i.values,o.values]})(l,r.shape,r.dtype,a,c),d=u.write(h,c.outShape,r.dtype),p=u.write(f,c.outShape,r.dtype);return[{dataId:d,shape:c.outShape,dtype:r.dtype},{dataId:p,shape:c.outShape,dtype:"int32"}]}},DI={kernelName:Lp,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r,a=G(i,s.shape),u=P(Zn(s.shape,a)[1]),l=[],c=n.makeTensorInfo([],"float32",new Float32Array([u]));l.push(c);const h=mu({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});l.push(h);const f=ZO({inputs:{a:h,b:c},backend:n});l.push(f);const d=hl({inputs:{x:f},backend:n,attrs:{axis:i,keepDims:o}});return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),d}},LI={kernelName:Pp,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r;au(s,"min");const a=G(i,s.shape);let u=a;const l=er(u,s.shape.length);let c=s;null!=l&&(c=Ru({inputs:{x:s},backend:n,attrs:{perm:l}}),u=rr(u.length,s.shape.length)),tr("min",u,c.shape.length);const[h,f]=Zn(c.shape,u),d=P(f),p=ht(P(h),c.dtype),m=n.data.get(c.dataId).values;for(let b=0;b<p.length;++b){const t=b*d;let e=m[t];for(let n=0;d>n;++n){const r=m[t+n];(Number.isNaN(r)||e>r)&&(e=r)}p[b]=e}null!=l&&n.disposeIntermediateTensorInfo(c);const y=n.makeTensorInfo(h,c.dtype,p);if(o){const t=nl({inputs:{x:y},backend:n,attrs:{shape:Qn(h,a)}});return n.disposeIntermediateTensorInfo(y),t}return y}},PI={kernelName:Bp,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:i,mode:o}=r;au(s,"mirrorPad");const a=i.map((t,e)=>t[0]+s.shape[e]+t[1]),u=i.map(t=>t[0]),l=i.map((t,e)=>t[0]+s.shape[e]),c="reflect"===o?0:1,h=n.data.get(s.dataId).values,f=s.shape.length,d=at(s.shape),p=P(a),m=a.length,y=at(a),b=H(s.dtype,p);for(let g=0;p>g;g++){let t=mt(g,m,y);for(let n=0;m>n;n++)t[n]<u[n]?t[n]=2*u[n]-t[n]-c:t[n]<l[n]||(t[n]=2*(l[n]-1)-t[n]+c);t=t.map((t,e)=>t-u[e]);const e=pt(t,f,d);b[g]=h[e]}return{dataId:n.write(b,a,s.dtype),shape:a,dtype:s.dtype}}},VI=lu((t,e)=>{const n=t%e;return 0>t&&0>e||t>=0&&e>=0?n:(n+e)%e}),BI=yu(zp,VI),zI={kernelName:zp,backendName:"cpu",kernelFunc:BI},WI={kernelName:Am,backendName:"cpu",kernelFunc:gl},jI={kernelName:Wp,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{numSamples:i,seed:o,normalized:a}=r;au(s,"multinomial");const u=a?s:gl({inputs:{logits:s},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],h=n.data.get(u.dataId).values,f=[l,i],d=ht(P(f),"int32");for(let p=0;l>p;++p){const t=p*c,e=new Float32Array(c-1);e[0]=h[t];for(let s=1;s<e.length;++s)e[s]=e[s-1]+h[t+s];const n=qx.alea(o.toString()),r=p*i;for(let s=0;i>s;++s){const t=n();d[r+s]=e.length;for(let n=0;n<e.length;n++)if(t<e[n]){d[r+s]=n;break}}}return a||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(f,"int32",d)}},UI=Ar,GI={kernelName:qp,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:u}=r;au(s,"NonMaxSuppression");const l=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values,{selectedIndices:h}=UI(l,c,o,a,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},qI=Or,HI={kernelName:Hp,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:u,padToMaxOutputSize:l}=r;au(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,{selectedIndices:f,validOutputs:d}=qI(c,h,o,a,u,l);return[n.makeTensorInfo([f.length],"int32",new Int32Array(f)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},XI=Ir,JI={kernelName:Xp,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:u,softNmsSigma:l}=r;au(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,f=o,d=a,p=u,m=l,{selectedIndices:y,selectedScores:b}=XI(c,h,f,d,p,m);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}},KI={kernelName:Kp,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s}=e,{dtype:i,depth:o,onValue:a,offValue:u}=r;au(s,"oneHot");const l=P(s.shape),c=new Float32Array(l*o);c.fill(u);const h=n.data.get(s.dataId).values;for(let f=0;l>f;++f)h[f]>=0&&h[f]<o&&(c[f*o+h[f]]=a);return n.makeTensorInfo([...s.shape,o],i,c)}},YI={kernelName:Qm,backendName:"cpu",kernelFunc:wl},ZI={kernelName:Jp,backendName:"cpu",kernelFunc:function t(e){const{inputs:n,backend:r}=e,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const e=du({inputs:{input:s},backend:r}),n=t({inputs:{x:e},backend:r}),i=al({inputs:{input:s},backend:r}),o=wl({inputs:{x:i},backend:r}),a=cu({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),a}return yl({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}},QI={kernelName:Yp,backendName:"cpu",kernelFunc:xl},tF={kernelName:Zp,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:i,constantValue:o}=r;au(s,"pad");const a=i.map((t,e)=>t[0]+s.shape[e]+t[1]),u=i.map(t=>t[0]),l=n.data.get(s.dataId).values,c=P(s.shape),h=s.shape.length,f=at(s.shape),d=P(a),p=a.length,m=at(a),y=H(s.dtype,d);0!==o&&y.fill(o);for(let b=0;c>b;b++)y[pt(mt(b,h,f).map((t,e)=>t+u[e]),p,m)]=l[b];return{dataId:n.write(y,a,s.dtype),shape:a,dtype:s.dtype}}},eF=lu((t,e)=>Math.pow(t,e)),nF=yu(Qp,eF),rF={kernelName:Qp,backendName:"cpu",kernelFunc:nF},sF={kernelName:nm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{paramsNestedSplits:s,paramsDenseValues:i,indices:o}=e,{outputRaggedRank:a}=r,u=s.map(t=>n.data.get(t.dataId).values),l=s.map(t=>t.shape),c=n.data.get(i.dataId).values,h=n.data.get(o.dataId).values,[f,d,p]=Iu(u,l,c,i.shape,i.dtype,h,o.shape),m=f.map(t=>n.makeTensorInfo([t.length],"int32",t)),y=n.makeTensorInfo(p,i.dtype,d);return m.concat([y])}},iF={kernelName:rm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{shape:s,values:i,defaultValue:o,rowPartitionTensors:a}=e,{rowPartitionTypes:u}=r,l=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values,h=n.data.get(o.dataId).values,f=a.map(t=>n.data.get(t.dataId).values),d=a.map(t=>t.shape),[p,m]=Du(l,s.shape,c,i.shape,i.dtype,h,o.shape,f,d,u);return n.makeTensorInfo(p,i.dtype,m)}},oF={kernelName:sm,backendName:"cpu",kernelFunc(t){const{backend:e,attrs:n}=t,{start:r,stop:s,dtype:i,step:o}=n,a=Lu(r,s,o,i);return e.makeTensorInfo([a.length],i,a)}},aF=vu(om,t=>1/t),uF={kernelName:om,backendName:"cpu",kernelFunc:aF},lF={kernelName:hm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:i,halfPixelCenters:o,size:a}=r;au(s,"resizeBilinear");const u=at(s.shape),[l,c]=a,[h,f,d,p]=s.shape,m=n.data.get(s.dataId).values,y=new Float32Array(P([h,l,c,p])),b=[i&&l>1?f-1:f,i&&c>1?d-1:d],g=[i&&l>1?l-1:l,i&&c>1?c-1:c];let w=0;const x=b[0]/g[0],v=b[1]/g[1];for(let $=0;h>$;$++)for(let t=0;l>t;t++){let e;e=o?x*(t+.5)-.5:x*t;const n=Math.max(0,Math.floor(e)),r=e-n,s=Math.min(f-1,Math.ceil(e)),i=$*u[0]+n*u[1],a=$*u[0]+s*u[1];for(let t=0;c>t;t++){let e;e=o?v*(t+.5)-.5:v*t;const n=Math.max(0,Math.floor(e)),s=e-n,l=Math.min(d-1,Math.ceil(e)),c=i+n*u[2],h=a+n*u[2],f=i+l*u[2],b=a+l*u[2];for(let t=0;p>t;t++){const e=m[c+t],n=m[h+t],i=e+(m[f+t]-e)*s,o=i+(n+(m[b+t]-n)*s-i)*r;y[w++]=o}}}return n.makeTensorInfo([h,l,c,p],"float32",y)}},cF={kernelName:fm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:i}=e,{alignCorners:o}=r;au([i,s],"resizeBilinearGrad");const a=at(s.shape),[u,l,c,h]=s.shape,[,f,d]=i.shape,p=new Float32Array(u*l*c*h),m=[o&&f>1?l-1:l,o&&d>1?c-1:c],y=[o&&f>1?f-1:f,o&&d>1?d-1:d],b=m[0]/y[0],g=m[1]/y[1],w=n.data.get(i.dataId).values;let x=0;for(let v=0;u>v;v++){const t=v*a[0];for(let e=0;f>e;e++){const n=e*b,r=Math.floor(n),s=Math.min(Math.ceil(n),l-1),i=t+r*a[1],o=t+s*a[1],u=n-r,f=1-u;for(let t=0;d>t;t++){const e=t*g,n=Math.floor(e),r=Math.min(Math.ceil(e),c-1),s=e-n,l=1-s,d=i+n*a[2],m=i+r*a[2],y=o+n*a[2],b=o+r*a[2],v=f*l,$=f*s,k=u*l,N=u*s;for(let t=0;h>t;t++){const e=w[x++];p[d+t]+=e*v,p[m+t]+=e*$,p[y+t]+=e*k,p[b+t]+=e*N}}}}return n.makeTensorInfo([u,c,l,h],"float32",p)}},hF={kernelName:lm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:i,halfPixelCenters:o,size:a}=r;au(s,"resizeNearestNeighbor");const u=at(s.shape),[l,c]=a,[h,f,d,p]=s.shape,m=n.data.get(s.dataId).values,y=new Float32Array(h*l*c*p),b=[i&&l>1?f-1:f,i&&c>1?d-1:d],g=[i&&l>1?l-1:l,i&&c>1?c-1:c],w=b[0]/g[0],x=b[1]/g[1];let v=0;for(let $=0;h>$;$++){const t=$*u[0];for(let e=0;l>e;e++){const n=o?w*(e+.5):w*e;let r=Math.min(f-1,i?Math.round(n):Math.floor(n));o&&(r=Math.max(0,r));const s=t+r*u[1];for(let t=0;c>t;t++){const e=o?x*(t+.5):x*t;let n=Math.min(d-1,i?Math.round(e):Math.floor(e));o&&(n=Math.max(0,n));const r=s+n*u[2];for(let t=0;p>t;t++){const e=m[r+t];y[v++]=e}}}}return n.makeTensorInfo([h,l,c,p],s.dtype,y)}},fF={kernelName:cm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:i}=e,{alignCorners:o}=r;au([i,s],"resizeNearestNeighborGrad");const a=at(s.shape),u=at(i.shape),[l,c,h,f]=s.shape,[,d,p]=i.shape,m=new Float32Array(l*c*h*f),y=n.data.get(i.dataId).values,b=[o&&d>1?c-1:c,o&&p>1?h-1:h],g=[o&&d>1?d-1:d,o&&p>1?p-1:p],w=b[0]/g[0],x=b[1]/g[1],v=1/w,$=1/x,k=2*Math.ceil(v)+2,N=2*Math.ceil($)+2;for(let C=0;l>C;C++){const t=C*a[0];for(let e=0;c>e;e++){const n=t+e*a[1],r=Math.floor(e*v),s=Math.floor(r-k/2);for(let i=0;h>i;i++){const r=n+i*a[2],l=Math.floor(i*$),b=Math.floor(l-N/2);for(let n=0;f>n;n++){let a=0;for(let r=0;k>r;r++){const l=r+s;if(0>l||l>=d)continue;const f=t+l*u[1],m=l*w;if(e===Math.min(c-1,o?Math.round(m):Math.floor(m)))for(let t=0;N>t;t++){const e=t+b;if(0>e||e>=p)continue;const r=f+e*u[2],s=e*x;i===Math.min(h-1,o?Math.round(s):Math.floor(s))&&(a+=y[r+n])}}m[r+n]=a}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}},dF={kernelName:pm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dims:i}=r;au(s,"reverse");const o=s.shape.length,a=G(i,s.shape);if(0===o)return fu({inputs:{x:s},backend:n});const u=new Fy(s.shape,s.dtype),l=n.bufferSync(s);for(let c=0;c<u.size;c++){const t=u.indexToLoc(c),e=t.slice();a.forEach(t=>e[t]=s.shape[t]-1-e[t]),u.set(l.get(...e),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},pF={kernelName:ny,backendName:"cpu",kernelFunc({inputs:t,attrs:e,backend:n}){const{image:r}=t,{radians:s,fillValue:i,center:o}=e,a=n,u=H(r.dtype,P(r.shape)),[l,c,h,f]=r.shape,[d,p]=Hr(o,c,h),m=Math.sin(s),y=Math.cos(s),b=a.data.get(r.dataId).values;for(let g=0;l>g;g++){const t=g*h*c*f;for(let e=0;c>e;e++){const n=e*(h*f);for(let r=0;h>r;r++){const s=r*f;for(let o=0;f>o;o++){const a=[l,e,r,o],g=a[2],w=a[1];let x=(g-d)*y-(w-p)*m,v=(g-d)*m+(w-p)*y;x=Math.round(x+d),v=Math.round(v+p);let $=i;"number"!=typeof i&&($=3===o?255:i[o]),x>=0&&h>x&&v>=0&&c>v&&($=b[t+v*(h*f)+x*f+o]),u[t+n+s+o]=$}}}}return{dataId:a.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},mF=vu(mm,t=>{const e=Math.floor(t);return.5>t-e?Math.floor(t):t-e>.5?Math.ceil(t):e%2==0?e:e+1}),yF={kernelName:mm,backendName:"cpu",kernelFunc:mF},bF={kernelName:bm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s,updates:i}=e,{shape:o}=r,{sliceRank:a,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=mn(0,s,o),f=Pu(n.bufferSync(s),n.bufferSync(i),o,h,l,u,a,c,0,!0);return n.makeTensorInfo(o,f.dtype,f.values)}},gF={kernelName:gm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{sortedSequence:s,values:i}=e,{side:o}=r,a=((t,e,n,r,s,i)=>{const o=X("int32",n*s);for(let a=0;n>a;++a){const n=t.slice(a*r,(a+1)*r),u=a*s;for(let t=0;s>t;++t)o[u+t]="left"===i?vl(n,e[t+u]):$l(n,e[t+u])}return o})(n.data.get(s.dataId).values,n.data.get(i.dataId).values,s.shape[0],s.shape[1],i.shape[1],o);return n.makeTensorInfo(i.shape,"int32",a)}},wF={kernelName:wm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n}=t,{condition:r,t:s,e:i}=e;au([r,s,i],"select");const o=r.shape.length,a=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,c=re(s.dtype,i.dtype),h=ht(P(s.shape),c);let f=0;const d=0===o||o>1||1===s.shape.length?1:P(s.shape.slice(1));for(let p=0;p<a.length;p++)for(let t=0;d>t;t++)1===a[p]?h[f++]=u[p]:h[f++]=l[p];return n.makeTensorInfo(s.shape,c,h)}},xF=ek,vF=nk,$F=vu(xm,t=>0>t?xF*(Math.exp(t)-1):vF*t),kF={kernelName:xm,backendName:"cpu",kernelFunc:$F},NF=vu(Nm,t=>0>t?-1:t>0?1:0),CF={kernelName:Nm,backendName:"cpu",kernelFunc:NF},SF=vu($m,t=>Math.sin(t)),EF={kernelName:$m,backendName:"cpu",kernelFunc:SF},TF=vu(km,t=>Math.sinh(t)),_F={kernelName:km,backendName:"cpu",kernelFunc:TF},RF=Math.log(1.1920928955078125e-7)+2,AF=vu(Sm,t=>{const e=t>-RF,n=RF>t,r=Math.exp(t);let s;return s=n?r:e?t:Math.log(1+r),s}),OF={kernelName:Sm,backendName:"cpu",kernelFunc:AF},IF={kernelName:_m,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:i,paddings:o}=r;au([s],"spaceToBatchND");const a=P(i),u=[[0,0]];u.push(...o);for(let y=1+i.length;y<s.shape.length;++y)u.push([0,0]);const l=tF.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),c=Xr(l.shape,i,a,!1),h=Jr(c.length,i.length,!1),f=Kr(l.shape,i,a,!1),d=nl({inputs:{x:l},backend:n,attrs:{shape:c}}),p=Ru({inputs:{x:d},backend:n,attrs:{perm:h}}),m=nl({inputs:{x:p},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),m}},FF={kernelName:Om,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n}=t,{indices:r,values:s,denseShape:i,defaultValue:o}=e;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${i.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const a=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,c=n.data.get(o.dataId).values[0],[h,f,d,p,m]=zu(a,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(f,r.dtype,h),n.makeTensorInfo([f[0]],s.dtype,d),n.makeTensorInfo([p.length],"bool",new Uint8Array(p.map(t=>Number(t)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},MF={kernelName:Im,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n}=t,{inputIndices:r,inputShape:s,newShape:i}=e;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const o=Array.from(n.data.get(s.dataId).values),a=n.data.get(r.dataId).values,u=Array.from(n.data.get(i.dataId).values),[l,c,h]=Wu(a,r.shape,r.dtype,o,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}},DF={kernelName:Fm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:i}=e;if(1>r.shape.length)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${i.shape}`);if(s.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values,[l,c]=ju(o,r.shape,r.dtype,a,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},LF={kernelName:Mm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:i}=e;if(1>r.shape.length)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${i.shape}`);if(s.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values,[l,c]=ju(o,r.shape,r.dtype,a,u);return n.makeTensorInfo(c,r.dtype,l)}},PF={kernelName:Dm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:s,sparseValues:i,defaultValue:o}=e,{outputShape:a}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:f}=mn(0,s,a),d=!1,p=n.bufferSync(s);let m;switch(i.dtype){case"bool":m=Pu(p,n.bufferSync(i),a,f,c,l,u,h,Boolean(n.data.get(o.dataId).values[0]),d);break;case"float32":case"int32":m=Pu(p,n.bufferSync(i),a,f,c,l,u,h,n.data.get(o.dataId).values[0],d);break;case"string":m=Pu(p,n.bufferSync(i),a,f,c,l,u,h,Jt(n.data.get(o.dataId).values[0]),d);break;default:throw new Error(`Unsupported type ${i.dtype}`)}return n.makeTensorInfo(a,m.dtype,m.values)}},VF={kernelName:Rm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{numOrSizeSplits:i,axis:o}=r,a=G(o,s.shape)[0],u=ds(s,i,a),l=new Array(s.shape.length).fill(0),c=s.shape.slice();return u.map(t=>{const e=[...c];e[a]=t;const r=Bu({inputs:{x:s},backend:n,attrs:{begin:l,size:e}});return l[a]+=t,r})}},BF={kernelName:Pm,backendName:"cpu",kernelFunc({inputs:t,backend:e}){const{x:n}=t,r=e;au(n,"square");const s=r.data.get(n.dataId).values,i=new Float32Array(s.length);for(let o=0;o<s.length;++o){const t=s[o];i[o]=t*t}return{dataId:r.write(i,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},zF=vu(ty,(t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha}),WF={kernelName:ty,backendName:"cpu",kernelFunc:zF},jF={kernelName:Vm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:i,end:o,strides:a,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:f}=r;au(s,"stridedSlice");const{finalShapeSparse:d,finalShape:p,isIdentity:m,sliceDim0:y,isSimpleSlice:b,begin:g,end:w,strides:x}=_n(s.shape,i,o,a,u,l,c,h,f);let v;if(m)v=nl({inputs:{x:s},backend:n,attrs:{shape:p}});else if(y||b){F(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const t=bn(g,w,x),e=Bu({inputs:{x:s},backend:n,attrs:{begin:g,size:t}});v=nl({inputs:{x:e},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(e)}else{const t=Uu(d,n.bufferSync(s),x,g);v=n.makeTensorInfo(p,t.dtype,t.values)}return v}},UF={kernelName:Bm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{separator:s,nGramWidths:i,leftPad:o,rightPad:a,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=e,f=n.data.get(c.dataId).values,d=n.data.get(h.dataId).values,[p,m]=Gu(f,d,s,i,o,a,u,l);return[n.makeTensorInfo([p.length],"string",p),n.makeTensorInfo(h.shape,"int32",m)]}},GF={kernelName:zm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{skipEmpty:s}=r,{input:i,delimiter:o}=e;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const a=n.data.get(i.dataId).values,u=n.data.get(o.dataId).values[0],[l,c,h]=Hu(a,u,s),f=c.length;return[n.makeTensorInfo([f,2],"int32",l),n.makeTensorInfo([f],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},qF={kernelName:Wm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{numBuckets:s}=r,{input:i}=e;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(0>=s)throw new Error("Number of buckets must be at least 1");const o=Xu(n.data.get(i.dataId).values,s);return n.makeTensorInfo(i.shape,"int32",o)}},HF=vu(Um,t=>Math.tan(t)),XF={kernelName:Um,backendName:"cpu",kernelFunc:HF},JF=vu(Gm,t=>Math.tanh(t)),KF={kernelName:Gm,backendName:"cpu",kernelFunc:JF},YF={kernelName:qm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reps:i}=r;au(s,"tile");const o=Ju(n.bufferSync(s),i);return n.makeTensorInfo(o.shape,o.dtype,o.values)}},ZF={kernelName:Hm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{k:i,sorted:o}=r;au(s,"topk");const a=n.data.get(s.dataId).values,[u,l]=Yu(a,s.shape,s.dtype,i,o);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},QF={kernelName:Xm,backendName:"cpu",kernelFunc(t){const{inputs:e,attrs:n,backend:r}=t,{image:s,transforms:i}=e,{interpolation:o,fillMode:a,fillValue:u,outputShape:l}=n,[c,h,f,d]=s.shape,[p,m]=null!=l?l:[h,f],y=[c,p,m,d],b=at(s.shape),g=b[0],w=b[1],x=b[2],v=at(y),$=v[0],k=v[1],N=v[2],C=H(s.dtype,P(y));C.fill(u);const S=r.data.get(s.dataId).values,E=r.data.get(i.dataId).values;for(let T=0;c>T;++T){const t=1===i.shape[0]?E:E.subarray(8*T,8*T+8);for(let e=0;p>e;++e)for(let n=0;m>n;++n)for(let r=0;d>r;++r){let s;const i=t[6]*n+t[7]*e+1;if(0===i)continue;const l=(t[0]*n+t[1]*e+t[2])/i,c=(t[3]*n+t[4]*e+t[5])/i,d=kl(l,f,a),p=kl(c,h,a);switch(o){case"nearest":s=Cl(S,h,f,g,w,x,T,p,d,r,u);break;case"bilinear":s=Sl(S,h,f,g,w,x,T,p,d,r,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}C[T*$+e*k+n*N+r]=s}return r.makeTensorInfo(y,s.dtype,C)}return{dataId:r.write(C,y,s.dtype),shape:s.shape,dtype:s.dtype}}},tM={kernelName:Km,backendName:"cpu",kernelFunc(t){const{inputs:e,attrs:n,backend:r}=t,{axis:s}=n,{x:i}=e;au(i,"unique");const o=r.data.get(i.dataId).values,{outputValues:a,outputShape:u,indices:l}=Zu(o,s,i.shape,i.dtype);return[r.makeTensorInfo(u,i.dtype,a),r.makeTensorInfo([l.length],"int32",l)]}},eM={kernelName:Ym,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{value:s}=e;let{axis:i}=r;0>i&&(i+=s.shape.length);const o=s.shape.length,a=s.shape[i],u=new Array(o-1);let l=0;for(let d=0;o>d;d++)d!==i&&(u[l++]=s.shape[d]);const c=new Array(o).fill(0),h=s.shape.slice();h[i]=1;const f=new Array(a);for(let d=0;d<f.length;d++){c[i]=d;const t=Bu({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});f[d]=nl({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return f}},nM={kernelName:Zm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,segmentIds:i}=e,{numSegments:o}=r;au(s,"unsortedSegmentSum");const a=[],u=[],l=s.shape.length-i.shape.length;let c=i;for(let f=0;l>f;++f){const t=fl({inputs:{input:c},backend:n,attrs:{dim:f+1}});c=t,u.push(t)}for(let f=0;o>f;++f){const t=Ut(f,"int32"),e=n.makeTensorInfo([],"int32",t),r=yR({inputs:{a:e,b:c},backend:n}),i=mu({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),o=KR({inputs:{a:i,b:s},backend:n}),l=hl({inputs:{x:o},backend:n,attrs:{axis:0,keepDims:!1}});a.push(l),u.push(e),u.push(r),u.push(i),u.push(o),u.push(l)}const h=xl({inputs:a,backend:n,attrs:{axis:0}});return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),h}},rM=[LA,rR,VA,zA,hR,WA,jA,UA,GA,qA,XA,KA,ZA,eO,rO,sO,iO,oO,aO,DA,uO,lO,cO,hO,aR,pR,dO,sR,pO,yO,bO,gO,wO,xO,vO,$O,NO,SO,EO,TO,_O,RO,AO,OO,IO,FO,MO,DO,LO,PO,BO,EA,zO,bR,JO,xR,KO,kR,tI,eI,nI,SR,iI,oI,aI,uI,lI,_R,OR,iR,cI,mO,fI,pI,yI,TA,MR,PR,bI,zR,wI,$I,NI,EI,TI,_I,RI,UR,AI,OI,II,FI,MI,DI,LI,HR,PI,zI,jI,YR,ZR,GI,HI,JI,eA,KI,ZI,QI,tF,rF,RA,rA,sF,iF,oF,oR,QO,uF,OA,FA,MA,lF,cF,hF,fF,dF,pF,yF,uA,bF,gF,wF,kF,hA,CF,EF,_F,fA,WI,OF,IF,FF,MF,DF,LF,PF,VF,mA,BF,gA,WF,jF,UF,GF,qF,kA,VO,XF,KF,YF,ZF,QF,nA,tM,eM,nM,YI];for(const ZJ of rM)Ct(ZJ);const sM={},iM={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};var oM,aM,uM,lM,cM,hM;(aM=oM||(oM={}))[aM.DENSE=0]="DENSE",aM[aM.SHARED_BATCH=1]="SHARED_BATCH",(lM=uM||(uM={}))[lM.RENDER=0]="RENDER",lM[lM.UPLOAD=1]="UPLOAD",lM[lM.PIXELS=2]="PIXELS",lM[lM.DOWNLOAD=3]="DOWNLOAD",(hM=cM||(cM={}))[hM.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",hM[hM.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",hM[hM.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",hM[hM.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",hM[hM.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16";const fM=/ERROR: [0-9]+:([0-9]+):/g;let dM,pM;const mM=gt();mM.registerFlag("HAS_WEBGL",()=>mM.getNumber("WEBGL_VERSION")>0),mM.registerFlag("WEBGL_VERSION",()=>Xl(2)?2:Xl(1)?1:0),mM.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),mM.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===mM.get("WEBGL_VERSION")),mM.registerFlag("WEBGL_CPU_FORWARD",()=>!0),mM.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),mM.registerFlag("WEBGL_PACK",()=>mM.getBool("HAS_WEBGL")),mM.registerFlag("WEBGL_PACK_NORMALIZATION",()=>mM.getBool("WEBGL_PACK")),mM.registerFlag("WEBGL_PACK_CLIP",()=>mM.getBool("WEBGL_PACK")),mM.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>mM.getBool("WEBGL_PACK")),mM.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>mM.getBool("WEBGL_PACK")),mM.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>mM.getBool("WEBGL_PACK")),mM.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>mM.getBool("WEBGL_PACK")),mM.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>mM.getBool("WEBGL_PACK")),mM.registerFlag("WEBGL_PACK_REDUCE",()=>mM.getBool("WEBGL_PACK")),mM.registerFlag("WEBGL_LAZILY_UNPACK",()=>mM.getBool("WEBGL_PACK")),mM.registerFlag("WEBGL_CONV_IM2COL",()=>mM.getBool("WEBGL_PACK")),mM.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>(t=>{if(null==dM){const e=El(t);dM=e.getParameter(e.MAX_TEXTURE_SIZE)}return dM})(mM.getNumber("WEBGL_VERSION"))),mM.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>(t=>{if(null==pM){const e=El(t);pM=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,pM)})(mM.getNumber("WEBGL_VERSION"))),mM.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const t=mM.getNumber("WEBGL_VERSION");return 0===t?0:(t=>{if(0===t)return 0;let e;const n=El(t);return e=Hl(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:Hl(n,"EXT_disjoint_timer_query")?1:0,e})(t)}),mM.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>mM.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!de()),mM.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>(t=>{if(0===t)return!1;const e=El(t);if(1===t){if(!Hl(e,"OES_texture_float"))return!1}else if(!Hl(e,"EXT_color_buffer_float"))return!1;return Jl(e)})(mM.getNumber("WEBGL_VERSION"))),mM.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!mM.getBool("WEBGL_FORCE_F16_TEXTURES")&&mM.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),mM.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>(t=>{if(0===t)return!1;const e=El(t);if(1!==t){if(Hl(e,"EXT_color_buffer_float"))return Jl(e);const t="EXT_color_buffer_half_float";if(Hl(e,t)){const n=e.getExtension(t);return((t,e)=>{const n=Al(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,s),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(s),i})(e,n)}return!1}return!!Hl(e,"OES_texture_float")&&!!Hl(e,"WEBGL_color_buffer_float")&&Jl(e)})(mM.getNumber("WEBGL_VERSION"))),mM.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(t=mM.getNumber("WEBGL_VERSION"))&&null!=El(t).fenceSync;var t}),mM.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>mM.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),mM.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,t=>{if(0>t&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)}),mM.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>de()?1:-1,t=>{if(0>t&&-1!==t)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${t}.`)}),mM.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),mM.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),mM.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),mM.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),mM.registerFlag("WEBGL_EXP_CONV",()=>!1),mM.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>mM.getBool("IS_TEST")),mM.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),mM.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),mM.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);const yM="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:bM}=fk,gM="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",wM="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",xM="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",vM="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";class $M{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=oM.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=Yl();this.outputShape=t,this.enableShapeUniforms=fc(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?Ql(["r","c","d"],t):Zl(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${e.output} = result;\n      }\n    `}}class kM{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=oM.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=Yl();this.outputShape=t,this.enableShapeUniforms=fc(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?Ql(["r","c","d"],t):Zl(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${e.output} = result;\n      }\n    `}}class NM{constructor(t){this.variableNames=["A"],this.outTexUsage=uM.DOWNLOAD;const e=Yl();this.outputShape=t,this.userCode=`\n      ${yM}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class CM{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=uM.DOWNLOAD;const e=Yl();this.outputShape=t,this.userCode=`\n      ${yM}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class SM{constructor(t,e=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Yl();this.outputShape=t,this.enableShapeUniforms=fc(this.outputShape.length);let r="result";e&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":tc(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class EM{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Yl();this.outputShape=t,this.enableShapeUniforms=fc(this.outputShape.length);let r="",s="result";e&&(s="floor(result * 255. + 0.5)");for(let i=0;1>=i;i++)for(let e=0;1>=e;e++){const s=2*i+e;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${e} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {\n          localCoords[2] += ${e};\n          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {\n            localCoords[1] += ${i};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":tc(t)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}class TM{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=gt().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,((t,e)=>{sM[t]=e})(e,t)):this.gl=El(e);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===gt().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=Fl(this.gl,t),Hl(this.gl,e))this.textureHalfFloatExtension=Fl(this.gl,e);else if(gt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Hl(this.gl,r))this.colorBufferHalfFloatExtension=Fl(this.gl,r);else if(gt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Hl(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Hl(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=(t=>((t,e)=>{const n=zl(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return Ol(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),Ol(t,()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW)),n})(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0])))(this.gl),this.indexBuffer=(t=>((t,e)=>{const n=zl(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return Ol(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n)),Ol(t,()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW)),n})(t,new Uint16Array([0,1,2,2,1,3])))(this.gl),this.framebuffer=(t=>zl(t,()=>t.createFramebuffer(),"Unable to create WebGLFramebuffer."))(this.gl),this.textureConfig=Al(this.gl,this.textureHalfFloatExtension)}get debug(){return gt().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program,this.outputTexture;const t=this.gl;Ol(t,()=>t.finish()),Ol(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),Ol(t,()=>t.deleteFramebuffer(this.framebuffer)),Ol(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),Ol(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),Ol(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),((t,e,n,r)=>{const[s,i]=Tl(e,n);return dc(t,s,i,pc(r),r.textureFormatFloat,t.FLOAT)})(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),((t,e,n,r)=>{const[s,i]=Tl(e,n);return dc(t,s,i,mc(r),r.textureFormatFloat,r.textureTypeHalfFloat)})(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),((t,e,n,r)=>{const[s,i]=Tl(e,n);return dc(t,s,i,yc(r),t.RGBA,t.UNSIGNED_BYTE)})(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),((t,e,n)=>{Ol(t,()=>t.bindTexture(t.TEXTURE_2D,e)),n.data instanceof Uint8Array?2===gt().getNumber("WEBGL_VERSION")?Ol(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n.width,n.height,t.RGBA,t.UNSIGNED_BYTE,n.data)):Ol(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data)):2===gt().getNumber("WEBGL_VERSION")?Ol(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,t.RGBA,t.UNSIGNED_BYTE,n)):Ol(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n)),Ol(t,()=>t.bindTexture(t.TEXTURE_2D,null))})(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),((t,e,n,r,s,i)=>{let o,a,u;Ol(t,()=>t.bindTexture(t.TEXTURE_2D,e)),s instanceof Uint8Array?(o=new Uint8Array(n*r*4),a=t.UNSIGNED_BYTE,u=t.RGBA):(o=new Float32Array(n*r*4),a=t.FLOAT,u=i.internalFormatPackedFloat),o.set(s),2===gt().getNumber("WEBGL_VERSION")?Ol(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n,r,t.RGBA,a,o)):Ol(t,()=>t.texImage2D(t.TEXTURE_2D,0,u,n,r,0,t.RGBA,a,o)),Ol(t,()=>t.bindTexture(t.TEXTURE_2D,null))})(this.gl,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),((t,e,n,r)=>{const[s,i]=Rl(e,n);return dc(t,s,i,gc(r),t.RGBA,r.textureTypeHalfFloat)})(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),((t,e,n,r)=>{const[s,i]=Rl(e,n);return dc(t,s,i,bc(r),t.RGBA,t.FLOAT)})(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(Vl(this.gl,this.framebuffer),this.outputTexture=null),Ol(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,()=>((t,e,n,r)=>{const[s,i]=Tl(e,n),o=new Uint8Array(e*n*4);return Ol(t,()=>t.readPixels(0,0,s,i,r.downloadTextureFormat,t.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)})(this.gl,e,n,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,n,r,s,i){return((t,e,n,r,s,i,o)=>{const a=t,u=new Float32Array(((t,e)=>{const[n,r]=Rl(t,e);return n*r*4})(i,o));return a.bindBuffer(a.PIXEL_PACK_BUFFER,e),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,u),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),u})(this.gl,t,0,0,0,s,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return((t,e,n)=>{const r=t,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s})(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=((t,e,n)=>{const r=t.createBuffer();Ol(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,r));const s=16*e*n;return Ol(t,()=>t.bufferData(t.PIXEL_PACK_BUFFER,s,t.STREAM_READ)),Ol(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0)),Ol(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null)),r})(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(gt().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(s,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=s}else gt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,gt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,()=>((t,e,n)=>{const r=new Float32Array(e*n*4);return Ol(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r)),r})(this.gl,e,n))}createProgram(t){this.throwIfDisposed();const e=this.gl;null==this.vertexShader&&(this.vertexShader=(t=>{const e=Yl();return((t,e)=>{const n=zl(t,()=>t.createShader(t.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Ol(t,()=>t.shaderSource(n,e)),Ol(t,()=>t.compileShader(n)),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw new Error("Failed to compile vertex shader.");return n})(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)})(e));const n=(t=>zl(t,()=>t.createProgram(),"Unable to create WebGLProgram."))(e);return Ol(e,()=>e.attachShader(n,this.vertexShader)),Ol(e,()=>e.attachShader(n,t)),((t,e)=>{if(Ol(t,()=>t.linkProgram(e)),!gt().get("ENGINE_COMPILE_ONLY")&&!1===t.getProgramParameter(e,t.LINK_STATUS))throw new Error("Failed to link vertex and fragment shaders.")})(e,n),this.debug&&Dl(e,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=((t,e,n)=>(Ol(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),Ll(t,e,"clipSpacePos",n,3,20,0)&&Ll(t,e,"uv",n,2,20,12)))(e,this.program,this.vertexBuffer)),n}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&Ol(this.gl,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&Dl(this.gl,this.program),Ol(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?((t,e,n)=>zl(t,()=>t.getUniformLocation(e,n),'uniform "'+n+'" not present in program.'))(this.gl,t,e):((t,e,n)=>t.getUniformLocation(e,n))(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),Ol(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),((t,e,n,r)=>{Ol(t,()=>((t,e,n)=>{((t,e)=>{const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(t,n),Ol(t,()=>t.activeTexture(t.TEXTURE0+n)),Ol(t,()=>t.bindTexture(t.TEXTURE_2D,e))})(t,e,r)),Ol(t,()=>t.uniform1i(n,r))})(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,s]=Rl(e,n);this.setOutputMatrixTextureDriver(t,r,s)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&Dl(this.gl,this.program),Bl(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),Ol(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Ol(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=Fl(this.gl,2===gt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===gt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===gt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}waitForQueryAndGetTime(t){return cf(this,null,function*(){return yield j(()=>this.disposed||this.isQueryAvailable(t,gt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,gt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))})}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=(t=>{let e=0;for(;e<t.length&&t[e]();++e);return e-1})(this.itemsToPoll.map(t=>t.isDoneFn));for(let e=0;t>=e;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in gt().platform&&(n=gt().platform.setTimeoutCustom.bind(gt().platform)),j(()=>(this.pollItems(),0===this.itemsToPoll.length),()=>0,null,n)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Pl(this.gl,t,this.framebuffer),this.debug&&Bl(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Pl(this.gl,this.outputTexture,this.framebuffer),this.debug&&Bl(this.gl)):Vl(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;Pl(r,t,this.framebuffer),this.debug&&Bl(r),this.outputTexture=t,Ol(r,()=>r.viewport(0,0,e,n)),Ol(r,()=>r.scissor(0,0,e,n))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),Ol(this.gl,()=>this.gl.scissor(t,e,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:_M,bincountImpl:RM,bincountReduceImpl:AM,castImpl:OM,ceilImpl:IM,concatImpl:FM,equalImpl:MM,expImpl:DM,expm1Impl:LM,floorImpl:PM,gatherNdImpl:VM,gatherV2Impl:BM,greaterImpl:zM,greaterEqualImpl:WM,lessImpl:jM,lessEqualImpl:UM,linSpaceImpl:GM,logImpl:qM,maxImpl:HM,maximumImpl:XM,minimumImpl:JM,multiplyImpl:KM,negImpl:YM,notEqualImpl:ZM,prodImpl:QM,raggedGatherImpl:tD,raggedTensorToTensorImpl:eD,rangeImpl:nD,rsqrtImpl:rD,scatterImpl:sD,sigmoidImpl:iD,simpleAbsImpl:oD,sliceImpl:aD,sparseFillEmptyRowsImpl:uD,sparseReshapeImpl:lD,sparseSegmentReductionImpl:cD,sqrtImpl:hD,stridedSliceImpl:fD,stringNGramsImpl:dD,stringSplitImpl:pD,stringToHashBucketFastImpl:mD,subImpl:yD,tileImpl:bD,topKImpl:gD,transposeImpl:wD,uniqueImpl:xD}=CA;class vD{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=fc(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const t=xc("rc",this.rank),e=oc(this.rank),n=this.getOutOfBoundsCondition(t),r=this.getSetup(t),s=this.getOutput(t);this.userCode=`\n        void main() {\n          ${e} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(t){const e=[];for(let n=0;1>=n;n++)for(let r=0;1>=r;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let e=2;e<this.rank;e++)s=`${t[t.length-1-e]},`+s;e.push(s)}return e}getOutOfBoundsCondition(t){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let n=this.rank-2;n<this.rank;n++)e+=`${t[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(e+="||");return e}getSetup(t){if(1===this.rank)return"";const e=t.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${e[0]};\n      int c = ${e[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(t){const e=this.getSourceCoordsArr(t);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),\n            cEdge ? 0. : getA(${e[1]}),\n            rEdge ? 0. : getA(${e[2]}),\n            rEdge || cEdge ? 0. : getA(${e[3]})`}}class $D{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=fc(this.outputShape.length);let n="";for(let i=0;4>i;i++){let t="thisRC = rc;";i%2==1&&(t+="thisRC.z += 1;"),i>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${i>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${i}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${i>0?"}":""}\n      `}var r,s;this.userCode=`\n      ${r=e,s=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s?((t,e,n="index")=>{const r=t.map((t,e)=>e),s=((t,e)=>{const n=t.length,r=t.map(t=>`${e}[${t}]`),s=new Array(n-1);s[n-2]=r[n-1];for(let i=n-3;i>=0;--i)s[i]=`(${s[i+1]} * ${r[i+1]})`;return s})(r,e);return s.map((e,r)=>`int ${t[r]} = ${n} / ${s[r]}; ${r===s.length-1?`int ${t[r+1]} = ${n} - ${t[r]} * ${s[r]}`:`index -= ${t[r]} * ${s[r]}`};`).join("")})(["r","c","d"],"inputShape"):Zl(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":tc(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class kD{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this.vt=0,this.$t=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=$c(e,n),s=kc(t,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const i=vc(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this.$t-=i,this.log();const t=this.freeTextures[s].shift();return this.usedTextures[s].push(t),t}let o;return r===cM.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===cM.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===cM.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===cM.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===cM.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(o),this.numUsedTextures++,this.vt+=i,this.log(),o}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const s=$c(n,r),i=kc(e,s,r);i in this.freeTextures||(this.freeTextures[i]=[]);const o=vc(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),a=gt().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==a&&this.vt>a?(this.gpgpu.deleteMatrixTexture(t.texture),this.vt-=o):(this.freeTextures[i].push(t),this.numFreeTextures++,this.$t+=o),this.numUsedTextures--;const u=this.usedTextures[i],l=u.indexOf(t);if(0>l)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){this.logEnabled&&(this.numFreeTextures,this.numUsedTextures,this.$t,this.vt)}get numBytesAllocated(){return this.vt}get numBytesFree(){return this.$t}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const t in this.usedTextures)this.usedTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this.vt=0,this.$t=0}}}class ND{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=fc(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const CD="if (isnan(x)) return x;",SD="return abs(x);",ED=CD+"\n  return (x < 0.0) ? 0.0 : x;\n",TD=CD+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",_D="return x;";class RD{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=fc(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class AD{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=fc(this.outputShape.length);const e=t.length,n=xc("rc",e),r=oc(e),s=((t,e)=>{if(1===t)return"rc";let n="";for(let r=0;t>r;r++)n+=e[r],t-1>r&&(n+=",");return n})(e,n),i=n.slice(-2),o=e>1?`vec2(${i.join(",")})`:"rc";this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${o}));\n      }\n    `}}const OD=$r,ID={},FD=gt().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class MD extends Hf{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!gt().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(null!=t){if(t instanceof TM)e=t;else{const n=El(gt().getNumber("WEBGL_VERSION"),t);e=new TM(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const t=El(gt().getNumber("WEBGL_VERSION"));e=new TM(t),this.binaryCache=((n=gt().getNumber("WEBGL_VERSION"))in ID||(ID[n]={}),ID[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new kD(this.gpgpu),this.numMBBeforeWarning=null==gt().global.screen?1024:gt().global.screen.height*gt().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new qf(this,Qe())}nextDataId(){return MD.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(t,e,n){if((gt().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||gt().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:uM.UPLOAD,refCount:1}),r}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){this.texData.get(t).refCount++}decRef(t){this.texData.has(t)&&this.texData.get(t).refCount--}move(t,e,n,r,s){if(gt().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:uM.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensorInfos:s,slice:i,shape:o,isPacked:a}=e;if(null!=i){let e;e=a?new RD(o,_D):new ND(o,_D);const n=this.runWebGLProgram(e,[{dataId:t,shape:o,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;return u&&(l=qt()),c="complex64"===r?Qr(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(t),u&&(this.downloadWaitMs+=qt()-l),this.convertAndCacheOnCPU(t,c)}read(t){return cf(this,null,function*(){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise(t=>e.push(t))}const e=this.texData.get(t),{values:n,shape:r,slice:s,dtype:i,complexTensorInfos:o,isPacked:a}=e;if(null!=s){let e;e=a?new RD(r,_D):new ND(r,_D);const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:i}],i),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if(gt().getBool("DEBUG")&&!gt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===gt().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==i&&gt().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(t);const e=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(e.texture.texture,..._l(r))}if(this.pendingRead.set(t,[]),"complex64"!==i&&(yield this.gpgpu.createAndWaitForFence()),"complex64"===i){const t=yield Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]);l=Qr(t[0],t[1])}else if(null==c)l=this.getValuesFromTexture(t);else{const t=P(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,t)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=c){const t=this.gpgpu.gl;Ol(t,()=>t.deleteBuffer(c))}const h=this.convertAndCacheOnCPU(t,l),f=this.pendingRead.get(t);return this.pendingRead.delete(t),f.forEach(t=>t(h)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&Qe().removeDataId(t,this),this.pendingDeletes--),h})}readToGPU(t,e={}){const n=this.texData.get(t),{values:r,shape:s,slice:i,dtype:o,isPacked:a,texture:u}=n;if("complex64"===o)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=i){let n;n=a?new RD(s,_D):new ND(s,_D);const r=this.runWebGLProgram(n,[{dataId:t,shape:s,dtype:o}],o),i=this.readToGPU(r,e);return this.disposeIntermediateTensorInfo(r),i}if(null==u)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(t,e.customTexShape),c=Qe().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(t){const e=this.readSync(t.dataId);if("string"===t.dtype)try{const n=e.map(t=>Jt(t));return We(t.shape,t.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return We(t.shape,t.dtype,e)}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!Il(n)){if(gt().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),s=P(e);if(gt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,..._l(e)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),i}const i=gt().getBool("WEBGL_PACK")&&!0===r,o=i?Ul(e):e,a=i?new CM(o):new NM(o),u=this.runWebGLProgram(a,[{shape:o,dtype:n,dataId:t}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return gt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const e=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();const s=L(this.activeTimers.map(t=>t.query)).filter(t=>null!=t),i=L(this.activeTimers.map(t=>t.name)).filter(t=>null!=t);this.activeTimers=e,r&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(()=>cf(this,null,function*(){if(gt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=yield Promise.all(s);o.kernelMs=I(t),o.getExtraProfileInfo=()=>t.map((t,e)=>({name:i[e],ms:t})).map(t=>`${t.name}: ${t.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}))()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return gt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:qt(),endMs:null}}endTimer(t){return gt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=qt(),t)}getQueryTime(t){return cf(this,null,function*(){if(gt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs})}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:n}=this.texData.get(t);return null!=n&&(this.disposeData(n.real.dataId,e),this.disposeData(n.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:s,isPacked:i,slice:o}=this.texData.get(t),a=o&&o.origDataId||t,u=this.dataRefCount.get(a);u>1?this.dataRefCount.set(a,u-1):(this.dataRefCount.delete(a),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,s,i)));const l=this.texData.get(t);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=FD){return gt().getBool("WEBGL_CPU_FORWARD")&&t.every(t=>null==this.texData.get(t.dataId).texture&&P(t.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){vt();const e=t.dataSync();return OD(t.shape,e)}packedUnaryOp(t,e,n){const r=new RD(t.shape,e),s=this.compileAndRun(r,[t],n);return Qe().makeTensorFromTensorInfo(s)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=oD(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(gt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,SD,t.dtype);const e=new ND(t.shape,SD),n=this.compileAndRun(e,[t]);return Qe().makeTensorFromTensorInfo(n)}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&et(n[0])){const s=n.map(t=>Xt(t));r=this.write(s,t,e)}else r=this.write(n,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,n){return Qe().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,n),this)}unpackTensor(t){const e=new AD(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new vD(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[Wl(t.shape),...jl(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},s=[Wl(e),...jl(e)],i=new $D(s,n),o=[n],a=this.runWebGLProgram(i,[r],t.dtype,o,!0);return{dataId:a.dataId,shape:e,dtype:a.dtype}}decode(t,e){const n=this.texData.get(t),{isPacked:r,shape:s,dtype:i}=n;if(null!=e){const t=P(s);F(e[0]*e[1]*4>=t,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const o=Ul(s);let a;a=r?new kM(o):new $M(o);const u=[null!=e?e:_l(o)];return{dtype:i,shape:s,dataId:this.runWebGLProgram(a,[{shape:o,dtype:i,dataId:t}],i,u,!0,e).dataId}}runWebGLProgram(t,e,n,r,s=!1,i){const o=this.makeTensorInfo(t.outputShape,n),a=this.texData.get(o.dataId);if(t.packedOutput&&(a.isPacked=!0),t.outPackingScheme===oM.DENSE){const e=null!=i?i:_l(t.outputShape);a.texShape=e.map(t=>2*t)}if(null!=t.outTexUsage&&(a.usage=t.outTexUsage),0===P(o.shape))return a.values=H(o.dtype,0),o;const u=[],l=e.map(e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&P(e.shape)<=gt().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}if(this.uploadToGPU(e.dataId),!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),u.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!ql(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),u.push(e),n=this.texData.get(e.dataId),t.shape=r}return{shape:e.shape,texData:n,isUniform:!1}});this.uploadToGPU(o.dataId);const c={shape:o.shape,texData:a,isUniform:!1},h=((t,e,n)=>{let r="";e.concat(n).forEach(e=>{const s=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0;if(t.enableShapeUniforms&&!e.isUniform){const i=e.texData.texShape,{useSqueezeShape:o,uniformShape:a,keptDims:u}=ac(t.packedInputs,e.shape,i);let l="",c="",h="";if(1===a.length&&t.packedInputs){const t=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];l=`${t[0]>1}_${t[1]>1}`}else if(2!==a.length||t.packedInputs){if(a.length>2&&!t.packedInputs){const t=at(a);h=`${t[0]===i[1]}_${t[t.length-1]===i[1]}`}}else c=`${a[0]>1}_${a[1]>1}`;const f=e.shape.length,d=2===a.length&&V(e.shape,i),p=1===P(e.shape),m=an(e.shape,n.shape),y=!t.packedInputs&&f===n.shape.length&&V(i,n.texData.texShape),b=t.packedInputs||a.length>2?"":`${i[0]>1}_${i[1]>1}`;r+=`${f}_${y}_${o?u:""}_${a.length}_${p}_${m}_${d}_${l}_${c}_${h}_${b}_${s}`}else{const t=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${t}_${s}`}});const s=t.userCode;let i=t.constructor.name;return i+="_"+r+"_"+s+`${gt().getNumber("WEBGL_VERSION")}`,i})(t,l,c),f=this.getAndSaveBinary(h,()=>((t,e,n,r)=>{const s=n.map((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}}),i=s.map(t=>t.shapeInfo),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},a=ec(s,o,e),u=((t,e)=>{const n=zl(t,()=>t.createShader(t.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Ol(t,()=>t.shaderSource(n,e)),Ol(t,()=>t.compileShader(n)),gt().get("ENGINE_COMPILE_ONLY"))return n;if(!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw Ml(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n})(t.gl,a),l=t.createProgram(u);return gt().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:u,source:a,webGLProgram:l,inShapeInfos:i,outShapeInfo:o,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:e,fragmentShader:u,source:a,webGLProgram:l,inShapeInfos:i,outShapeInfo:o},cc(t,e,l))})(this.gpgpu,t,l,c)),d=null!=this.activeTimers;let p;d&&(p=this.startTimer()),gt().get("ENGINE_COMPILE_ONLY")||((t,e,n,r,s)=>{e.program.enableShapeUniforms||(hc(e.inShapeInfos,n),hc([e.outShapeInfo],[r]));const i=r.texData.texture,o=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(i.texture,o[0],o[1]):t.setOutputMatrixTexture(i.texture,o[0],o[1]),t.setProgram(e.webGLProgram),1===gt().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach((n,r)=>{const s=e.program.variableNames[r],i=e.uniformLocations[s],o=e.uniformLocations[`offset${s}`],a=e.inShapesLocations[`${s}Shape`],u=e.inTexShapesLocations[`${s}TexShape`];if(a){const{uniformShape:r}=ac(e.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:t.gl.uniform1iv(a,new Int32Array(r));break;case 2:t.gl.uniform2iv(a,new Int32Array(r));break;case 3:t.gl.uniform3iv(a,new Int32Array(r));break;case 4:t.gl.uniform4iv(a,new Int32Array(r))}}if(u&&t.gl.uniform2i(u,n.texData.texShape[0],n.texData.texShape[1]),null!=i)if(n.isUniform)if(2>P(n.shape))t.gl.uniform1f(i,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(i,e)}else null!=n.texData.slice&&null!=o&&t.gl.uniform1i(o,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture.texture,i,r)});const a=e.outShapeLocation;if(a)switch(r.shape.length){case 1:t.gl.uniform1iv(a,new Int32Array(r.shape));break;case 2:t.gl.uniform2iv(a,new Int32Array(r.shape));break;case 3:t.gl.uniform3iv(a,new Int32Array(r.shape));break;case 4:t.gl.uniform4iv(a,new Int32Array(r.shape))}if(e.outShapeStridesLocation){const n=at(r.shape);switch(r.shape.length){case 2:t.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(n));break;case 3:t.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(n));break;case 4:t.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(n))}}e.outTexShapeLocation&&t.gl.uniform2i(e.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),e.program.customUniforms&&s&&e.program.customUniforms.forEach((n,r)=>{const i=e.customUniformLocations[r],o=s[r];if("float"===n.type)t.gl.uniform1fv(i,o);else if("vec2"===n.type)t.gl.uniform2fv(i,o);else if("vec3"===n.type)t.gl.uniform3fv(i,o);else if("vec4"===n.type)t.gl.uniform4fv(i,o);else if("int"===n.type)t.gl.uniform1iv(i,o);else if("ivec2"===n.type)t.gl.uniform2iv(i,o);else if("ivec3"===n.type)t.gl.uniform3iv(i,o);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);t.gl.uniform4iv(i,o)}}),t.executeProgram()})(this.gpgpu,f,l,c,r),u.forEach(t=>this.disposeIntermediateTensorInfo(t)),d&&(p=this.endTimer(p),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(p)}));const m=gt().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const t=qt();t-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=t)}if(!gt().getBool("WEBGL_LAZILY_UNPACK")&&a.isPacked&&!1===s){const t=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),t}return o}compileAndRun(t,e,n,r,s=!1){return n=n||e[0].dtype,this.runWebGLProgram(t,e,n,r,s)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(gt().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=en(()=>{if(!gt().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=gt().getBool("DEBUG");gt().set("DEBUG",!1);const e=this.abs(sr(1e-8)).dataSync()[0];if(gt().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:s,texture:i,usage:o,isPacked:a}=e;if(null!=i)return;const u=null!=this.activeTimers;let l;u&&(l=qt());let c=e.texShape;if(null==c&&(c=((t,e=!1)=>{let n=gt().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=gt().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&gt().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),e&&(n*=2,r*=2,t=t.map((e,n)=>n<t.length-2?t[n]:A(t[n])),1===t.length&&(t=[2,t[0]])),2!==t.length){const e=q(t);t=e.newShape}let s=P(t),i=null;t.length>1||s>n?2!==t.length||t[0]>n||t[1]>n?3!==t.length||t[0]*t[1]>n||t[2]>n?3!==t.length||t[0]>n||t[1]*t[2]>n?4!==t.length||t[0]*t[1]*t[2]>n||t[3]>n?4!==t.length||t[0]>n||t[1]*t[2]*t[3]>n||(i=[t[0],t[1]*t[2]*t[3]]):i=[t[0]*t[1]*t[2],t[3]]:i=[t[0],t[1]*t[2]]:i=[t[0]*t[1],t[2]]:i=t:i=[1,s];const o=null!=i&&Math.max(...i)>r&&Math.min(...i)<=(e?2:1)&&Math.min(...i)>0;if(null==i||o)if(e){const e=Wl(t);let n=2,r=2;t.length&&([n,r]=jl(t)),s=e*(n/2)*(r/2),i=z(s).map(t=>2*t)}else i=z(s);return i})(n,a),e.texShape=c),null!=s){const t=Ul(n);let i,o=c[1],h=c[0];const f=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!a&&f||([o,h]=Rl(c[0],c[1])),i=a?new EM(t,f):new SM(t,f);const d=f?[h,o]:c,p=this.makeTensorInfo(d,r),m=this.texData.get(p.dataId);m.usage=f?uM.PIXELS:uM.UPLOAD,m.texShape=d,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(p.dataId),o,h,s);const y=[[h,o]],b=!0,g=this.runWebGLProgram(i,[p],r,y,b),w=this.texData.get(g.dataId);e.texShape=w.texShape,e.isPacked=w.isPacked,e.usage=w.usage,gt().get("ENGINE_COMPILE_ONLY")?this.disposeData(g.dataId):(e.texture=w.texture,e.values=null,this.texData.delete(g.dataId)),this.disposeIntermediateTensorInfo(p),u&&(this.uploadWaitMs+=qt()-l)}else{const t=this.acquireTexture(c,o,r,a);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=((t,e)=>{if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error(`Unknown dtype ${e}`)})(e,r)),n.values}acquireTexture(t,e,n,r){return this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024&&((this.numBytesInGPU/1024/1024).toFixed(2),this.warnedAboutMemory=!0),this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*Q(e)}checkCompileCompletion(){for(const[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}checkCompileCompletionAsync(){return cf(this,null,function*(){const t=[];if(this.gpgpu.parallelCompilationExtension){for(const[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}for(const[,e]of Object.entries(this.binaryCache)){const n=new Promise(t=>{try{this.checkCompletion_(e),t(!0)}catch(n){throw n}});t.push(n)}return Promise.all(t)})}checkCompletionAsync_(t){return cf(this,null,function*(){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(yield Vr(),this.checkCompletionAsync_(t))})}checkCompletion_(t){if(!1===this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(!1===this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw Ml(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const[,t]of Object.entries(this.binaryCache)){const{uniformLocations:e,customUniformLocations:n,infLoc:r,nanLoc:s,inShapesLocations:i,inTexShapesLocations:o,outShapeLocation:a,outShapeStridesLocation:u,outTexShapeLocation:l}=cc(this.gpgpu,t.program,t.webGLProgram);t.uniformLocations=e,t.customUniformLocations=n,t.infLoc=r,t.nanLoc=s,t.inShapesLocations=i,t.inTexShapesLocations=o,t.outShapeLocation=a,t.outShapeStridesLocation=u,t.outTexShapeLocation=l}}}MD.nextDataId=0,pe()&&sn("webgl",()=>new MD,2);const DD="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class LD{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=ln(e,n),this.enableShapeUniforms=fc(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const PD="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class VD{constructor(t,e,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=ln(e,n);const s=this.outputShape.length;this.enableShapeUniforms=fc(s);let i="";if(r)if(0===s||1===P(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${oc(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?i+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=xc("coords",s);this.enableShapeUniforms?i+=`\n            bool nextRowOutOfBounds =\n              (${t[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${t[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:i+=`\n            bool nextRowOutOfBounds =\n              (${t[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${t[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}const BD={kernelName:fp,backendName:"webgl",kernelFunc:Nc},zD={kernelName:Nd,backendName:"webgl",kernelFunc:Cc},WD="return (a < 0.) ? b * a : a;",jD="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",UD={kernelName:gp,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{alpha:i}=r,o=n.makeTensorInfo([],"float32",Ut(i,"float32")),a=gt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new VD(jD,s.shape,o.shape):new LD(WD,s.shape,o.shape),u=n.runWebGLProgram(a,[s,o],"float32");return n.disposeIntermediateTensorInfo(o),u}},GD="return (a < 0.) ? b * a : a;",qD="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",HD={kernelName:tm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n}=t,{x:r,alpha:s}=e,i=gt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new VD(qD,r.shape,s.shape):new LD(GD,r.shape,s.shape);return n.runWebGLProgram(i,[r,s],"float32")}},XD="if (isnan(x)) return x;";class JD{constructor(t,e,n,r=!1,s=!1,i=!1,o=null,a=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=fc(this.outputShape.length);const l=r?t[1]:t[2],c=Math.ceil(l/2),h=r?"i * 2, rc.y":"rc.y, i * 2",f=s?"rc.z, i * 2":"i * 2, rc.z",d=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],p=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",y="";o&&(m=a?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${o}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${o}\n        }`:`vec4 activation(vec4 x) {\n          ${o}\n        }`,y="result = activation(result);");const b=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let g="rc.x",w="rc.x";t[0]<e[0]?g=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(w=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${g};\n          int batchB = ${w};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${f});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${p[0]});\n          result += (${d[1]} * ${p[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${y}\n\n        setOutput(result);\n      }\n    `}}const KD="return areal * breal - aimag * bimag;",YD="return areal * bimag + aimag * breal;";class ZD{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=ln(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const QD="return a * b;",tL={kernelName:jp,backendName:"webgl",kernelFunc:_c},eL={kernelName:um,backendName:"webgl",kernelFunc:Rc};class nL{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=t;this.outputShape=[r,i];const o=4*Math.floor(n/4),a=n%4;let u="sumValue += dot(values, ones);";if(null!=e){const t=1/e;u=`sumValue += dot(values * ${B(t)?t.toPrecision(2):t}, ones);`}let l="";s%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===a}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===a}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===a}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class rL{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=t;this.outputShape=[r,i];let o="0.0",a="";"prod"===e?o="1.0":"min"===e?(o="1.0 / 1e-20",a="min"):"max"===e&&(o="-1.0 / 1e-20",a="max");let u=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?u="sumValue":"prod"===e?u="prodValue":"all"===e?u="allValue":"any"===e&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${a}(values, minMaxValue);\n        if (${"min"===e} || ${"max"===e}) {\n          minMaxValue = ${a}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,f="vec4";"all"===e?(o="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",f="bvec4"):"any"===e&&(o="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",f="bvec4");let d="";s%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${o});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${f} values = ${f}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${f} values = ${f}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${f} values = ${f}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${f} values = ${f}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}class sL{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let i=0;i<n.length;i++)n[i]=t[e[i]];this.outputShape=n,this.rank=n.length;const r=oc(this.rank),s=(t=>{const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let s=0;s<t.length;s++)r[t[s]]=n[s];return r.join()})(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class iL{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let l=0;l<n.length;l++)n[l]=t[e[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=oc(this.rank),s=wc("rc",this.rank),i=new Array(this.rank);for(let l=0;l<e.length;l++)i[e[l]]=s[l];const o=`vec2(${i.slice(-2).join()})`,a=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${i.join()}), ${o})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${a}) {\n        result[1] = ${u};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${a}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}const oL={kernelName:Tm,backendName:"webgl",kernelFunc:Ic},aL={kernelName:Jm,backendName:"webgl",kernelFunc:Fc},uL={kernelName:ry,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:i,bias:o,preluActivationWeights:a}=e,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;return Mc({a:s,b:i,transposeA:u,transposeB:l,backend:n,bias:o,preluActivationWeights:a,leakyreluAlpha:h,activation:c})}},lL="return abs(x);",cL={kernelName:Zf,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const t=n.texData.get(r.dataId),e=oD(t.values);return n.makeTensorInfo(r.shape,r.dtype,e)}let s;return s=gt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new RD(r.shape,lL):new ND(r.shape,lL),n.runWebGLProgram(s,[r],r.dtype)}},hL=Sc({opSnippet:CD+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),fL={kernelName:Qf,backendName:"webgl",kernelFunc:hL},dL=Sc({opSnippet:CD+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),pL={kernelName:td,backendName:"webgl",kernelFunc:dL},mL="return a + b;",yL=Ec({opSnippet:mL,packedOpSnippet:mL,supportsComplex:!0,cpuKernelImpl:_M}),bL={kernelName:ed,backendName:"webgl",kernelFunc:yL};class gL{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((t,e)=>`T${e}`);const n=[];this.variableNames.forEach(t=>{n.push(`float v${t} = get${t}AtOutCoords();`)});const r=this.variableNames.map(t=>`v${t}`).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class wL{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((t,e)=>`T${e}`);const n=[];this.variableNames.forEach(t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)});const r=this.variableNames.map(t=>`v${t}`).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const xL={kernelName:nd,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r}=e,s=n;if(1===s.length)return Nc({inputs:{x:s[0]},backend:r});if(s.length>gt().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(s.length/2),n=t({inputs:s.slice(0,e),backend:r}),i=t({inputs:s.slice(e),backend:r});return t({inputs:[n,i],backend:r})}const i=s.map(t=>t.dtype).reduce((t,e)=>re(t,e)),o=s.map(t=>t.shape),a=gt().getBool("WEBGL_PACK")?new wL(s[0].shape,o):new gL(s[0].shape,o);return r.runWebGLProgram(a,s,i)}},vL={kernelName:rd,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r,a=s.shape.length,u=G(i,s.shape);let l=u;const c=er(l,a);let h=s;null!=c&&(h=Fc({inputs:{x:s},backend:n,attrs:{perm:c}}),l=rr(l.length,a)),tr("all",l,a);const[f,d]=Zn(h.shape,l),p=Rc({inputs:{x:h},backend:n,attrs:{shape:[-1,P(d)]}}),m=Ac(p,p.dtype,"all",n);let y;return y=Rc(o?{inputs:{x:m},backend:n,attrs:{shape:Qn(f,u)}}:{inputs:{x:m},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),y}},$L={kernelName:sd,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r,a=s.shape.length,u=G(i,s.shape);let l=u;const c=er(l,a);let h=s;null!=c&&(h=Fc({inputs:{x:s},backend:n,attrs:{perm:c}}),l=rr(l.length,a)),tr("any",l,a);const[f,d]=Zn(h.shape,l),p=Rc({inputs:{x:h},backend:n,attrs:{shape:[-1,P(d)]}}),m=Ac(p,p.dtype,"any",n);let y;return y=Rc(o?{inputs:{x:m},backend:n,attrs:{shape:Qn(f,u)}}:{inputs:{x:m},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),y}};class kL{constructor(t,e,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:i}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i];const o="max"===e?">":"<",a=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${a};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${o} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class NL{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,F(t.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const s=t[t.length-1],i=Math.ceil(s/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const o=this.outputShape,a=o.length,u=oc(a),l=xc("coords",a);let c,h;if(1===i){h=a+1;const t=oc(h);c=`\n        ${t} sourceLocR = ${t}(${l.join()}, 0);\n        ++${l[a-1]};\n        ${t} sourceLocG = ${t}(${l.join()}, 0);\n        ++${l[a-2]};\n        ${t} sourceLocA = ${t}(${l.join()}, 0);\n        --${l[a-1]};\n        ${t} sourceLocB = ${t}(${l.join()}, 0);\n        --${l[a-2]};`}else h=a,c=`\n        ${u} sourceLocR = coords;\n        ++${l[a-1]};\n        ${u} sourceLocG = coords;\n        ++${l[a-2]};\n        ${u} sourceLocA = coords;\n        --${l[a-1]};\n        ${u} sourceLocB = coords;\n        --${l[a-2]};`;const f=["x","y","z","w","u","v"].slice(0,h),d="."+f[h-1],p=f.map(t=>"int "+t),m=xc("sourceLocR",h-1).concat("inIdx.r"),y=xc("sourceLocG",h-1).concat("inIdx.g"),b=xc("sourceLocB",h-1).concat("inIdx.b"),g=xc("sourceLocA",h-1).concat("inIdx.a"),w="max"===n?"greaterThan":"lessThan",x=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${g.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${y.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${g.join()}) : 0.)`,$=r?"":`\n      float getBestIndicesAChannel(${p.join()}) {\n        return getChannel(getBestIndicesA(${f.join()}),\n                                          vec2(${f.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${p.join()}) {\n        return getChannel(getA(${f.join()}),\n                               vec2(${f.slice(-2).join()}));\n      }\n      ${$}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[a-1]} < ${o[a-1]-1};\n        bool hasNextRow = ${l[a-2]} < ${o[a-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},\n          sourceLocB${d}, sourceLocA${d}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${x}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}const CL={kernelName:id,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i}=r;let o=G(i,s.shape);const a=er(o,s.shape.length);let u=s;const l=[];null!=a&&(u=Fc({inputs:{x:s},backend:n,attrs:{perm:a}}),l.push(u),o=rr(o.length,u.shape.length)),tr("argMax",[o[0]],u.shape.length);const c=Pc(n,u,o[0],"max");return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),c}},SL={kernelName:od,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i}=r;let o=G(i,s.shape);const a=er(o,s.shape.length);let u=s;const l=[];null!=a&&(u=Fc({inputs:{x:s},backend:n,attrs:{perm:a}}),l.push(u),o=rr(o.length,u.shape.length)),tr("argMin",[o[0]],u.shape.length);const c=Pc(n,u,o[0],"min");return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),c}},EL=Sc({opSnippet:CD+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),TL={kernelName:ad,backendName:"webgl",kernelFunc:EL},_L=Sc({opSnippet:CD+"return log(x + sqrt(x * x + 1.0));"}),RL={kernelName:ud,backendName:"webgl",kernelFunc:_L},AL=Sc({opSnippet:CD+"\n  return atan(x);\n"}),OL={kernelName:ld,backendName:"webgl",kernelFunc:AL},IL=Ec({opSnippet:DD+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+PD+"\n  return result;\n"}),FL={kernelName:hd,backendName:"webgl",kernelFunc:IL},ML=Sc({opSnippet:CD+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),DL={kernelName:cd,backendName:"webgl",kernelFunc:ML};class LL{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,o=t.strideHeight,a=t.strideWidth,u=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,f=t.padInfo.top,d=t.padInfo.left;this.outputShape=t.outShape;const p="avg"===e,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,y=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let b="0.0";if(p||(b="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${o}, ${a});\n        const ivec2 pads = ivec2(${f}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:y:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let g=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(g="avgValue / count");const w=4*Math.floor(i/4),x=i%4,v=`\n      if (${p}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${a});\n      const ivec2 pads = ivec2(${f}, ${d});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${w}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${w};\n          if (${1===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${g});\n      }\n    `}}class PL{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,o=t.strideDepth,a=t.strideHeight,u=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,h=t.dilationWidth,f=t.effectiveFilterDepth,d=t.effectiveFilterHeight,p=t.effectiveFilterWidth,m=t.padInfo.front,y=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;const g="avg"===e;let w="0.0";if(g||(w="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${o}, ${a}, ${u});\n        const ivec3 pads = ivec3(${m}, ${y}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${f};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${p};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${d} * ${p} +\n                      wR * ${p} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(x="avgValue / count");const v=4*Math.floor(i/4),$=i%4,k=`\n      if (${g}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${o}, ${a}, ${u});\n      const ivec3 pads = ivec3(${m}, ${y}, ${b});\n      const float initializationValue = ${w};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${w});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${f};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${k}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===$}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${2===$}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${3===$}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${k}\n            }\n          }\n          setOutput(${x});\n        }\n      }\n    `}}const VL={kernelName:fd,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;Kl(s,"avgPool");const{filterSize:i,strides:o,pad:a,dimRoundingMode:u}=r;F(qn(o,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const l=Dn(s.shape,i,o,1,a,u);if(1===l.filterWidth&&1===l.filterHeight&&V(l.inShape,l.outShape))return Nc({inputs:{x:s},backend:n});const c=new LL(l,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},BL={kernelName:pd,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:i,strides:o,pad:a,dimRoundingMode:u,dataFormat:l}=r,c=Ln(s.shape,i,o,[1,1,1],a,u,l),h=new PL(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class zL{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,i=t.dilationHeight,o=t.dilationWidth,a=t.effectiveFilterHeight,u=t.effectiveFilterWidth,l=a-1-t.padInfo.top,c=u-1-t.padInfo.left,h=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${o}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class WL{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,i=t.strideHeight,o=t.strideWidth,a=t.dilationDepth,u=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,h=t.effectiveFilterHeight,f=t.effectiveFilterWidth,d=c-1-t.padInfo.front,p=h-1-t.padInfo.top,m=f-1-t.padInfo.left,y=1/(e*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${p}, ${m});\n      const float avgMultiplier = float(${y});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${f};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const jL={kernelName:md,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,o=i,{filterSize:a,strides:u,pad:l,dimRoundingMode:c}=r,h=Ln(o.shape,a,u,[1,1,1],l,c),f=new WL(h);return n.runWebGLProgram(f,[s],o.dtype)}},UL={kernelName:dd,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,o=i;Kl([s,i],"avgPoolGrad");const{filterSize:a,strides:u,pad:l}=r,c=Dn(o.shape,a,u,1,l),h=new zL(c);return n.runWebGLProgram(h,[s],o.dtype)}},GL={kernelName:yd,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:i}=e,{transposeA:o,transposeB:a}=r;return Mc({a:s,b:i,transposeA:o,transposeB:a,backend:n})}};class qL{constructor(t,e,n,r,s,i){this.outputShape=[],this.variableNames=["x","mean","variance"],ln(t,e),ln(t,n);let o="0.0";null!=r&&(ln(t,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let a="1.0";null!=s&&(ln(t,s),this.variableNames.push("scale"),a="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${a};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class HL{constructor(t,e,n,r,s,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],ln(t,e),ln(t,n);let o="vec4(0.0)";null!=r&&(ln(t,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let a="vec4(1.0)";null!=s&&(ln(t,s),this.variableNames.push("scale"),a="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${a};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const XL={kernelName:ap,backendName:"webgl",kernelFunc({inputs:t,backend:e,attrs:n}){const{x:r,mean:s,variance:i,offset:o,scale:a}=t;F(s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),F(null==o||s.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),F(null==a||s.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,s,i];let c=null;null!=o&&(c=o.shape,l.push(o));let h=null;null!=a&&(h=a.shape,l.push(a));const f=gt().getBool("WEBGL_PACK_NORMALIZATION")?new HL(r.shape,s.shape,i.shape,c,h,u):new qL(r.shape,s.shape,i.shape,c,h,u);return e.runWebGLProgram(f,l,l[0].dtype)}};class JL{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=oc(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=(t=>{if(1===t)return"sourceLoc";if(t>6)throw Error(`Slicing for rank ${t} is not yet supported`);return KL.slice(0,t).map(t=>"sourceLoc."+t).join(",")})(this.rank);let r;const s=t.map((t,e)=>`sourceLoc.${KL[e]} = start[${e}] + coords.${KL[e]};`);r=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${s.join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const KL=["x","y","z","w","u","v"];class YL{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=oc(this.rank),n=xc("coords",this.rank),r=xc("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${s})`,o=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${i};\n        --${r[this.rank-1]};\n      }\n    `,a=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,u=this.rank>4?t.map((t,e)=>`${r[e]} = ${n[e]} + start[${e}];`).join("\n"):`sourceLoc = coords +\n            ${e}(${t.map((t,e)=>`start[${e}]`).join()});`;this.userCode=`\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${o}\n        ${a}\n        setOutput(result);\n      }\n    `}}const ZL={kernelName:vm,backendName:"webgl",kernelFunc:Vc},QL={kernelName:bd,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:i,crops:o}=r;F(4>=s.shape.length,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=i.reduce((t,e)=>t*e),u=Xr(s.shape,i,a),l=Jr(u.length,i.length),c=Kr(s.shape,i,a),h=Yr(o,i.length),f=Zr(c,o,i.length),d=[],p=Rc({inputs:{x:s},backend:n,attrs:{shape:u}}),m=Fc({inputs:{x:p},backend:n,attrs:{perm:l}}),y=Rc({inputs:{x:m},backend:n,attrs:{shape:c}}),b=Vc({inputs:{x:y},backend:n,attrs:{begin:h,size:f}});return d.push(p),d.push(m),d.push(y),d.forEach(t=>n.disposeIntermediateTensorInfo(t)),b}},tP={kernelName:gd,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:i}=e,{size:o}=r,a=n.readSync(s.dataId),u=n.readSync(i.dataId),l=RM(a,u,i.dtype,i.shape,o);return n.makeTensorInfo([o],i.dtype,l)}},eP={kernelName:xd,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n}=t,{s0:r,s1:s}=e,i=n.readSync(r.dataId),o=n.readSync(s.dataId),a=ln(Array.from(i),Array.from(o));return n.makeTensorInfo([a.length],"int32",Int32Array.from(a))}},nP=Ec({opSnippet:"return float(a != b);",cpuKernelImpl:ZM,dtype:"bool"}),rP={kernelName:Gp,backendName:"webgl",kernelFunc:nP},sP={kernelName:im,backendName:"webgl",kernelFunc:Bc},iP={kernelName:vd,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r,attrs:s}=e,{x:i}=n,{dtype:o}=s;if("complex64"===o){if("complex64"===i.dtype)return Nc({inputs:{x:i},backend:r});const e=hr(i.shape),n=t({inputs:{x:i},backend:r,attrs:{dtype:"float32"}}),s=Cc({inputs:{real:n,imag:e},backend:r});return e.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===i.dtype){const e=Bc({inputs:{input:i},backend:r}),n=t({inputs:{x:e},backend:r,attrs:{dtype:o}});return r.disposeIntermediateTensorInfo(e),n}if(!Y(i.dtype,o)){const t=Nc({inputs:{x:i},backend:r});return{dataId:t.dataId,shape:t.shape,dtype:o}}if(r.shouldExecuteOnCPU([i])){const t=r.texData.get(i.dataId).values,[e,n,s]=OM(t,i.shape,i.dtype,o);return r.makeTensorInfo(e,n,s)}if("int32"===o)return((t,e)=>{const n=new ND(t.shape,"return float(int(x));"),r=e.runWebGLProgram(n,[t],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}})(i,r);if("bool"===o){const t=r.makeTensorInfo([],"bool",H("bool",1)),e=nP({inputs:{a:i,b:t},backend:r});return r.disposeIntermediateTensorInfo(t),e}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${o}`)}},oP="return ceil(x);",aP=Sc({opSnippet:oP,packedOpSnippet:oP,cpuKernelImpl:IM}),uP={kernelName:$d,backendName:"webgl",kernelFunc:aP};class lP{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class cP{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const hP={kernelName:kd,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{clipValueMin:i,clipValueMax:o}=r;let a;a=gt().getBool("WEBGL_PACK_CLIP")?new cP(s.shape):new lP(s.shape);const u=[[i],[o]];return n.runWebGLProgram(a,[s],s.dtype,u)}};class fP{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}const dP={kernelName:Cd,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n}=t,{x:r}=e,s=n.texData.get(r.dataId),i=new fP(r.shape),o=[zc(r,s.complexTensorInfos.real),zc(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(i,o,o[0].dtype)}};class pP{constructor(t){this.outputShape=[],this.outputShape=zr(t,1),this.variableNames=t.map((t,e)=>`T${e}`);const e=new Array(t.length-1);e[0]=t[0][1];for(let i=1;i<e.length;i++)e[i]=e[i-1]+t[i][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<e.length;i++){const t=e[i-1];n.push(`else if (yC < ${e[i]}) setOutput(getT${i}(yR, yC-${t}));`)}const r=e.length,s=e[e.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class mP{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=zr(t,e);const n=this.outputShape,r=n.length,s=oc(r),i=xc("coords",r),o=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map((t,e)=>`T${e}`);const a=new Array(t.length-1);a[0]=t[0][e];for(let p=1;p<a.length;p++)a[p]=a[p-1]+t[p][e];const u=o[e],l=o.slice(-2),c=o.join();let h=`if (${u} < ${a[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let p=1;p<a.length;p++){const t=a[p-1];h+=`\n        if (${u} < ${a[p]}  && ${u} >= ${a[p-1]}) {\n          return getChannel(\n            getT${p}(${Wc(o,u,t)}),\n            vec2(${Wc(l,u,t)}));\n        }`}const f=a.length,d=a[a.length-1];h+=`\n        return getChannel(\n          getT${f}(${Wc(o,u,d)}),\n          vec2(${Wc(l,u,d)}));`,this.userCode=`\n      float getValue(${o.map(t=>"int "+t)}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[r-1]} = ${i[r-1]} + 1;\n        if (${i[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[r-2]} = ${i[r-2]} + 1;\n        if (${i[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[r-1]} = ${i[r-1]} - 1;\n        if (${i[r-2]} < ${n[r-2]} &&\n            ${i[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}const yP={kernelName:pp,backendName:"webgl",kernelFunc:jc},bP={kernelName:Sd,backendName:"webgl",kernelFunc:Gc};class gP{constructor(t,e=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const i=t.padInfo.top,o=t.padInfo.left,a=t.strideHeight,u=t.strideWidth,l=t.dilationHeight,c=t.dilationWidth,h=t.filterHeight,f=t.filterWidth,d=4*Math.floor(t.inChannels/4),p=t.inChannels%4,m="channelsLast"===t.dataFormat,y=m?1:2,b=m?2:3,g=m?3:1;let w="",x="";n&&(w=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const v=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${w}\n\n      const ivec2 strides = ivec2(${a}, ${u});\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${g}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${y}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===p}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===p}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===p}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${x}\n        setOutput(result);\n      }\n    `}}class wP{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,s=t.strideDepth,i=t.strideHeight,o=t.strideWidth,a=t.dilationDepth,u=t.dilationHeight,l=t.dilationWidth,c=t.filterDepth,h=t.filterHeight,f=t.filterWidth,d=4*Math.floor(t.inChannels/4),p=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${i}, ${o});\n      const ivec3 pads = ivec3(${e}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${a};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${f}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===p}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===p}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===p}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class xP{constructor(t,e=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=fc(this.outputShape.length);const i=t.padInfo.left,o=t.strideWidth,a=t.dilationWidth,u=t.filterHeight,l=t.filterWidth,c=l;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let m=0;l>m;m++)h+=`\n           vec4 xTexelC${2*m};\n           int xTexelC${2*m}Ready;\n           vec4 xTexelC${2*m+1};\n           int xTexelC${2*m+1}Ready;\n           vec4 xC${m};`;h+=`\n     for (int r = 0; r < ${u}; r++) {\n      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {\n       `;for(let m=0;l>m;m++)h+=`\n           xTexelC${2*m} = vec4(0.0);\n           xTexelC${2*m}Ready = 0;\n           xTexelC${2*m+1} = vec4(0.0);\n           xTexelC${2*m+1}Ready = 0;\n           xC${m} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;(c+1)/2>m;m++){const e=2*m;if(h+=`\n           xC = xCCorner + ${e*a};\n           `,1===o){if(l>e&&(i%2==1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                   xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${e}.zw = vec2(0.0);\n                   }\n                   xTexelC${e}Ready = 1;\n                 }\n               `,h+=1===a&&e>0?`\n                 xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                   } else {\n                     xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                   xTexelC${e} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${e}.zw = vec2(0.0);\n                   }\n                   xTexelC${e}Ready = 1;\n                 }\n\n                 xC${e} = xTexelC${e};\n                 `,l>e+1)){const t=i%2==0?A(a):a;a%2==0&&i%2==1||a%2!=0&&i%2!=1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                     xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${e+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${e+1}Ready = 1;\n                   }\n                   `,h+=a>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${e+1} = vec4(previous.zw, xTexelC${e+1}.xy);\n                     } else {\n                      xC${e+1} = vec4(0.0, 0.0, xTexelC${e+1}.xy);\n                     }\n                     `:`\n                     xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                     `):h+=1===t?`\n                     xC${e+1} = xTexelC${e};\n                     `:`\n                     xCOffset = xC + ${t};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                       xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${e+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${e+1}Ready = 1;\n                     }\n\n                     xC${e+1} = xTexelC${e+1};\n                     `}}else l>e&&(i%2==1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                   xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${e}.zw = vec2(0.0);\n                   }\n                   xTexelC${e}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                   xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${e+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${e+1}Ready = 1;\n                 }\n\n                 xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n               `,l>e+1&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                   xTexelC${e} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${e}.zw = vec2(0.0);\n                   }\n                   xTexelC${e}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                   xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${e+1}.zw = vec2(0.);\n                   }\n                   xTexelC${e+1}Ready = 1;\n                 }\n\n                 xC${e} = vec4(\n                   xTexelC${e}.xy, xTexelC${e+1}.xy);\n               `,l>e+1&&(h+=`\n                   xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                 `)));l>e&&(h+=`\n             wTexel = getW(r, ${e}, d1, d2);\n             dotProd += xC${e}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${t.inChannels}) {\n               dotProd += xC${e}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,l>e+1&&(h+=`\n               wTexel = getW(r, ${e+1}, d1, d2);\n               dotProd += xC${e+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${t.inChannels}) {\n                 dotProd += xC${e+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let f="",d="";n&&(f=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:s?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,d="result = activation(result);");const p=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${f}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${p}\n         ${d}\n         setOutput(result);\n       }\n     `}}class vP{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=fc(this.outputShape.length);const{dataFormat:n}=e,r=Yl(),s="channelsLast"===n,i=s?1:2,o=s?2:3,a=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`;let u="";for(let l=0;1>=l;l++)for(let t=0;1>=t;t++)u+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${l};\n\n          ${a}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${i}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${o}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*l+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*l+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}const $P={kernelName:Ed,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:o,pad:a,dataFormat:u,dilations:l,dimRoundingMode:c}=r,h=Hn(u),f=Pn(s.shape,i.shape,o,l,a,c,!1,h);let d;if(1!==f.filterHeight||1!==f.filterWidth||1!==f.dilationHeight||1!==f.dilationWidth||1!==f.strideHeight||1!==f.strideWidth||"SAME"!==f.padInfo.type&&"VALID"!==f.padInfo.type)if(2>=f.strideWidth&&"channelsLast"===h&&gt().getBool("WEBGL_EXP_CONV")){const t=new xP(f),e=[[f.padInfo.top,f.padInfo.left],[f.strideHeight,f.strideWidth],[f.dilationHeight,f.dilationWidth],[f.inHeight,f.inWidth]];d=n.runWebGLProgram(t,[s,i],"float32",e)}else if(gt().getBool("WEBGL_CONV_IM2COL"))d=Xc({x:s,filter:i,convInfo:f,backend:n});else{const t=new gP(f);d=n.runWebGLProgram(t,[s,i],"float32")}else d=Hc({x:s,filter:i,convInfo:f,backend:n});const p=Rc({inputs:{x:d},backend:n,attrs:{shape:f.outShape}});return n.disposeIntermediateTensorInfo(d),p}};class kP{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,i="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${i}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class NP{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,i="channelsLast"===t.dataFormat,o=e-1-t.padInfo.top,a=n-1-t.padInfo.left,u=i?1:2,l=i?2:3,c=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class CP{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.padInfo.front,i=t.padInfo.top,o=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${s};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${o};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class SP{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,i=t.strideHeight,o=t.strideWidth,a=e-1-t.padInfo.front,u=n-1-t.padInfo.top,l=r-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${a}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const EP={kernelName:Td,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:o,pad:a,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,h=Hn(u),f=Pn(s.shape,c,o,1,a,l,!1,h),d=new kP(f);return n.runWebGLProgram(d,[s,i],"float32")}},TP={kernelName:_d,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{inputShape:o,strides:a,pad:u,dataFormat:l,dimRoundingMode:c}=r,h=Hn(l),f=Pn(o,i.shape,a,1,u,c,!1,h),d=new NP(f);return n.runWebGLProgram(d,[s,i],"float32")}},_P={kernelName:Rd,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:o,pad:a,dilations:u}=r,l=Vn(s.shape,i.shape,o,u,a),c=new wP(l);return n.runWebGLProgram(c,[s,i],"float32")}},RP={kernelName:Ad,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:o,pad:a,filterShape:u}=r,l=Vn(s.shape,u,o,1,a),c=new CP(l);return n.runWebGLProgram(c,[s,i],"float32")}},AP={kernelName:Od,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{pad:o,strides:a,inputShape:u}=r,l=Vn(u,i.shape,a,1,o),c=new SP(l);return n.runWebGLProgram(c,[s,i],"float32")}},OP=Sc({opSnippet:XD+"\n  return cos(x);\n"}),IP={kernelName:Id,backendName:"webgl",kernelFunc:OP},FP=Sc({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),MP={kernelName:Fd,backendName:"webgl",kernelFunc:FP};class DP{constructor(t,e,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,o,a,u]=t,[l]=e,[c,h]=n;this.outputShape=[l,c,h,u];const f="bilinear"===r?1:0,[d,p]=[o-1+".0",a-1+".0"],[m,y,b]=c>1?[""+(o-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[g,w,x]=h>1?[""+(a-1)/(h-1),"(x2-x1) * width_ratio",`x1*${p} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${p}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${g});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${y};\n        float width_scale = ${w};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${x};\n        if( in_x < 0.0 || in_x > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${f} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const LP={kernelName:Ld,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{image:s,boxes:i,boxInd:o}=e,{cropSize:a,method:u,extrapolationValue:l}=r,c=new DP(s.shape,i.shape,a,u,l);return n.runWebGLProgram(c,[s,i,o],"float32")}};var PP,VP;(VP=PP||(PP={})).Prod="*",VP.Sum="+";class BP{constructor(t,e,n,r){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,i=this.op===PP.Prod?"1.0":"0.0",o=n?i:`getX(${Jc(s,"coords",this.op)})`,a=this.outputShape[this.outputShape.length-1];let u="",l="";n?(u=r?"end != "+(a-1):"end != 0",l=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${a}`:"end >= pow2",l=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${oc(s)} coords = getOutputCoords();\n        int end = ${Kc(s,"coords",this.op)};\n        float val = ${o};\n        int pow2 = int(pow(2.0, index));\n        if (${u}) {\n          int idx = ${l};\n          ${Kc(s,"coords",this.op)} = idx;\n          val ${this.op}= getX(${Jc(s,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}const zP={kernelName:Md,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,exclusive:o,reverse:a}=r;return Yc(PP.Prod,s,n,i,o,a)}},WP={kernelName:Dd,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,exclusive:o,reverse:a}=r;return Yc(PP.Sum,s,n,i,o,a)}},jP={kernelName:Pd,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:i}=e,{size:o,binaryOutput:a}=r;if(1===s.shape.length){const t=n.readSync(s.dataId),e=n.readSync(i.dataId),r=RM(t,e,i.dtype,i.shape,o);return n.makeTensorInfo([o],i.dtype,r)}if(2===s.shape.length){const t=n.bufferSync(s),e=n.bufferSync(i),r=AM(t,e,o,a);return n.makeTensorInfo(r.shape,i.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class UP{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const GP={kernelName:Vd,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockSize:i,dataFormat:o}=r,a=s.shape[0],u=("NHWC"===o?s.shape[1]:s.shape[2])*i,l=("NHWC"===o?s.shape[2]:s.shape[3])*i,c=("NHWC"===o?s.shape[3]:s.shape[1])/(i*i),h=new UP("NHWC"===o?[a,u,l,c]:[a,c,u,l],i,o);return n.runWebGLProgram(h,[s],s.dtype)}};class qP{constructor(t,e=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=fc(this.outputShape.length);const i=t.filterHeight,o=t.filterWidth,a=t.outChannels/t.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${i}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${o}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}class HP{constructor(t,e=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=fc(this.outputShape.length);const i=t.outChannels/t.inChannels,o=t.padInfo.left,a=t.strideWidth,u=t.dilationWidth,l=t.filterHeight,c=t.filterWidth,h=c;let f="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let y=0;c>y;y++)f+=`\n          vec4 xTexelC${2*y};\n          int xTexelC${2*y}Ready;\n          vec4 xTexelC${2*y+1};\n          int xTexelC${2*y+1}Ready;\n          vec4 xC${y};`;f+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let y=0;c>y;y++)f+=`\n          xTexelC${2*y} = vec4(0.0);\n          xTexelC${2*y}Ready = 0;\n          xTexelC${2*y+1} = vec4(0.0);\n          xTexelC${2*y+1}Ready = 0;\n          xC${y} = vec4(0.0);`;f+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let y=0;(h+1)/2>y;y++){const t=2*y;if(f+=`\n          xC = xCCorner + ${t*u};\n          `,1===a){if(c>t&&(o%2==1?(f+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,f+=1===u&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):f+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,c>t+1)){const e=o%2==0?A(u):u;u%2==0&&o%2==1||u%2!=0&&o%2!=1?(f+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,f+=u>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):f+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else c>t&&(o%2==1?(f+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,c>t+1&&(f+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(f+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,c>t+1&&(f+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));c>t&&(f+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,c>t+1&&(f+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}f+="\n    }\n  ",f+="\n      }\n    ";let d="",p="";n&&(d=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,p="result = activation(result);");const m=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${d}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${f}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${p}\n        setOutput(result);\n      }\n    `}}const XP={kernelName:Bd,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:o,pad:a,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),F(qn(o,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const h=Pn(s.shape,i.shape,o,c,a,l,!0);let f;f=gt().getBool("WEBGL_PACK_DEPTHWISECONV")&&2>=h.strideWidth&&h.outChannels/h.inChannels===1?new HP(h):new qP(h);const d=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(f,[s,i],"float32",d)}};class JP{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class KP{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,i=e-1-t.padInfo.top,o=n-1-t.padInfo.left,a=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${a}; dm++) {\n              int d2 = d1 * ${a} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const YP={kernelName:zd,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:o,dilations:a,pad:u,dimRoundingMode:l,filterShape:c}=r,h=Pn(s.shape,c,o,a,u,l,!0),f=new JP(h);return n.runWebGLProgram(f,[s,i],"float32")}},ZP={kernelName:Wd,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{strides:o,dilations:a,pad:u,dimRoundingMode:l,inputShape:c}=r,h=Pn(c,i.shape,o,a,u,l,!0),f=new KP(h);return n.runWebGLProgram(f,[s,i],"float32")}};class QP{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const tV={kernelName:jd,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n}=t,{x:r}=e,s=[...r.shape,...r.shape],i=P(r.shape),o=Rc({inputs:{x:r},backend:n,attrs:{shape:[i]}}),a=new QP(i),u=n.runWebGLProgram(a,[o],o.dtype),l=Rc({inputs:{x:u},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),l}};class eV{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:r,strideHeight:s,strideWidth:i,filterHeight:o,filterWidth:a,dilationHeight:u,dilationWidth:l}=t,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${i});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${o}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${e}) {\n            for (int w = 0; w < ${a}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const nV={kernelName:Ud,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:o,pad:a,dilations:u}=r,l=Mn(s.shape,i.shape,o,a,"NHWC",u);let c;const h=new eV(l);c=n.runWebGLProgram(h,[s,i],"float32");const f=Rc({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),f}},rV={kernelName:Xd,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{equation:s}=r,i=e,{allDims:o,summedDims:a,idDims:u}=as(s,i.length);ls(o.length,u,i);const{path:l,steps:c}=cs(a,u),h=c.length;let f=null,d=o.length;const p=[];for(let m=0;h>m;++m){for(const t of c[m]){const{permutationIndices:e,expandDims:r}=us(d,u[t]);let s;hs(e)?s=i[t]:(s=Fc({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),p.push(s));const o=s.shape.slice();for(let t=0;t<r.length;++t)o.splice(r[t],0,1);V(s.shape,o)||(s=Rc({inputs:{x:s},backend:n,attrs:{shape:o}}),p.push(s)),null===f?f=s:(f=_c({inputs:{a:s,b:f},backend:n}),p.push(f))}h-1>m&&(0>l[m]||(f=Ic({inputs:{x:f},backend:n,attrs:{axis:l[m]-(o.length-d),keepDims:!1}}),p.push(f)),d--)}for(const m of p)m!==f&&n.disposeIntermediateTensorInfo(m);return f}},sV=Sc({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),iV={kernelName:Jd,backendName:"webgl",kernelFunc:sV},oV={kernelName:Kd,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n}=t,{dy:r,y:s}=e,i=gt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new VD("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new LD("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(i,[r,s],r.dtype)}},aV=Ec({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:MM}),uV={kernelName:Zd,backendName:"webgl",kernelFunc:aV},lV=Sc({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${rk};\n  float a1 = ${sk};\n  float a2 = ${ik};\n  float a3 = ${ok};\n  float a4 = ${ak};\n  float a5 = ${uk};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),cV={kernelName:Yd,backendName:"webgl",kernelFunc:lV},hV=Sc({opSnippet:XD+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:DM,dtype:"float32"}),fV={kernelName:Qd,backendName:"webgl",kernelFunc:hV},dV={kernelName:tp,backendName:"webgl",kernelFunc:Zc},pV="return exp(x) - 1.0;",mV=Sc({opSnippet:pV,packedOpSnippet:pV,cpuKernelImpl:LM}),yV={kernelName:ep,backendName:"webgl",kernelFunc:mV};class bV{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";let o;if("real"===t)o="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);o="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${o}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}const gV={kernelName:np,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n}=t,{input:r}=e;return Qc(r,!1,n)}};class wV{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}const xV={kernelName:rp,backendName:"webgl",kernelFunc:th};class vV{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const $V={kernelName:sp,backendName:"webgl",kernelFunc({inputs:t,backend:e}){const{image:n}=t,r=e,s=new vV(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},kV="return floor(x);",NV=Sc({opSnippet:kV,packedOpSnippet:kV,cpuKernelImpl:PM}),CV={kernelName:ip,backendName:"webgl",kernelFunc:NV},SV=Ec({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),EV={kernelName:op,backendName:"webgl",kernelFunc:SV};class TV{constructor(t){this.variableNames=["A"];const e=Yl(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class _V{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=Yl(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const RV={kernelName:ey,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:s}=e;const{numChannels:i}=r,o="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,a="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[u,l]=o?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[l,u],h=[l,u,i];if(a||o){const t=gt().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=AV&&t===OV||(OV=t,AV=document.createElement("canvas").getContext("2d",{willReadFrequently:OV})),AV.canvas.width=u,AV.canvas.height=l,AV.drawImage(s,0,0,u,l),s=AV.canvas}const f=n.makeTensorInfo(c,"int32");n.texData.get(f.dataId).usage=uM.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(f.dataId),s);const d=gt().getBool("WEBGL_PACK")?new _V(h):new TV(h),p=n.runWebGLProgram(d,[f],"int32");return n.disposeData(f.dataId),p}};let AV,OV=gt().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const IV={kernelName:sy,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i,bias:o,preluActivationWeights:a}=e,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:f,activation:d,leakyreluAlpha:p}=r,m=Hn(c),y=Pn(s.shape,i.shape,u,h,l,f,!1,m);let b;const g=[],w=null!=o,x=null!=a,v="leakyrelu"===d,$=()=>{const t=[s,i],e=(t,e)=>{if("NCHW"===e&&1===t.shape.length&&1!==t.shape[0]){const e=Rc({inputs:{x:t},backend:n,attrs:{shape:[t.shape[0],1,1]}});return g.push(e),e}return t};if(w&&t.push(e(o,c)),x&&t.push(e(a,c)),v){const e=n.makeTensorInfo([],"float32",Ut(p,"float32"));t.push(e),g.push(e)}return t};if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if(2>=y.strideWidth&&"channelsLast"===m&&gt().getBool("WEBGL_EXP_CONV")){const t=d?Tc(d,!0):null,e=new xP(y,w,t,x,v),r=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],s=$();b=n.runWebGLProgram(e,s,"float32",r)}else if(gt().getBool("WEBGL_CONV_IM2COL"))b=Xc({x:s,filter:i,convInfo:y,backend:n,bias:o,activation:d,preluActivationWeights:a,leakyreluAlpha:p});else{const t=d?Tc(d,!1):null,e=new gP(y,w,t,x,v),r=$();b=n.runWebGLProgram(e,r,"float32")}else b=Hc({x:s,filter:i,convInfo:y,backend:n,bias:o,activation:d,preluActivationWeights:a,leakyreluAlpha:p});const k=Rc({inputs:{x:b},backend:n,attrs:{shape:y.outShape}});return g.push(b),g.forEach(t=>n.disposeIntermediateTensorInfo(t)),k}},FV={kernelName:iy,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i,bias:o,preluActivationWeights:a}=e,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:f,leakyreluAlpha:d}=r,p=[];let m=c;null==m&&(m=[1,1]),F(qn(u,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`);const y=Pn(s.shape,i.shape,u,m,l,h,!0),b=gt().getBool("WEBGL_PACK_DEPTHWISECONV")&&2>=y.strideWidth&&y.outChannels/y.inChannels===1,g=f?Tc(f,b):null,w=[s,i],x=null!=o,v=null!=a,$="leakyrelu"===f;if(x&&w.push(o),v&&w.push(a),$){const t=n.makeTensorInfo([],"float32",Ut(d,"float32"));w.push(t),p.push(t)}let k;k=b?new HP(y,x,g,v,$):new qP(y,x,g,v,$);const N=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],C=n.runWebGLProgram(k,w,"float32",N);return p.forEach(t=>n.disposeIntermediateTensorInfo(t)),C}};class MV{constructor(t,e,n,r){this.sliceDim=t,this.strides=e,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const s=oc(n.length);let i="\n    int index;";for(let o=0;o<this.sliceDim;o++)i+=`\n          index = round(getIndices(coords[0], ${o}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[o]};\n          flattenIndex += index * ${this.strides[o]};`;this.userCode=`\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${i}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const DV={kernelName:lp,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n}=t,{params:r,indices:s}=e,i=s.shape,o=i[i.length-1],a=P(r.shape),[u,l,c,h]=fn(r,s),f=Rc({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),d=Rc({inputs:{x:r},backend:n,attrs:{shape:[P(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const t=n.readSync(s.dataId),e=n.bufferSync(r),i=VM(t,e,r.dtype,l,o,c,h,r.shape,a);return n.makeTensorInfo(u,r.dtype,i.values)}const p=new MV(o,h,[l,c],r.shape),m=n.runWebGLProgram(p,[d,f],d.dtype),y=Rc({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),y}};class LV{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=oc(this.rank),r=(t=>{const e=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<t.length;r++)2===r?n.push("index"):n.push(`${e[r]}`);return n.join()})(t);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}const PV={kernelName:up,backendName:"webgl",kernelFunc:eh},VV=Ec({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:zM,dtype:"bool"}),BV={kernelName:cp,backendName:"webgl",kernelFunc:VV},zV=Ec({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:WM}),WV={kernelName:hp,backendName:"webgl",kernelFunc:zV},jV={kernelName:dp,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n}=t,{input:r}=e;return Qc(r,!0,n)}},UV=Sc({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),GV={kernelName:mp,backendName:"webgl",kernelFunc:UV},qV=Sc({opSnippet:"return float(isinf(x));",dtype:"bool"}),HV={kernelName:yp,backendName:"webgl",kernelFunc:qV},XV=Sc({opSnippet:"return float(isnan(x));",dtype:"bool"}),JV={kernelName:bp,backendName:"webgl",kernelFunc:XV},KV=Ec({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:jM,dtype:"bool"}),YV={kernelName:wp,backendName:"webgl",kernelFunc:KV},ZV=Ec({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:UM,dtype:"bool"}),QV={kernelName:xp,backendName:"webgl",kernelFunc:ZV},tB={kernelName:vp,backendName:"webgl",kernelFunc(t){const{backend:e,attrs:n}=t,{start:r,stop:s,num:i}=n,o=GM(r,s,i);return e.makeTensorInfo([o.length],"float32",o)}},eB=Sc({opSnippet:XD+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:qM}),nB={kernelName:$p,backendName:"webgl",kernelFunc:eB},rB=Sc({opSnippet:XD+"\n  return log(1.0 + x);\n"}),sB={kernelName:kp,backendName:"webgl",kernelFunc:rB},iB=Ec({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),oB={kernelName:Np,backendName:"webgl",kernelFunc:iB},aB=Sc({opSnippet:"return float(!(x >= 1.0));"}),uB={kernelName:Cp,backendName:"webgl",kernelFunc:aB},lB=Ec({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),cB={kernelName:Sp,backendName:"webgl",kernelFunc:lB};class hB{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[];const i=e,o=t[3]-1;let a;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;a=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${o}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${a};\n        setOutput(val);\n      }\n    `}}class fB{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=e,o=t[3]-1;let a;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;a=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${a};\n        setOutput(result);\n      }\n    `}}const dB={kernelName:Tp,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{depthRadius:i,bias:o,alpha:a,beta:u}=r,l=gt().getBool("WEBGL_PACK_NORMALIZATION")?new fB(s.shape,i,o,a,u):new hB(s.shape,i,o,a,u);return n.runWebGLProgram(l,[s],s.dtype)}};class pB{constructor(t,e,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const mB={kernelName:_p,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,y:i,dy:o}=e,{depthRadius:a,bias:u,alpha:l,beta:c}=r,h=new pB(s.shape,a,u,l,c);return n.runWebGLProgram(h,[s,i,o],s.dtype)}},yB={kernelName:Rp,backendName:"webgl",kernelFunc:nh},bB=Ec({opSnippet:DD+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+PD+"\n  return result;\n",cpuKernelImpl:XM}),gB={kernelName:Ap,backendName:"webgl",kernelFunc:bB},wB={kernelName:Op,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;Kl(s,"maxPool");const{filterSize:i,strides:o,pad:a,dimRoundingMode:u}=r;F(qn(o,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const l=Dn(s.shape,i,o,1,a,u);if(1===l.filterWidth&&1===l.filterHeight&&V(l.inShape,l.outShape))return Nc({inputs:{x:s},backend:n});const c=new LL(l,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},xB={kernelName:Fp,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:i,strides:o,pad:a,dataFormat:u,dimRoundingMode:l}=r,c=Ln(s.shape,i,o,[1,1,1],a,l,u),h=new PL(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class vB{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,s=t.effectiveFilterHeight,i=t.effectiveFilterWidth,o=s-1-t.padInfo.top,a=i-1-t.padInfo.left,u=s*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class $B{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.dilationDepth,i=t.dilationHeight,o=t.dilationWidth,a=t.effectiveFilterDepth,u=t.effectiveFilterHeight,l=t.effectiveFilterWidth,c=a-1-t.padInfo.front,h=u-1-t.padInfo.top,f=l-1-t.padInfo.left,d=a*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${f});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${a};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${o}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const kB={kernelName:Mp,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,o=i,{filterSize:a,strides:u,pad:l,dimRoundingMode:c}=r,h=Ln(o.shape,a,u,[1,1,1],l,c),f=new PL(h,"max",!0),d=n.runWebGLProgram(f,[o],o.dtype),p=new $B(h),m=n.runWebGLProgram(p,[s,d],o.dtype);return n.disposeIntermediateTensorInfo(d),m}},NB={kernelName:Ip,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i,output:o}=e,a=i;Kl([i,o],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,f=Dn(a.shape,u,l,1,c,h),d=new LL(f,"max",!0),p=n.runWebGLProgram(d,[a],a.dtype),m=new vB(f),y=n.runWebGLProgram(m,[s,p],a.dtype);return n.disposeIntermediateTensorInfo(p),y}},CB={kernelName:Dp,backendName:"webgl",kernelFunc({inputs:t,attrs:e,backend:n}){const{x:r}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:a}=e,u=n;F(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const l=[1,1];F(qn(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const c=Dn(r.shape,s,i,l,o),[h,f]=((t,e,n,r)=>{let s=new LL(n,"max",!1);const i=r.runWebGLProgram(s,[t],"float32");return s=new LL(n,"max",!0,!0,e),[i,r.runWebGLProgram(s,[t],"float32")]})(r,a,c,u);return[h,f]}},SB={kernelName:Lp,backendName:"webgl",kernelFunc({inputs:t,attrs:e,backend:n}){const{x:r}=t,{keepDims:s,axis:i}=e,o=n,a=r.shape.length,u=G(i,r.shape);let l=u;const c=er(l,a),h=null!=c,f=o.shouldExecuteOnCPU([r]),d=[];let p=r;if(h){if(f){const t=o.texData.get(p.dataId).values,e=new Array(a);for(let s=0;s<e.length;s++)e[s]=r.shape[c[s]];const n=wD(t,r.shape,r.dtype,c,e);p=o.makeTensorInfo(e,r.dtype),o.texData.get(p.dataId).values=n}else p=Oc(r,c,o);d.push(p),l=rr(l.length,a)}tr("sum",l,a);const[m,y]=Zn(p.shape,l);let b=m;s&&(b=Qn(m,u));const g=((t,e,n,r)=>{const s=P(e),i=Rc({inputs:{x:t},attrs:{shape:[P(t.shape)/s,s]},backend:r}),o=Ac(i,"float32","mean",r),a=Rc({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),a})(p,y,b,o);for(const w of d)o.disposeIntermediateTensorInfo(w);return g}},EB={kernelName:Pp,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r,a=s.shape.length,u=G(i,s.shape);let l=u;const c=er(l,a);let h=s;null!=c&&(h=Fc({inputs:{x:s},backend:n,attrs:{perm:c}}),l=rr(l.length,s.shape.length)),tr("min",l,a);const[f,d]=Zn(h.shape,l),p=Rc({inputs:{x:h},backend:n,attrs:{shape:[-1,P(d)]}}),m=Ac(p,p.dtype,"min",n);let y;return y=Rc(o?{inputs:{x:m},backend:n,attrs:{shape:Qn(f,u)}}:{inputs:{x:m},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),y}},TB=Ec({opSnippet:DD+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+PD+"\n  return result;\n",cpuKernelImpl:JM}),_B={kernelName:Vp,backendName:"webgl",kernelFunc:TB};class RB{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,s=oc(r),i=e.map(t=>t[0]).join(","),o=e.map((e,n)=>e[0]+t[n]).join(","),a=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${a}));\n      }\n    `:`\n        int start = ${i};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class AB{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,s=oc(r),i=e.map(t=>t[0]).join(","),o=e.map((e,n)=>e[0]+t[n]).join(","),a=xc("rc",r),u=xc("source",r),l=`${a[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let f="";if(1===r){const t=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;f=`\n        ${s} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${a[r-1]} += 1;\n        if(${l}) {\n          ${t}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const t=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;f=`\n        ${s} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${a[r-1]} += 1;\n        if(${l}) {\n          ${t}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${a[r-2]} += 1;\n        if(${a[r-2]} < ${this.outputShape[r-2]}) {\n          ${t}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${a[r-1]} += 1;\n          if(${l}) {\n            ${t}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${f}\n        setOutput(result);\n      }\n    `}}const OB={kernelName:Bp,backendName:"webgl",kernelFunc({inputs:t,backend:e,attrs:n}){const{x:r}=t,{paddings:s,mode:i}=n,o=gt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new AB(r.shape,s,i):new RB(r.shape,s,i);return e.runWebGLProgram(o,[r],r.dtype)}},IB=Ec({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+PD+"\n  return result;\n"}),FB={kernelName:zp,backendName:"webgl",kernelFunc:IB};class MB{constructor(t,e,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}}const DB=Ec({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),LB={kernelName:Hd,backendName:"webgl",kernelFunc:DB},PB="return a - b;",VB=Ec({opSnippet:PB,packedOpSnippet:PB,supportsComplex:!0,cpuKernelImpl:yD}),BB={kernelName:jm,backendName:"webgl",kernelFunc:VB},zB={kernelName:Am,backendName:"webgl",kernelFunc:rh},WB={kernelName:Wp,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{numSamples:i,seed:o,normalized:a}=r,u=a?s:rh({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new MB(l,c,i),f=[[o]],d=n.runWebGLProgram(h,[u],"int32",f);return a||n.disposeIntermediateTensorInfo(u),d}},jB=CD+"\n  return -x;\n",UB={kernelName:Up,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])){const t=n.texData.get(r.dataId),[e,s]=YM(t.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,e)}let s;return s=gt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new RD(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new ND(r.shape,jB),n.runWebGLProgram(s,[r],r.dtype)}},GB=Ar,qB={kernelName:qp,backendName:"webgl",kernelFunc(t){vt();const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:u}=r,l=n.readSync(s.dataId),c=n.readSync(i.dataId),{selectedIndices:h}=GB(l,c,o,a,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},HB=Or,XB={kernelName:Hp,backendName:"webgl",kernelFunc(t){vt();const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(s.dataId),h=n.readSync(i.dataId),{selectedIndices:f,validOutputs:d}=HB(c,h,o,a,u,l);return[n.makeTensorInfo([f.length],"int32",new Int32Array(f)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},JB=Ir,KB={kernelName:Xp,backendName:"webgl",kernelFunc(t){vt();const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(s.dataId),h=n.readSync(i.dataId),f=o,d=a,p=u,m=l,{selectedIndices:y,selectedScores:b}=JB(c,h,f,d,p,m);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class YB{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const ZB={kernelName:Kp,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s}=e,{dtype:i,depth:o,onValue:a,offValue:u}=r,l=P(s.shape),c=new YB(l,o,a,u),h=Rc({inputs:{x:s},backend:n,attrs:{shape:[l]}}),f=n.runWebGLProgram(c,[h],i);n.disposeIntermediateTensorInfo(h);const d=Rc({inputs:{x:f},backend:n,attrs:{shape:[...s.shape,o]}});return n.disposeIntermediateTensorInfo(f),d}},QB={kernelName:Qm,backendName:"webgl",kernelFunc:sh},tz={kernelName:Jp,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r}=e,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const e=Bc({inputs:{input:s},backend:r}),n=t({inputs:{x:e},backend:r}),i=jc({inputs:{input:s},backend:r}),o=sh({inputs:{x:i},backend:r}),a=Cc({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),a}return th({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},ez={kernelName:Yp,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r;if(1===e.length)return Zc({inputs:{input:e[0]},backend:n,attrs:{dim:s}});const i=e[0].shape,o=e[0].dtype;e.forEach(t=>{M(i,t.shape,"All tensors passed to stack must have matching shapes"),F(o===t.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],u=Gc({inputs:e.map(t=>{const e=Zc({inputs:{input:t},backend:n,attrs:{dim:s}});return a.push(e),e}),backend:n,attrs:{axis:s}});return a.forEach(t=>n.disposeIntermediateTensorInfo(t)),u}};class nz{constructor(t,e,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,s=oc(r),i=e.map(t=>t[0]).join(","),o=e.map((e,n)=>e[0]+t[n]).join(","),a=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${a}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class rz{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,s=oc(r),i=e.map(t=>t[0]).join(","),o=e.map((e,n)=>e[0]+t[n]).join(","),a=xc("rc",r),u=xc("source",r),l=`${a[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${a[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${a[r-2]} += 1;\n       if(${a[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${a[r-1]} += 1;\n         if(${l}) {`],f=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let p=0,m=1===r?2:4;m>p;p++)d+=`\n        ${h[p]}\n        if (${f}) {\n          result[${p}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${p}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;d+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const sz=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:i,constantValue:o}=r;if(0===P(s.shape)){const t=i.map((t,e)=>t[0]+s.shape[e]+t[1]);return th({backend:n,attrs:{shape:t,value:o,dtype:s.dtype}})}const a=gt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rz(s.shape,i,o):new nz(s.shape,i,o),u=[[o]];return n.runWebGLProgram(a,[s],s.dtype,u)},iz={kernelName:Zp,backendName:"webgl",kernelFunc:sz},oz=Ec({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+PD+"\n  return result;\n"}),az={kernelName:Qp,backendName:"webgl",kernelFunc:oz},uz={kernelName:em,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r,a=s.shape.length,u=[],l=G(i,s.shape);let c=l;const h=er(c,a);let f,d=s;if(null!=h&&(d=Fc({inputs:{x:s},backend:n,attrs:{perm:h}}),c=rr(c.length,a),u.push(d)),tr("prod",c,a),n.shouldExecuteOnCPU([d])){const t=n.texData.get(d.dataId).values,{outVals:e,outShape:r,outDtype:s}=QM(d.shape,d.dtype,t,c);f=n.makeTensorInfo(r,s,e)}else{const[t,e]=Zn(d.shape,c),r=P(e),i=Rc({inputs:{x:d},backend:n,attrs:{shape:[-1,r]}}),o=Ac(i,se(s.dtype),"prod",n);f=Rc({inputs:{x:o},backend:n,attrs:{shape:t}}),u.push(i),u.push(o)}if(o){u.push(f);const t=Qn(f.shape,l);f=Rc({inputs:{x:f},backend:n,attrs:{shape:t}})}return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),f}},lz={kernelName:nm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{paramsNestedSplits:s,paramsDenseValues:i,indices:o}=e,{outputRaggedRank:a}=r,u=s.map(t=>n.readSync(t.dataId)),l=s.map(t=>t.shape),c=n.readSync(i.dataId),h=n.readSync(o.dataId),[f,d,p]=tD(u,l,c,i.shape,i.dtype,h,o.shape,a),m=f.map(t=>n.makeTensorInfo([t.length],"int32",t)),y=n.makeTensorInfo(p,i.dtype,d);return m.concat([y])}},cz={kernelName:rm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{shape:s,values:i,defaultValue:o,rowPartitionTensors:a}=e,{rowPartitionTypes:u}=r,l=n.readSync(s.dataId),c=n.readSync(i.dataId),h=n.readSync(o.dataId),f=a.map(t=>n.readSync(t.dataId)),d=a.map(t=>t.shape),[p,m]=eD(l,s.shape,c,i.shape,i.dtype,h,o.shape,f,d,u);return n.makeTensorInfo(p,i.dtype,m)}},hz=t=>{const{backend:e,attrs:n}=t,{start:r,stop:s,step:i,dtype:o}=n,a=nD(r,s,i,o);return e.makeTensorInfo([a.length],o,a)},fz={kernelName:sm,backendName:"webgl",kernelFunc:hz},dz=Sc({opSnippet:"return 1.0 / x;"}),pz={kernelName:om,backendName:"webgl",kernelFunc:dz},mz=Sc({opSnippet:CD+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),yz={kernelName:am,backendName:"webgl",kernelFunc:mz},bz=Sc({opSnippet:CD+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),gz={kernelName:dm,backendName:"webgl",kernelFunc:bz};class wz{constructor(t,e,n,r,s){this.variableNames=["A"],this.outputShape=[];const[i,o,a,u]=t;this.outputShape=[i,e,n,u];const l=[r&&e>1?o-1:o,r&&n>1?a-1:a],c=[r&&e>1?e-1:e,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${a}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class xz{constructor(t,e,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,o,a,u]=t;this.outputShape=[i,e,n,u];const l=[r&&e>1?o-1:o,r&&n>1?a-1:a],c=[r&&e>1?e-1:e,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${a}.0,\n                                     ${a}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const vz={kernelName:hm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:i,halfPixelCenters:o,size:a}=r,[u,l]=a,c=gt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new xz(s.shape,u,l,i,o):new wz(s.shape,u,l,i,o);return n.runWebGLProgram(c,[s],"float32")}};class $z{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,s]=e,[,i,o]=t,a=[n&&i>1?r-1:r,n&&o>1?s-1:s],u=[n&&i>1?i-1:i,n&&o>1?o-1:o],l=a[0]/u[0],c=a[1]/u[1],h=1/l,f=1/c,d=2*Math.ceil(h)+2,p=2*Math.ceil(f)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${f});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${p});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const kz={kernelName:fm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:i}=e,{alignCorners:o}=r,a=new $z(i.shape,s.shape,o);return n.runWebGLProgram(a,[i],i.dtype)}};class Nz{constructor(t,e,n,r,s){this.variableNames=["A"],this.outputShape=[];const[i,o,a,u]=t;this.outputShape=[i,e,n,u];const l=[r&&e>1?o-1:o,r&&n>1?a-1:a],c=[r&&e>1?e-1:e,r&&n>1?n-1:n],h=r?"0.5":"0.0";let f;f=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${a}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${f};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class Cz{constructor(t,e,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,o,a,u]=t;this.outputShape=[i,e,n,u];const l=[r&&e>1?o-1:o,r&&n>1?a-1:a],c=[r&&e>1?e-1:e,r&&n>1?n-1:n],h=r?"0.5":"0.0";let f;f=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${a}.0,\n                                     ${a}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${f};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const Sz={kernelName:lm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:i,halfPixelCenters:o,size:a}=r,[u,l]=a,c=gt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Cz(s.shape,u,l,i,o):new Nz(s.shape,u,l,i,o);return n.runWebGLProgram(c,[s],s.dtype)}};class Ez{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,s]=e,[,i,o]=t,a=[n&&i>1?r-1:r,n&&o>1?s-1:s],u=[n&&i>1?i-1:i,n&&o>1?o-1:o],l=a[0]/u[0],c=a[1]/u[1],h=1/l,f=1/c,d=2*Math.ceil(h)+2,p=2*Math.ceil(f)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${f});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${p});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${a[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${a[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Tz={kernelName:cm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:i}=e,{alignCorners:o}=r,a=new Ez(i.shape,s.shape,o);return n.runWebGLProgram(a,[i],i.dtype)}};class _z{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const r=t.map((n,r)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(r)).join(","),s=oc(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class Rz{constructor(t,e){function n(n){const r=t.map((r,s)=>((n,r)=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${r[n]} - 1`:`${r[n]}`)(s,n));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const r=t.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);this.outputShape=t;const s=xc("rc",r),i=`${s[r-1]} + 1 < ${this.outputShape[r-1]}`,o=`${s[r-2]} + 1 < ${this.outputShape[r-2]}`,a=oc(r);var u;this.userCode=1===r?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${i}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${a} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${u=s.slice(),n(u)};\n          if(${i}){\n            result.g = ${(t=>(t[r-1]="("+t[r-1]+" + 1)",n(t)))(s.slice())};\n          }\n          if(${o}) {\n            result.b = ${(t=>(t[r-2]="("+t[r-2]+" + 1)",n(t)))(s.slice())};\n            if(${i}) {\n              result.a = ${(t=>(t[r-1]="("+t[r-1]+" + 1)",t[r-2]="("+t[r-2]+" + 1)",n(t)))(s.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const Az={kernelName:pm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dims:i}=r,o=s.shape.length,a=G(i,s.shape);if(0===o)return Nc({inputs:{x:s},backend:n});const u=gt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Rz(s.shape,a):new _z(s.shape,a);return n.runWebGLProgram(u,[s],s.dtype)}};class Oz{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=t[1],r=t[2];this.outputShape=t;let s="";s="number"==typeof e?`float outputValue = ${e.toFixed(2)};`:`\n        vec3 fill = vec3(${e.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Iz={kernelName:ny,backendName:"webgl",kernelFunc({inputs:t,attrs:e,backend:n}){const{image:r}=t,{radians:s,fillValue:i,center:o}=e,a=n,u=new Oz(r.shape,i),[l,c]=Hr(o,r.shape[1],r.shape[2]),h=[[l,c,Math.sin(s),Math.cos(s)]];return a.runWebGLProgram(u,[r],r.dtype,h)}},Fz=Sc({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),Mz={kernelName:mm,backendName:"webgl",kernelFunc:Fz},Dz=Sc({opSnippet:"return inversesqrt(x);",cpuKernelImpl:rD}),Lz={kernelName:ym,backendName:"webgl",kernelFunc:Dz};class Pz{constructor(t,e,n,r,s,i,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const a=oc(s.length),u=oc(i.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const f=`getUpdates(${h})`,d=e>1?"strides[j]":"strides";this.userCode=`\n        ${a} strides = ${a}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${f};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const Vz={kernelName:bm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s,updates:i}=e,{shape:o}=r,{sliceRank:a,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=mn(0,s,o),f=[h/l,l];if(0===h)return n.makeTensorInfo(o,s.dtype);const d=Rc({inputs:{x:s},backend:n,attrs:{shape:[u,a]}}),p=Rc({inputs:{x:i},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),y=new Pz(u,a,d.shape.length,p.shape.length,c,f),b=n.runWebGLProgram(y,[p,d,m],p.dtype),g=Rc({inputs:{x:b},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(m),g}};class Bz{constructor(t,e,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,i=2===gt().getNumber("WEBGL_VERSION")?"while (left < right) {":s,o="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${i}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${o} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const zz={kernelName:gm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{sortedSequence:s,values:i}=e,{side:o}=r,a=new Bz(s.shape[0],s.shape[1],i.shape[1],o),u=[[s.shape[1]]];return n.runWebGLProgram(a,[s,i],"int32",u)}};class Wz{constructor(t,e,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],o=[];for(let r=0;r<e.length;r++)o.push(`${n[r]}`),t>r&&i.push(`${n[r]}`);r=i.join(),s=o.join()}const i=oc(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const jz={kernelName:wm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n}=t,{condition:r,t:s,e:i}=e,o=new Wz(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(o,[r,s,i],re(s.dtype,i.dtype))}},Uz=Sc({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = 1.7580993408473768;\n  float scale = ${nk};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),Gz={kernelName:xm,backendName:"webgl",kernelFunc:Uz},qz=Sc({opSnippet:XD+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:iD}),Hz={kernelName:Cm,backendName:"webgl",kernelFunc:qz},Xz=Sc({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),Jz={kernelName:Nm,backendName:"webgl",kernelFunc:Xz},Kz=Sc({opSnippet:XD+"\n  return sin(x);\n"}),Yz={kernelName:$m,backendName:"webgl",kernelFunc:Kz},Zz=Sc({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),Qz={kernelName:km,backendName:"webgl",kernelFunc:Zz},tW=Sc({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),eW={kernelName:Sm,backendName:"webgl",kernelFunc:tW},nW={kernelName:_m,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:i,paddings:o}=r;F(4>=s.shape.length,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=i.reduce((t,e)=>t*e),u=[[0,0]];u.push(...o);for(let b=1+i.length;b<s.shape.length;++b)u.push([0,0]);const l=[],c=sz({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),h=Xr(c.shape,i,a,!1),f=Jr(h.length,i.length,!1),d=Kr(c.shape,i,a,!1),p=Rc({inputs:{x:c},backend:n,attrs:{shape:h}}),m=Fc({inputs:{x:p},backend:n,attrs:{perm:f}}),y=Rc({inputs:{x:m},backend:n,attrs:{shape:d}});return l.push(c),l.push(p),l.push(m),l.forEach(t=>n.disposeIntermediateTensorInfo(t)),y}},rW={kernelName:Om,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n}=t,{indices:r,values:s,denseShape:i,defaultValue:o}=e;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${i.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const a=n.readSync(r.dataId),u=n.readSync(s.dataId),l=n.readSync(i.dataId),c=n.readSync(o.dataId)[0],[h,f,d,p,m]=uD(a,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(f,r.dtype,h),n.makeTensorInfo([f[0]],s.dtype,d),n.makeTensorInfo([p.length],"bool",new Uint8Array(p.map(t=>Number(t)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},sW={kernelName:Im,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n}=t,{inputIndices:r,inputShape:s,newShape:i}=e;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const o=Array.from(n.readSync(s.dataId)),a=n.readSync(r.dataId),u=Array.from(n.readSync(i.dataId)),[l,c,h]=lD(a,r.shape,r.dtype,o,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}},iW={kernelName:Fm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:i}=e;if(1>r.shape.length)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${i.shape}`);const o=n.readSync(r.dataId),a=n.readSync(s.dataId),u=n.readSync(i.dataId),[l,c]=cD(o,r.shape,r.dtype,a,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},oW={kernelName:Mm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:i}=e;if(1>r.shape.length)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${i.shape}`);const o=n.readSync(r.dataId),a=n.readSync(s.dataId),u=n.readSync(i.dataId),[l,c]=cD(o,r.shape,r.dtype,a,u);return n.makeTensorInfo(c,r.dtype,l)}},aW={kernelName:Dm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:s,sparseValues:i,defaultValue:o}=e,{outputShape:a}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:f}=mn(0,s,a),d=!1;if("string"===i.dtype){const t=n.bufferSync(s),e=n.bufferSync(i),r=Jt(n.readSync(o.dataId)[0]),p=sD(t,e,a,f,c,l,u,h,r,d);return n.makeTensorInfo(a,p.dtype,p.values)}const p=new Pz(l,u,s.shape.length,i.shape.length,h,[f,1],d),m=n.runWebGLProgram(p,[i,s,o],i.dtype),y=Rc({inputs:{x:m},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(m),y}},uW={kernelName:Rm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{numOrSizeSplits:i,axis:o}=r,a=G(o,s.shape)[0],u=ds(s,i,a),l=s.shape.length,c=new Array(l).fill(0),h=s.shape.slice();return u.map(t=>{const e=[...h];e[a]=t;const r=Vc({inputs:{x:s},backend:n,attrs:{begin:c,size:e}});return c[a]+=t,r})}},lW="return sqrt(x);",cW=Sc({opSnippet:lW,packedOpSnippet:lW,cpuKernelImpl:hD}),hW={kernelName:Em,backendName:"webgl",kernelFunc:cW},fW={kernelName:Pm,backendName:"webgl",kernelFunc:Sc({opSnippet:"return x * x;"})},dW="return (a - b) * (a - b);",pW=Ec({opSnippet:dW,packedOpSnippet:dW}),mW={kernelName:Lm,backendName:"webgl",kernelFunc:pW},yW={kernelName:ty,backendName:"webgl",kernelFunc({inputs:t,attrs:e,backend:n}){const{x:r}=t,s=CD+`\n    return x > 0.0 ? 1.0 : float(${e.alpha});\n  `,i=new ND(r.shape,s);return n.runWebGLProgram(i,[r],r.dtype)}};class bW{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=oc(n.length),i=oc(n.length);let o="";if(1===r)o="coords * strides + begin";else{let t=0;o=n.map((e,r)=>(t++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${t-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${s} begin = ${s}(${t});\n      ${s} strides = ${s}(${e});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${o}));\n      }\n    `}}const gW={kernelName:Vm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:i,end:o,strides:a,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:f}=r,{finalShapeSparse:d,finalShape:p,isIdentity:m,sliceDim0:y,isSimpleSlice:b,begin:g,end:w,strides:x}=_n(s.shape,i,o,a,u,l,c,h,f);let v;if(m)v=Rc({inputs:{x:s},backend:n,attrs:{shape:p}});else if(y||b){F(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const t=bn(g,w,x),e=Vc({inputs:{x:s},backend:n,attrs:{begin:g,size:t}});v=Rc({inputs:{x:e},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(e)}else if(n.shouldExecuteOnCPU([s])){const t=n.readSync(s.dataId),e=We(s.shape,s.dtype,t),r=fD(d,e,x,g);v=n.makeTensorInfo(p,s.dtype,r.values)}else{const t=new bW(g,x,d);v=n.runWebGLProgram(t,[s],s.dtype)}const $=Rc({inputs:{x:v},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(v),$}},wW={kernelName:Bm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{separator:s,nGramWidths:i,leftPad:o,rightPad:a,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=e,f=n.readSync(c.dataId),d=n.readSync(h.dataId),[p,m]=dD(f,d,s,i,o,a,u,l);return[n.makeTensorInfo([p.length],"string",p),n.makeTensorInfo(h.shape,"int32",m)]}},xW={kernelName:zm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{skipEmpty:s}=r,{input:i,delimiter:o}=e;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const a=n.readSync(i.dataId),u=n.readSync(o.dataId)[0],[l,c,h]=pD(a,u,s),f=c.length;return[n.makeTensorInfo([f,2],"int32",l),n.makeTensorInfo([f],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},vW={kernelName:Wm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{numBuckets:s}=r,{input:i}=e;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(0>=s)throw new Error("Number of buckets must be at least 1");const o=n.readSync(i.dataId),a=mD(o,s);return n.makeTensorInfo(i.shape,"int32",a)}},$W=Sc({opSnippet:"return tan(x);"}),kW={kernelName:Um,backendName:"webgl",kernelFunc:$W},NW=Sc({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),CW={kernelName:Gm,backendName:"webgl",kernelFunc:NW};class SW{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let i=0;i<n.length;i++)n[i]=t[i]*e[i];this.outputShape=n,this.rank=n.length;const r=oc(this.rank),s=(t=>{const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<t.length;s++)r.push(`imod(${n[s]}, ${t[s]})`);return r.join()})(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}const EW={kernelName:qm,backendName:"webgl",kernelFunc:ih};class TW{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class _W{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}const RW={kernelName:Hm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{k:i,sorted:o}=r,a=gt().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=gt().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=s.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([s])||a>c||i>u){const t=n.readSync(s.dataId),[e,r]=gD(t,l,s.dtype,i,o);return[n.makeTensorInfo(e.shape,e.dtype,e.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===i)return l[l.length-1]=0,[n.makeTensorInfo(l,s.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===c)return[s,th({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),f=null!==h&&h.isPacked,d=f?n.unpackTensor(s):s,p=P(l)/c,m=Rc({inputs:{x:d},attrs:{shape:[p,c]},backend:n});f&&oh(n,d);const y=ah(i),b=ah(c);let g=null;const w=()=>null===g?[m,m]:[m,g],x=(t,e,r)=>{const s=w(),i=new TW(r),o=[[c],[null===g?1:0],[Number.NEGATIVE_INFINITY],[t],[e]],a=g;g=n.runWebGLProgram(i,s,"int32",o),oh(n,a)};for(let C=1;y>C;C*=2){const t=2*C;for(let e=C;e>=1;e/=2)x(t,e,[p,b])}for(let C=b;C>y;C/=2){const t=w(),e=new _W([p,C/2]),r=[[c],[null===g?1:0],[y]],s=g;g=n.runWebGLProgram(e,t,"int32",r),oh(n,s);const i=y/2,o=2*i;for(let n=i;n>=1;n/=2)x(o,n,g.shape)}let v=g;g=Vc({inputs:{x:g},backend:n,attrs:{begin:0,size:[p,i]}}),oh(n,v);let $=eh({inputs:{x:m,indices:g},backend:n,attrs:{axis:1,batchDims:1}});oh(n,m);const k=l.slice(0,-1);k.push(i),v=g,g=Rc({inputs:{x:g},attrs:{shape:k},backend:n}),oh(n,v);const N=$;return $=Rc({inputs:{x:$},attrs:{shape:k},backend:n}),oh(n,N),[$,g]}};class AW{constructor(t,e,n,r,s,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const o="nearest"===n?1:2;let a;switch(r){case"constant":default:a=1;break;case"reflect":a=2;break;case"wrap":a=3;break;case"nearest":a=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${a} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${a} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${a} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${e}));\n                float mapY = mapCoord(inY, float(${t}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const OW={kernelName:Xm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{image:s,transforms:i}=e,{interpolation:o,fillMode:a,fillValue:u,outputShape:l}=r,[c,h,f,d]=s.shape,[p,m]=null!=l?l:[h,f],y=new AW(h,f,o,a,u,[c,p,m,d]);return n.runWebGLProgram(y,[s,i],"float32")}},IW={kernelName:Km,backendName:"webgl",kernelFunc(t){const{inputs:e,attrs:n,backend:r}=t,{axis:s}=n,{x:i}=e;Kl(i,"unique");const o=r.readSync(i.dataId),{outputValues:a,outputShape:u,indices:l}=xD(o,s,i.shape,i.dtype);return[r.makeTensorInfo(u,i.dtype,a),r.makeTensorInfo([l.length],"int32",l)]}},FW={kernelName:Ym,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{value:s}=e;let{axis:i}=r;0>i&&(i+=s.shape.length);const o=s,a=o.shape.length,u=s.shape[i],l=new Array(a-1);let c=0;for(let m=0;a>m;m++)m!==i&&(l[c++]=o.shape[m]);const h=[],f=new Array(a).fill(0),d=o.shape.slice();d[i]=1;const p=new Array(u);for(let m=0;m<p.length;m++){f[i]=m;const t=Vc({inputs:{x:o},backend:n,attrs:{begin:f,size:d}}),e=Rc({inputs:{x:t},backend:n,attrs:{shape:l}});p[m]=e,h.push(t)}return h.forEach(t=>n.disposeIntermediateTensorInfo(t)),p}};class MW{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,s=t.inSize,i=t.numSegments,o=i*Math.ceil(s/n);this.outputShape=[r,o];const a=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${a}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${a};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const DW=[uL,cL,fL,pL,bL,xL,vL,$L,CL,SL,TL,RL,OL,FL,DL,VL,BL,jL,UL,GL,XL,QL,tP,eP,iP,uP,hP,zD,dP,bP,$P,EP,TP,_P,RP,AP,IP,MP,LP,zP,WP,jP,GP,XP,YP,ZP,tV,nV,rV,iV,oV,uV,cV,fV,dV,yV,gV,xV,$V,CV,EV,RV,IV,FV,DV,PV,BV,WV,BD,jV,yP,GV,HV,JV,UD,YV,QV,tB,nB,sB,oB,uB,cB,dB,mB,yB,gB,wB,xB,kB,NB,CB,SB,EB,_B,OB,FB,WB,tL,UB,qB,XB,KB,rP,ZB,tz,ez,iz,az,HD,uz,lz,cz,fz,sP,LB,pz,yz,gz,eL,vz,kz,Sz,Tz,Az,Iz,Mz,Lz,Vz,zz,jz,Gz,Hz,Jz,Yz,Qz,ZL,zB,eW,nW,rW,sW,iW,oW,aW,uW,hW,fW,mW,yW,gW,wW,xW,vW,BB,oL,kW,CW,EW,RW,OW,aL,IW,FW,{kernelName:Zm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,segmentIds:i}=e,{numSegments:o}=r,a=s.shape.length,u=[];let l=0;const c=er([l],a);let h=s;null!=c&&(h=Fc({inputs:{x:s},backend:n,attrs:{perm:c}}),u.push(h),l=rr(1,a)[0]);const f=Cs(h.shape,l,o),d=P([h.shape[l]]),p=Rc({inputs:{x:h},backend:n,attrs:{shape:[-1,d]}});u.push(p);const m=se(s.dtype),y=(t,e,r,s,i)=>{const o=t.shape[0],a=t.shape[1],l=Ns(a,i),c=new MW({windowSize:l,inSize:a,batchSize:o,numSegments:i},e),h=n.compileAndRun(c,[t,r],s);if(u.push(h),h.shape[1]===i)return h;const f=hz({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),d=ih({inputs:{x:f},backend:n,attrs:{reps:[a/l]}});return u.push(f),u.push(d),y(h,e,d,s,i)},b=Rc({inputs:{x:y(p,"unsortedSegmentSum",i,m,o)},backend:n,attrs:{shape:f}});let g=b;if(null!=c){u.push(b);const t=nr(c);g=Fc({inputs:{x:g},backend:n,attrs:{perm:t}})}return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),g}},QB];for(const ZJ of DW)Ct(ZJ);const LW={"tfjs-core":ig,"tfjs-backend-cpu":"3.21.0","tfjs-backend-webgl":"3.21.0","tfjs-data":Q_,"tfjs-layers":TS,"tfjs-converter":c_,tfjs:"3.21.0"},PW=n(Object.freeze(Object.defineProperty({__proto__:null,Abs:Zf,Acos:Qf,Acosh:td,AdadeltaOptimizer:j$,AdagradOptimizer:U$,AdamOptimizer:G$,AdamaxOptimizer:q$,Add:ed,AddN:nd,All:rd,Any:sd,ArgMax:id,ArgMin:od,Asin:ad,Asinh:ud,Atan:ld,Atan2:hd,Atanh:cd,AvgPool:fd,AvgPool3D:pd,AvgPool3DGrad:md,AvgPoolGrad:dd,BatchMatMul:yd,BatchToSpaceND:bd,Bincount:gd,BroadcastArgs:xd,BroadcastTo:wd,Callback:NT,CallbackList:wS,Cast:vd,Ceil:$d,ClipByValue:kd,Complex:Nd,ComplexAbs:Cd,Concat:Sd,Conv2D:Ed,Conv2DBackpropFilter:Td,Conv2DBackpropInput:_d,Conv3D:Rd,Conv3DBackpropFilterV2:Ad,Conv3DBackpropInputV2:Od,Cos:Id,Cosh:Fd,CropAndResize:Ld,Cumprod:Md,Cumsum:Dd,CustomCallback:$S,DataStorage:qf,DenseBincount:Pd,DepthToSpace:Vd,DepthwiseConv2dNative:Bd,DepthwiseConv2dNativeBackpropFilter:zd,DepthwiseConv2dNativeBackpropInput:Wd,Diag:jd,Dilation2D:Ud,Dilation2DBackpropFilter:qd,Dilation2DBackpropInput:Gd,get ENV(){return Yf},EarlyStopping:CT,Einsum:Xd,Elu:Jd,EluGrad:Kd,Environment:Jf,Equal:Zd,Erf:Yd,Exp:Qd,ExpandDims:tp,Expm1:ep,FFT:np,Fill:rp,FlipLeftRight:sp,Floor:ip,FloorDiv:op,FromPixels:ey,FusedBatchNorm:ap,FusedConv2D:sy,FusedDepthwiseConv2D:iy,GatherNd:lp,GatherV2:up,GraphModel:l_,Greater:cp,GreaterEqual:hp,History:vS,IFFT:dp,Identity:fp,Imag:pp,InputSpec:ZC,IsFinite:mp,IsInf:yp,IsNan:bp,KernelBackend:Hf,LRN:Tp,LRNGrad:_p,LayerVariable:YC,LayersModel:RS,LeakyRelu:gp,Less:wp,LessEqual:xp,LinSpace:vp,Log:$p,Log1p:kp,LogSoftmax:Ep,LogicalAnd:Np,LogicalNot:Cp,LogicalOr:Sp,LogicalXor:"LogicalXor",LowerBound:"LowerBound",Max:Rp,MaxPool:Op,MaxPool3D:Fp,MaxPool3DGrad:Mp,MaxPoolGrad:Ip,MaxPoolWithArgmax:Dp,Maximum:Ap,Mean:Lp,Min:Pp,Minimum:Vp,MirrorPad:Bp,Mod:zp,MomentumOptimizer:X$,Multinomial:Wp,Multiply:jp,Neg:Up,NonMaxSuppressionV3:qp,NonMaxSuppressionV4:Hp,NonMaxSuppressionV5:Xp,NotEqual:Gp,OP_SCOPE_SUFFIX:rb,OneHot:Kp,OnesLike:Jp,Optimizer:W$,OptimizerConstructors:K$,Pack:Yp,PadV2:Zp,Pool:"Pool",Pow:Qp,Prelu:tm,Prod:em,RMSPropOptimizer:J$,RNN:mE,RaggedGather:nm,RaggedTensorToTensor:rm,Range:sm,get Rank(){return Vy},Real:im,RealDiv:Hd,Reciprocal:om,get Reduction(){return b$},Relu:am,Relu6:dm,Reshape:um,ResizeBilinear:hm,ResizeBilinearGrad:fm,ResizeNearestNeighbor:lm,ResizeNearestNeighborGrad:cm,Reverse:pm,RotateWithOffset:ny,Round:mm,Rsqrt:ym,SGDOptimizer:H$,ScatterNd:bm,SearchSorted:gm,Select:wm,Selu:xm,Sequential:OS,Sigmoid:Cm,Sign:Nm,Sin:$m,Sinh:km,Slice:vm,Softmax:Am,Softplus:Sm,SpaceToBatchND:_m,SparseFillEmptyRows:Om,SparseReshape:Im,SparseSegmentMean:Fm,SparseSegmentSum:Mm,SparseToDense:Dm,SplitV:Rm,Sqrt:Em,Square:Pm,SquaredDifference:Lm,Step:ty,StridedSlice:Vm,StringNGrams:Bm,StringSplit:zm,StringToHashBucketFast:Wm,Sub:jm,Sum:Tm,SymbolicTensor:QC,Tan:Um,Tanh:Gm,Tensor:Ly,TensorBuffer:Fy,Tile:qm,TopK:Hm,Transform:Xm,Transpose:Jm,Unique:Km,Unpack:Ym,UnsortedSegmentSum:Zm,UpperBound:"UpperBound",Variable:Py,ZerosLike:Qm,kt:ry,abs:cg,acos:hg,acosh:fg,add:og,addN:dg,all:pg,any:mg,argMax:yg,argMin:bg,asin:gg,asinh:wg,atan:xg,atan2:vg,atanh:$g,avgPool:Ng,avgPool3d:Cg,backend:on,backend_util:fk,basicLSTMCell:Rg,batchNorm:Og,batchNorm2d:Ig,batchNorm3d:Fg,batchNorm4d:Mg,batchToSpaceND:Ag,bincount:Dg,booleanMaskAsync:Pv,broadcastArgs:Lg,broadcastTo:Pg,broadcast_util:Xb,browser:Yb,buffer:We,callbacks:ST,cast:Rb,ceil:Vg,clipByValue:Bg,clone:Ab,complex:sb,concat:Sg,concat1d:zg,concat2d:Wg,concat3d:jg,concat4d:Ug,constraints:pS,conv1d:qg,conv2d:Gg,conv2dTranspose:Xg,conv3d:Jg,conv3dTranspose:Yg,copyRegisteredKernels(t,e){Nt(t).forEach(t=>{Ct(Object.assign({},t,{backendName:e}))})},cos:Zg,cosh:Qg,cosineWindow:Nr,cumprod:tw,cumsum:ew,customGrad:ur,data:tR,denseBincount:nw,deprecationWarn(t){gt().getBool("DEPRECATION_WARNINGS_ENABLED")},depthToSpace:rw,depthwiseConv2d:sw,deregisterOp(t){delete OT[t]},device_util:eb,diag:iw,dilation2d:ow,disableDeprecationWarnings(){gt().set("DEPRECATION_WARNINGS_ENABLED",!1)},dispose:nn,disposeVariables(){Qy.disposeVariables()},div:ug,divNoNan:cw,dot:hw,dropout:jv,einsum:fw,elu:dw,enableDebugMode(){gt().set("DEBUG",!0)},enableProdMode(){gt().set("PROD",!0)},enclosingPowerOfTwo:kr,engine:Qe,env:gt,equal:aw,erf:pw,euclideanNorm:$w,exp:kw,expandDims:Nw,expm1:Cw,eye:Ew,fft:vv,fill:Jn,findBackend(t){return Qy.findBackend(t)},findBackendFactory(t){return Qy.findBackendFactory(t)},floor:Tw,floorDiv:ag,fused:Zv,gather:_w,gatherND:Wv,gather_util:Zb,getBackend(){return Qy.backendName},getGradient:kt,getKernel:$t,getKernelsForBackend:Nt,grad(t){return F(it(t),()=>"The f passed in grad(f) must be a function"),(e,n)=>{const r=ge(e,"x","tf.grad","string_or_numeric"),s=null!=n?ge(n,"dy","tf.grad"):null;return Qy.tidy(()=>{const{value:e,grads:n}=Qy.gradients(()=>t(r),[r],s);return null!=s&&M(e.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),lr(n),n[0]})}},grads(t){return F(it(t),()=>"The f passed in grads(f) must be a function"),(e,n)=>{F(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const r=we(e,"args","tf.grads","string_or_numeric"),s=null!=n?ge(n,"dy","tf.grads"):null;return Qy.tidy(()=>{const{value:e,grads:n}=Qy.gradients(()=>t(...r),r,s);return null!=s&&M(e.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),lr(n),n})}},greater:Rw,greaterEqual:Aw,ifft:$v,imag:Wb,image:L$,inTopKAsync:Uv,initializers:mS,input:Bo,io:Vb,irfft:kv,isFinite:Ow,isInf:Iw,isNaN:Fw,keep:rn,kernel_impls:dk,layers:xT,leakyRelu:Mw,less:Dw,lessEqual:Lw,linalg:P$,linspace:or,loadGraphModel(t){return cf(this,arguments,function*(t,e={},n=Vb){if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&"string"==typeof t&&(t=(t=>(t.endsWith("/")||(t+="/"),`${t}model.json?tfjs-format=file`))(t));const r=new l_(t,e,n);return yield r.load(),r})},loadGraphModelSync(t){if(null==t)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let e;if(t instanceof Array){const[n,r]=t;if(!n)throw new Error("modelJSON must be the first element of the array");if(!(r&&r instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");e=Ze(Re(n,Ie(n.weightsManifest),r))}else if("load"in t)e=t;else{if(!("modelTopology"in t&&"weightSpecs"in t&&"weightData"in t))throw new Error("Unknown model format");e=Ze(t)}const n=new l_(e);return n.load(),n},loadLayersModel(t,e){return null==e&&(e={}),function(t,e){return cf(this,null,function*(){if(null==e&&(e={}),"string"==typeof t){const n=lb(t,e);if(0===n.length)n.push(Ye(t,e));else if(n.length>1)throw new mC(`Found more than one (${n.length}) load handlers for URL '${t}'`);t=n[0]}return function(t,e,n){return cf(this,null,function*(){if(null==n&&(n={}),null==t.load)throw new mC("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=yield t.load();let r=e.modelTopology;null!=r.model_config&&(r=r.model_config);const s=null==n.strict||n.strict,i=null!=e.weightData&&null!=e.weightSpecs&&s,o=Yi($o(r),void 0,i),a=e.trainingConfig;if(null!=a&&o.loadTrainingConfig(a),null!=e.userDefinedMetadata&&o.setUserDefinedMetadata(e.userDefinedMetadata),null!=e.weightData){if(null==e.weightSpecs)throw new mC("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:t,optimizerWeights:n}=((t,e)=>{const n=Ne(t,e),r={},s=[];return e.forEach(t=>{"optimizer"===t.group?s.push({name:t.name,tensor:n[t.name]}):r[t.name]=n[t.name]}),{modelWeights:r,optimizerWeights:s}})(e.weightData,e.weightSpecs);o.loadWeights(t,s),null!=o.optimizer&&n.length>0&&(yield o.optimizer.setWeights(n)),nn(t),nn(n.map(t=>t.tensor))}return o})}(t,0,e)})}(t,e)},localResponseNormalization:Pw,log:Vw,log1p:Bw,logSigmoid:Ww,logSoftmax:Uw,logSumExp:Gw,logicalAnd:qw,logicalNot:Hw,logicalOr:Xw,logicalXor:Jw,losses:V$,lowerBound:cr,matMul:Bb,math:Hb,max:mw,maxPool:Zw,maxPool3d:Qw,maxPoolWithArgmax:tx,maximum:ex,mean:nx,memory:tn,meshgrid:dr,metrics:vT,min:yw,minimum:rx,mirrorPad:sx,mod:ix,model(t){return new RS(t)},models:$T,moments:ox,movingAverage:Vv,mul:lg,multiRNNCell:ax,multinomial:ux,neg:jb,nextFrame:Vr,norm:vw,notEqual:lx,oneHot:zb,ones:fr,onesLike:cx,op:xe,outerProduct:hx,pad:fx,pad1d:dx,pad2d:px,pad3d:mx,pad4d:yx,pool:gx,pow:bw,prelu:wx,print:je,prod:xx,profile(t){return Qy.profile(t)},raggedGather:vx,raggedTensorToTensor:$x,rand:kx,randomGamma:Kx,randomNormal:Yx,randomStandardNormal:Zx,randomUniform:Qx,range:pr,ready(){return Qy.ready()},real:Ub,reciprocal:tv,registerBackend:sn,registerCallbackConstructor(t,e){kS.registerCallbackConstructor(t,e)},registerGradient:St,registerKernel:Ct,registerOp(t,e){const n={tfOpName:t,category:"custom",inputs:[],attrs:[],customExecutor:e};OT[t]=n},regularizers:kT,relu:ev,relu6:nv,removeBackend(t){Qy.removeBackend(t)},reshape:kg,reverse:rv,reverse1d:sv,reverse2d:iv,reverse3d:ov,reverse4d:av,rfft:Cv,round:uv,rsqrt:lv,scalar:sr,scatterND:Bv,scatter_util:Qb,searchSorted:Yw,selu:cv,separableConv2d:hv,sequential(t){return new OS(t)},serialization:rg,setBackend(t){return Qy.setBackend(t)},setPlatform(t,e){gt().setPlatform(t,e)},setdiff1dAsync:fv,sigmoid:Eg,sign:dv,signal:D$,sin:pv,sinh:mv,slice:Tg,slice1d:yv,slice2d:bv,slice3d:gv,slice4d:wv,slice_util:tg,softmax:xv,softplus:zw,spaceToBatchND:bx,sparse:B$,sparseToDense:zv,spectral:M$,split:Nv,sqrt:gw,square:ww,squaredDifference:Sv,squeeze:Ev,stack:Tv,step:_v,stridedSlice:Rv,string:z$,sub:jw,sum:xw,sumOutType:se,tan:Av,tanh:_g,tensor:$e,tensor1d:mr,tensor2d:yr,tensor3d:cn,tensor4d:br,tensor5d:gr,tensor6d:wr,tensor_util:Ky,test_util:sg,tidy:en,tile:Sw,time(t){return Qy.time(t)},topk:Ov,train:Y$,transpose:Gb,truncatedNormal:Iv,unique:Fv,unregisterGradient(t){if(!ay.has(t))throw new Error(`The gradient '${t}' for backend is not registered`);ay.delete(t)},unregisterKernel(t,e){const n=Et(t,e);if(!oy.has(n))throw new Error(`The kernel '${t}' for backend '${e}' is not registered`);oy.delete(n)},unsortedSegmentSum:Mv,unstack:Dv,upcastType:re,upperBound:xr,util:Ay,valueAndGrad(t){return F(it(t),()=>"The f passed in valueAndGrad(f) must be a function"),(e,n)=>{F(e instanceof Ly,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),F(null==n||n instanceof Ly,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:r,value:s}=Qy.gradients(()=>t(e),[e],n);return lr(r),{grad:r[0],value:s}}},valueAndGrads(t){return F(it(t),()=>"The f passed in valueAndGrads(f) must be a function"),(e,n)=>{F(Array.isArray(e)&&e.every(t=>t instanceof Ly),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),F(null==n||n instanceof Ly,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const r=Qy.gradients(()=>t(...e),e,n);return null!=n&&M(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),lr(r.grads),r}},variable:vr,variableGrads:ar,version:LW,version_converter:c_,version_core:ig,version_layers:TS,where:uw,whereAsync:Lv,zeros:hr,zerosLike:lw},Symbol.toStringTag,{value:"Module"})));var VW={};Object.defineProperty(VW,"u",{value:!0}),VW.NSFW_CLASSES=void 0,VW.NSFW_CLASSES={0:"Drawing",1:"Hentai",2:"Neutral",3:"Porn",4:"Sexy"};var BW={},zW=function(){function t(e){function n(t){return"[object Array]"==={}.toString.call(t)}if(this.ranges=[],"string"==typeof e)this.parseString(e);else if("number"==typeof e)this.appendRange(e,e);else if(e instanceof t)this.ranges=e.getRanges();else if(n(e))for(var r=0,s=e;r<s.length;r++){var i=s[r];if(n(i)){if(2!==i.length)throw new TypeError("Invalid array initializer");this.appendRange(i[0],i[1])}else{if("number"!=typeof i)throw new TypeError("Invalid array initialzer");this.append(i)}}else if(void 0!==e)throw new TypeError("Invalid input")}return t.prototype.parseString=function(t){function e(t){var e=t.match(/^\(?(\-?\d+)/);return parseInt(e[1],10)}var n=t.replace(/\s/g,"");if(n.length)for(var r,s=0,i=n.split(",");s<i.length;s++){var o=i[s];if(r=o.match(/^(\d+|\(\-?\d+\))$/)){var a=e(r[1]);this.appendRange(a,a)}else{if(!(r=o.match(/^(\d+|\(\-?\d+\))?\-(\d+|\(\-?\d+\))?$/)))throw new SyntaxError("Invalid input");var u=void 0===r[1]?-1/0:e(r[1]),l=void 0===r[2]?1/0:e(r[2]);this.appendRange(u,l)}}},t.prototype.clone=function(){return new t(this)},t.prototype.append=function(e){if(void 0===e)throw new TypeError("Invalid input");if(e instanceof t){for(var n=0,r=e.ranges;n<r.length;n++){var s=r[n];this.appendRange(s[0],s[1])}return this}return this.append(new t(e))},t.prototype.appendRange=function(t,e){var n=[t,e];if(n[0]>n[1]&&(n=[n[1],n[0]]),n[0]===1/0&&n[1]===1/0||n[0]===-1/0&&n[1]===-1/0)throw new RangeError("Infinity can be used only within an unbounded range segment");var r=this.findOverlap(n);return this.ranges.splice(r.lo,r.count,r.union),this},t.prototype.subtract=function(e){if(void 0===e)throw new TypeError("Invalid input");if(e instanceof t){for(var n=0,r=e.ranges;n<r.length;n++){var s=r[n];this.subtractRange(s[0],s[1])}return this}return this.subtract(new t(e))},t.prototype.subtractRange=function(t,e){var n=[t,e];n[0]>n[1]&&(n=[n[1],n[0]]);var r=this.findOverlap(n);if(r.count>0){var s=[];this.ranges[r.lo][0]<n[0]&&s.push([this.ranges[r.lo][0],n[0]-1]),n[1]<this.ranges[r.lo+r.count-1][1]&&s.push([n[1]+1,this.ranges[r.lo+r.count-1][1]]),this.ranges.splice.apply(this.ranges,[r.lo,r.count].concat(s))}return this},t.prototype.intersect=function(e){if(void 0===e)throw new TypeError("Invalid input");if(e instanceof t){for(var n=[],r=0,s=0;s<this.ranges.length;s++)for(var i=this.ranges[s],o=r;o<e.ranges.length;o++){var a=e.ranges[o];if(i[0]>a[1]||i[1]<a[0]){if(i[1]<a[0])break}else{r=o;var u=Math.max(i[0],a[0]),l=Math.min(i[1],a[1]);n.push([u,l])}}return this.ranges=n,this}return this.intersect(new t(e))},t.prototype.findOverlap=function(t){for(var e=this.ranges.length-1;e>=0;e--){var n=this.ranges[e],r=void 0;if(r=this.calcUnion(n,t)){for(var s=1,i=void 0;e-s>=0&&(i=this.calcUnion(r,this.ranges[e-s]));)r=i,s++;return{lo:e+1-s,count:s,union:r}}if(n[1]<t[0])return{lo:e+1,count:0,union:t}}return{lo:0,count:0,union:t}},t.prototype.calcUnion=(t,e)=>t[1]+1<e[0]||t[0]-1>e[1]?null:[Math.min(t[0],e[0]),Math.max(t[1],e[1])],t.prototype.getRanges=function(){for(var t=[],e=0,n=this.ranges;e<n.length;e++){var r=n[e];t.push([r[0],r[1]])}return t},t.prototype.has=function(e){if(void 0===e)throw new TypeError("Invalid input");if(e instanceof t){for(var n=this.ranges.length,r=0,s=e.ranges;r<s.length;r++){var i=s[r],o=void 0;for(o=0;n>o;o++){var a=this.ranges[o];if(!(i[0]<a[0]||i[1]>a[1]||i[1]<a[0]||i[1]>a[1]))break}if(o===n)return!1}return!0}return this.has(new t(e))},t.prototype.hasRange=function(e,n){return this.has(new t([[e,n]]))},t.prototype.segmentLength=function(){return this.ranges.length},t.prototype.length=function(){if(this.isUnbounded())return 1/0;for(var t=0,e=0,n=this.ranges;e<n.length;e++){var r=n[e];t+=r[1]-r[0]+1}return t},t.prototype.equals=function(e){if(void 0===e)throw new TypeError("Invalid input");if(e instanceof t){if(e===this)return!0;if(this.ranges.length!==e.ranges.length)return!1;for(var n=0;n<this.ranges.length;n++)if(this.ranges[n][0]!==e.ranges[n][0]||this.ranges[n][1]!==e.ranges[n][1])return!1;return!0}return this.equals(new t(e))},t.prototype.isUnbounded=function(){return this.ranges.length>0&&(this.ranges[0][0]===-1/0||this.ranges[this.ranges.length-1][1]===1/0)},t.prototype.min=function(){if(0!==this.ranges.length)return this.ranges[0][0]},t.prototype.max=function(){if(0!==this.ranges.length)return this.ranges[this.ranges.length-1][1]},t.prototype.shift=function(){var t=this.min();if(t===-1/0)throw new RangeError("shift() was invoked on an unbounded MultiRange which contains -Infinity");return void 0!==t&&this.subtract(t),t},t.prototype.pop=function(){var t=this.max();if(t===1/0)throw new RangeError("pop() was invoked on an unbounded MultiRange which contains +Infinity");return void 0!==t&&this.subtract(t),t},t.prototype.toString=function(){function t(t){return 0>t?"("+t+")":String(t)}for(var e=[],n=0,r=this.ranges;n<r.length;n++){var s=r[n];s[0]===-1/0?s[1]===1/0?e.push("-"):e.push("-"+t(s[1])):s[1]===1/0?e.push(t(s[0])+"-"):s[0]==s[1]?e.push(t(s[0])):e.push(t(s[0])+"-"+t(s[1]))}return e.join(",")},t.prototype.toArray=function(){if(this.isUnbounded())throw new RangeError("You cannot build an array from an unbounded range");for(var t=new Array(this.length()),e=0,n=0,r=this.ranges;n<r.length;n++)for(var s=r[n],i=s[0];i<=s[1];i++)t[e++]=i;return t},t.prototype.getIterator=function(){var t=this;if(this.isUnbounded())throw new RangeError("Unbounded ranges cannot be iterated over");var e=0,n=this.ranges[e],r=n?n[0]:void 0;return{next(){if(!n)return{done:!0};var s=r;return++r>n[1]&&(n=t.ranges[++e],r=n?n[0]:void 0),{value:s}}}},t}();BW.MultiRange=zW,"function"==typeof Symbol&&"symbol"==typeof Symbol.iterator&&(zW.prototype[Symbol.iterator]=zW.prototype.getIterator),BW.multirange=t=>new zW(t);var WW=t=>{for(var e=new Array(t),n=0;t>n;++n)e[n]=n;return e},jW="undefined"!=typeof Float64Array,UW={float32:[],float64:[],int8:[],int16:[],int32:[],uint8:[],uint16:[],uint32:[],array:[],uint8_clamped:[],buffer:[],generic:[]},GW=(t,e,n,r)=>{if(void 0===t)return(0,UW.array[0])([]);"number"==typeof t&&(t=[t]),void 0===e&&(e=[t.length]);var s=e.length;if(void 0===n){n=new Array(s);for(var i=s-1,o=1;i>=0;--i)n[i]=o,o*=e[i]}if(void 0===r)for(r=0,i=0;s>i;++i)0>n[i]&&(r-=(e[i]-1)*n[i]);for(var a=(t=>{if(null!=(e=t)&&(uh(e)||(t=>"function"==typeof t.readFloatLE&&"function"==typeof t.slice&&uh(t.slice(0,0)))(e)||e.Nt))return"buffer";var e;if(jW)switch({}.toString.call(t)){case"[object Float64Array]":return"float64";case"[object Float32Array]":return"float32";case"[object Int8Array]":return"int8";case"[object Int16Array]":return"int16";case"[object Int32Array]":return"int32";case"[object Uint8Array]":return"uint8";case"[object Uint16Array]":return"uint16";case"[object Uint32Array]":return"uint32";case"[object Uint8ClampedArray]":return"uint8_clamped"}return Array.isArray(t)?"array":"generic"})(t),u=UW[a];u.length<=s+1;)u.push(hh(a,u.length-1));return(0,u[s+1])(t,e,n,r)},qW={};try{qW.GifWriter=function(t,e,n,r){function s(t){var e=t.length;if(2>e||e>256||e&e-1)throw new Error("Invalid code/color length, must be power of 2 and 2 .. 256.");return e}var i=0,o=void 0===(r=void 0===r?{}:r).loop?null:r.loop,a=void 0===r.palette?null:r.palette;if(0>=e||0>=n||e>65535||n>65535)throw new Error("Width/Height invalid.");t[i++]=71,t[i++]=73,t[i++]=70,t[i++]=56,t[i++]=57,t[i++]=97;var u=0,l=0;if(null!==a){for(var c=s(a);c>>=1;)++u;if(c=1<<u,--u,void 0!==r.background){if((l=r.background)>=c)throw new Error("Background index out of range.");if(0===l)throw new Error("Background index explicitly passed as 0.")}}if(t[i++]=255&e,t[i++]=e>>8&255,t[i++]=255&n,t[i++]=n>>8&255,t[i++]=(null!==a?128:0)|u,t[i++]=l,t[i++]=0,null!==a)for(var h=0,f=a.length;f>h;++h){var d=a[h];t[i++]=d>>16&255,t[i++]=d>>8&255,t[i++]=255&d}if(null!==o){if(0>o||o>65535)throw new Error("Loop count invalid.");t[i++]=33,t[i++]=255,t[i++]=11,t[i++]=78,t[i++]=69,t[i++]=84,t[i++]=83,t[i++]=67,t[i++]=65,t[i++]=80,t[i++]=69,t[i++]=50,t[i++]=46,t[i++]=48,t[i++]=3,t[i++]=1,t[i++]=255&o,t[i++]=o>>8&255,t[i++]=0}var p=!1;this.addFrame=(e,n,r,o,u,l)=>{if(!0===p&&(--i,p=!1),l=void 0===l?{}:l,0>e||0>n||e>65535||n>65535)throw new Error("x/y invalid.");if(0>=r||0>=o||r>65535||o>65535)throw new Error("Width/Height invalid.");if(u.length<r*o)throw new Error("Not enough pixels for the frame size.");var c=!0,h=l.palette;if(null==h&&(c=!1,h=a),null==h)throw new Error("Must supply either a local or global palette.");for(var f=s(h),d=0;f>>=1;)++d;f=1<<d;var m=void 0===l.delay?0:l.delay,y=void 0===l.disposal?0:l.disposal;if(0>y||y>3)throw new Error("Disposal out of range.");var b=!1,g=0;if(void 0!==l.transparent&&null!==l.transparent&&(b=!0,0>(g=l.transparent)||g>=f))throw new Error("Transparent color index.");if((0!==y||b||0!==m)&&(t[i++]=33,t[i++]=249,t[i++]=4,t[i++]=y<<2|(!0===b?1:0),t[i++]=255&m,t[i++]=m>>8&255,t[i++]=g,t[i++]=0),t[i++]=44,t[i++]=255&e,t[i++]=e>>8&255,t[i++]=255&n,t[i++]=n>>8&255,t[i++]=255&r,t[i++]=r>>8&255,t[i++]=255&o,t[i++]=o>>8&255,t[i++]=!0===c?128|d-1:0,!0===c)for(var w=0,x=h.length;x>w;++w){var v=h[w];t[i++]=v>>16&255,t[i++]=v>>8&255,t[i++]=255&v}return i=((t,e,n,r)=>{function s(n){for(;f>=n;)t[e++]=255&d,d>>=8,f-=8,e===o+256&&(t[o]=255,o=e++)}function i(t){d|=t<<f,f+=h,s(8)}t[e++]=n;var o=e++,a=1<<n,u=a-1,l=a+1,c=l+1,h=n+1,f=0,d=0,p=r[0]&u,m={};i(a);for(var y=1,b=r.length;b>y;++y){var g=r[y]&u,w=p<<8|g,x=m[w];if(void 0===x){for(d|=p<<f,f+=h;f>=8;)t[e++]=255&d,d>>=8,f-=8,e===o+256&&(t[o]=255,o=e++);4096===c?(i(a),c=l+1,h=n+1,m={}):(1<<h>c||++h,m[w]=c++),p=g}else p=x}return i(p),i(l),s(1),o+1===e?t[o]=0:(t[o]=e-o-1,t[e++]=0),e})(t,i,2>d?2:d,u),i},this.end=()=>(!1===p&&(t[i++]=59,p=!0),i),this.getOutputBuffer=()=>t,this.setOutputBuffer=e=>{t=e},this.getOutputBufferPosition=()=>i,this.setOutputBufferPosition=t=>{i=t}},qW.GifReader=function(t){var e=0;if(71!==t[e++]||73!==t[e++]||70!==t[e++]||56!==t[e++]||56!=(t[e++]+1&253)||97!==t[e++])throw new Error("Invalid GIF 87a/89a header.");var n=t[e++]|t[e++]<<8,r=t[e++]|t[e++]<<8,s=t[e++],i=s>>7,o=1<<1+(7&s);t[e++],t[e++];var a=null,u=null;i&&(a=e,u=o,e+=3*o);var l=!0,c=[],h=0,f=null,d=0,p=null;for(this.width=n,this.height=r;l&&e<t.length;)switch(t[e++]){case 33:switch(t[e++]){case 255:if(11!==t[e]||78==t[e+1]&&69==t[e+2]&&84==t[e+3]&&83==t[e+4]&&67==t[e+5]&&65==t[e+6]&&80==t[e+7]&&69==t[e+8]&&50==t[e+9]&&46==t[e+10]&&48==t[e+11]&&3==t[e+12]&&1==t[e+13]&&0==t[e+16])e+=14,p=t[e++]|t[e++]<<8,e++;else for(e+=12;;){if(0>(E=t[e++]))throw Error("Invalid block size");if(0===E)break;e+=E}break;case 249:if(4!==t[e++]||0!==t[e+4])throw new Error("Invalid graphics extension block.");var m=t[e++];h=t[e++]|t[e++]<<8,f=t[e++],1&m||(f=null),d=m>>2&7,e++;break;case 254:for(;;){if(0>(E=t[e++]))throw Error("Invalid block size");if(0===E)break;e+=E}break;default:throw new Error("Unknown graphic control label: 0x"+t[e-1].toString(16))}break;case 44:var y=t[e++]|t[e++]<<8,b=t[e++]|t[e++]<<8,g=t[e++]|t[e++]<<8,w=t[e++]|t[e++]<<8,x=t[e++],v=x>>6&1,$=1<<1+(7&x),k=a,N=u,C=!1;x>>7&&(C=!0,k=e,N=$,e+=3*$);var S=e;for(e++;;){var E;if(0>(E=t[e++]))throw Error("Invalid block size");if(0===E)break;e+=E}c.push({x:y,y:b,width:g,height:w,has_local_palette:C,palette_offset:k,palette_size:N,data_offset:S,data_length:e-S,transparent_index:f,interlaced:!!v,delay:h,disposal:d});break;case 59:l=!1;break;default:throw new Error("Unknown gif block: 0x"+t[e-1].toString(16))}this.numFrames=()=>c.length,this.loopCount=()=>p,this.frameInfo=t=>{if(0>t||t>=c.length)throw new Error("Frame index out of range.");return c[t]},this.decodeAndBlitFrameBGRA=function(e,r){var s=this.frameInfo(e),i=s.width*s.height,o=new Uint8Array(i);fh(t,s.data_offset,o,i);var a=s.palette_offset,u=s.transparent_index;null===u&&(u=256);var l=s.width,c=n-l,h=l,f=4*(s.y*n+s.x),d=4*((s.y+s.height)*n+s.x),p=f,m=4*c;!0===s.interlaced&&(m+=4*n*7);for(var y=8,b=0,g=o.length;g>b;++b){var w=o[b];if(0===h&&(h=l,d>(p+=m)||(m=4*c+4*n*(y-1),p=f+(l+c)*(y<<1),y>>=1)),w===u)p+=4;else{var x=t[a+3*w],v=t[a+3*w+1],$=t[a+3*w+2];r[p++]=$,r[p++]=v,r[p++]=x,r[p++]=255}--h}},this.decodeAndBlitFrameRGBA=function(e,r){var s=this.frameInfo(e),i=s.width*s.height,o=new Uint8Array(i);fh(t,s.data_offset,o,i);var a=s.palette_offset,u=s.transparent_index;null===u&&(u=256);var l=s.width,c=n-l,h=l,f=4*(s.y*n+s.x),d=4*((s.y+s.height)*n+s.x),p=f,m=4*c;!0===s.interlaced&&(m+=4*n*7);for(var y=8,b=0,g=o.length;g>b;++b){var w=o[b];if(0===h&&(h=l,d>(p+=m)||(m=4*c+4*n*(y-1),p=f+(l+c)*(y<<1),y>>=1)),w===u)p+=4;else{var x=t[a+3*w],v=t[a+3*w+1],$=t[a+3*w+2];r[p++]=x,r[p++]=v,r[p++]=$,r[p++]=255}--h}}}}catch(JJ){}var HW=(t,e)=>{for(var n=e[1].length-Math.abs(t.arrayBlockIndices[0])|0,r=new Array(t.arrayArgs.length),s=new Array(t.arrayArgs.length),i=0;i<t.arrayArgs.length;++i)s[i]=e[2*i],r[i]=e[2*i+1];var o=[],a=[],u=[],l=[],c=[];for(i=0;i<t.arrayArgs.length;++i){0>t.arrayBlockIndices[i]?(u.push(0),l.push(n),o.push(n),a.push(n+t.arrayBlockIndices[i])):(u.push(t.arrayBlockIndices[i]),l.push(t.arrayBlockIndices[i]+n),o.push(0),a.push(t.arrayBlockIndices[i]));for(var h=[],f=0;f<r[i].length;f++)u[i]<=r[i][f]&&r[i][f]<l[i]&&h.push(r[i][f]-u[i]);c.push(h)}var d=["SS"],p=["'use strict'"],m=[];for(f=0;n>f;++f)m.push(["s",f,"=SS[",f,"]"].join(""));for(i=0;i<t.arrayArgs.length;++i){for(d.push("a"+i),d.push("t"+i),d.push("p"+i),f=0;n>f;++f)m.push(["t",i,"p",f,"=t",i,"[",u[i]+f,"]"].join(""));for(f=0;f<Math.abs(t.arrayBlockIndices[i]);++f)m.push(["t",i,"b",f,"=t",i,"[",o[i]+f,"]"].join(""))}for(i=0;i<t.scalarArgs.length;++i)d.push("Y"+i);if(t.shapeArgs.length>0&&m.push("shape=SS.slice(0)"),t.indexArgs.length>0){var y=new Array(n);for(i=0;n>i;++i)y[i]="0";m.push(["index=[",y.join(","),"]"].join(""))}for(i=0;i<t.offsetArgs.length;++i){var b=t.offsetArgs[i],g=[];for(f=0;f<b.offset.length;++f)0!==b.offset[f]&&(1===b.offset[f]?g.push(["t",b.array,"p",f].join("")):g.push([b.offset[f],"*t",b.array,"p",f].join("")));0===g.length?m.push("q"+i+"=0"):m.push(["q",i,"=",g.join("+")].join(""))}var w,x,v,$=0===(w=[].concat(t.pre.thisVars).concat(t.body.thisVars).concat(t.post.thisVars)).length?w:x?(v||w.sort(x),((t,e)=>{for(var n=1,r=t.length,s=t[0],i=t[0],o=1;r>o;++o)if(i=s,e(s=t[o],i)){if(o===n){n++;continue}t[n++]=s}return t.length=n,t})(w,x)):(v||w.sort(),(t=>{for(var e=1,n=t.length,r=t[0],s=t[0],i=1;n>i;++i,s=r)if(s=r,(r=t[i])!==s){if(i===e){e++;continue}t[e++]=r}return t.length=e,t})(w));for((m=m.concat($)).length>0&&p.push("var "+m.join(",")),i=0;i<t.arrayArgs.length;++i)p.push("p"+i+"|=0");t.pre.body.length>3&&p.push(ph(t.pre,t,s));var k=ph(t.body,t,s),N=(t=>{for(var e=0,n=t[0].length;n>e;){for(var r=1;r<t.length;++r)if(t[r][e]!==t[0][e])return e;++e}return e})(c);n>N?p.push(((t,e,n,r)=>{for(var s=e.length,i=n.arrayArgs.length,o=n.blockSize,a=n.indexArgs.length>0,u=[],l=0;i>l;++l)u.push(["var offset",l,"=p",l].join(""));for(l=t;s>l;++l)u.push(["for(var j"+l+"=SS[",e[l],"]|0;j",l,">0;){"].join("")),u.push(["if(j",l,"<",o,"){"].join("")),u.push(["s",e[l],"=j",l].join("")),u.push(["j",l,"=0"].join("")),u.push(["}else{s",e[l],"=",o].join("")),u.push(["j",l,"-=",o,"}"].join("")),a&&u.push(["index[",e[l],"]=j",l].join(""));for(l=0;i>l;++l){for(var c=["offset"+l],h=t;s>h;++h)c.push(["j",h,"*t",l,"p",e[h]].join(""));u.push(["p",l,"=(",c.join("+"),")"].join(""))}for(u.push(dh(e,n,r)),l=t;s>l;++l)u.push("}");return u.join("\n")})(N,c[0],t,k)):p.push(dh(c[0],t,k)),t.post.body.length>3&&p.push(ph(t.post,t,s)),t.debug;var C=[t.funcName||"unnamed","_cwise_loop_",r[0].join("s"),"m",N,mh(s)].join("");return new Function(["function ",C,"(",d.join(","),"){",p.join("\n"),"} return ",C].join(""))()},XW=t=>{var e=["'use strict'","var CACHED={}"],n=[],r=t.funcName+"_cwise_thunk";e.push(["return function ",r,"(",t.shimArgs.join(","),"){"].join(""));for(var s=[],i=[],o=[["array",t.arrayArgs[0],".shape.slice(",Math.max(0,t.arrayBlockIndices[0]),0>t.arrayBlockIndices[0]?","+t.arrayBlockIndices[0]+")":")"].join("")],a=[],u=[],l=0;l<t.arrayArgs.length;++l){var c=t.arrayArgs[l];n.push(["t",c,"=array",c,".dtype,","r",c,"=array",c,".order"].join("")),s.push("t"+c),s.push("r"+c),i.push("t"+c),i.push("r"+c+".join()"),o.push("array"+c+".data"),o.push("array"+c+".stride"),o.push("array"+c+".offset|0"),l>0&&(a.push("array"+t.arrayArgs[0]+".shape.length===array"+c+".shape.length+"+(Math.abs(t.arrayBlockIndices[0])-Math.abs(t.arrayBlockIndices[l]))),u.push("array"+t.arrayArgs[0]+".shape[shapeIndex+"+Math.max(0,t.arrayBlockIndices[0])+"]===array"+c+".shape[shapeIndex+"+Math.max(0,t.arrayBlockIndices[l])+"]"))}for(t.arrayArgs.length>1&&(e.push("if (!("+a.join(" && ")+")) throw new Error('cwise: Arrays do not all have the same dimensionality!')"),e.push("for(var shapeIndex=array"+t.arrayArgs[0]+".shape.length-"+Math.abs(t.arrayBlockIndices[0])+"; shapeIndex--\x3e0;) {"),e.push("if (!("+u.join(" && ")+")) throw new Error('cwise: Arrays do not all have the same shape!')"),e.push("}")),l=0;l<t.scalarArgs.length;++l)o.push("scalar"+t.scalarArgs[l]);return n.push(["type=[",i.join(","),"].join()"].join("")),n.push("proc=CACHED[type]"),e.push("var "+n.join(",")),e.push(["if(!proc){","CACHED[type]=proc=compile([",s.join(","),"])}","return proc(",o.join(","),")}"].join("")),t.debug,new Function("compile",e.join("\n"))(HW.bind(void 0,t))},JW=t=>{var e=new yh;e.pre=t.pre,e.body=t.body,e.post=t.post;var n=t.args.slice(0);e.argTypes=n;for(var r=0;r<n.length;++r){var s=n[r];if("array"===s||"object"==typeof s&&s.blockIndices){if(e.argTypes[r]="array",e.arrayArgs.push(r),e.arrayBlockIndices.push(s.blockIndices?s.blockIndices:0),e.shimArgs.push("array"+r),r<e.pre.args.length&&e.pre.args[r].count>0)throw new Error("cwise: pre() block may not reference array args");if(r<e.post.args.length&&e.post.args[r].count>0)throw new Error("cwise: post() block may not reference array args")}else if("scalar"===s)e.scalarArgs.push(r),e.shimArgs.push("scalar"+r);else if("index"===s){if(e.indexArgs.push(r),r<e.pre.args.length&&e.pre.args[r].count>0)throw new Error("cwise: pre() block may not reference array index");if(r<e.body.args.length&&e.body.args[r].lvalue)throw new Error("cwise: body() block may not write to array index");if(r<e.post.args.length&&e.post.args[r].count>0)throw new Error("cwise: post() block may not reference array index")}else if("shape"===s){if(e.shapeArgs.push(r),r<e.pre.args.length&&e.pre.args[r].lvalue)throw new Error("cwise: pre() block may not write to array shape");if(r<e.body.args.length&&e.body.args[r].lvalue)throw new Error("cwise: body() block may not write to array shape");if(r<e.post.args.length&&e.post.args[r].lvalue)throw new Error("cwise: post() block may not write to array shape")}else{if("object"!=typeof s||!s.offset)throw new Error("cwise: Unknown argument type "+n[r]);e.argTypes[r]="offset",e.offsetArgs.push({array:s.array,offset:s.offset}),e.offsetArgIndex.push(r)}}if(0>=e.arrayArgs.length)throw new Error("cwise: No array arguments specified");if(e.pre.args.length>n.length)throw new Error("cwise: Too many arguments in pre() block");if(e.body.args.length>n.length)throw new Error("cwise: Too many arguments in body() block");if(e.post.args.length>n.length)throw new Error("cwise: Too many arguments in post() block");return e.debug=!!t.printCode||!!t.debug,e.funcName=t.funcName||"cwise",e.blockSize=t.blockSize||64,XW(e)};JW({args:["array","scalar","index"],pre:{body:"{}",args:[],thisVars:[],localVars:[]},body:{body:"{\nvar _inline_1_v=_inline_1_arg1_,_inline_1_i\nfor(_inline_1_i=0;_inline_1_i<_inline_1_arg2_.length-1;++_inline_1_i) {\n_inline_1_v=_inline_1_v[_inline_1_arg2_[_inline_1_i]]\n}\n_inline_1_arg0_=_inline_1_v[_inline_1_arg2_[_inline_1_arg2_.length-1]]\n}",args:[{name:"_inline_1_arg0_",lvalue:!0,rvalue:!1,count:1},{name:"_inline_1_arg1_",lvalue:!1,rvalue:!0,count:1},{name:"_inline_1_arg2_",lvalue:!1,rvalue:!0,count:4}],thisVars:[],localVars:["_inline_1_i","_inline_1_v"]},post:{body:"{}",args:[],thisVars:[],localVars:[]},funcName:"convert",blockSize:64});var KW,YW={exports:{}},ZW={exports:{}},QW="object"==typeof Reflect?Reflect:null,tj=QW&&"function"==typeof QW.apply?QW.apply:(t,e,n)=>(()=>{}).apply.call(t,e,n);KW=QW&&"function"==typeof QW.ownKeys?QW.ownKeys:Object.getOwnPropertySymbols?t=>Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t)):t=>Object.getOwnPropertyNames(t);var ej=Number.isNaN||(t=>t!=t);ZW.exports=bh,ZW.exports.once=(t,e)=>new Promise((n,r)=>{function s(n){t.removeListener(e,i),r(n)}function i(){"function"==typeof t.removeListener&&t.removeListener("error",s),n([].slice.call(arguments))}Sh(t,e,i,{once:!0}),"error"!==e&&((t,e)=>{"function"==typeof t.on&&Sh(t,"error",e,{once:!0})})(t,s)}),bh.EventEmitter=bh,bh.prototype.C=void 0,bh.prototype.T=0,bh.prototype.N=void 0;var nj=10;Object.defineProperty(bh,"defaultMaxListeners",{enumerable:!0,get(){return nj},set(t){if("number"!=typeof t||0>t||ej(t))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+t+".");nj=t}}),bh.init=function(){void 0!==this.C&&this.C!==Object.getPrototypeOf(this).C||(this.C=Object.create(null),this.T=0),this.N=this.N||void 0},bh.prototype.setMaxListeners=function(t){if("number"!=typeof t||0>t||ej(t))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+t+".");return this.N=t,this},bh.prototype.getMaxListeners=function(){return wh(this)},bh.prototype.emit=function(t){for(var e=[],n=1;arguments.length>n;n++)e.push(arguments[n]);var r="error"===t,s=this.C;if(void 0!==s)r=r&&void 0===s.error;else if(!r)return!1;if(r){var i;if(e.length>0&&(i=e[0]),i instanceof Error)throw i;var o=new Error("Unhandled error."+(i?" ("+i.message+")":""));throw o.context=i,o}var a=s[t];if(void 0===a)return!1;if("function"==typeof a)tj(a,this,e);else{var u=a.length,l=Ch(a,u);for(n=0;u>n;++n)tj(l[n],this,e)}return!0},bh.prototype.addListener=function(t,e){return xh(this,t,e,!1)},bh.prototype.on=bh.prototype.addListener,bh.prototype.prependListener=function(t,e){return xh(this,t,e,!0)},bh.prototype.once=function(t,e){return gh(e),this.on(t,$h(this,t,e)),this},bh.prototype.prependOnceListener=function(t,e){return gh(e),this.prependListener(t,$h(this,t,e)),this},bh.prototype.removeListener=function(t,e){var n,r,s,i,o;if(gh(e),void 0===(r=this.C))return this;if(void 0===(n=r[t]))return this;if(n===e||n.listener===e)0===--this.T?this.C=Object.create(null):(delete r[t],r.removeListener&&this.emit("removeListener",t,n.listener||e));else if("function"!=typeof n){for(s=-1,i=n.length-1;i>=0;i--)if(n[i]===e||n[i].listener===e){o=n[i].listener,s=i;break}if(0>s)return this;0===s?n.shift():((t,e)=>{for(;e+1<t.length;e++)t[e]=t[e+1];t.pop()})(n,s),1===n.length&&(r[t]=n[0]),void 0!==r.removeListener&&this.emit("removeListener",t,o||e)}return this},bh.prototype.off=bh.prototype.removeListener,bh.prototype.removeAllListeners=function(t){var e,n,r;if(void 0===(n=this.C))return this;if(void 0===n.removeListener)return 0===arguments.length?(this.C=Object.create(null),this.T=0):void 0!==n[t]&&(0===--this.T?this.C=Object.create(null):delete n[t]),this;if(0===arguments.length){var s,i=Object.keys(n);for(r=0;r<i.length;++r)"removeListener"!==(s=i[r])&&this.removeAllListeners(s);return this.removeAllListeners("removeListener"),this.C=Object.create(null),this.T=0,this}if("function"==typeof(e=n[t]))this.removeListener(t,e);else if(void 0!==e)for(r=e.length-1;r>=0;r--)this.removeListener(t,e[r]);return this},bh.prototype.listeners=function(t){return kh(this,t,!0)},bh.prototype.rawListeners=function(t){return kh(this,t,!1)},bh.listenerCount=(t,e)=>"function"==typeof t.listenerCount?t.listenerCount(e):Nh.call(t,e),bh.prototype.listenerCount=Nh,bh.prototype.eventNames=function(){return this.T>0?KW(this.C):[]};var rj=ZW.exports,sj={exports:{}};"function"==typeof Object.create?sj.exports=(t,e)=>{e&&(t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}))}:sj.exports=(t,e)=>{if(e){t.super_=e;var n=()=>{};n.prototype=e.prototype,t.prototype=new n,t.prototype.constructor=t}};for(var ij,oj,aj=sj.exports,uj={},lj={byteLength(t){var e=Th(t),n=e[0],r=e[1];return 3*(n+r)/4-r},toByteArray(t){var e,n,r=Th(t),s=r[0],i=r[1],o=new fj(((t,e,n)=>3*(e+n)/4-n)(0,s,i)),a=0,u=i>0?s-4:s;for(n=0;u>n;n+=4)e=hj[t.charCodeAt(n)]<<18|hj[t.charCodeAt(n+1)]<<12|hj[t.charCodeAt(n+2)]<<6|hj[t.charCodeAt(n+3)],o[a++]=e>>16&255,o[a++]=e>>8&255,o[a++]=255&e;return 2===i&&(e=hj[t.charCodeAt(n)]<<2|hj[t.charCodeAt(n+1)]>>4,o[a++]=255&e),1===i&&(e=hj[t.charCodeAt(n)]<<10|hj[t.charCodeAt(n+1)]<<4|hj[t.charCodeAt(n+2)]>>2,o[a++]=e>>8&255,o[a++]=255&e),o},fromByteArray(t){for(var e,n=t.length,r=n%3,s=[],i=16383,o=0,a=n-r;a>o;o+=i)s.push(Rh(t,o,o+i>a?a:o+i));return 1===r?(e=t[n-1],s.push(cj[e>>2]+cj[e<<4&63]+"==")):2===r&&(e=(t[n-2]<<8)+t[n-1],s.push(cj[e>>10]+cj[e>>4&63]+cj[e<<2&63]+"=")),s.join("")}},cj=[],hj=[],fj="undefined"!=typeof Uint8Array?Uint8Array:Array,dj="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",pj=0;64>pj;++pj)cj[pj]=dj[pj],hj[dj.charCodeAt(pj)]=pj;hj["-".charCodeAt(0)]=62,hj["_".charCodeAt(0)]=63;var mj,yj,bj,gj,wj={read(t,e,n,r,s){var i,o,a=8*s-r-1,u=(1<<a)-1,l=u>>1,c=-7,h=n?s-1:0,f=n?-1:1,d=t[e+h];for(h+=f,i=d&(1<<-c)-1,d>>=-c,c+=a;c>0;i=256*i+t[e+h],h+=f,c-=8);for(o=i&(1<<-c)-1,i>>=-c,c+=r;c>0;o=256*o+t[e+h],h+=f,c-=8);if(0===i)i=1-l;else{if(i===u)return o?NaN:1/0*(d?-1:1);o+=Math.pow(2,r),i-=l}return(d?-1:1)*o*Math.pow(2,i-r)},write(t,e,n,r,s,i){var o,a,u,l=8*i-s-1,c=(1<<l)-1,h=c>>1,f=23===s?Math.pow(2,-24)-Math.pow(2,-77):0,d=r?0:i-1,p=r?1:-1,m=0>e||0===e&&0>1/e?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(a=isNaN(e)?1:0,o=c):(o=Math.floor(Math.log(e)/Math.LN2),1>e*(u=Math.pow(2,-o))&&(o--,u*=2),2>(e+=1>o+h?f*Math.pow(2,1-h):f/u)*u||(o++,u/=2),c>o+h?1>o+h?(a=e*Math.pow(2,h-1)*Math.pow(2,s),o=0):(a=(e*u-1)*Math.pow(2,s),o+=h):(a=0,o=c));s>=8;t[n+d]=255&a,d+=p,a/=256,s-=8);for(o=o<<s|a,l+=s;l>0;t[n+d]=255&o,d+=p,o/=256,l-=8);t[n+d-p]|=128*m}};!function(t){function e(t){if(t>H)throw new RangeError('The value "'+t+'" is invalid for option "size"');const e=new Uint8Array(t);return Object.setPrototypeOf(e,n.prototype),e}function n(t,e,n){if("number"==typeof t){if("string"==typeof e)throw new TypeError('The "string" argument must be of type string. Received type number');return i(t)}return r(t,e,n)}function r(t,r,s){if("string"==typeof t)return((t,r)=>{if("string"==typeof r&&""!==r||(r="utf8"),!n.isEncoding(r))throw new TypeError("Unknown encoding: "+r);const s=0|l(t,r);let i=e(s);const o=i.write(t,r);return o!==s&&(i=i.slice(0,o)),i})(t,r);if(ArrayBuffer.isView(t))return(t=>{if(B(t,Uint8Array)){const e=new Uint8Array(t);return a(e.buffer,e.byteOffset,e.byteLength)}return o(t)})(t);if(null==t)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t);if(B(t,ArrayBuffer)||t&&B(t.buffer,ArrayBuffer))return a(t,r,s);if("undefined"!=typeof SharedArrayBuffer&&(B(t,SharedArrayBuffer)||t&&B(t.buffer,SharedArrayBuffer)))return a(t,r,s);if("number"==typeof t)throw new TypeError('The "value" argument must not be of type number. Received type number');const i=t.valueOf&&t.valueOf();if(null!=i&&i!==t)return n.from(i,r,s);const c=(t=>{if(n.isBuffer(t)){const n=0|u(t.length),r=e(n);return 0===r.length||t.copy(r,0,0,n),r}return void 0!==t.length?"number"!=typeof t.length||z(t.length)?e(0):o(t):"Buffer"===t.type&&Array.isArray(t.data)?o(t.data):void 0})(t);if(c)return c;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof t[Symbol.toPrimitive])return n.from(t[Symbol.toPrimitive]("string"),r,s);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t)}function s(t){if("number"!=typeof t)throw new TypeError('"size" argument must be of type number');if(0>t)throw new RangeError('The value "'+t+'" is invalid for option "size"')}function i(t){return s(t),e(0>t?0:0|u(t))}function o(t){const n=0>t.length?0:0|u(t.length),r=e(n);for(let e=0;n>e;e+=1)r[e]=255&t[e];return r}function a(t,e,r){if(0>e||t.byteLength<e)throw new RangeError('"offset" is outside of buffer bounds');if(t.byteLength<e+(r||0))throw new RangeError('"length" is outside of buffer bounds');let s;return s=void 0===e&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,e):new Uint8Array(t,e,r),Object.setPrototypeOf(s,n.prototype),s}function u(t){if(t>=H)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+H.toString(16)+" bytes");return 0|t}function l(t,e){if(n.isBuffer(t))return t.length;if(ArrayBuffer.isView(t)||B(t,ArrayBuffer))return t.byteLength;if("string"!=typeof t)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof t);const r=t.length,s=arguments.length>2&&!0===arguments[2];if(!s&&0===r)return 0;let i=!1;for(;;)switch(e){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return L(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return P(t).length;default:if(i)return s?-1:L(t).length;e=(""+e).toLowerCase(),i=!0}}function c(t,e,n){let r=!1;if((void 0===e||0>e)&&(e=0),e>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),0>=n)return"";if((e>>>=0)>=(n>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return k(this,e,n);case"utf8":case"utf-8":return x(this,e,n);case"ascii":return v(this,e,n);case"latin1":case"binary":return $(this,e,n);case"base64":return w(this,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return N(this,e,n);default:if(r)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),r=!0}}function h(t,e,n){const r=t[e];t[e]=t[n],t[n]=r}function f(t,e,r,s,i){if(0===t.length)return-1;if("string"==typeof r?(s=r,r=0):r>2147483647?r=2147483647:-2147483648>r&&(r=-2147483648),z(r=+r)&&(r=i?0:t.length-1),0>r&&(r=t.length+r),r<t.length){if(0>r){if(!i)return-1;r=0}}else{if(i)return-1;r=t.length-1}if("string"==typeof e&&(e=n.from(e,s)),n.isBuffer(e))return 0===e.length?-1:d(t,e,r,s,i);if("number"==typeof e)return e&=255,"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(t,e,r):Uint8Array.prototype.lastIndexOf.call(t,e,r):d(t,[e],r,s,i);throw new TypeError("val must be string, number or Buffer")}function d(t,e,n,r,s){function i(t,e){return 1===a?t[e]:t.readUInt16BE(e*a)}let o,a=1,u=t.length,l=e.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(2>t.length||2>e.length)return-1;a=2,u/=2,l/=2,n/=2}if(s){let r=-1;for(o=n;u>o;o++)if(i(t,o)===i(e,-1===r?0:o-r)){if(-1===r&&(r=o),o-r+1===l)return r*a}else-1!==r&&(o-=o-r),r=-1}else for(n+l>u&&(n=u-l),o=n;o>=0;o--){let n=!0;for(let r=0;l>r;r++)if(i(t,o+r)!==i(e,r)){n=!1;break}if(n)return o}return-1}function p(t,e,n,r){n=Number(n)||0;const s=t.length-n;r?(r=Number(r))>s&&(r=s):r=s;const i=e.length;let o;for(r>i/2&&(r=i/2),o=0;r>o;++o){const r=parseInt(e.substr(2*o,2),16);if(z(r))return o;t[n+o]=r}return o}function m(t,e,n,r){return V(L(e,t.length-n),t,n,r)}function y(t,e,n,r){return V((t=>{const e=[];for(let n=0;n<t.length;++n)e.push(255&t.charCodeAt(n));return e})(e),t,n,r)}function b(t,e,n,r){return V(P(e),t,n,r)}function g(t,e,n,r){return V(((t,e)=>{let n,r,s;const i=[];for(let o=0;o<t.length&&(e-=2)>=0;++o)n=t.charCodeAt(o),r=n>>8,s=n%256,i.push(s),i.push(r);return i})(e,t.length-n),t,n,r)}function w(t,e,n){return 0===e&&n===t.length?U.fromByteArray(t):U.fromByteArray(t.slice(e,n))}function x(t,e,n){n=Math.min(t.length,n);const r=[];let s=e;for(;n>s;){const e=t[s];let i=null,o=e>239?4:e>223?3:e>191?2:1;if(n>=s+o){let n,r,a,u;switch(o){case 1:128>e&&(i=e);break;case 2:n=t[s+1],128==(192&n)&&(u=(31&e)<<6|63&n,u>127&&(i=u));break;case 3:n=t[s+1],r=t[s+2],128==(192&n)&&128==(192&r)&&(u=(15&e)<<12|(63&n)<<6|63&r,u>2047&&(55296>u||u>57343)&&(i=u));break;case 4:n=t[s+1],r=t[s+2],a=t[s+3],128==(192&n)&&128==(192&r)&&128==(192&a)&&(u=(15&e)<<18|(63&n)<<12|(63&r)<<6|63&a,u>65535&&1114112>u&&(i=u))}}null===i?(i=65533,o=1):i>65535&&(i-=65536,r.push(i>>>10&1023|55296),i=56320|1023&i),r.push(i),s+=o}return(t=>{const e=t.length;if(X>=e)return String.fromCharCode.apply(String,t);let n="",r=0;for(;e>r;)n+=String.fromCharCode.apply(String,t.slice(r,r+=X));return n})(r)}function v(t,e,n){let r="";n=Math.min(t.length,n);for(let s=e;n>s;++s)r+=String.fromCharCode(127&t[s]);return r}function $(t,e,n){let r="";n=Math.min(t.length,n);for(let s=e;n>s;++s)r+=String.fromCharCode(t[s]);return r}function k(t,e,n){const r=t.length;e&&e>=0||(e=0),(!n||0>n||n>r)&&(n=r);let s="";for(let i=e;n>i;++i)s+=Y[t[i]];return s}function N(t,e,n){const r=t.slice(e,n);let s="";for(let i=0;i<r.length-1;i+=2)s+=String.fromCharCode(r[i]+256*r[i+1]);return s}function C(t,e,n){if(t%1!=0||0>t)throw new RangeError("offset is not uint");if(t+e>n)throw new RangeError("Trying to access beyond buffer length")}function S(t,e,r,s,i,o){if(!n.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>i||o>e)throw new RangeError('"value" argument is out of bounds');if(r+s>t.length)throw new RangeError("Index out of range")}function E(t,e,n,r,s){F(e,r,s,t,n,7);let i=Number(e&BigInt(4294967295));t[n++]=i,i>>=8,t[n++]=i,i>>=8,t[n++]=i,i>>=8,t[n++]=i;let o=Number(e>>BigInt(32)&BigInt(4294967295));return t[n++]=o,o>>=8,t[n++]=o,o>>=8,t[n++]=o,o>>=8,t[n++]=o,n}function T(t,e,n,r,s){F(e,r,s,t,n,7);let i=Number(e&BigInt(4294967295));t[n+7]=i,i>>=8,t[n+6]=i,i>>=8,t[n+5]=i,i>>=8,t[n+4]=i;let o=Number(e>>BigInt(32)&BigInt(4294967295));return t[n+3]=o,o>>=8,t[n+2]=o,o>>=8,t[n+1]=o,o>>=8,t[n]=o,n+8}function _(t,e,n,r,s,i){if(n+r>t.length)throw new RangeError("Index out of range");if(0>n)throw new RangeError("Index out of range")}function R(t,e,n,r,s){return e=+e,n>>>=0,s||_(t,0,n,4),G.write(t,e,n,r,23,4),n+4}function A(t,e,n,r,s){return e=+e,n>>>=0,s||_(t,0,n,8),G.write(t,e,n,r,52,8),n+8}function O(t,e,n){J[t]=class extends n{constructor(){super(),Object.defineProperty(this,"message",{value:e.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${t}]`,this.stack,delete this.name}get code(){return t}set code(t){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:t,writable:!0})}toString(){return`${this.name} [${t}]: ${this.message}`}}}function I(t){let e="",n=t.length;const r="-"===t[0]?1:0;for(;n>=r+4;n-=3)e=`_${t.slice(n-3,n)}${e}`;return`${t.slice(0,n)}${e}`}function F(t,e,n,r,s,i){if(t>n||e>t){const n="bigint"==typeof e?"n":"";let r;throw r=0===e||e===BigInt(0)?`>= 0${n} and < 2${n} ** ${8*(i+1)}${n}`:`>= -(2${n} ** ${8*(i+1)-1}${n}) and < 2 ** ${8*(i+1)-1}${n}`,new J.ERR_OUT_OF_RANGE("value",r,t)}((t,e,n)=>{M(e,"offset"),void 0!==t[e]&&void 0!==t[e+n]||D(e,t.length-(n+1))})(r,s,i)}function M(t,e){if("number"!=typeof t)throw new J.ERR_INVALID_ARG_TYPE(e,"number",t)}function D(t,e,n){if(Math.floor(t)!==t)throw M(t,n),new J.ERR_OUT_OF_RANGE("offset","an integer",t);if(0>e)throw new J.ERR_BUFFER_OUT_OF_BOUNDS;throw new J.ERR_OUT_OF_RANGE("offset",`>= 0 and <= ${e}`,t)}function L(t,e){let n;e=e||1/0;const r=t.length;let s=null;const i=[];for(let o=0;r>o;++o){if(n=t.charCodeAt(o),n>55295&&57344>n){if(!s){if(n>56319){(e-=3)>-1&&i.push(239,191,189);continue}if(o+1===r){(e-=3)>-1&&i.push(239,191,189);continue}s=n;continue}if(56320>n){(e-=3)>-1&&i.push(239,191,189),s=n;continue}n=65536+(s-55296<<10|n-56320)}else s&&(e-=3)>-1&&i.push(239,191,189);if(s=null,128>n){if(0>(e-=1))break;i.push(n)}else if(2048>n){if(0>(e-=2))break;i.push(n>>6|192,63&n|128)}else if(65536>n){if(0>(e-=3))break;i.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(n>=1114112)throw new Error("Invalid code point");if(0>(e-=4))break;i.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return i}function P(t){return U.toByteArray((t=>{if(2>(t=(t=t.split("=")[0]).trim().replace(K,"")).length)return"";for(;t.length%4!=0;)t+="=";return t})(t))}function V(t,e,n,r){let s;for(s=0;r>s&&s+n<e.length&&s<t.length;++s)e[s+n]=t[s];return s}function B(t,e){return t instanceof e||null!=t&&null!=t.constructor&&null!=t.constructor.name&&t.constructor.name===e.name}function z(t){return t!=t}function W(t){return"undefined"==typeof BigInt?j:t}function j(){throw new Error("BigInt not supported")}const U=lj,G=wj,q="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;t.Buffer=n,t.SlowBuffer=t=>(+t!=t&&(t=0),n.alloc(+t)),t.INSPECT_MAX_BYTES=50;const H=2147483647;t.kMaxLength=H,n.TYPED_ARRAY_SUPPORT=(()=>{try{const t=new Uint8Array(1),e={foo(){return 42}};return Object.setPrototypeOf(e,Uint8Array.prototype),Object.setPrototypeOf(t,e),42===t.foo()}catch(JJ){return!1}})(),!n.TYPED_ARRAY_SUPPORT&&"undefined"!=typeof console&&console.error,Object.defineProperty(n.prototype,"parent",{enumerable:!0,get(){if(n.isBuffer(this))return this.buffer}}),Object.defineProperty(n.prototype,"offset",{enumerable:!0,get(){if(n.isBuffer(this))return this.byteOffset}}),n.poolSize=8192,n.from=(t,e,n)=>r(t,e,n),Object.setPrototypeOf(n.prototype,Uint8Array.prototype),Object.setPrototypeOf(n,Uint8Array),n.alloc=(t,n,r)=>((t,n,r)=>(s(t),t>0&&void 0!==n?"string"==typeof r?e(t).fill(n,r):e(t).fill(n):e(t)))(t,n,r),n.allocUnsafe=t=>i(t),n.allocUnsafeSlow=t=>i(t),n.isBuffer=t=>null!=t&&!0===t.Nt&&t!==n.prototype,n.compare=(t,e)=>{if(B(t,Uint8Array)&&(t=n.from(t,t.offset,t.byteLength)),B(e,Uint8Array)&&(e=n.from(e,e.offset,e.byteLength)),!n.isBuffer(t)||!n.isBuffer(e))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(t===e)return 0;let r=t.length,s=e.length;for(let n=0,i=Math.min(r,s);i>n;++n)if(t[n]!==e[n]){r=t[n],s=e[n];break}return s>r?-1:r>s?1:0},n.isEncoding=t=>{switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},n.concat=(t,e)=>{if(!Array.isArray(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return n.alloc(0);let r;if(void 0===e)for(e=0,r=0;r<t.length;++r)e+=t[r].length;const s=n.allocUnsafe(e);let i=0;for(r=0;r<t.length;++r){let e=t[r];if(B(e,Uint8Array))i+e.length>s.length?(n.isBuffer(e)||(e=n.from(e)),e.copy(s,i)):Uint8Array.prototype.set.call(s,e,i);else{if(!n.isBuffer(e))throw new TypeError('"list" argument must be an Array of Buffers');e.copy(s,i)}i+=e.length}return s},n.byteLength=l,n.prototype.Nt=!0,n.prototype.swap16=function(){const t=this.length;if(t%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let e=0;t>e;e+=2)h(this,e,e+1);return this},n.prototype.swap32=function(){const t=this.length;if(t%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let e=0;t>e;e+=4)h(this,e,e+3),h(this,e+1,e+2);return this},n.prototype.swap64=function(){const t=this.length;if(t%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let e=0;t>e;e+=8)h(this,e,e+7),h(this,e+1,e+6),h(this,e+2,e+5),h(this,e+3,e+4);return this},n.prototype.toString=function(){const t=this.length;return 0===t?"":0===arguments.length?x(this,0,t):c.apply(this,arguments)},n.prototype.toLocaleString=n.prototype.toString,n.prototype.equals=function(t){if(!n.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===n.compare(this,t)},n.prototype.inspect=function(){let e="";const n=t.INSPECT_MAX_BYTES;return e=this.toString("hex",0,n).replace(/(.{2})/g,"$1 ").trim(),this.length>n&&(e+=" ... "),"<Buffer "+e+">"},q&&(n.prototype[q]=n.prototype.inspect),n.prototype.compare=function(t,e,r,s,i){if(B(t,Uint8Array)&&(t=n.from(t,t.offset,t.byteLength)),!n.isBuffer(t))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof t);if(void 0===e&&(e=0),void 0===r&&(r=t?t.length:0),void 0===s&&(s=0),void 0===i&&(i=this.length),0>e||r>t.length||0>s||i>this.length)throw new RangeError("out of range index");if(s>=i&&e>=r)return 0;if(s>=i)return-1;if(e>=r)return 1;if(this===t)return 0;let o=(i>>>=0)-(s>>>=0),a=(r>>>=0)-(e>>>=0);const u=Math.min(o,a),l=this.slice(s,i),c=t.slice(e,r);for(let n=0;u>n;++n)if(l[n]!==c[n]){o=l[n],a=c[n];break}return a>o?-1:o>a?1:0},n.prototype.includes=function(t,e,n){return-1!==this.indexOf(t,e,n)},n.prototype.indexOf=function(t,e,n){return f(this,t,e,n,!0)},n.prototype.lastIndexOf=function(t,e,n){return f(this,t,e,n,!1)},n.prototype.write=function(t,e,n,r){if(void 0===e)r="utf8",n=this.length,e=0;else if(void 0===n&&"string"==typeof e)r=e,n=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e>>>=0,isFinite(n)?(n>>>=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}const s=this.length-e;if((void 0===n||n>s)&&(n=s),t.length>0&&(0>n||0>e)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");let i=!1;for(;;)switch(r){case"hex":return p(this,t,e,n);case"utf8":case"utf-8":return m(this,t,e,n);case"ascii":case"latin1":case"binary":return y(this,t,e,n);case"base64":return b(this,t,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return g(this,t,e,n);default:if(i)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),i=!0}},n.prototype.toJSON=function(){return{type:"Buffer",data:[].slice.call(this.Ct||this,0)}};const X=4096;n.prototype.slice=function(t,e){const r=this.length;0>(t=~~t)?0>(t+=r)&&(t=0):t>r&&(t=r),0>(e=void 0===e?r:~~e)?0>(e+=r)&&(e=0):e>r&&(e=r),t>e&&(e=t);const s=this.subarray(t,e);return Object.setPrototypeOf(s,n.prototype),s},n.prototype.readUintLE=n.prototype.readUIntLE=function(t,e,n){t>>>=0,e>>>=0,n||C(t,e,this.length);let r=this[t],s=1,i=0;for(;++i<e&&(s*=256);)r+=this[t+i]*s;return r},n.prototype.readUintBE=n.prototype.readUIntBE=function(t,e,n){t>>>=0,e>>>=0,n||C(t,e,this.length);let r=this[t+--e],s=1;for(;e>0&&(s*=256);)r+=this[t+--e]*s;return r},n.prototype.readUint8=n.prototype.readUInt8=function(t,e){return t>>>=0,e||C(t,1,this.length),this[t]},n.prototype.readUint16LE=n.prototype.readUInt16LE=function(t,e){return t>>>=0,e||C(t,2,this.length),this[t]|this[t+1]<<8},n.prototype.readUint16BE=n.prototype.readUInt16BE=function(t,e){return t>>>=0,e||C(t,2,this.length),this[t]<<8|this[t+1]},n.prototype.readUint32LE=n.prototype.readUInt32LE=function(t,e){return t>>>=0,e||C(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},n.prototype.readUint32BE=n.prototype.readUInt32BE=function(t,e){return t>>>=0,e||C(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},n.prototype.readBigUInt64LE=W(function(t){M(t>>>=0,"offset");const e=this[t],n=this[t+7];void 0!==e&&void 0!==n||D(t,this.length-8);const r=e+this[++t]*lf(2,8)+this[++t]*lf(2,16)+this[++t]*lf(2,24),s=this[++t]+this[++t]*lf(2,8)+this[++t]*lf(2,16)+n*lf(2,24);return BigInt(r)+(BigInt(s)<<BigInt(32))}),n.prototype.readBigUInt64BE=W(function(t){M(t>>>=0,"offset");const e=this[t],n=this[t+7];void 0!==e&&void 0!==n||D(t,this.length-8);const r=e*lf(2,24)+this[++t]*lf(2,16)+this[++t]*lf(2,8)+this[++t],s=this[++t]*lf(2,24)+this[++t]*lf(2,16)+this[++t]*lf(2,8)+n;return(BigInt(r)<<BigInt(32))+BigInt(s)}),n.prototype.readIntLE=function(t,e,n){t>>>=0,e>>>=0,n||C(t,e,this.length);let r=this[t],s=1,i=0;for(;++i<e&&(s*=256);)r+=this[t+i]*s;return s*=128,s>r||(r-=Math.pow(2,8*e)),r},n.prototype.readIntBE=function(t,e,n){t>>>=0,e>>>=0,n||C(t,e,this.length);let r=e,s=1,i=this[t+--r];for(;r>0&&(s*=256);)i+=this[t+--r]*s;return s*=128,s>i||(i-=Math.pow(2,8*e)),i},n.prototype.readInt8=function(t,e){return t>>>=0,e||C(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},n.prototype.readInt16LE=function(t,e){t>>>=0,e||C(t,2,this.length);const n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},n.prototype.readInt16BE=function(t,e){t>>>=0,e||C(t,2,this.length);const n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},n.prototype.readInt32LE=function(t,e){return t>>>=0,e||C(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},n.prototype.readInt32BE=function(t,e){return t>>>=0,e||C(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},n.prototype.readBigInt64LE=W(function(t){M(t>>>=0,"offset");const e=this[t],n=this[t+7];void 0!==e&&void 0!==n||D(t,this.length-8);const r=this[t+4]+this[t+5]*lf(2,8)+this[t+6]*lf(2,16)+(n<<24);return(BigInt(r)<<BigInt(32))+BigInt(e+this[++t]*lf(2,8)+this[++t]*lf(2,16)+this[++t]*lf(2,24))}),n.prototype.readBigInt64BE=W(function(t){M(t>>>=0,"offset");const e=this[t],n=this[t+7];void 0!==e&&void 0!==n||D(t,this.length-8);const r=(e<<24)+this[++t]*lf(2,16)+this[++t]*lf(2,8)+this[++t];return(BigInt(r)<<BigInt(32))+BigInt(this[++t]*lf(2,24)+this[++t]*lf(2,16)+this[++t]*lf(2,8)+n)}),n.prototype.readFloatLE=function(t,e){return t>>>=0,e||C(t,4,this.length),G.read(this,t,!0,23,4)},n.prototype.readFloatBE=function(t,e){return t>>>=0,e||C(t,4,this.length),G.read(this,t,!1,23,4)},n.prototype.readDoubleLE=function(t,e){return t>>>=0,e||C(t,8,this.length),G.read(this,t,!0,52,8)},n.prototype.readDoubleBE=function(t,e){return t>>>=0,e||C(t,8,this.length),G.read(this,t,!1,52,8)},n.prototype.writeUintLE=n.prototype.writeUIntLE=function(t,e,n,r){t=+t,e>>>=0,n>>>=0,r||S(this,t,e,n,Math.pow(2,8*n)-1,0);let s=1,i=0;for(this[e]=255&t;++i<n&&(s*=256);)this[e+i]=t/s&255;return e+n},n.prototype.writeUintBE=n.prototype.writeUIntBE=function(t,e,n,r){t=+t,e>>>=0,n>>>=0,r||S(this,t,e,n,Math.pow(2,8*n)-1,0);let s=n-1,i=1;for(this[e+s]=255&t;--s>=0&&(i*=256);)this[e+s]=t/i&255;return e+n},n.prototype.writeUint8=n.prototype.writeUInt8=function(t,e,n){return t=+t,e>>>=0,n||S(this,t,e,1,255,0),this[e]=255&t,e+1},n.prototype.writeUint16LE=n.prototype.writeUInt16LE=function(t,e,n){return t=+t,e>>>=0,n||S(this,t,e,2,65535,0),this[e]=255&t,this[e+1]=t>>>8,e+2},n.prototype.writeUint16BE=n.prototype.writeUInt16BE=function(t,e,n){return t=+t,e>>>=0,n||S(this,t,e,2,65535,0),this[e]=t>>>8,this[e+1]=255&t,e+2},n.prototype.writeUint32LE=n.prototype.writeUInt32LE=function(t,e,n){return t=+t,e>>>=0,n||S(this,t,e,4,4294967295,0),this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t,e+4},n.prototype.writeUint32BE=n.prototype.writeUInt32BE=function(t,e,n){return t=+t,e>>>=0,n||S(this,t,e,4,4294967295,0),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},n.prototype.writeBigUInt64LE=W(function(t,e=0){return E(this,t,e,BigInt(0),BigInt("0xffffffffffffffff"))}),n.prototype.writeBigUInt64BE=W(function(t,e=0){return T(this,t,e,BigInt(0),BigInt("0xffffffffffffffff"))}),n.prototype.writeIntLE=function(t,e,n,r){if(t=+t,e>>>=0,!r){const r=Math.pow(2,8*n-1);S(this,t,e,n,r-1,-r)}let s=0,i=1,o=0;for(this[e]=255&t;++s<n&&(i*=256);)0>t&&0===o&&0!==this[e+s-1]&&(o=1),this[e+s]=(t/i|0)-o&255;return e+n},n.prototype.writeIntBE=function(t,e,n,r){if(t=+t,e>>>=0,!r){const r=Math.pow(2,8*n-1);S(this,t,e,n,r-1,-r)}let s=n-1,i=1,o=0;for(this[e+s]=255&t;--s>=0&&(i*=256);)0>t&&0===o&&0!==this[e+s+1]&&(o=1),this[e+s]=(t/i|0)-o&255;return e+n},n.prototype.writeInt8=function(t,e,n){return t=+t,e>>>=0,n||S(this,t,e,1,127,-128),0>t&&(t=255+t+1),this[e]=255&t,e+1},n.prototype.writeInt16LE=function(t,e,n){return t=+t,e>>>=0,n||S(this,t,e,2,32767,-32768),this[e]=255&t,this[e+1]=t>>>8,e+2},n.prototype.writeInt16BE=function(t,e,n){return t=+t,e>>>=0,n||S(this,t,e,2,32767,-32768),this[e]=t>>>8,this[e+1]=255&t,e+2},n.prototype.writeInt32LE=function(t,e,n){return t=+t,e>>>=0,n||S(this,t,e,4,2147483647,-2147483648),this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24,e+4},n.prototype.writeInt32BE=function(t,e,n){return t=+t,e>>>=0,n||S(this,t,e,4,2147483647,-2147483648),0>t&&(t=4294967295+t+1),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},n.prototype.writeBigInt64LE=W(function(t,e=0){return E(this,t,e,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),n.prototype.writeBigInt64BE=W(function(t,e=0){return T(this,t,e,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),n.prototype.writeFloatLE=function(t,e,n){return R(this,t,e,!0,n)},n.prototype.writeFloatBE=function(t,e,n){return R(this,t,e,!1,n)},n.prototype.writeDoubleLE=function(t,e,n){return A(this,t,e,!0,n)},n.prototype.writeDoubleBE=function(t,e,n){return A(this,t,e,!1,n)},n.prototype.copy=function(t,e,r,s){if(!n.isBuffer(t))throw new TypeError("argument should be a Buffer");if(r||(r=0),s||0===s||(s=this.length),e<t.length||(e=t.length),e||(e=0),s>0&&r>s&&(s=r),s===r)return 0;if(0===t.length||0===this.length)return 0;if(0>e)throw new RangeError("targetStart out of bounds");if(0>r||r>=this.length)throw new RangeError("Index out of range");if(0>s)throw new RangeError("sourceEnd out of bounds");s>this.length&&(s=this.length),t.length-e<s-r&&(s=t.length-e+r);const i=s-r;return this===t&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(e,r,s):Uint8Array.prototype.set.call(t,this.subarray(r,s),e),i},n.prototype.fill=function(t,e,r,s){if("string"==typeof t){if("string"==typeof e?(s=e,e=0,r=this.length):"string"==typeof r&&(s=r,r=this.length),void 0!==s&&"string"!=typeof s)throw new TypeError("encoding must be a string");if("string"==typeof s&&!n.isEncoding(s))throw new TypeError("Unknown encoding: "+s);if(1===t.length){const e=t.charCodeAt(0);("utf8"===s&&128>e||"latin1"===s)&&(t=e)}}else"number"==typeof t?t&=255:"boolean"==typeof t&&(t=Number(t));if(0>e||this.length<e||this.length<r)throw new RangeError("Out of range index");if(e>=r)return this;let i;if(e>>>=0,r=void 0===r?this.length:r>>>0,t||(t=0),"number"==typeof t)for(i=e;r>i;++i)this[i]=t;else{const o=n.isBuffer(t)?t:n.from(t,s),a=o.length;if(0===a)throw new TypeError('The value "'+t+'" is invalid for argument "value"');for(i=0;r-e>i;++i)this[i+e]=o[i%a]}return this};const J={};O("ERR_BUFFER_OUT_OF_BOUNDS",t=>t?`${t} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds",RangeError),O("ERR_INVALID_ARG_TYPE",(t,e)=>`The "${t}" argument must be of type number. Received type ${typeof e}`,TypeError),O("ERR_OUT_OF_RANGE",(t,e,n)=>{let r=`The value of "${t}" is out of range.`,s=n;return Number.isInteger(n)&&Math.abs(n)>lf(2,32)?s=I(String(n)):"bigint"==typeof n&&(s=String(n),(n>lf(BigInt(2),BigInt(32))||n<-lf(BigInt(2),BigInt(32)))&&(s=I(s)),s+="n"),r+=` It must be ${e}. Received ${s}`,r},RangeError);const K=/[^+/0-9A-Za-z-_]/g,Y=(()=>{const t="0123456789abcdef",e=new Array(256);for(let n=0;16>n;++n){const r=16*n;for(let s=0;16>s;++s)e[r+s]=t[n]+t[s]}return e})()}(uj);var xj,vj,$j,kj,Nj,Cj,Sj,Ej,Tj,_j,Rj,Aj,Oj,Ij,Fj,Mj,Dj,Lj,Pj,Vj,Bj,zj,Wj,jj,Uj,Gj={},qj={},Hj={exports:{}},Xj=Wh,Jj=rj.EventEmitter;aj(Wh,Jj),Wh.Readable=Bh(),Wh.Writable=Mh(),Wh.Duplex=Dh(),Wh.Transform=zh(),Wh.PassThrough=function(){function t(n){if(!(this instanceof t))return new t(n);e.call(this,n)}if(Wj)return zj;Wj=1,zj=t;var e=zh();return aj(t,e),t.prototype.W=(t,e,n)=>{n(null,t)},zj}(),Wh.finished=Ph(),Wh.pipeline=(()=>{function t(t){if(t)throw t}function e(t){t()}function n(t,e){return t.pipe(e)}if(Uj)return jj;var r;Uj=1;var s=Oh().codes,i=s.ERR_MISSING_ARGS,o=s.ERR_STREAM_DESTROYED;return jj=function(){for(var s=arguments.length,a=new Array(s),u=0;s>u;u++)a[u]=arguments[u];var l,c=(e=>e.length?"function"!=typeof e[e.length-1]?t:e.pop():t)(a);if(Array.isArray(a[0])&&(a=a[0]),2>a.length)throw new i("streams");var h=a.map((t,n)=>{var s=n<a.length-1;return((t,e,n,s)=>{s=(t=>{var e=!1;return function(){e||(e=!0,t.apply(void 0,arguments))}})(s);var i=!1;t.on("close",()=>{i=!0}),void 0===r&&(r=Ph()),r(t,{readable:e,writable:n},t=>{if(t)return s(t);i=!0,s()});var a=!1;return e=>{if(!i&&!a)return a=!0,(t=>t.setHeader&&"function"==typeof t.abort)(t)?t.abort():"function"==typeof t.destroy?t.destroy():void s(e||new o("pipe"))}})(t,s,n>0,t=>{l||(l=t),t&&h.forEach(e),s||(h.forEach(e),c(l))})});return a.reduce(n)},jj})(),Wh.Stream=Wh,Wh.prototype.pipe=function(t,e){function n(e){t.writable&&!1===t.write(e)&&u.pause&&u.pause()}function r(){u.readable&&u.resume&&u.resume()}function s(){l||(l=!0,t.end())}function i(){l||(l=!0,"function"==typeof t.destroy&&t.destroy())}function o(t){if(a(),0===Jj.listenerCount(this,"error"))throw t}function a(){u.removeListener("data",n),t.removeListener("drain",r),u.removeListener("end",s),u.removeListener("close",i),u.removeListener("error",o),t.removeListener("error",o),u.removeListener("end",a),u.removeListener("close",a),t.removeListener("close",a)}var u=this;u.on("data",n),t.on("drain",r),t.St||e&&!1===e.end||(u.on("end",s),u.on("close",i));var l=!1;return u.on("error",o),t.on("error",o),u.on("end",a),u.on("close",a),t.on("close",a),t.emit("pipe",u),t},function(){function t(t,n,r){function s(){for(;a.length&&!l.paused;){var t=a.shift();if(null===t)return l.emit("end");l.emit("data",t)}}t=t||function(t){this.queue(t)},n=n||function(){this.queue(null)};var i=!1,o=!1,a=[],u=!1,l=new e;return l.readable=l.writable=!0,l.paused=!1,l.autoDestroy=!(r&&!1===r.autoDestroy),l.write=function(e){return t.call(this,e),!l.paused},l.queue=l.push=t=>(u||(null==t&&(u=!0),a.push(t),s()),l),l.on("end",()=>{l.readable=!1,!l.writable&&l.autoDestroy&&process.nextTick(()=>{l.destroy()})}),l.end=function(t){if(!i)return i=!0,arguments.length&&l.write(t),l.writable=!1,n.call(l),!l.readable&&l.autoDestroy&&l.destroy(),l},l.destroy=()=>{if(!o)return o=!0,i=!0,a.length=0,l.writable=l.readable=!1,l.emit("close"),l},l.pause=()=>{if(!l.paused)return l.paused=!0,l},l.resume=()=>(l.paused&&(l.paused=!1,l.emit("resume")),s(),l.paused||l.emit("drain"),l),l}var e=Xj;YW.exports=t,t.through=t}();var Kj,Yj,Zj,Qj,tU=YW.exports,eU=Lx,nU=GW,rU=qW.GifReader,sU={exports:{}},iU=Array.isArray||(t=>"[object Array]"=={}.toString.call(t)),oU={isArray(t){return Array.isArray?Array.isArray(t):"[object Array]"===Uh(t)},isBoolean(t){return"boolean"==typeof t},isNull(t){return null===t},isNullOrUndefined(t){return null==t},isNumber(t){return"number"==typeof t},isString(t){return"string"==typeof t},isSymbol(t){return"symbol"==typeof t},isUndefined(t){return void 0===t},isRegExp(t){return"[object RegExp]"===Uh(t)},isObject(t){return"object"==typeof t&&null!==t},isDate(t){return"[object Date]"===Uh(t)},isError(t){return"[object Error]"===Uh(t)||t instanceof Error},isFunction(t){return"function"==typeof t},isPrimitive(t){return null===t||"boolean"==typeof t||"number"==typeof t||"string"==typeof t||"symbol"==typeof t||void 0===t}};oU.isBuffer=uj.Buffer.isBuffer;var aU,uU,lU,cU={},hU=Kh,fU=qh(),dU=oU;dU.inherits=aj,dU.inherits(Kh,fU),Kh.prototype.push=function(t,e){return this.B.needTransform=!1,fU.prototype.push.call(this,t,e)},Kh.prototype.W=(t,e,n)=>{throw new Error("not implemented")},Kh.prototype.O=function(t,e,n){var r=this.B;if(r.writecb=n,r.writechunk=t,r.writeencoding=e,!r.transforming){var s=this.R;(r.needTransform||s.needReadable||s.length<s.highWaterMark)&&this.D(s.highWaterMark)}},Kh.prototype.D=function(t){var e=this.B;dU.isNull(e.writechunk)||!e.writecb||e.transforming?e.needTransform=!0:(e.transforming=!0,this.W(e.writechunk,e.writeencoding,e.afterTransform))};var pU,mU=Zh,yU=hU,bU=oU;bU.inherits=aj,bU.inherits(Zh,yU),Zh.prototype.W=(t,e,n)=>{n(null,t)},pU=sU.exports,(pU=sU.exports=Xh()).Stream=Xj,pU.Readable=pU,pU.Writable=Gh(),pU.Duplex=qh(),pU.Transform=hU,pU.PassThrough=mU;var gU=sU.exports,wU={},xU={},vU=()=>{if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var t={},e=Symbol("test"),n=Object(e);if("string"==typeof e)return!1;if("[object Symbol]"!=={}.toString.call(e))return!1;if("[object Symbol]"!=={}.toString.call(n))return!1;for(var r in t[e]=42,t)return!1;if("function"==typeof Object.keys&&0!==Object.keys(t).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(t).length)return!1;var s=Object.getOwnPropertySymbols(t);if(1!==s.length||s[0]!==e)return!1;if(!{}.propertyIsEnumerable.call(t,e))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var i=Object.getOwnPropertyDescriptor(t,e);if(42!==i.value||!0!==i.enumerable)return!1}return!0},$U=vU,kU=()=>$U()&&!!Symbol.toStringTag,NU=Object,CU=Error,SU=EvalError,EU=RangeError,TU=ReferenceError,_U=SyntaxError,RU=TypeError,AU=URIError,OU=Math.abs,IU=Math.floor,FU=Math.max,MU=Math.min,DU=Math.pow,LU=Math.round,PU=Number.isNaN||(t=>t!=t),VU=Object.getOwnPropertyDescriptor;if(VU)try{VU([],"length")}catch(JJ){VU=null}var BU=VU,zU=Object.defineProperty||!1;if(zU)try{zU({},"a",{value:1})}catch(JJ){zU=!1}var WU,jU,UU,GU=zU,qU="undefined"!=typeof Reflect&&Reflect.getPrototypeOf||null,HU=NU.getPrototypeOf||null,XU={}.toString,JU=Math.max,KU=(t,e)=>{for(var n=[],r=0;r<t.length;r+=1)n[r]=t[r];for(var s=0;s<e.length;s+=1)n[s+t.length]=e[s];return n},YU=(()=>{}).bind||function(t){var e=this;if("function"!=typeof e||"[object Function]"!==XU.apply(e))throw new TypeError("Function.prototype.bind called on incompatible "+e);for(var n,r=(t=>{for(var e=[],n=1,r=0;t.length>n;n+=1,r+=1)e[r]=t[n];return e})(arguments),s=JU(0,e.length-r.length),i=[],o=0;s>o;o++)i[o]="$"+o;if(n=Function("binder","return function ("+(t=>{for(var e="",n=0;n<t.length;n+=1)e+=t[n],n+1<t.length&&(e+=",");return e})(i)+"){ return binder.apply(this,arguments); }")(function(){if(this instanceof n){var s=e.apply(this,KU(r,arguments));return Object(s)===s?s:this}return e.apply(t,KU(r,arguments))}),e.prototype){var a=()=>{};a.prototype=e.prototype,n.prototype=new a,a.prototype=null}return n},ZU=(()=>{}).call,QU=(()=>{}).apply,tG=QU,eG=ZU,nG="undefined"!=typeof Reflect&&Reflect&&Reflect.apply||YU.call(eG,tG),rG=YU,sG=RU,iG=ZU,oG=nG,aG=t=>{if(1>t.length||"function"!=typeof t[0])throw new sG("a function is required");return oG(rG,iG,t)},uG=aG,lG=BU;try{UU=[].__proto__===Array.prototype}catch(JJ){if(!JJ||"object"!=typeof JJ||!("code"in JJ)||"ERR_PROTO_ACCESS"!==JJ.code)throw JJ}var cG,hG=!!UU&&lG&&lG(Object.prototype,"__proto__"),fG=Object,dG=fG.getPrototypeOf,pG=hG&&"function"==typeof hG.get?uG([hG.get]):"function"==typeof dG&&(t=>dG(null==t?t:fG(t))),mG=qU,yG=HU,bG=pG,gG=mG?t=>mG(t):yG?t=>{if(!t||"object"!=typeof t&&"function"!=typeof t)throw new TypeError("getProto: not an object");return yG(t)}:bG?t=>bG(t):null,wG=(()=>{}).call,xG={}.hasOwnProperty,vG=YU.call(wG,xG),$G=NU,kG=CU,NG=SU,CG=EU,SG=TU,EG=_U,TG=RU,_G=AU,RG=OU,AG=IU,OG=FU,IG=MU,FG=DU,MG=LU,DG=Function,LG=t=>{try{return DG('"use strict"; return ('+t+").constructor;")()}catch(JJ){}},PG=BU,VG=GU,BG=()=>{throw new TG},zG=PG?function(){try{return BG}catch(t){try{return PG(arguments,"callee").get}catch(e){return BG}}}():BG,WG=(()=>{if(jU)return WU;jU=1;var t="undefined"!=typeof Symbol&&Symbol,e=vU;return WU=()=>"function"==typeof t&&"function"==typeof Symbol&&"symbol"==typeof t("foo")&&"symbol"==typeof Symbol("bar")&&e()})()(),jG=gG,UG=HU,GG=qU,qG=QU,HG=ZU,XG={},JG="undefined"!=typeof Uint8Array&&jG?jG(Uint8Array):cG,KG={__proto__:null,"%AggregateError%":"undefined"==typeof AggregateError?cG:AggregateError,"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?cG:ArrayBuffer,"%ArrayIteratorPrototype%":WG&&jG?jG([][Symbol.iterator]()):cG,"%AsyncFromSyncIteratorPrototype%":cG,"%AsyncFunction%":XG,"%AsyncGenerator%":XG,"%AsyncGeneratorFunction%":XG,"%AsyncIteratorPrototype%":XG,"%Atomics%":"undefined"==typeof Atomics?cG:Atomics,"%BigInt%":"undefined"==typeof BigInt?cG:BigInt,"%BigInt64Array%":"undefined"==typeof BigInt64Array?cG:BigInt64Array,"%BigUint64Array%":"undefined"==typeof BigUint64Array?cG:BigUint64Array,"%Boolean%":Boolean,"%DataView%":"undefined"==typeof DataView?cG:DataView,"%Date%":Date,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":kG,"%eval%":eval,"%EvalError%":NG,"%Float16Array%":"undefined"==typeof Float16Array?cG:Float16Array,"%Float32Array%":"undefined"==typeof Float32Array?cG:Float32Array,"%Float64Array%":"undefined"==typeof Float64Array?cG:Float64Array,"%FinalizationRegistry%":"undefined"==typeof FinalizationRegistry?cG:FinalizationRegistry,"%Function%":DG,"%GeneratorFunction%":XG,"%Int8Array%":"undefined"==typeof Int8Array?cG:Int8Array,"%Int16Array%":"undefined"==typeof Int16Array?cG:Int16Array,"%Int32Array%":"undefined"==typeof Int32Array?cG:Int32Array,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":WG&&jG?jG(jG([][Symbol.iterator]())):cG,"%JSON%":"object"==typeof JSON?JSON:cG,"%Map%":"undefined"==typeof Map?cG:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&WG&&jG?jG((new Map)[Symbol.iterator]()):cG,"%Math%":Math,"%Number%":Number,"%Object%":$G,"%Object.getOwnPropertyDescriptor%":PG,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?cG:Promise,"%Proxy%":"undefined"==typeof Proxy?cG:Proxy,"%RangeError%":CG,"%ReferenceError%":SG,"%Reflect%":"undefined"==typeof Reflect?cG:Reflect,"%RegExp%":RegExp,"%Set%":"undefined"==typeof Set?cG:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&WG&&jG?jG((new Set)[Symbol.iterator]()):cG,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?cG:SharedArrayBuffer,"%String%":String,"%StringIteratorPrototype%":WG&&jG?jG(""[Symbol.iterator]()):cG,"%Symbol%":WG?Symbol:cG,"%SyntaxError%":EG,"%ThrowTypeError%":zG,"%TypedArray%":JG,"%TypeError%":TG,"%Uint8Array%":"undefined"==typeof Uint8Array?cG:Uint8Array,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?cG:Uint8ClampedArray,"%Uint16Array%":"undefined"==typeof Uint16Array?cG:Uint16Array,"%Uint32Array%":"undefined"==typeof Uint32Array?cG:Uint32Array,"%URIError%":_G,"%WeakMap%":"undefined"==typeof WeakMap?cG:WeakMap,"%WeakRef%":"undefined"==typeof WeakRef?cG:WeakRef,"%WeakSet%":"undefined"==typeof WeakSet?cG:WeakSet,"%Function.prototype.call%":HG,"%Function.prototype.apply%":qG,"%Object.defineProperty%":VG,"%Object.getPrototypeOf%":UG,"%Math.abs%":RG,"%Math.floor%":AG,"%Math.max%":OG,"%Math.min%":IG,"%Math.pow%":FG,"%Math.round%":MG,"%Math.sign%":t=>PU(t)||0===t?t:0>t?-1:1,"%Reflect.getPrototypeOf%":GG};if(jG)try{null.error}catch(JJ){var YG=jG(jG(JJ));KG["%Error.prototype%"]=YG}var ZG=function t(e){var n;if("%AsyncFunction%"===e)n=LG("async function () {}");else if("%GeneratorFunction%"===e)n=LG("function* () {}");else if("%AsyncGeneratorFunction%"===e)n=LG("async function* () {}");else if("%AsyncGenerator%"===e){var r=t("%AsyncGeneratorFunction%");r&&(n=r.prototype)}else if("%AsyncIteratorPrototype%"===e){var s=t("%AsyncGenerator%");s&&jG&&(n=jG(s.prototype))}return KG[e]=n,n},QG={__proto__:null,"%ArrayBufferPrototype%":["ArrayBuffer","prototype"],"%ArrayPrototype%":["Array","prototype"],"%ArrayProto_entries%":["Array","prototype","entries"],"%ArrayProto_forEach%":["Array","prototype","forEach"],"%ArrayProto_keys%":["Array","prototype","keys"],"%ArrayProto_values%":["Array","prototype","values"],"%AsyncFunctionPrototype%":["AsyncFunction","prototype"],"%AsyncGenerator%":["AsyncGeneratorFunction","prototype"],"%AsyncGeneratorPrototype%":["AsyncGeneratorFunction","prototype","prototype"],"%BooleanPrototype%":["Boolean","prototype"],"%DataViewPrototype%":["DataView","prototype"],"%DatePrototype%":["Date","prototype"],"%ErrorPrototype%":["Error","prototype"],"%EvalErrorPrototype%":["EvalError","prototype"],"%Float32ArrayPrototype%":["Float32Array","prototype"],"%Float64ArrayPrototype%":["Float64Array","prototype"],"%FunctionPrototype%":["Function","prototype"],"%Generator%":["GeneratorFunction","prototype"],"%GeneratorPrototype%":["GeneratorFunction","prototype","prototype"],"%Int8ArrayPrototype%":["Int8Array","prototype"],"%Int16ArrayPrototype%":["Int16Array","prototype"],"%Int32ArrayPrototype%":["Int32Array","prototype"],"%JSONParse%":["JSON","parse"],"%JSONStringify%":["JSON","stringify"],"%MapPrototype%":["Map","prototype"],"%NumberPrototype%":["Number","prototype"],"%ObjectPrototype%":["Object","prototype"],"%ObjProto_toString%":["Object","prototype","toString"],"%ObjProto_valueOf%":["Object","prototype","valueOf"],"%PromisePrototype%":["Promise","prototype"],"%PromiseProto_then%":["Promise","prototype","then"],"%Promise_all%":["Promise","all"],"%Promise_reject%":["Promise","reject"],"%Promise_resolve%":["Promise","resolve"],"%RangeErrorPrototype%":["RangeError","prototype"],"%ReferenceErrorPrototype%":["ReferenceError","prototype"],"%RegExpPrototype%":["RegExp","prototype"],"%SetPrototype%":["Set","prototype"],"%SharedArrayBufferPrototype%":["SharedArrayBuffer","prototype"],"%StringPrototype%":["String","prototype"],"%SymbolPrototype%":["Symbol","prototype"],"%SyntaxErrorPrototype%":["SyntaxError","prototype"],"%TypedArrayPrototype%":["TypedArray","prototype"],"%TypeErrorPrototype%":["TypeError","prototype"],"%Uint8ArrayPrototype%":["Uint8Array","prototype"],"%Uint8ClampedArrayPrototype%":["Uint8ClampedArray","prototype"],"%Uint16ArrayPrototype%":["Uint16Array","prototype"],"%Uint32ArrayPrototype%":["Uint32Array","prototype"],"%URIErrorPrototype%":["URIError","prototype"],"%WeakMapPrototype%":["WeakMap","prototype"],"%WeakSetPrototype%":["WeakSet","prototype"]},tq=YU,eq=vG,nq=tq.call(HG,[].concat),rq=tq.call(qG,[].splice),sq=tq.call(HG,"".replace),iq=tq.call(HG,"".slice),oq=tq.call(HG,/t/.exec),aq=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,uq=/\\(\\)?/g,lq=function(t,e){if("string"!=typeof t||0===t.length)throw new TG("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof e)throw new TG('"allowMissing" argument must be a boolean');if(null===oq(/^%?[^%]*%?$/,t))throw new EG("`%` may not be present anywhere but at the beginning and end of the intrinsic name");var n=(t=>{var e=iq(t,0,1),n=iq(t,-1);if("%"===e&&"%"!==n)throw new EG("invalid intrinsic syntax, expected closing `%`");if("%"===n&&"%"!==e)throw new EG("invalid intrinsic syntax, expected opening `%`");var r=[];return sq(t,aq,(t,e,n,s)=>{r[r.length]=n?sq(s,uq,"$1"):e||t}),r})(t),r=n.length>0?n[0]:"",s=((t,e)=>{var n,r=t;if(eq(QG,r)&&(r="%"+(n=QG[r])[0]+"%"),eq(KG,r)){var s=KG[r];if(s===XG&&(s=ZG(r)),void 0===s&&!e)throw new TG("intrinsic "+t+" exists, but is not available. Please file an issue!");return{alias:n,name:r,value:s}}throw new EG("intrinsic "+t+" does not exist!")})("%"+r+"%",e),i=s.name,o=s.value,a=!1,u=s.alias;u&&(r=u[0],rq(n,nq([0,1],u)));for(var l=1,c=!0;l<n.length;l+=1){var h=n[l],f=iq(h,0,1),d=iq(h,-1);if(('"'===f||"'"===f||"`"===f||'"'===d||"'"===d||"`"===d)&&f!==d)throw new EG("property names with quotes must have matching quotes");if("constructor"!==h&&c||(a=!0),eq(KG,i="%"+(r+="."+h)+"%"))o=KG[i];else if(null!=o){if(!(h in o)){if(!e)throw new TG("base intrinsic for "+t+" exists, but the property is not available.");return}if(PG&&l+1>=n.length){var p=PG(o,h);o=(c=!!p)&&"get"in p&&!("originalValue"in p.get)?p.get:o[h]}else c=eq(o,h),o=o[h];c&&!a&&(KG[i]=o)}}return o},cq=lq,hq=aG,fq=hq([cq("%String.prototype.indexOf%")]),dq=(t,e)=>{var n=cq(t,!!e);return"function"==typeof n&&fq(t,".prototype.")>-1?hq([n]):n},pq=kU(),mq=dq("Object.prototype.toString"),yq=t=>!(pq&&t&&"object"==typeof t&&Symbol.toStringTag in t)&&"[object Arguments]"===mq(t),bq=t=>!!yq(t)||null!==t&&"object"==typeof t&&"length"in t&&"number"==typeof t.length&&t.length>=0&&"[object Array]"!==mq(t)&&"callee"in t&&"[object Function]"===mq(t.callee),gq=function(){return yq(arguments)}();yq.isLegacyArguments=bq;var wq,xq=gq?yq:bq,vq=dq,$q=kU(),kq=vG,Nq=BU;if($q){var Cq=vq("RegExp.prototype.exec"),Sq={},Eq=()=>{throw Sq},Tq={toString:Eq,valueOf:Eq};"symbol"==typeof Symbol.toPrimitive&&(Tq[Symbol.toPrimitive]=Eq),wq=t=>{if(!t||"object"!=typeof t)return!1;var e=Nq(t,"lastIndex");if(!e||!kq(e,"value"))return!1;try{Cq(t,Tq)}catch(JJ){return JJ===Sq}}}else{var _q=vq("Object.prototype.toString");wq=t=>!(!t||"object"!=typeof t&&"function"!=typeof t)&&"[object RegExp]"===_q(t)}var Rq,Aq,Oq,Iq,Fq=wq,Mq=dq("RegExp.prototype.exec"),Dq=RU,Lq=dq,Pq=(t=>{if(!Fq(t))throw new Dq("`regex` must be a RegExp");return e=>null!==Mq(t,e)})(/^\s*(?:function)?\*/),Vq=kU(),Bq=gG,zq=Lq("Object.prototype.toString"),Wq=Lq("Function.prototype.toString"),jq=(()=>{if(Aq)return Rq;Aq=1;const t=function*(){}.constructor;return Rq=()=>t})(),Uq=t=>{if("function"!=typeof t)return!1;if(Pq(Wq(t)))return!0;if(!Vq)return"[object GeneratorFunction]"===zq(t);if(!Bq)return!1;var e=jq();return e&&Bq(t)===e.prototype},Gq=(()=>{}).toString,qq="object"==typeof Reflect&&null!==Reflect&&Reflect.apply;if("function"==typeof qq&&"function"==typeof Object.defineProperty)try{Oq=Object.defineProperty({},"length",{get(){throw Iq}}),Iq={},qq(()=>{throw 42},null,Oq)}catch(YJ){YJ!==Iq&&(qq=null)}else qq=null;var Hq=/^\s*class\b/,Xq=t=>{try{var e=Gq.call(t);return Hq.test(e)}catch(JJ){return!1}},Jq=t=>{try{return!Xq(t)&&(Gq.call(t),!0)}catch(JJ){return!1}},Kq={}.toString,Yq="function"==typeof Symbol&&!!Symbol.toStringTag,Zq=!(0 in[,]),Qq=()=>!1;if("object"==typeof document){var tH=document.all;Kq.call(tH)===Kq.call(document.all)&&(Qq=t=>{if((Zq||!t)&&(void 0===t||"object"==typeof t))try{var e=Kq.call(t);return("[object HTMLAllCollection]"===e||"[object HTML document.all class]"===e||"[object HTMLCollection]"===e||"[object Object]"===e)&&null==t("")}catch(JJ){}return!1})}var eH=qq?t=>{if(Qq(t))return!0;if(!t)return!1;if("function"!=typeof t&&"object"!=typeof t)return!1;try{qq(t,null,Oq)}catch(JJ){if(JJ!==Iq)return!1}return!Xq(t)&&Jq(t)}:t=>{if(Qq(t))return!0;if(!t)return!1;if("function"!=typeof t&&"object"!=typeof t)return!1;if(Yq)return Jq(t);if(Xq(t))return!1;var e=Kq.call(t);return!("[object Function]"!==e&&"[object GeneratorFunction]"!==e&&!/^\[object HTML/.test(e))&&Jq(t)},nH={}.toString,rH={}.hasOwnProperty,sH=["Float16Array","Float32Array","Float64Array","Int8Array","Int16Array","Int32Array","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","BigInt64Array","BigUint64Array"],iH=globalThis,oH={exports:{}},aH=GU,uH=_U,lH=RU,cH=BU,hH=GU,fH=()=>!!hH;fH.hasArrayLengthDefineBug=()=>{if(!hH)return null;try{return 1!==hH([],"length",{value:1}).length}catch(JJ){return!0}};var dH=lq,pH=function(t,e,n){if(!t||"object"!=typeof t&&"function"!=typeof t)throw new lH("`obj` must be an object or a function`");if("string"!=typeof e&&"symbol"!=typeof e)throw new lH("`property` must be a string or a symbol`");if(arguments.length>3&&"boolean"!=typeof arguments[3]&&null!==arguments[3])throw new lH("`nonEnumerable`, if provided, must be a boolean or null");if(arguments.length>4&&"boolean"!=typeof arguments[4]&&null!==arguments[4])throw new lH("`nonWritable`, if provided, must be a boolean or null");if(arguments.length>5&&"boolean"!=typeof arguments[5]&&null!==arguments[5])throw new lH("`nonConfigurable`, if provided, must be a boolean or null");if(arguments.length>6&&"boolean"!=typeof arguments[6])throw new lH("`loose`, if provided, must be a boolean");var r=arguments.length>3?arguments[3]:null,s=arguments.length>4?arguments[4]:null,i=arguments.length>5?arguments[5]:null,o=arguments.length>6&&arguments[6],a=!!cH&&cH(t,e);if(aH)aH(t,e,{configurable:null===i&&a?a.configurable:!i,enumerable:null===r&&a?a.enumerable:!r,value:n,writable:null===s&&a?a.writable:!s});else{if(!o&&(r||s||i))throw new uH("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");t[e]=n}},mH=fH(),yH=BU,bH=RU,gH=dH("%Math.floor%"),wH=function(t,e){if("function"!=typeof t)throw new bH("`fn` is not a function");if("number"!=typeof e||0>e||e>4294967295||gH(e)!==e)throw new bH("`length` must be a positive 32-bit integer");var n=arguments.length>2&&!!arguments[2],r=!0,s=!0;if("length"in t&&yH){var i=yH(t,"length");i&&!i.configurable&&(r=!1),i&&!i.writable&&(s=!1)}return(r||s||!n)&&(mH?pH(t,"length",e,!0,!0):pH(t,"length",e)),t},xH=YU,vH=QU,$H=nG,kH=function(){return $H(xH,vH,arguments)};(t=>{var e=wH,n=GU,r=aG,s=kH;t.exports=function(t){var n=r(arguments),s=t.length-(arguments.length-1);return e(n,1+(s>0?s:0),!0)},n?n(t.exports,"apply",{value:s}):t.exports.apply=s})(oH);var NH=function(t,e,n){if(!eH(e))throw new TypeError("iterator must be a function");var r,s;3>arguments.length||(r=n),s=t,"[object Array]"===nH.call(s)?((t,e,n)=>{for(var r=0,s=t.length;s>r;r++)rH.call(t,r)&&(null==n?e(t[r],r,t):e.call(n,t[r],r,t))})(t,e,r):"string"==typeof t?((t,e,n)=>{for(var r=0,s=t.length;s>r;r++)null==n?e(t.charAt(r),r,t):e.call(n,t.charAt(r),r,t)})(t,e,r):((t,e,n)=>{for(var r in t)rH.call(t,r)&&(null==n?e(t[r],r,t):e.call(n,t[r],r,t))})(t,e,r)},CH=oH.exports,SH=dq,EH=BU,TH=gG,_H=SH("Object.prototype.toString"),RH=kU(),AH=globalThis,OH=(()=>{for(var t=[],e=0;sH.length>e;e++)"function"==typeof iH[sH[e]]&&(t[t.length]=sH[e]);return t})(),IH=SH("String.prototype.slice"),FH=SH("Array.prototype.indexOf",!0)||((t,e)=>{for(var n=0;n<t.length;n+=1)if(t[n]===e)return n;return-1}),MH={__proto__:null};NH(OH,RH&&EH&&TH?t=>{var e=new AH[t];if(Symbol.toStringTag in e&&TH){var n=TH(e),r=EH(n,Symbol.toStringTag);if(!r&&n){var s=TH(n);r=EH(s,Symbol.toStringTag)}MH["$"+t]=CH(r.get)}}:t=>{var e=new AH[t],n=e.slice||e.set;n&&(MH["$"+t]=CH(n))});var DH=t=>{if(!t||"object"!=typeof t)return!1;if(!RH){var e=IH(_H(t),8,-1);return FH(OH,e)>-1?e:"Object"===e&&(t=>{var e=!1;return NH(MH,(n,r)=>{if(!e)try{n(t),e=IH(r,1)}catch(JJ){}}),e})(t)}return EH?(t=>{var e=!1;return NH(MH,(n,r)=>{if(!e)try{"$"+n(t)===r&&(e=IH(r,1))}catch(JJ){}}),e})(t):null},LH=DH,PH=t=>!!LH(t);(t=>{function e(t){return t.call.bind(t)}function n(t,e){if("object"!=typeof t)return!1;try{return e(t),!0}catch(JJ){return!1}}function r(t){return"[object Map]"===N(t)}function s(t){return"[object Set]"===N(t)}function i(t){return"[object WeakMap]"===N(t)}function o(t){return"[object WeakSet]"===N(t)}function a(t){return"[object ArrayBuffer]"===N(t)}function u(t){return"undefined"!=typeof ArrayBuffer&&(a.working?a(t):t instanceof ArrayBuffer)}function l(t){return"[object DataView]"===N(t)}function c(t){return"undefined"!=typeof DataView&&(l.working?l(t):t instanceof DataView)}function h(t){return"[object SharedArrayBuffer]"===N(t)}function f(t){return void 0!==R&&(void 0===h.working&&(h.working=h(new R)),h.working?h(t):t instanceof R)}function d(t){return n(t,C)}function p(t){return n(t,S)}function m(t){return n(t,E)}function y(t){return $&&n(t,T)}function b(t){return k&&n(t,_)}var g=xq,w=Uq,x=DH,v=PH,$="undefined"!=typeof BigInt,k="undefined"!=typeof Symbol,N=e({}.toString),C=e((0).valueOf),S=e("".valueOf),E=e(Boolean.prototype.valueOf);if($)var T=e(BigInt.prototype.valueOf);if(k)var _=e(Symbol.prototype.valueOf);t.isArgumentsObject=g,t.isGeneratorFunction=w,t.isTypedArray=v,t.isPromise=t=>"undefined"!=typeof Promise&&t instanceof Promise||null!==t&&"object"==typeof t&&"function"==typeof t.then&&"function"==typeof t.catch,t.isArrayBufferView=t=>"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(t):v(t)||c(t),t.isUint8Array=t=>"Uint8Array"===x(t),t.isUint8ClampedArray=t=>"Uint8ClampedArray"===x(t),t.isUint16Array=t=>"Uint16Array"===x(t),t.isUint32Array=t=>"Uint32Array"===x(t),t.isInt8Array=t=>"Int8Array"===x(t),t.isInt16Array=t=>"Int16Array"===x(t),t.isInt32Array=t=>"Int32Array"===x(t),t.isFloat32Array=t=>"Float32Array"===x(t),t.isFloat64Array=t=>"Float64Array"===x(t),t.isBigInt64Array=t=>"BigInt64Array"===x(t),t.isBigUint64Array=t=>"BigUint64Array"===x(t),r.working="undefined"!=typeof Map&&r(new Map),t.isMap=t=>"undefined"!=typeof Map&&(r.working?r(t):t instanceof Map),s.working="undefined"!=typeof Set&&s(new Set),t.isSet=t=>"undefined"!=typeof Set&&(s.working?s(t):t instanceof Set),i.working="undefined"!=typeof WeakMap&&i(new WeakMap),t.isWeakMap=t=>"undefined"!=typeof WeakMap&&(i.working?i(t):t instanceof WeakMap),o.working="undefined"!=typeof WeakSet&&o(new WeakSet),t.isWeakSet=t=>o(t),a.working="undefined"!=typeof ArrayBuffer&&a(new ArrayBuffer),t.isArrayBuffer=u,l.working="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof DataView&&l(new DataView(new ArrayBuffer(1),0,1)),t.isDataView=c;var R="undefined"!=typeof SharedArrayBuffer?SharedArrayBuffer:void 0;t.isSharedArrayBuffer=f,t.isAsyncFunction=t=>"[object AsyncFunction]"===N(t),t.isMapIterator=t=>"[object Map Iterator]"===N(t),t.isSetIterator=t=>"[object Set Iterator]"===N(t),t.isGeneratorObject=t=>"[object Generator]"===N(t),t.isWebAssemblyCompiledModule=t=>"[object WebAssembly.Module]"===N(t),t.isNumberObject=d,t.isStringObject=p,t.isBooleanObject=m,t.isBigIntObject=y,t.isSymbolObject=b,t.isBoxedPrimitive=t=>d(t)||p(t)||m(t)||y(t)||b(t),t.isAnyArrayBuffer=t=>"undefined"!=typeof Uint8Array&&(u(t)||f(t)),["isProxy","isExternal","isModuleNamespaceObject"].forEach(e=>{Object.defineProperty(t,e,{enumerable:!1,value(){throw new Error(e+" is not supported in userland")}})})})(xU);var VH=t=>t&&"object"==typeof t&&"function"==typeof t.copy&&"function"==typeof t.fill&&"function"==typeof t.readUInt8;!function(t){function e(e,i){var o={seen:[],stylize:r};return 3>arguments.length||(o.depth=arguments[2]),4>arguments.length||(o.colors=arguments[3]),u(i)?o.showHidden=i:i&&t.Et(o,i),f(o.showHidden)&&(o.showHidden=!1),f(o.depth)&&(o.depth=2),f(o.colors)&&(o.colors=!1),f(o.customInspect)&&(o.customInspect=!0),o.colors&&(o.stylize=n),s(o,e,o.depth)}function n(t,n){var r=e.styles[n];return r?"\x1b["+e.colors[r][0]+"m"+t+"\x1b["+e.colors[r][1]+"m":t}function r(t,e){return t}function s(e,n,r){if(e.customInspect&&n&&b(n.inspect)&&n.inspect!==t.inspect&&(!n.constructor||n.constructor.prototype!==n)){var p=n.inspect(r,e);return h(p)||(p=s(e,p,r)),p}var g=((t,e)=>{if(f(e))return t.stylize("undefined","undefined");if(h(e)){var n="'"+JSON.stringify(e).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return t.stylize(n,"string")}return c(e)?t.stylize(""+e,"number"):u(e)?t.stylize(""+e,"boolean"):l(e)?t.stylize("null","null"):void 0})(e,n);if(g)return g;var x=Object.keys(n),v=(t=>{var e={};return t.forEach((t,n)=>{e[t]=!0}),e})(x);if(e.showHidden&&(x=Object.getOwnPropertyNames(n)),y(n)&&(x.indexOf("message")>=0||x.indexOf("description")>=0))return i(n);if(0===x.length){if(b(n)){var $=n.name?": "+n.name:"";return e.stylize("[Function"+$+"]","special")}if(d(n))return e.stylize(/t/.toString.call(n),"regexp");if(m(n))return e.stylize(Date.prototype.toString.call(n),"date");if(y(n))return i(n)}var k,N="",C=!1,S=["{","}"];return a(n)&&(C=!0,S=["[","]"]),b(n)&&(N=" [Function"+(n.name?": "+n.name:"")+"]"),d(n)&&(N=" "+/t/.toString.call(n)),m(n)&&(N=" "+Date.prototype.toUTCString.call(n)),y(n)&&(N=" "+i(n)),0!==x.length||C&&0!=n.length?0>r?d(n)?e.stylize(/t/.toString.call(n),"regexp"):e.stylize("[Object]","special"):(e.seen.push(n),k=C?((t,e,n,r,s)=>{for(var i=[],a=0,u=e.length;u>a;++a)w(e,String(a))?i.push(o(t,e,n,r,String(a),!0)):i.push("");return s.forEach(s=>{s.match(/^\d+$/)||i.push(o(t,e,n,r,s,!0))}),i})(e,n,r,v,x):x.map(t=>o(e,n,r,v,t,C)),e.seen.pop(),((t,e,n)=>t.reduce((t,e)=>(e.indexOf("\n"),t+e.replace(/\u001b\[\d\d?m/g,"").length+1),0)>60?n[0]+(""===e?"":e+"\n ")+" "+t.join(",\n  ")+" "+n[1]:n[0]+e+" "+t.join(", ")+" "+n[1])(k,N,S)):S[0]+N+S[1]}function i(t){return"["+Error.prototype.toString.call(t)+"]"}function o(t,e,n,r,i,o){var a,u,c;if((c=Object.getOwnPropertyDescriptor(e,i)||{value:e[i]}).get?u=c.set?t.stylize("[Getter/Setter]","special"):t.stylize("[Getter]","special"):c.set&&(u=t.stylize("[Setter]","special")),w(r,i)||(a="["+i+"]"),u||(0>t.seen.indexOf(c.value)?(u=l(n)?s(t,c.value,null):s(t,c.value,n-1)).indexOf("\n")>-1&&(u=o?u.split("\n").map(t=>"  "+t).join("\n").slice(2):"\n"+u.split("\n").map(t=>"   "+t).join("\n")):u=t.stylize("[Circular]","special")),f(a)){if(o&&i.match(/^\d+$/))return u;(a=JSON.stringify(""+i)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(a=a.slice(1,-1),a=t.stylize(a,"name")):(a=a.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),a=t.stylize(a,"string"))}return a+": "+u}function a(t){return Array.isArray(t)}function u(t){return"boolean"==typeof t}function l(t){return null===t}function c(t){return"number"==typeof t}function h(t){return"string"==typeof t}function f(t){return void 0===t}function d(t){return p(t)&&"[object RegExp]"===g(t)}function p(t){return"object"==typeof t&&null!==t}function m(t){return p(t)&&"[object Date]"===g(t)}function y(t){return p(t)&&("[object Error]"===g(t)||t instanceof Error)}function b(t){return"function"==typeof t}function g(t){return{}.toString.call(t)}function w(t,e){return{}.hasOwnProperty.call(t,e)}function x(t,e){if(!t){var n=new Error("Promise was rejected with a falsy value");n.reason=t,t=n}return e(t)}var v={},$=Object.getOwnPropertyDescriptors||(t=>{for(var e=Object.keys(t),n={},r=0;r<e.length;r++)n[e[r]]=Object.getOwnPropertyDescriptor(t,e[r]);return n}),k=/%[sdj%]/g;t.format=function(t){if(!h(t)){for(var n=[],r=0;arguments.length>r;r++)n.push(e(arguments[r]));return n.join(" ")}r=1;for(var s=arguments,i=s.length,o=String(t).replace(k,t=>{if("%%"===t)return"%";if(r>=i)return t;switch(t){case"%s":return String(s[r++]);case"%d":return Number(s[r++]);case"%j":try{return JSON.stringify(s[r++])}catch(YJ){return"[Circular]"}default:return t}}),a=s[r];i>r;a=s[++r])l(a)||!p(a)?o+=" "+a:o+=" "+e(a);return o},t.deprecate=function(e,n){if("undefined"!=typeof process&&!0===process.noDeprecation)return e;if("undefined"==typeof process)return function(){return t.deprecate(e,n).apply(this,arguments)};var r=!1;return function(){if(!r){if(process.throwDeprecation)throw new Error(n);process.traceDeprecation,r=!0}return e.apply(this,arguments)}};var N={},C=/^$/;if(v.NODE_DEBUG){var S=v.NODE_DEBUG;S=S.replace(/[|\\{}()[\]^$+?.]/g,"\\$&").replace(/\*/g,".*").replace(/,/g,"$|^").toUpperCase(),C=new RegExp("^"+S+"$","i")}t.debuglog=e=>(e=e.toUpperCase(),N[e]||(C.test(e)?(process.pid,N[e]=function(){t.format.apply(t,arguments)}):N[e]=()=>{}),N[e]),t.inspect=e,e.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},e.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},t.types=xU,t.isArray=a,t.isBoolean=u,t.isNull=l,t.isNullOrUndefined=t=>null==t,t.isNumber=c,t.isString=h,t.isSymbol=t=>"symbol"==typeof t,t.isUndefined=f,t.isRegExp=d,t.types.isRegExp=d,t.isObject=p,t.isDate=m,t.types.isDate=m,t.isError=y,t.types.isNativeError=y,t.isFunction=b,t.isPrimitive=t=>null===t||"boolean"==typeof t||"number"==typeof t||"string"==typeof t||"symbol"==typeof t||void 0===t,t.isBuffer=VH,t.log=()=>{},t.inherits=aj,t.Et=(t,e)=>{if(!e||!p(e))return t;for(var n=Object.keys(e),r=n.length;r--;)t[n[r]]=e[n[r]];return t};var E="undefined"!=typeof Symbol?Symbol("util.promisify.custom"):void 0;t.promisify=function(t){function e(){for(var e,n,r=new Promise((t,r)=>{e=t,n=r}),s=[],i=0;arguments.length>i;i++)s.push(arguments[i]);s.push((t,r)=>{t?n(t):e(r)});try{t.apply(this,s)}catch(KJ){n(KJ)}return r}if("function"!=typeof t)throw new TypeError('The "original" argument must be of type Function');if(E&&t[E]){var e;if("function"!=typeof(e=t[E]))throw new TypeError('The "util.promisify.custom" argument must be of type Function');return Object.defineProperty(e,E,{value:e,enumerable:!1,writable:!1,configurable:!0}),e}return Object.setPrototypeOf(e,Object.getPrototypeOf(t)),E&&Object.defineProperty(e,E,{value:e,enumerable:!1,writable:!1,configurable:!0}),Object.defineProperties(e,$(t))},t.promisify.custom=E,t.callbackify=function(t){function e(){for(var e=[],n=0;arguments.length>n;n++)e.push(arguments[n]);var r=e.pop();if("function"!=typeof r)throw new TypeError("The last argument must be of type Function");var s=this,i=function(){return r.apply(s,arguments)};t.apply(this,e).then(t=>{process.nextTick(i.bind(null,null,t))},t=>{process.nextTick(x.bind(null,t,i))})}if("function"!=typeof t)throw new TypeError('The "original" argument must be of type Function');return Object.setPrototypeOf(e,Object.getPrototypeOf(t)),Object.defineProperties(e,$(t)),e}}(wU);var BH=256,zH=1024,WH=1<<18,jH=5003,UH=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535];rj.EventEmitter;var GH=gU,qH=wU,HH=function(t,e){function n(t,e,n,r,s){i[e][0]-=t*(i[e][0]-n)/zH,i[e][1]-=t*(i[e][1]-r)/zH,i[e][2]-=t*(i[e][2]-s)/zH}function r(t,e,n,r,s){for(var o,a,u=Math.abs(e-t),c=Math.min(e+t,BH),h=e+1,f=e-1,d=1;c>h||f>u;)a=l[d++],c>h&&((o=i[h++])[0]-=a*(o[0]-n)/WH,o[1]-=a*(o[1]-r)/WH,o[2]-=a*(o[2]-s)/WH),f>u&&((o=i[f--])[0]-=a*(o[0]-n)/WH,o[1]-=a*(o[1]-r)/WH,o[2]-=a*(o[2]-s)/WH)}function s(t,e,n){var r,s,o,l,c,h=2147483647,f=h,d=-1,p=d;for(r=0;BH>r;r++)s=i[r],h>(o=Math.abs(s[0]-t)+Math.abs(s[1]-e)+Math.abs(s[2]-n))&&(h=o,d=r),f>(l=o-(a[r]>>12))&&(f=l,p=r),c=u[r]>>10,u[r]-=c,a[r]+=c<<10;return u[d]+=64,a[d]-=65536,p}var i,o,a,u,l;this.buildColormap=()=>{(()=>{var t,e;for(i=[],o=new Int32Array(256),a=new Int32Array(BH),u=new Int32Array(BH),l=new Int32Array(32),t=0;BH>t;t++)e=(t<<12)/BH,i[t]=new Float64Array([e,e,e,0]),u[t]=256,a[t]=0})(),(()=>{var i,o,a,u,c,h,f=t.length,d=30+(e-1)/3,p=f/(3*e),m=~~(p/100),y=zH,b=2048,g=b>>6;for(g>1||(g=0),i=0;g>i;i++)l[i]=y*(256*(g*g-i*i)/(g*g));1509>f?(e=1,o=3):o=f%499!=0?1497:f%491!=0?1473:f%487!=0?1461:1509;var w=0;for(i=0;p>i;)if(n(y,h=s(a=(255&t[w])<<4,u=(255&t[w+1])<<4,c=(255&t[w+2])<<4),a,u,c),0!==g&&r(g,h,a,u,c),f>(w+=o)||(w-=f),0===m&&(m=1),++i%m===0)for(y-=y/d,(g=(b-=b/30)>>6)>1||(g=0),h=0;g>h;h++)l[h]=y*(256*(g*g-h*h)/(g*g))})(),(()=>{for(var t=0;BH>t;t++)i[t][0]>>=4,i[t][1]>>=4,i[t][2]>>=4,i[t][3]=t})(),(()=>{var t,e,n,r,s,a,u=0,l=0;for(t=0;BH>t;t++){for(s=t,a=(n=i[t])[1],e=t+1;BH>e;e++)(r=i[e])[1]<a&&(s=e,a=r[1]);if(r=i[s],t!=s&&(e=r[0],r[0]=n[0],n[0]=e,e=r[1],r[1]=n[1],n[1]=e,e=r[2],r[2]=n[2],n[2]=e,e=r[3],r[3]=n[3],n[3]=e),a!=u){for(o[u]=l+t>>1,e=u+1;a>e;e++)o[e]=t;u=a,l=t}}for(o[u]=l+255>>1,e=u+1;256>e;e++)o[e]=255})()},this.getColormap=()=>{for(var t=[],e=[],n=0;BH>n;n++)e[i[n][3]]=n;for(var r=0,s=0;BH>s;s++){var o=e[s];t[r++]=i[o][0],t[r++]=i[o][1],t[r++]=i[o][2]}return t},this.lookupRGB=(t,e,n)=>{for(var r,s,a,u=1e3,l=-1,c=o[e],h=c-1;BH>c||h>=0;)BH>c&&(u>(a=(s=i[c])[1]-e)?(c++,0>a&&(a=-a),0>(r=s[0]-t)&&(r=-r),u>(a+=r)&&(0>(r=s[2]-n)&&(r=-r),u>(a+=r)&&(u=a,l=s[3]))):c=BH),0>h||(u>(a=e-(s=i[h])[1])?(h--,0>a&&(a=-a),0>(r=s[0]-t)&&(r=-r),u>(a+=r)&&(0>(r=s[2]-n)&&(r=-r),u>(a+=r)&&(u=a,l=s[3]))):h=-1);return l}},XH=function(t,e,n,r){function s(t,e){g[f++]=t,254>f||a(e)}function i(t){o(jH),$=m+2,k=!0,c(m,t)}function o(t){for(var e=0;t>e;++e)w[e]=-1}function a(t){f>0&&(t.writeByte(f),t.writeBytes(g,0,f),f=0)}function u(t){return(1<<t)-1}function l(){return 0===remaining?-1:(--remaining,255&n[curPixel++])}function c(t,e){for(h&=UH[v],v>0?h|=t<<v:h=t,v+=n_bits;v>=8;)s(255&h,e),h>>=8,v-=8;if(($>d||k)&&(k?(d=u(n_bits=p),k=!1):(++n_bits,d=12==n_bits?4096:u(n_bits))),t==y){for(;v>0;)s(255&h,e),h>>=8,v-=8;a(e)}}var h,f,d,p,m,y,b=Math.max(2,r),g=new Uint8Array(256),w=new Int32Array(jH),x=new Int32Array(jH),v=0,$=0,k=!1;this.encode=n=>{n.writeByte(b),remaining=t*e,curPixel=0,((t,e)=>{var n,r,s,a,h,b,g;for(p=t,k=!1,n_bits=p,d=u(n_bits),y=1+(m=1<<t-1),$=m+2,f=0,a=l(),g=0,n=jH;65536>n;n*=2)++g;g=8-g,o(b=jH),c(m,e);t:for(;-1!=(r=l());)if(n=(r<<12)+a,w[s=r<<g^a]!==n){if(w[s]>=0){h=b-s,0===s&&(h=1);do{if(0>(s-=h)&&(s+=b),w[s]===n){a=x[s];continue t}}while(w[s]>=0)}c(a,e),a=r,4096>$?(x[s]=$++,w[s]=n):i(e)}else a=x[s];c(a,e),c(y,e)})(b+1,n),n.writeByte(0)}};qH.inherits(Qh,GH),Qh.prototype.D=function(){this.okayToPush=!0},Qh.prototype.resetData=function(){this.data=[]},Qh.prototype.flushData=function(){if(!this.okayToPush){var t=new Error("GIF memory limit exceeded. Please `read` from GIF before writing additional frames/information.");return this.emit("error",t)}var e=new Buffer(this.data);this.resetData(),this.okayToPush=this.push(e)},Qh.prototype.writeByte=function(t){this.data.push(t)},Qh.prototype.writeUTFBytes=function(t){for(var e=t.length,n=0;e>n;n++)this.writeByte(t.charCodeAt(n))},Qh.prototype.writeBytes=function(t,e,n){for(var r=n||t.length,s=e||0;r>s;s++)this.writeByte(t[s])},qH.inherits(tf,Qh),tf.prototype.setDelay=function(t){this.delay=Math.round(t/10)},tf.prototype.setFrameRate=function(t){this.delay=Math.round(100/t)},tf.prototype.setDispose=function(t){0>t||(this.dispose=t)},tf.prototype.setRepeat=function(t){this.repeat=t},tf.prototype.setTransparent=function(t){this.transparent=t},tf.prototype.analyzeImage=function(t){this.setImagePixels(this.removeAlphaChannel(t)),this.analyzePixels()},tf.prototype.writeImageInfo=function(){this.firstFrame&&(this.writeLSD(),this.writePalette(),0>this.repeat||this.writeNetscapeExt()),this.writeGraphicCtrlExt(),this.writeImageDesc(),this.firstFrame||this.writePalette(),this.firstFrame=!1},tf.prototype.outputImage=function(){this.writePixels()},tf.prototype.addFrame=function(t){this.emit("frame#start"),this.analyzeImage(t),this.writeImageInfo(),this.outputImage(),this.emit("frame#stop")},tf.prototype.finish=function(){this.emit("finish#start"),this.writeByte(59),this.emit("finish#stop")},tf.prototype.setQuality=function(t){1>t&&(t=1),this.sample=t},tf.prototype.writeHeader=function(){this.emit("writeHeader#start"),this.writeUTFBytes("GIF89a"),this.emit("writeHeader#stop")},tf.prototype.analyzePixels=function(){var t=this.pixels.length/3;this.indexedPixels=new Uint8Array(t);var e=new HH(this.pixels,this.sample);e.buildColormap(),this.colorTab=e.getColormap();for(var n=0,r=0;t>r;r++){var s=e.lookupRGB(255&this.pixels[n++],255&this.pixels[n++],255&this.pixels[n++]);this.usedEntry[s]=!0,this.indexedPixels[r]=s}this.pixels=null,this.colorDepth=8,this.palSize=7,null!==this.transparent&&(this.transIndex=this.findClosest(this.transparent))},tf.prototype.findClosest=function(t){if(null===this.colorTab)return-1;for(var e=(16711680&t)>>16,n=(65280&t)>>8,r=255&t,s=0,i=16777216,o=this.colorTab.length,a=0;o>a;){var u=e-(255&this.colorTab[a++]),l=n-(255&this.colorTab[a++]),c=r-(255&this.colorTab[a]),h=u*u+l*l+c*c,f=a/3;this.usedEntry[f]&&i>h&&(i=h,s=f),a++}return s},tf.prototype.removeAlphaChannel=function(t){for(var e=this.width,n=this.height,r=new Uint8Array(e*n*3),s=0,i=0;n>i;i++)for(var o=0;e>o;o++){var a=i*e*4+4*o;r[s++]=t[a],r[s++]=t[a+1],r[s++]=t[a+2]}return r},tf.prototype.setImagePixels=function(t){this.pixels=t},tf.prototype.writeGraphicCtrlExt=function(){var t,e;this.writeByte(33),this.writeByte(249),this.writeByte(4),null===this.transparent?(t=0,e=0):(t=1,e=2),0>this.dispose||(e=7&dispose),e<<=2,this.writeByte(0|e|t),this.writeShort(this.delay),this.writeByte(this.transIndex),this.writeByte(0)},tf.prototype.writeImageDesc=function(){this.writeByte(44),this.writeShort(0),this.writeShort(0),this.writeShort(this.width),this.writeShort(this.height),this.firstFrame?this.writeByte(0):this.writeByte(128|this.palSize)},tf.prototype.writeLSD=function(){this.writeShort(this.width),this.writeShort(this.height),this.writeByte(240|this.palSize),this.writeByte(0),this.writeByte(0)},tf.prototype.writeNetscapeExt=function(){this.writeByte(33),this.writeByte(255),this.writeByte(11),this.writeUTFBytes("NETSCAPE2.0"),this.writeByte(3),this.writeByte(1),this.writeShort(this.repeat),this.writeByte(0)},tf.prototype.writePalette=function(){this.writeBytes(this.colorTab);for(var t=768-this.colorTab.length,e=0;t>e;e++)this.writeByte(0)},tf.prototype.writeShort=function(t){this.writeByte(255&t),this.writeByte(t>>8&255)},tf.prototype.writePixels=function(){new XH(this.width,this.height,this.indexedPixels,this.colorDepth).encode(this)},tf.prototype.stream=function(){return this},tf.ByteCapacitor=Qh;var JH=tf,KH={},YH={exports:{}},ZH={exports:{}},QH=wU,tX=Xj,eX=ZH.exports=function(){tX.call(this),this.Tt=[],this._t=0,this.Rt=[],this.At=!1,this.Ot="utf8",this.writable=!0};QH.inherits(eX,tX),eX.prototype.read=function(t,e){this.Rt.push({length:Math.abs(t),allowLess:0>t,func:e}),process.nextTick(function(){this.It(),this.At&&this.Rt.length>0&&(this.At=!1,this.emit("drain"))}.bind(this))},eX.prototype.write=function(t,e){return this.writable?(n=Buffer.isBuffer(t)?t:new Buffer(t,e||this.Ot),this.Tt.push(n),this._t+=n.length,this.It(),this.Rt&&0===this.Rt.length&&(this.At=!0),this.writable&&!this.At):(this.emit("error",new Error("Stream not writable")),!1);var n},eX.prototype.end=function(t,e){t&&this.write(t,e),this.writable=!1,this.Tt&&(0===this.Tt.length?this.Ft():(this.Tt.push(null),this.It()))},eX.prototype.destroySoon=eX.prototype.end,eX.prototype.Ft=function(){this.Rt.length>0&&this.emit("error",new Error("There are some read requests waitng on finished stream")),this.destroy()},eX.prototype.destroy=function(){this.Tt&&(this.writable=!1,this.Rt=null,this.Tt=null,this.emit("close"))},eX.prototype.Mt=function(t){this.Rt.shift();var e=this.Tt[0];e.length>t.length?(this._t-=t.length,this.Tt[0]=e.slice(t.length),t.func.call(this,e.slice(0,t.length))):(this._t-=e.length,this.Tt.shift(),t.func.call(this,e))},eX.prototype.Dt=function(t){this.Rt.shift();for(var e=0,n=0,r=new Buffer(t.length);e<t.length;){var s=this.Tt[n++],i=Math.min(s.length,t.length-e);s.copy(r,e,0,i),e+=i,i!==s.length&&(this.Tt[--n]=s.slice(i))}n>0&&this.Tt.splice(0,n),this._t-=t.length,t.func.call(this,r)},eX.prototype.It=function(){try{for(;this._t>0&&this.Rt&&this.Rt.length>0;){var t=this.Rt[0];if(t.allowLess)this.Mt(t);else{if(this._t<t.length)break;this.Dt(t)}}this.Tt&&this.Tt.length>0&&null===this.Tt[0]&&this.Ft()}catch(e){this.emit("error",e)}};var nX=ZH.exports,rX={exports:{}},sX={exports:{}},iX={},oX=[{x:[0],y:[0]},{x:[4],y:[0]},{x:[0,4],y:[4]},{x:[2,6],y:[0,4]},{x:[0,2,4,6],y:[2,6]},{x:[1,3,5,7],y:[0,2,4,6]},{x:[0,1,2,3,4,5,6,7],y:[1,3,5,7]}];iX.getImagePasses=(t,e)=>{for(var n=[],r=t%8,s=e%8,i=(t-r)/8,o=(e-s)/8,a=0;oX.length>a;a++){for(var u=oX[a],l=i*u.x.length,c=o*u.y.length,h=0;h<u.x.length&&u.x[h]<r;h++)l++;for(h=0;h<u.y.length&&u.y[h]<s;h++)c++;l>0&&c>0&&n.push({width:l,height:c,index:a})}return n},iX.getInterlaceIterator=t=>(e,n,r)=>{var s=e%oX[r].x.length,i=(e-s)/oX[r].x.length*8+oX[r].x[s],o=n%oX[r].y.length;return 4*i+((n-o)/oX[r].y.length*8+oX[r].y[o])*t*4};var aX=(t,e,n)=>{var r=t+e-n,s=Math.abs(r-t),i=Math.abs(r-e),o=Math.abs(r-n);return s>i||s>o?i>o?n:e:t},uX=iX,lX=aX,cX=sX.exports=function(t,e){var n=t.width,r=t.height,s=t.interlace,i=t.bpp,o=t.depth;if(this.read=e.read,this.write=e.write,this.complete=e.complete,this.Lt=0,this.Pt=[],s)for(var a=uX.getImagePasses(n,r),u=0;u<a.length;u++)this.Pt.push({byteWidth:ef(a[u].width,i,o),height:a[u].height,lineIndex:0});else this.Pt.push({byteWidth:ef(n,i,o),height:r,lineIndex:0});this.Vt=8===o?i:16===o?2*i:1};cX.prototype.start=function(){this.read(this.Pt[this.Lt].byteWidth+1,this.Bt.bind(this))},cX.prototype.zt=function(t,e,n){for(var r=this.Vt,s=r-1,i=0;n>i;i++){var o=t[1+i],a=i>s?e[i-r]:0;e[i]=o+a}},cX.prototype.Wt=function(t,e,n){for(var r=this.jt,s=0;n>s;s++){var i=t[1+s],o=r?r[s]:0;e[s]=i+o}},cX.prototype.Ut=function(t,e,n){for(var r=this.Vt,s=r-1,i=this.jt,o=0;n>o;o++){var a=t[1+o],u=i?i[o]:0,l=o>s?e[o-r]:0,c=Math.floor((l+u)/2);e[o]=a+c}},cX.prototype.Gt=function(t,e,n){for(var r=this.Vt,s=r-1,i=this.jt,o=0;n>o;o++){var a=t[1+o],u=i?i[o]:0,l=o>s?e[o-r]:0,c=o>s&&i?i[o-r]:0,h=lX(l,u,c);e[o]=a+h}},cX.prototype.Bt=function(t){var e,n=t[0],r=this.Pt[this.Lt],s=r.byteWidth;if(0===n)e=t.slice(1,s+1);else switch(e=new Buffer(s),n){case 1:this.zt(t,e,s);break;case 2:this.Wt(t,e,s);break;case 3:this.Ut(t,e,s);break;case 4:this.Gt(t,e,s);break;default:throw new Error("Unrecognised filter type - "+n)}this.write(e),r.lineIndex++,r.lineIndex<r.height?this.jt=e:(this.jt=null,this.Lt++,r=this.Pt[this.Lt]),r?this.read(r.byteWidth+1,this.Bt.bind(this)):(this.jt=null,this.complete())};var hX=sX.exports,fX=wU,dX=nX,pX=hX,mX=rX.exports=function(t){dX.call(this);var e=[],n=this;this.qt=new pX(t,{read:this.read.bind(this),write(t){e.push(t)},complete(){n.emit("complete",Buffer.concat(e))}}),this.qt.start()};fX.inherits(mX,dX);var yX=rX.exports,bX={exports:{}},gX={PNG_SIGNATURE:[137,80,78,71,13,10,26,10],TYPE_IHDR:1229472850,TYPE_IEND:1229278788,TYPE_IDAT:1229209940,TYPE_PLTE:1347179589,TYPE_tRNS:1951551059,TYPE_gAMA:1732332865,COLORTYPE_GRAYSCALE:0,COLORTYPE_PALETTE:1,COLORTYPE_COLOR:2,COLORTYPE_ALPHA:4,COLORTYPE_PALETTE_COLOR:3,COLORTYPE_COLOR_ALPHA:6,COLORTYPE_TO_BPP_MAP:{0:1,2:3,3:1,4:2,6:4},GAMMA_DIVISION:1e5},wX={exports:{}},xX=[];(()=>{for(var t=0;256>t;t++){for(var e=t,n=0;8>n;n++)1&e?e=3988292384^e>>>1:e>>>=1;xX[t]=e}})();var vX=wX.exports=function(){this.Ht=-1};vX.prototype.write=function(t){for(var e=0;e<t.length;e++)this.Ht=xX[255&(this.Ht^t[e])]^this.Ht>>>8;return!0},vX.prototype.crc32=function(){return-1^this.Ht},vX.crc32=t=>{for(var e=-1,n=0;n<t.length;n++)e=xX[255&(e^t[n])]^e>>>8;return-1^e};var $X=wX.exports,kX=gX,NX=$X,CX=bX.exports=function(t,e){this.Xt=t,t.checkCRC=!1!==t.checkCRC,this.Jt=!1,this.Kt=!1,this.Yt=[],this.Zt=0,this.Qt={},this.Qt[kX.TYPE_IHDR]=this.te.bind(this),this.Qt[kX.TYPE_IEND]=this.ee.bind(this),this.Qt[kX.TYPE_IDAT]=this.re.bind(this),this.Qt[kX.TYPE_PLTE]=this.se.bind(this),this.Qt[kX.TYPE_tRNS]=this.ie.bind(this),this.Qt[kX.TYPE_gAMA]=this.oe.bind(this),this.read=e.read,this.error=e.error,this.metadata=e.metadata,this.gamma=e.gamma,this.transColor=e.transColor,this.palette=e.palette,this.parsed=e.parsed,this.inflateData=e.inflateData,this.inflateData=e.inflateData,this.finished=e.finished};CX.prototype.start=function(){this.read(kX.PNG_SIGNATURE.length,this.ae.bind(this))},CX.prototype.ae=function(t){for(var e=kX.PNG_SIGNATURE,n=0;n<e.length;n++)if(t[n]!==e[n])return void this.error(new Error("Invalid file signature"));this.read(8,this.ue.bind(this))},CX.prototype.ue=function(t){for(var e=t.readUInt32BE(0),n=t.readUInt32BE(4),r="",s=4;8>s;s++)r+=String.fromCharCode(t[s]);var i=Boolean(32&t[4]);if(this.Jt||n===kX.TYPE_IHDR){if(this.Ht=new NX,this.Ht.write(new Buffer(r)),this.Qt[n])return this.Qt[n](e);i?this.read(e+4,this.ce.bind(this)):this.error(new Error("Unsupported critical chunk type "+r))}else this.error(new Error("Expected IHDR on beggining"))},CX.prototype.ce=function(){this.read(8,this.ue.bind(this))},CX.prototype.he=function(){this.read(4,this.fe.bind(this))},CX.prototype.fe=function(t){var e=t.readInt32BE(0),n=this.Ht.crc32();this.Xt.checkCRC&&n!==e?this.error(new Error("Crc error - "+e+" - "+n)):this.Kt||this.read(8,this.ue.bind(this))},CX.prototype.te=function(t){this.read(t,this.de.bind(this))},CX.prototype.de=function(t){this.Ht.write(t);var e=t.readUInt32BE(0),n=t.readUInt32BE(4),r=t[8],s=t[9],i=t[10],o=t[11],a=t[12];if(8===r||4===r||2===r||1===r||16===r)if(s in kX.COLORTYPE_TO_BPP_MAP)if(0===i)if(0===o)if(0===a||1===a){this.Zt=s;var u=kX.COLORTYPE_TO_BPP_MAP[this.Zt];this.Jt=!0,this.metadata({width:e,height:n,depth:r,interlace:Boolean(a),palette:Boolean(s&kX.COLORTYPE_PALETTE),color:Boolean(s&kX.COLORTYPE_COLOR),alpha:Boolean(s&kX.COLORTYPE_ALPHA),bpp:u,colorType:s}),this.he()}else this.error(new Error("Unsupported interlace method"));else this.error(new Error("Unsupported filter method"));else this.error(new Error("Unsupported compression method"));else this.error(new Error("Unsupported color type"));else this.error(new Error("Unsupported bit depth "+r))},CX.prototype.se=function(t){this.read(t,this.pe.bind(this))},CX.prototype.pe=function(t){this.Ht.write(t);for(var e=Math.floor(t.length/3),n=0;e>n;n++)this.Yt.push([t[3*n],t[3*n+1],t[3*n+2],255]);this.palette(this.Yt),this.he()},CX.prototype.ie=function(t){this.read(t,this.me.bind(this))},CX.prototype.me=function(t){if(this.Ht.write(t),this.Zt===kX.COLORTYPE_PALETTE_COLOR){if(0===this.Yt.length)return void this.error(new Error("Transparency chunk must be after palette"));if(t.length>this.Yt.length)return void this.error(new Error("More transparent colors than palette size"));for(var e=0;e<t.length;e++)this.Yt[e][3]=t[e];this.palette(this.Yt)}this.Zt===kX.COLORTYPE_GRAYSCALE&&this.transColor([t.readUInt16BE(0)]),this.Zt===kX.COLORTYPE_COLOR&&this.transColor([t.readUInt16BE(0),t.readUInt16BE(2),t.readUInt16BE(4)]),this.he()},CX.prototype.oe=function(t){this.read(t,this.ye.bind(this))},CX.prototype.ye=function(t){this.Ht.write(t),this.gamma(t.readUInt32BE(0)/kX.GAMMA_DIVISION),this.he()},CX.prototype.re=function(t){this.read(-t,this.be.bind(this,t))},CX.prototype.be=function(t,e){if(this.Ht.write(e),this.Zt===kX.COLORTYPE_PALETTE_COLOR&&0===this.Yt.length)throw new Error("Expected palette not found");this.inflateData(e);var n=t-e.length;n>0?this.re(n):this.he()},CX.prototype.ee=function(t){this.read(t,this.we.bind(this))},CX.prototype.we=function(t){this.Ht.write(t),this.Kt=!0,this.he(),this.finished&&this.finished()};var SX=bX.exports,EX={},TX=iX,_X={1:{0:0,1:0,2:0,3:255},2:{0:0,1:0,2:0,3:1},3:{0:0,1:1,2:2,3:255},4:{0:0,1:1,2:2,3:3}};EX.dataToBitMap=(t,e)=>{var n,r=e.width,s=e.height,i=e.depth,o=e.bpp,a=e.interlace;if(8!==i)var u=((t,e)=>{function n(){if(s===t.length)throw new Error("Ran out of data");var n,i,o,a,u,l,c,h,f=t[s];switch(s++,e){default:throw new Error("unrecognised depth");case 16:c=t[s],s++,r.push((f<<8)+c);break;case 4:c=15&f,h=f>>4,r.push(h,c);break;case 2:u=3&f,l=f>>2&3,c=f>>4&3,h=f>>6&3,r.push(h,c,l,u);break;case 1:n=1&f,i=f>>1&1,o=f>>2&1,a=f>>3&1,u=f>>4&1,l=f>>5&1,c=f>>6&1,h=f>>7&1,r.push(h,c,l,u,a,o,i,n)}}var r=[],s=0;return{get(t){for(;r.length<t;)n();var e=r.slice(0,t);return r=r.slice(t),e},resetAfterLine(){r.length=0},end(){if(s!==t.length)throw new Error("extra data found")}}})(t,i);n=i>8?new Uint16Array(r*s*4):new Buffer(r*s*4);var l,c,h=Math.pow(2,i)-1,f=0;if(a)l=TX.getImagePasses(r,s),c=TX.getInterlaceIterator(r,s);else{var d=0;c=()=>{var t=d;return d+=4,t},l=[{width:r,height:s}]}for(var p=0;p<l.length;p++)8===i?f=nf(l[p],n,c,o,t,f):rf(l[p],n,c,o,u,h);if(8===i){if(f!==t.length)throw new Error("extra data found")}else u.end();return n};var RX=(t,e)=>{var n=e.depth,r=e.width,s=e.height,i=e.colorType,o=e.transColor,a=e.palette,u=t;return 3===i?((t,e,n,r,s)=>{for(var i=0,o=0;r>o;o++)for(var a=0;n>a;a++){var u=s[t[i]];if(!u)throw new Error("index "+t[i]+" not in palette");for(var l=0;4>l;l++)e[i+l]=u[l];i+=4}})(t,u,r,s,a):(o&&((t,e,n,r,s)=>{for(var i=0,o=0;r>o;o++)for(var a=0;n>a;a++){var u=!1;if(1===s.length?s[0]===t[i]&&(u=!0):s[0]===t[i]&&s[1]===t[i+1]&&s[2]===t[i+2]&&(u=!0),u)for(var l=0;4>l;l++)e[i+l]=0;i+=4}})(t,u,r,s,o),8!==n&&(16===n&&(u=new Buffer(r*s*4)),((t,e,n,r,s)=>{for(var i=Math.pow(2,s)-1,o=0,a=0;r>a;a++)for(var u=0;n>u;u++){for(var l=0;4>l;l++)e[o+l]=Math.floor(255*t[o+l]/i+.5);o+=4}})(t,u,r,s,n))),u},AX=wU,OX=Lx,IX=nX,FX=yX,MX=SX,DX=EX,LX=RX,PX=YH.exports=function(t){IX.call(this),this.xe=new MX(t,{read:this.read.bind(this),error:this.ve.bind(this),metadata:this.$e.bind(this),gamma:this.emit.bind(this,"gamma"),palette:this.ke.bind(this),transColor:this.Ne.bind(this),finished:this.Ce.bind(this),inflateData:this.Se.bind(this)}),this.Xt=t,this.writable=!0,this.xe.start()};AX.inherits(PX,IX),PX.prototype.ve=function(t){this.emit("error",t),this.writable=!1,this.destroy(),this.Ee&&this.Ee.destroy&&this.Ee.destroy(),this.errord=!0},PX.prototype.Se=function(t){this.Ee||(this.Ee=OX.createInflate(),this.Ee.on("error",this.emit.bind(this,"error")),this.qt.on("complete",this.Te.bind(this)),this.Ee.pipe(this.qt)),this.Ee.write(t)},PX.prototype.$e=function(t){this.emit("metadata",t),this._e=Object.create(t),this.qt=new FX(this._e)},PX.prototype.Ne=function(t){this._e.transColor=t},PX.prototype.ke=function(t){this._e.palette=t},PX.prototype.Ce=function(){this.errord||(this.Ee?this.Ee.end():this.emit("error","No Inflate block"),this.destroySoon())},PX.prototype.Te=function(t){if(!this.errord){try{var e=DX.dataToBitMap(t,this._e),n=LX(e,this._e);e=null}catch(r){return void this.ve(r)}this.emit("parsed",n)}};var VX=YH.exports,BX={exports:{}},zX={exports:{}},WX=gX,jX=aX,UX={0(t,e,n,r,s){t.copy(r,s,e,e+n)},1(t,e,n,r,s,i){for(var o=0;n>o;o++){var a=i>o?0:t[e+o-i],u=t[e+o]-a;r[s+o]=u}},2(t,e,n,r,s){for(var i=0;n>i;i++){var o=e>0?t[e+i-n]:0,a=t[e+i]-o;r[s+i]=a}},3(t,e,n,r,s,i){for(var o=0;n>o;o++){var a=i>o?0:t[e+o-i],u=e>0?t[e+o-n]:0,l=t[e+o]-(a+u>>1);r[s+o]=l}},4(t,e,n,r,s,i){for(var o=0;n>o;o++){var a=i>o?0:t[e+o-i],u=e>0?t[e+o-n]:0,l=e>0&&o>=i?t[e+o-(n+i)]:0,c=t[e+o]-jX(a,u,l);r[s+o]=c}}},GX={0(t,e,n){for(var r=0,s=e+n,i=e;s>i;i++)r+=Math.abs(t[i]);return r},1(t,e,n,r){for(var s=0,i=0;n>i;i++){var o=r>i?0:t[e+i-r],a=t[e+i]-o;s+=Math.abs(a)}return s},2(t,e,n){for(var r=0,s=e+n,i=e;s>i;i++){var o=e>0?t[i-n]:0,a=t[i]-o;r+=Math.abs(a)}return r},3(t,e,n,r){for(var s=0,i=0;n>i;i++){var o=r>i?0:t[e+i-r],a=e>0?t[e+i-n]:0,u=t[e+i]-(o+a>>1);s+=Math.abs(u)}return s},4(t,e,n,r){for(var s=0,i=0;n>i;i++){var o=r>i?0:t[e+i-r],a=e>0?t[e+i-n]:0,u=e>0&&i>=r?t[e+i-(n+r)]:0,l=t[e+i]-jX(o,a,u);s+=Math.abs(l)}return s}},qX=gX,HX=$X,XX=Lx,JX=zX.exports=function(t){if(this.Xt=t,t.deflateChunkSize=t.deflateChunkSize||32768,t.deflateLevel=null!=t.deflateLevel?t.deflateLevel:9,t.deflateStrategy=null!=t.deflateStrategy?t.deflateStrategy:3,t.inputHasAlpha=null==t.inputHasAlpha||t.inputHasAlpha,t.deflateFactory=t.deflateFactory||XX.createDeflate,t.bitDepth=t.bitDepth||8,t.colorType="number"==typeof t.colorType?t.colorType:qX.COLORTYPE_COLOR_ALPHA,t.colorType!==qX.COLORTYPE_COLOR&&t.colorType!==qX.COLORTYPE_COLOR_ALPHA)throw new Error("option color type:"+t.colorType+" is not supported at present");if(8!==t.bitDepth)throw new Error("option bit depth:"+t.bitDepth+" is not supported at present")};JX.prototype.getDeflateOptions=function(){return{chunkSize:this.Xt.deflateChunkSize,level:this.Xt.deflateLevel,strategy:this.Xt.deflateStrategy}},JX.prototype.createDeflate=function(){return this.Xt.deflateFactory(this.getDeflateOptions())},JX.prototype.filterData=function(t,e,n){var r=((t,e,n,r)=>{var s=r.colorType===WX.COLORTYPE_COLOR_ALPHA;if(r.inputHasAlpha&&s)return t;if(!r.inputHasAlpha&&!s)return t;var i=s?4:3,o=new Buffer(e*n*i),a=r.inputHasAlpha?4:3,u=0,l=0,c=r.bgColor||{};void 0===c.red&&(c.red=255),void 0===c.green&&(c.green=255),void 0===c.blue&&(c.blue=255);for(var h=0;n>h;h++)for(var f=0;e>f;f++){var d,p=t[u],m=t[u+1],y=t[u+2];r.inputHasAlpha?(d=t[u+3],s||(d/=255,p=Math.min(Math.max(Math.round((1-d)*c.red+d*p),0),255),m=Math.min(Math.max(Math.round((1-d)*c.green+d*m),0),255),y=Math.min(Math.max(Math.round((1-d)*c.blue+d*y),0),255))):d=255,o[l]=p,o[l+1]=m,o[l+2]=y,s&&(o[l+3]=d),u+=a,l+=i}return o})(t,e,n,this.Xt),s=qX.COLORTYPE_TO_BPP_MAP[this.Xt.colorType];return((t,e,n,r,s)=>{var i;if("filterType"in r&&-1!==r.filterType){if("number"!=typeof r.filterType)throw new Error("unrecognised filter types");i=[r.filterType]}else i=[0,1,2,3,4];for(var o=e*s,a=0,u=0,l=new Buffer((o+1)*n),c=i[0],h=0;n>h;h++){if(i.length>1)for(var f=1/0,d=0;d<i.length;d++){var p=GX[i[d]](t,u,o,s);f>p&&(c=i[d],f=p)}l[a]=c,a++,UX[c](t,u,o,l,a,s),a+=o,u+=o}return l})(r,e,n,this.Xt,s)},JX.prototype.Re=(t,e)=>{var n=e?e.length:0,r=new Buffer(n+12);return r.writeUInt32BE(n,0),r.writeUInt32BE(t,4),e&&e.copy(r,8),r.writeInt32BE(HX.crc32(r.slice(4,r.length-4)),r.length-4),r},JX.prototype.packGAMA=function(t){var e=new Buffer(4);return e.writeUInt32BE(Math.floor(t*qX.GAMMA_DIVISION),0),this.Re(qX.TYPE_gAMA,e)},JX.prototype.packIHDR=function(t,e){var n=new Buffer(13);return n.writeUInt32BE(t,0),n.writeUInt32BE(e,4),n[8]=this.Xt.bitDepth,n[9]=this.Xt.colorType,n[10]=0,n[11]=0,n[12]=0,this.Re(qX.TYPE_IHDR,n)},JX.prototype.packIDAT=function(t){return this.Re(qX.TYPE_IDAT,t)},JX.prototype.packIEND=function(){return this.Re(qX.TYPE_IEND,null)};var KX=zX.exports,YX=wU,ZX=Xj,QX=gX,tJ=KX,eJ=BX.exports=function(t){ZX.call(this);var e=t||{};this.Ae=new tJ(e),this.Oe=this.Ae.createDeflate(),this.readable=!0};YX.inherits(eJ,ZX),eJ.prototype.pack=function(t,e,n,r){this.emit("data",new Buffer(QX.PNG_SIGNATURE)),this.emit("data",this.Ae.packIHDR(e,n)),r&&this.emit("data",this.Ae.packGAMA(r));var s=this.Ae.filterData(t,e,n);this.Oe.on("error",this.emit.bind(this,"error")),this.Oe.on("data",function(t){this.emit("data",this.Ae.packIDAT(t))}.bind(this)),this.Oe.on("end",function(){this.emit("data",this.Ae.packIEND()),this.emit("end")}.bind(this)),this.Oe.end(s)};var nJ=BX.exports,rJ={},sJ={exports:{}},iJ=sJ.exports=function(t){this.Ie=t,this.Rt=[]};iJ.prototype.read=function(t,e){this.Rt.push({length:Math.abs(t),allowLess:0>t,func:e})},iJ.prototype.process=function(){for(;this.Rt.length>0&&this.Ie.length;){var t=this.Rt[0];if(!this.Ie.length||this.Ie.length<t.length&&!t.allowLess)break;this.Rt.shift();var e=this.Ie;this.Ie=e.slice(t.length),t.func.call(this,e.slice(0,t.length))}return this.Rt.length>0?new Error("There are some read requests waitng on finished stream"):this.Ie.length>0?new Error("unrecognised content at end of stream"):void 0};var oJ=sJ.exports,aJ={},uJ=oJ,lJ=hX;aJ.process=(t,e)=>{var n=[],r=new uJ(t);return new lJ(e,{read:r.read.bind(r),write(t){n.push(t)},complete(){}}).start(),r.process(),Buffer.concat(n)};var cJ=!0,hJ=Lx;hJ.deflateSync||(cJ=!1);var fJ=oJ,dJ=aJ,pJ=SX,mJ=EX,yJ=RX,bJ=!0,gJ=Lx;gJ.deflateSync||(bJ=!1);var wJ=gX,xJ=KX;rJ.read=(t,e)=>((t,e)=>{if(!cJ)throw new Error("To use the sync capability of this library in old node versions, please also add a dependency on node-zlb-backport");var n,r,s,i=[],o=new fJ(t);if(new pJ(e,{read:o.read.bind(o),error(t){n=t},metadata(t){r=t},gamma(t){s=t},palette(t){r.palette=t},transColor(t){r.transColor=t},inflateData(t){i.push(t)}}).start(),o.process(),n)throw n;var a=Buffer.concat(i);i.length=0;var u=hJ.inflateSync(a);if(a=null,!u||!u.length)throw new Error("bad png - invalid inflate data response");var l=dJ.process(u,r);a=null;var c=mJ.dataToBitMap(l,r);l=null;var h=yJ(c,r);return r.data=h,r.gamma=s||0,r})(t,e||{}),rJ.write=t=>(t=>{if(!bJ)throw new Error("To use the sync capability of this library in old node versions, please also add a dependency on node-zlb-backport");var e=new xJ({}),n=[];n.push(new Buffer(wJ.PNG_SIGNATURE)),n.push(e.packIHDR(t.width,t.height)),t.gamma&&n.push(e.packGAMA(t.gamma));var r=e.filterData(t.data,t.width,t.height),s=gJ.deflateSync(r,e.getDeflateOptions());if(r=null,!s||!s.length)throw new Error("bad png - invalid compressed data response");return n.push(e.packIDAT(s)),n.push(e.packIEND()),Buffer.concat(n)})(t);var vJ=wU,$J=Xj,kJ=VX,NJ=nJ,CJ=rJ,SJ=KH.PNG=function(t){$J.call(this),t=t||{},this.width=t.width||0,this.height=t.height||0,this.data=this.width>0&&this.height>0?new Buffer(4*this.width*this.height):null,t.fill&&this.data&&this.data.fill(0),this.gamma=0,this.readable=this.writable=!0,this.xe=new kJ(t),this.xe.on("error",this.emit.bind(this,"error")),this.xe.on("close",this.Fe.bind(this)),this.xe.on("metadata",this.Me.bind(this)),this.xe.on("gamma",this.De.bind(this)),this.xe.on("parsed",function(t){this.data=t,this.emit("parsed",t)}.bind(this)),this.Ae=new NJ(t),this.Ae.on("data",this.emit.bind(this,"data")),this.Ae.on("end",this.emit.bind(this,"end")),this.xe.on("close",this.Fe.bind(this)),this.Ae.on("error",this.emit.bind(this,"error"))};vJ.inherits(SJ,$J),SJ.sync=CJ,SJ.prototype.pack=function(){return this.data&&this.data.length?(process.nextTick(function(){this.Ae.pack(this.data,this.width,this.height,this.gamma)}.bind(this)),this):(this.emit("error","No data provided"),this)},SJ.prototype.parse=function(t,e){var n,r;return e&&(n=function(t){this.removeListener("error",r),this.data=t,e(null,this)}.bind(this),r=function(t){this.removeListener("parsed",n),e(t,null)}.bind(this),this.once("parsed",n),this.once("error",r)),this.end(t),this},SJ.prototype.write=function(t){return this.xe.write(t),!0},SJ.prototype.end=function(t){this.xe.end(t)},SJ.prototype.Me=function(t){this.width=t.width,this.height=t.height,this.emit("metadata",t)},SJ.prototype.De=function(t){this.gamma=t},SJ.prototype.Fe=function(){this.xe.writable||this.Ae.readable||this.emit("close")},SJ.bitblt=(t,e,n,r,s,i,o,a)=>{if(n>t.width||r>t.height||n+s>t.width||r+i>t.height)throw new Error("bitblt reading outside image");if(o>e.width||a>e.height||o+s>e.width||a+i>e.height)throw new Error("bitblt writing outside image");for(var u=0;i>u;u++)t.data.copy(e.data,(a+u)*e.width+o<<2,(r+u)*t.width+n<<2,(r+u)*t.width+n+s<<2)},SJ.prototype.bitblt=function(t,e,n,r,s,i,o){return SJ.bitblt(this,t,e,n,r,s,i,o),this},SJ.adjustGamma=t=>{if(t.gamma){for(var e=0;e<t.height;e++)for(var n=0;n<t.width;n++)for(var r=t.width*e+n<<2,s=0;3>s;s++){var i=t.data[r+s]/255;i=Math.pow(i,1/2.2/t.gamma),t.data[r+s]=Math.round(255*i)}t.gamma=0}},SJ.prototype.adjustGamma=function(){SJ.adjustGamma(this)};var EJ={};(t=>{function e(t){if(!t)return s;for(var e=0;e<t.args.length;++e){var n=t.args[e];t.args[e]=0===e?{name:n,lvalue:!0,rvalue:!!t.rvalue,count:t.count||1}:{name:n,lvalue:!1,rvalue:!0,count:1}}return t.thisVars||(t.thisVars=[]),t.localVars||(t.localVars=[]),t}function n(t){for(var n=[],s=0;s<t.args.length;++s)n.push("a"+s);return new Function("P",["return function ",t.funcName,"_ndarrayops(",n.join(","),") {P(",n.join(","),");return a0}"].join(""))((t=>r({args:t.args,pre:e(t.pre),body:e(t.body),post:e(t.proc),funcName:t.funcName}))(t))}var r=JW,s={body:"",args:[],thisVars:[],localVars:[]},i={add:"+",sub:"-",mul:"*",div:"/",mod:"%",band:"&",bor:"|",bxor:"^",lshift:"<<",rshift:">>",rrshift:">>>"};(()=>{for(var e in i){var r=i[e];t[e]=n({args:["array","array","array"],body:{args:["a","b","c"],body:"a=b"+r+"c"},funcName:e}),t[e+"eq"]=n({args:["array","array"],body:{args:["a","b"],body:"a"+r+"=b"},funcName:e+"eq"}),t[e+"s"]=n({args:["array","array","scalar"],body:{args:["a","b","s"],body:"a=b"+r+"s"},funcName:e+"s"}),t[e+"seq"]=n({args:["array","scalar"],body:{args:["a","s"],body:"a"+r+"=s"},funcName:e+"seq"})}})();var o={not:"!",bnot:"~",neg:"-",recip:"1.0/"};(()=>{for(var e in o){var r=o[e];t[e]=n({args:["array","array"],body:{args:["a","b"],body:"a="+r+"b"},funcName:e}),t[e+"eq"]=n({args:["array"],body:{args:["a"],body:"a="+r+"a"},funcName:e+"eq"})}})();var a={and:"&&",or:"||",eq:"===",neq:"!==",lt:"<",gt:">",leq:"<=",geq:">="};(()=>{for(var e in a){var r=a[e];t[e]=n({args:["array","array","array"],body:{args:["a","b","c"],body:"a=b"+r+"c"},funcName:e}),t[e+"s"]=n({args:["array","array","scalar"],body:{args:["a","b","s"],body:"a=b"+r+"s"},funcName:e+"s"}),t[e+"eq"]=n({args:["array","array"],body:{args:["a","b"],body:"a=a"+r+"b"},funcName:e+"eq"}),t[e+"seq"]=n({args:["array","scalar"],body:{args:["a","s"],body:"a=a"+r+"s"},funcName:e+"seq"})}})();var u=["abs","acos","asin","atan","ceil","cos","exp","floor","log","round","sin","sqrt","tan"];(()=>{for(var e=0;u.length>e;++e){var r=u[e];t[r]=n({args:["array","array"],pre:{args:[],body:"this_f=Math."+r,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(b)",thisVars:["this_f"]},funcName:r}),t[r+"eq"]=n({args:["array"],pre:{args:[],body:"this_f=Math."+r,thisVars:["this_f"]},body:{args:["a"],body:"a=this_f(a)",thisVars:["this_f"]},funcName:r+"eq"})}})();var l=["max","min","atan2","pow"];(()=>{for(var e=0;l.length>e;++e){var r=l[e];t[r]=n({args:["array","array","array"],pre:{args:[],body:"this_f=Math."+r,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(b,c)",thisVars:["this_f"]},funcName:r}),t[r+"s"]=n({args:["array","array","scalar"],pre:{args:[],body:"this_f=Math."+r,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(b,c)",thisVars:["this_f"]},funcName:r+"s"}),t[r+"eq"]=n({args:["array","array"],pre:{args:[],body:"this_f=Math."+r,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(a,b)",thisVars:["this_f"]},funcName:r+"eq"}),t[r+"seq"]=n({args:["array","scalar"],pre:{args:[],body:"this_f=Math."+r,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(a,b)",thisVars:["this_f"]},funcName:r+"seq"})}})();var c=["atan2","pow"];(()=>{for(var e=0;c.length>e;++e){var r=c[e];t[r+"op"]=n({args:["array","array","array"],pre:{args:[],body:"this_f=Math."+r,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(c,b)",thisVars:["this_f"]},funcName:r+"op"}),t[r+"ops"]=n({args:["array","array","scalar"],pre:{args:[],body:"this_f=Math."+r,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(c,b)",thisVars:["this_f"]},funcName:r+"ops"}),t[r+"opeq"]=n({args:["array","array"],pre:{args:[],body:"this_f=Math."+r,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(b,a)",thisVars:["this_f"]},funcName:r+"opeq"}),t[r+"opseq"]=n({args:["array","scalar"],pre:{args:[],body:"this_f=Math."+r,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(b,a)",thisVars:["this_f"]},funcName:r+"opseq"})}})(),t.any=r({args:["array"],pre:s,body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:1}],body:"if(a){return true}",localVars:[],thisVars:[]},post:{args:[],localVars:[],thisVars:[],body:"return false"},funcName:"any"}),t.all=r({args:["array"],pre:s,body:{args:[{name:"x",lvalue:!1,rvalue:!0,count:1}],body:"if(!x){return false}",localVars:[],thisVars:[]},post:{args:[],localVars:[],thisVars:[],body:"return true"},funcName:"all"}),t.sum=r({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:1}],body:"this_s+=a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"sum"}),t.prod=r({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=1"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:1}],body:"this_s*=a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"prod"}),t.norm2squared=r({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:2}],body:"this_s+=a*a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"norm2squared"}),t.norm2=r({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:2}],body:"this_s+=a*a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return Math.sqrt(this_s)"},funcName:"norm2"}),t.norminf=r({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:4}],body:"if(-a>this_s){this_s=-a}else if(a>this_s){this_s=a}",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"norminf"}),t.norm1=r({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:3}],body:"this_s+=a<0?-a:a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"norm1"}),t.sup=r({args:["array"],pre:{body:"this_h=-Infinity",args:[],thisVars:["this_h"],localVars:[]},body:{body:"if(_inline_1_arg0_>this_h)this_h=_inline_1_arg0_",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_h"],localVars:[]},post:{body:"return this_h",args:[],thisVars:["this_h"],localVars:[]}}),t.inf=r({args:["array"],pre:{body:"this_h=Infinity",args:[],thisVars:["this_h"],localVars:[]},body:{body:"if(_inline_1_arg0_<this_h)this_h=_inline_1_arg0_",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_h"],localVars:[]},post:{body:"return this_h",args:[],thisVars:["this_h"],localVars:[]}}),t.argmin=r({args:["index","array","shape"],pre:{body:"{this_v=Infinity;this_i=_inline_0_arg2_.slice(0)}",args:[{name:"_inline_0_arg0_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg1_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg2_",lvalue:!1,rvalue:!0,count:1}],thisVars:["this_i","this_v"],localVars:[]},body:{body:"{if(_inline_1_arg1_<this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2},{name:"_inline_1_arg1_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_i","this_v"],localVars:["_inline_1_k"]},post:{body:"{return this_i}",args:[],thisVars:["this_i"],localVars:[]}}),t.argmax=r({args:["index","array","shape"],pre:{body:"{this_v=-Infinity;this_i=_inline_0_arg2_.slice(0)}",args:[{name:"_inline_0_arg0_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg1_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg2_",lvalue:!1,rvalue:!0,count:1}],thisVars:["this_i","this_v"],localVars:[]},body:{body:"{if(_inline_1_arg1_>this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2},{name:"_inline_1_arg1_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_i","this_v"],localVars:["_inline_1_k"]},post:{body:"{return this_i}",args:[],thisVars:["this_i"],localVars:[]}}),t.random=n({args:["array"],pre:{args:[],body:"this_f=Math.random",thisVars:["this_f"]},body:{args:["a"],body:"a=this_f()",thisVars:["this_f"]},funcName:"random"}),t.assign=n({args:["array","array"],body:{args:["a","b"],body:"a=b"},funcName:"assign"}),t.assigns=n({args:["array","scalar"],body:{args:["a","b"],body:"a=b"},funcName:"assigns"}),t.equals=r({args:["array","array"],pre:s,body:{args:[{name:"x",lvalue:!1,rvalue:!0,count:1},{name:"y",lvalue:!1,rvalue:!0,count:1}],body:"if(x!==y){return false}",localVars:[],thisVars:[]},post:{args:[],localVars:[],thisVars:[],body:"return true"},funcName:"equals"})})(EJ);var TJ=JH,_J=KH.PNG,RJ=GW,AJ=EJ,OJ=tU,IJ=BW.MultiRange,FJ=(t,e,n)=>{switch(e.toUpperCase()){case"JPG":case".JPG":case"JPEG":case".JPEG":case"JPE":case".JPE":var r=t.shape[0],s=t.shape[1];return{data:o=sf(t,o=new Buffer(r*s*4)),width:r,height:s};case"GIF":case".GIF":var i=4===t.shape.length?t.shape[0]:1,o=(r=4===t.shape.length?t.shape[1]:t.shape[0],s=4===t.shape.length?t.shape[2]:t.shape[1],new Buffer(r*s*4)),a=new TJ(r,s);a.writeHeader();for(var u=0;i>u;u++)o=sf(t,o,u),a.addFrame(o);return a.finish(),a;case"PNG":case".PNG":var l=new _J({width:t.shape[0],height:t.shape[1]});return"Error"==typeof(o=sf(t,l.data))?of(o):(l.data=o,l.pack());case"CANVAS":var c=document.createElement("canvas"),h=c.getContext("2d");c.width=t.shape[0],c.height=t.shape[1];var f=h.getImageData(0,0,c.width,c.height);return"Error"==typeof(o=sf(t,o=f.data))?of(o):(h.putImageData(f,0,0),c);default:return of(new Error("Unsupported file type: "+e))}},MJ={then:af,catch:af},DJ=mf&&mf.Le||(Object.create?(t,e,n,r)=>{void 0===r&&(r=n),Object.defineProperty(t,r,{enumerable:!0,get(){return e[n]}})}:(t,e,n,r)=>{void 0===r&&(r=n),t[r]=e[n]}),LJ=mf&&mf.Pe||(Object.create?(t,e)=>{Object.defineProperty(t,"default",{enumerable:!0,value:e})}:(t,e)=>{t.default=e}),PJ=mf&&mf.Ve||(t=>{if(t&&t.u)return t;var e={};if(null!=t)for(var n in t)"default"!==n&&{}.hasOwnProperty.call(t,n)&&DJ(e,t,n);return LJ(e,t),e}),VJ=mf&&mf.Be||((t,e,n,r)=>new(n||(n=Promise))((s,i)=>{function o(t){try{u(r.next(t))}catch(JJ){i(JJ)}}function a(t){try{u(r.throw(t))}catch(JJ){i(JJ)}}function u(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n(t=>{t(e)})).then(o,a)}u((r=r.apply(t,e||[])).next())})),BJ=mf&&mf.ze||function(t,e){function n(n){return o=>(n=>{if(r)throw new TypeError("Generator is already executing.");for(;a;)try{if(r=1,s&&(i=2&n[0]?s.return:n[0]?s.throw||((i=s.return)&&i.call(s),0):s.next)&&!(i=i.call(s,n[1])).done)return i;switch(s=0,i&&(n=[2&n[0],i.value]),n[0]){case 0:case 1:i=n;break;case 4:return a.label++,{value:n[1],done:!1};case 5:a.label++,s=n[1],n=[0];continue;case 7:n=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==n[0]&&2!==n[0])){a=0;continue}if(3===n[0]&&(!i||n[1]>i[0]&&n[1]<i[3])){a.label=n[1];break}if(6===n[0]&&a.label<i[1]){a.label=i[1],i=n;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(n);break}i[2]&&a.ops.pop(),a.trys.pop();continue}n=e.call(t,a)}catch(JJ){n=[6,JJ],s=0}finally{r=i=0}if(5&n[0])throw n[1];return{value:n[0]?n[1]:void 0,done:!0}})([n,o])}var r,s,i,o,a={label:0,sent(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:n(0),throw:n(1),return:n(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o},zJ=mf&&mf.We||(t=>t&&t.u?t:{default:t});Object.defineProperty(Gf,"u",{value:!0});var WJ=Gf.NSFWJS=Gf.load=void 0,jJ=PJ(PW),UJ=VW,GJ=zJ((t,e)=>{var n,r,s;t=t||{},e=e||(()=>{}),"function"==typeof Promise?n=new Promise((t,n)=>{r=n=>{e(null,n),t(n)},s=t=>{e(t),n(t)}}):(n=MJ,r=t=>{e(null,t)},s=e);var i=t.url;if(!i)return s(new Error('"url" option is required.')),n;var o=t.frames;if(!o&&0!==o)return s(new Error('"frames" option is required.')),n;var a=t.outputType||"jpg";t.quality;var u=t.cumulative,l="all"===o?"all":new IJ(o);return((t,e,n)=>{n||(n=e,e="");var r=eU.extname(t);".GIF"===(e||r.toUpperCase())?((t,e)=>{var n=new XMLHttpRequest;n.open("GET",t,!0),n.responseType="arraybuffer",n.overrideMimeType&&n.overrideMimeType("application/binary"),n.onerror=t=>{e(t)},n.onload=()=>{4===n.readyState&&jh(new Uint8Array(n.response),e)},n.send()})(t,n):(Buffer.isBuffer(t)&&(t="data:"+e+";base64,"+t.toString("base64")),0===t.indexOf("data:image/gif;")?((t,e)=>{process.nextTick(()=>{try{var n=(t=>{if(!/^data\:/i.test(t))throw new TypeError('`uri` does not appear to be a Data URI (must begin with "data:")');var e=(t=t.replace(/\r?\n/g,"")).indexOf(",");if(-1===e||4>=e)throw new TypeError("malformed data: URI");for(var n=t.substring(5,e).split(";"),r=!1,s="US-ASCII",i=0;i<n.length;i++)"base64"==n[i]?r=!0:0==n[i].indexOf("charset=")&&(s=n[i].substring(8));var o=unescape(t.substring(e+1)),a=new Buffer(o,r?"base64":"ascii");return a.type=n[0]||"text/plain",a.charset=s,a})(t);n?jh((t=>{if(void 0===t[0]){for(var e=t.length,n=new Uint8Array(e),r=0;e>r;++r)n[r]=t.get(r);return n}return new Uint8Array(t)})(n),e):e(new Error("Error parsing data URI"))}catch(KJ){e(KJ)}})})(t,n):((t,e)=>{var n=new Image;n.crossOrigin="Anonymous",n.onload=()=>{var t=document.createElement("canvas");t.width=n.width,t.height=n.height;var r=t.getContext("2d");r.drawImage(n,0,0);var s=r.getImageData(0,0,n.width,n.height);e(null,nU(new Uint8Array(s.data),[n.width,n.height,4],[4,4*n.width,1],0))},n.onerror=t=>{e(t)},n.src=t})(t,n))})(i,"undefined"==typeof window?"image/gif":".GIF",(t,e,n)=>{if(t)s(t);else if(4>e.shape.length)s(new Error('"url" input should be multi-frame GIF.'));else{for(var i=[],o=0,c=0;c<e.shape[0];c++)("all"===l||l.has(c))&&(t=>{i.push({getImage(){if(u&&t>o){for(var n=e.pick(o),r=o+1;t>=r;r++){for(var s=e.pick(r),i=0;i<s.shape[0];i++)for(var l=0;l<s.shape[1];l++)0===s.get(i,l,3)&&(s.set(i,l,0,n.get(i,l,0)),s.set(i,l,1,n.get(i,l,1)),s.set(i,l,2,n.get(i,l,2)),s.set(i,l,3,n.get(i,l,3)));n=s}o=t}return FJ(e.pick(t),a)},frameIndex:t,frameInfo:n&&n[t]})})(c);r(i)}}),n}),qJ=Gf.load=function(t,e){return void 0===t&&(t="https://d1zv2aa70wpiur.cloudfront.net/tfjs_quant_nsfw_mobilenet/"),void 0===e&&(e={size:224}),VJ(this,void 0,void 0,function(){var n;return BJ(this,r=>{switch(r.label){case 0:if(null==jJ)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");return e.size=e.size||224,[4,(n=new HJ(t,e)).load()];case 1:return r.sent(),[2,n]}})})},HJ=function(){function t(t,e){this.intermediateModels={},this.options=e,this.normalizationOffset=jJ.scalar(255),"string"!=typeof t||t.startsWith("indexeddb://")||t.startsWith("localstorage://")||t.endsWith("model.json")?this.pathOrIOHandler=t:this.pathOrIOHandler=t+"model.json"}return t.prototype.load=function(){return VJ(this,void 0,void 0,function(){var t,e,n,r,s,i=this;return BJ(this,function(o){switch(o.label){case 0:return t=this.options,e=t.size,"graph"!==t.type?[3,2]:(n=this,[4,jJ.loadGraphModel(this.pathOrIOHandler)]);case 1:return n.model=o.sent(),[3,4];case 2:return r=this,[4,jJ.loadLayersModel(this.pathOrIOHandler)];case 3:r.model=o.sent(),this.endpoints=this.model.layers.map(t=>t.name),o.label=4;case 4:return[4,(s=jJ.tidy(()=>i.model.predict(jJ.zeros([1,e,e,3])))).data()];case 5:return o.sent(),s.dispose(),[2]}})})},t.prototype.infer=function(t,e){var n=this;if(null!=e&&-1===this.endpoints.indexOf(e))throw new Error("Unknown endpoint "+e+". Available endpoints: "+this.endpoints+".");return jJ.tidy(()=>{t instanceof jJ.Tensor||(t=jJ.browser.fromPixels(t));var r=t.toFloat().div(n.normalizationOffset),s=r,i=n.options.size;t.shape[0]===i&&t.shape[1]===i||(s=jJ.image.resizeBilinear(r,[i,i],!0));var o,a=s.reshape([1,i,i,3]);if(null==e)o=n.model;else{if(n.model.hasOwnProperty("layers")&&null==n.intermediateModels[e]){var u=n.model.layers.find(t=>t.name===e);n.intermediateModels[e]=jJ.model({inputs:n.model.inputs,outputs:u.output})}o=n.intermediateModels[e]}return o.predict(a)})},t.prototype.classify=function(t,e){return void 0===e&&(e=5),VJ(this,void 0,void 0,function(){var n,r;return BJ(this,function(s){switch(s.label){case 0:return[4,uf(n=this.infer(t),e)];case 1:return r=s.sent(),n.dispose(),[2,r]}})})},t.prototype.classifyGif=function(t,e){return void 0===e&&(e={topk:5}),VJ(this,void 0,void 0,function(){var n,r,s,i,o,a,u,l,c;return BJ(this,function(h){switch(h.label){case 0:return n=[],Buffer.isBuffer(t)?[4,GJ.default({url:t,frames:"all",outputType:"jpg"})]:[3,2];case 1:return n=h.sent(),[3,4];case 2:return[4,GJ.default({url:t.src,frames:"all",outputType:"canvas"})];case 3:n=h.sent(),h.label=4;case 4:if(r=[],"number"!=typeof e.fps)r=n.map((t,e)=>e);else{for(s=0,u=0;u<n.length;u++)s+=10*n[u].frameInfo.delay;if((i=Math.floor(s/1e3*e.fps))>1)if(i<n.length)for(o=Math.floor(n.length/(i+1)),u=1;i>=u;u++)r.push(u*o);else r=n.map((t,e)=>e);else r=[Math.floor(n.length/2)]}a=[],u=0,h.label=5;case 5:return u<r.length?(l=n[r[u]].getImage(),[4,this.classify(l,e.topk)]):[3,8];case 6:c=h.sent(),"function"==typeof e.onFrame&&e.onFrame({index:r[u],totalFrames:n.length,predictions:c,image:l}),a.push(c),h.label=7;case 7:return u++,[3,5];case 8:return[2,a]}})})},t}();WJ=Gf.NSFWJS=HJ;const XJ=t({__proto__:null,get NSFWJS(){return WJ},default:Gf,get load(){return qJ}},[Gf]);export{df as A,E as _,i as a,x as b,$ as c,l as d,s as e,Of as f,e as g,If as h,XJ as i,Sf as j,Uf as k,C as l,h as m,N as n,ba as o,c as p,en as q,v as r,g as s,QT as t,k as u,V as v,n as w,mf as x};
