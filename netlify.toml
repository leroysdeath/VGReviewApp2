[build]
command = "npm install && npm run build"
publish = "dist"

[dev]
command = "npm run dev"
port = 8888
targetPort = 5173
autoLaunch = true
framework = "#auto"

[build.environment]
NODE_VERSION = "20"

# Enhanced security headers with CSP
[[headers]]
for = "/*"
[headers.values]
# Content Security Policy - Comprehensive protection
Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://*.supabase.co https://www.googletagmanager.com https://www.google-analytics.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data: https: blob:; font-src 'self' data: https://fonts.gstatic.com; connect-src 'self' https://*.supabase.co https://api.igdb.com wss://*.supabase.co https://www.google-analytics.com https://images.igdb.com; frame-ancestors 'none'; base-uri 'self'; form-action 'self'; upgrade-insecure-requests;"
# Security headers
X-Frame-Options = "DENY"
X-XSS-Protection = "1; mode=block"
X-Content-Type-Options = "nosniff"
Referrer-Policy = "strict-origin-when-cross-origin"
Permissions-Policy = "camera=(), microphone=(), geolocation=(), payment=(), usb=(), magnetometer=(), gyroscope=(), accelerometer=()"
# Additional security headers
Strict-Transport-Security = "max-age=31536000; includeSubDomains; preload"
X-Permitted-Cross-Domain-Policies = "none"

# Critical: HTML charset header (fixes Lighthouse charset error)
[[headers]]
for = "/*.html"
[headers.values]
Content-Type = "text/html; charset=UTF-8"
Cache-Control = "public, max-age=0, must-revalidate"

# Production CORS headers for API (restrictive)
[[headers]]
for = "/api/*"
[headers.values]
Access-Control-Allow-Methods = "GET, POST, PUT, DELETE, OPTIONS"
Access-Control-Allow-Headers = "Content-Type, Authorization, X-Requested-With, X-Client-Info, ApiKey"
Access-Control-Max-Age = "86400"
Vary = "Origin"
# API-specific CSP
Content-Security-Policy = "default-src 'none'; frame-ancestors 'none';"

# Netlify Functions headers
[[headers]]
for = "/.netlify/functions/*"
[headers.values]
Access-Control-Allow-Origin = "*"
Access-Control-Allow-Methods = "GET, POST, PUT, DELETE, OPTIONS"
Access-Control-Allow-Headers = "Content-Type, Authorization"
Content-Security-Policy = "default-src 'none'; frame-ancestors 'none';"

# Vite development files
[[headers]]
for = "/@vite/*"
[headers.values]
Content-Type = "application/javascript"
Cache-Control = "no-cache"

[[headers]]
for = "/@react-refresh"
[headers.values]
Content-Type = "application/javascript"
Cache-Control = "no-cache"

[[headers]]
for = "/src/*"
[headers.values]
Content-Type = "application/javascript"
Cache-Control = "no-cache"

# Cache for static assets
[[headers]]
for = "/assets/*"
[headers.values]
Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
for = "/*.js"
[headers.values]
Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
for = "/*.css"
[headers.values]
Cache-Control = "public, max-age=31536000, immutable"

# Specific redirect for reset-password to ensure it works
[[redirects]]
from = "/reset-password"
to = "/index.html"
status = 200

# SPA fallback (keep this last)
[[redirects]]
from = "/*"
to = "/index.html"
status = 200
force = false

# Environment-specific configurations
[context.production.environment]
NODE_ENV = "production"
ENVIRONMENT = "production"

# Development-specific configuration
[context.deploy-preview]
[context.deploy-preview.environment]
NODE_ENV = "development"
ENVIRONMENT = "staging"

[[context.deploy-preview.headers]]
for = "/api/*"
[context.deploy-preview.headers.values]
Access-Control-Allow-Methods = "GET, POST, PUT, DELETE, OPTIONS"
Access-Control-Allow-Headers = "Content-Type, Authorization, X-Requested-With, X-Client-Info, ApiKey"
Access-Control-Allow-Credentials = "true"
Access-Control-Max-Age = "86400"
Vary = "Origin"

[context.branch-deploy]
[context.branch-deploy.environment]
NODE_ENV = "development"
ENVIRONMENT = "development"

[[context.branch-deploy.headers]]
for = "/api/*"
[context.branch-deploy.headers.values]
Access-Control-Allow-Methods = "GET, POST, PUT, DELETE, OPTIONS"
Access-Control-Allow-Headers = "Content-Type, Authorization, X-Requested-With, X-Client-Info, ApiKey"
Access-Control-Allow-Credentials = "true"
Access-Control-Max-Age = "86400"
Vary = "Origin"