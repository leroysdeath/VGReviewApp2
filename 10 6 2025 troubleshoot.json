function t(t,e){for(var n=0;n<e.length;n++){const r=e[n];if("string"!=typeof r&&!Array.isArray(r))for(const e in r)if("default"!==e&&!(e in t)){const n=Object.getOwnPropertyDescriptor(r,e);n&&Object.defineProperty(t,e,n.get?n:{enumerable:!0,get(){return r[e]}})}}return Object.freeze(Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}))}function e(t){return t&&t.u&&{}.hasOwnProperty.call(t,"default")?t.default:t}function n(t){if(t.u)return t;var e=t.default;if("function"==typeof e){var n=function t(){return this instanceof t?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};n.prototype=e.prototype}else n={};return Object.defineProperty(n,"u",{value:!0}),Object.keys(t).forEach(e=>{var r=Object.getOwnPropertyDescriptor(t,e);Object.defineProperty(n,e,r.get?r:{enumerable:!0,get(){return t[e]}})}),n}function r(){return r=Object.assign?Object.assign.bind():function(t){for(var e=1;arguments.length>e;e++){var n=arguments[e];for(var r in n)({}).hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},r.apply(this,arguments)}function s(t){return void 0===t&&(t={}),((t,e,n,s)=>{function o(){return(p.state||{idx:null}).idx}function c(){m=Qh.Pop;let t=o(),e=null==t?null:t-y;y=t,b&&b({action:m,location:g.location,delta:e})}function h(t){let e="null"!==d.location.origin?d.location.origin:d.location.href,n="string"==typeof t?t:l(t);return n=n.replace(/ $/,"%20"),i(e,"No window.location.(origin|href) available to create URL for href: "+n),new URL(n,e)}void 0===s&&(s={});let{window:d=document.defaultView,v5Compat:f=!1}=s,p=d.history,m=Qh.Pop,b=null,y=o();null==y&&(y=0,p.replaceState(r({},p.state,{idx:y}),""));let g={get action(){return m},get location(){return((t,e)=>{let{pathname:n,search:r,hash:s}=t.location;return u("",{pathname:n,search:r,hash:s},e.state&&e.state.usr||null,e.state&&e.state.key||"default")})(d,p)},listen(t){if(b)throw new Error("A history only accepts one active listener");return d.addEventListener(nd,c),b=t,()=>{d.removeEventListener(nd,c),b=null}},createHref:t=>((t,e)=>"string"==typeof e?e:l(e))(0,t),createURL:h,encodeLocation(t){let e=h(t);return{pathname:e.pathname,search:e.search,hash:e.hash}},push(t,e){m=Qh.Push;let n=u(g.location,t,e);y=o()+1;let r=a(n,y),s=g.createHref(n);try{p.pushState(r,"",s)}catch(i){if(i instanceof DOMException&&"DataCloneError"===i.name)throw i;d.location.assign(s)}f&&b&&b({action:m,location:g.location,delta:1})},replace(t,e){m=Qh.Replace;let n=u(g.location,t,e);y=o();let r=a(n,y),s=g.createHref(n);p.replaceState(r,"",s),f&&b&&b({action:m,location:g.location,delta:0})},go:t=>p.go(t)};return g})(0,0,0,t)}function i(t,e){if(!1===t||null==t)throw new Error(e)}function o(t,e){if(!t)try{throw new Error(e)}catch(n){}}function a(t,e){return{usr:t.state,key:t.key,idx:e}}function u(t,e,n,s){return void 0===n&&(n=null),r({pathname:"string"==typeof t?t:t.pathname,search:"",hash:""},"string"==typeof e?c(e):e,{state:n,key:e&&e.key||s||Math.random().toString(36).substr(2,8)})}function l(t){let{pathname:e="/",search:n="",hash:r=""}=t;return n&&"?"!==n&&(e+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(e+="#"===r.charAt(0)?r:"#"+r),e}function c(t){let e={};if(t){let n=t.indexOf("#");0>n||(e.hash=t.substr(n),t=t.substr(0,n));let r=t.indexOf("?");0>r||(e.search=t.substr(r),t=t.substr(0,r)),t&&(e.pathname=t)}return e}function h(t,e,n){return void 0===n&&(n="/"),((t,e,n)=>{let r=g(("string"==typeof e?c(e):e).pathname||"/",n);if(null==r)return null;let s=d(t);(t=>{t.sort((t,e)=>t.score!==e.score?e.score-t.score:((t,e)=>{let n=t.length===e.length&&t.slice(0,-1).every((t,n)=>t===e[n]);return n?t[t.length-1]-e[e.length-1]:0})(t.routesMeta.map(t=>t.childrenIndex),e.routesMeta.map(t=>t.childrenIndex)))})(s);let i=null;for(let o=0;null==i&&o<s.length;++o){let t=y(r);i=m(s[o],t)}return i})(t,e,n)}function d(t,e,n,r){void 0===e&&(e=[]),void 0===n&&(n=[]),void 0===r&&(r="");let s=(t,s,o)=>{let a={relativePath:void 0===o?t.path||"":o,caseSensitive:!0===t.caseSensitive,childrenIndex:s,route:t};a.relativePath.startsWith("/")&&(i(a.relativePath.startsWith(r),'Absolute route path "'+a.relativePath+'" nested under path "'+r+'" is not valid. An absolute child route path must start with the combined path of all its parent routes.'),a.relativePath=a.relativePath.slice(r.length));let u=dd([r,a.relativePath]),l=n.concat(a);t.children&&t.children.length>0&&(i(!0!==t.index,'Index routes must not have child routes. Please remove all child routes from route path "'+u+'".'),d(t.children,e,l,u)),(null!=t.path||t.index)&&e.push({path:u,score:p(u,t.index),routesMeta:l})};return t.forEach((t,e)=>{var n;if(""!==t.path&&null!=(n=t.path)&&n.includes("?"))for(let r of f(t.path))s(t,e,r);else s(t,e)}),e}function f(t){let e=t.split("/");if(0===e.length)return[];let[n,...r]=e,s=n.endsWith("?"),i=n.replace(/\?$/,"");if(0===r.length)return s?[i,""]:[i];let o=f(r.join("/")),a=[];return a.push(...o.map(t=>""===t?i:[i,t].join("/"))),s&&a.push(...o),a.map(e=>t.startsWith("/")&&""===e?"/":e)}function p(t,e){let n=t.split("/"),r=n.length;return n.some(hd)&&(r+=cd),e&&(r+=ad),n.filter(t=>!hd(t)).reduce((t,e)=>t+(id.test(e)?od:""===e?ud:ld),r)}function m(t,e,n){let{routesMeta:r}=t,s={},i="/",o=[];for(let a=0;a<r.length;++a){let t=r[a],n=a===r.length-1,u="/"===i?e:e.slice(i.length)||"/",l=b({path:t.relativePath,caseSensitive:t.caseSensitive,end:n},u),c=t.route;if(!l)return null;Object.assign(s,l.params),o.push({params:s,pathname:dd([i,l.pathname]),pathnameBase:fd(dd([i,l.pathnameBase])),route:c}),"/"!==l.pathnameBase&&(i=dd([i,l.pathnameBase]))}return o}function b(t,e){"string"==typeof t&&(t={path:t,caseSensitive:!1,end:!0});let[n,r]=((t,e,n)=>{void 0===e&&(e=!1),void 0===n&&(n=!0),o("*"===t||!t.endsWith("*")||t.endsWith("/*"),'Route path "'+t+'" will be treated as if it were "'+t.replace(/\*$/,"/*")+'" because the `*` character must always follow a `/` in the pattern. To get rid of this warning, please change the route path to "'+t.replace(/\*$/,"/*")+'".');let r=[],s="^"+t.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^${}|()[\]]/g,"\\$&").replace(/\/:([\w-]+)(\?)?/g,(t,e,n)=>(r.push({paramName:e,isOptional:null!=n}),n?"/?([^\\/]+)?":"/([^\\/]+)"));return t.endsWith("*")?(r.push({paramName:"*"}),s+="*"===t||"/*"===t?"(.*)$":"(?:\\/(.+)|\\/*)$"):n?s+="\\/*$":""!==t&&"/"!==t&&(s+="(?:(?=\\/|$))"),[new RegExp(s,e?void 0:"i"),r]})(t.path,t.caseSensitive,t.end),s=e.match(n);if(!s)return null;let i=s[0],a=i.replace(/(.)\/+$/,"$1"),u=s.slice(1);return{params:r.reduce((t,e,n)=>{let{paramName:r,isOptional:s}=e;if("*"===r){let t=u[n]||"";a=i.slice(0,i.length-t.length).replace(/(.)\/+$/,"$1")}const o=u[n];return t[r]=s&&!o?void 0:(o||"").replace(/%2F/g,"/"),t},{}),pathname:i,pathnameBase:a,pattern:t}}function y(t){try{return t.split("/").map(t=>decodeURIComponent(t).replace(/\//g,"%2F")).join("/")}catch(e){return o(!1,'The URL path "'+t+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding ('+e+")."),t}}function g(t,e){if("/"===e)return t;if(!t.toLowerCase().startsWith(e.toLowerCase()))return null;let n=e.endsWith("/")?e.length-1:e.length,r=t.charAt(n);return r&&"/"!==r?null:t.slice(n)||"/"}function x(t,e,n,r){return"Cannot include a '"+t+"' character in a manually specified `to."+e+"` field ["+JSON.stringify(r)+"].  Please separate it out to the `to."+n+'` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.'}function w(t,e){let n=(t=>t.filter((t,e)=>0===e||t.route.path&&t.route.path.length>0))(t);return e?n.map((t,e)=>e===n.length-1?t.pathname:t.pathnameBase):n.map(t=>t.pathnameBase)}function v(t,e,n,s){let o;void 0===s&&(s=!1),"string"==typeof t?o=c(t):(o=r({},t),i(!o.pathname||!o.pathname.includes("?"),x("?","pathname","search",o)),i(!o.pathname||!o.pathname.includes("#"),x("#","pathname","hash",o)),i(!o.search||!o.search.includes("#"),x("#","search","hash",o)));let a,u=""===t||""===o.pathname,l=u?"/":o.pathname;if(null==l)a=n;else{let t=e.length-1;if(!s&&l.startsWith("..")){let e=l.split("/");for(;".."===e[0];)e.shift(),t-=1;o.pathname=e.join("/")}a=0>t?"/":e[t]}let h=((t,e)=>{void 0===e&&(e="/");let{pathname:n,search:r="",hash:s=""}="string"==typeof t?c(t):t,i=n?n.startsWith("/")?n:((t,e)=>{let n=e.replace(/\/+$/,"").split("/");return t.split("/").forEach(t=>{".."===t?n.length>1&&n.pop():"."!==t&&n.push(t)}),n.length>1?n.join("/"):"/"})(n,e):e;return{pathname:i,search:pd(r),hash:md(s)}})(o,a),d=l&&"/"!==l&&l.endsWith("/"),f=(u||"."===l)&&n.endsWith("/");return h.pathname.endsWith("/")||!d&&!f||(h.pathname+="/"),h}function $(t){return null!=t&&"number"==typeof t.status&&"string"==typeof t.statusText&&"boolean"==typeof t.internal&&"data"in t}function k(t){let e=this||{},n=t.call?t(e.p):t;return((t,e,n,r,s)=>{let i=_d(t),o=Td[i]||(Td[i]=(t=>{let e=0,n=11;for(;e<t.length;)n=101*n+t.charCodeAt(e++)>>>0;return"go"+n})(i));if(!Td[o]){let e=i!==t?t:(t=>{let e,n,r=[{}];for(;e=Nd.exec(t.replace(Cd,""));)e[4]?r.shift():e[3]?(n=e[3].replace(Sd," ").trim(),r.unshift(r[0][n]=r[0][n]||{})):r[0][e[1]]=e[2].replace(Sd," ").trim();return r[0]})(t);Td[o]=Ed(s?{["@keyframes "+o]:e}:e,n?"":"."+o)}let a=n&&Td.g?Td.g:null;return n&&(Td.g=Td[o]),((t,e,n,r)=>{r?e.data=e.data.replace(r,t):-1===e.data.indexOf(t)&&(e.data=n?t+e.data:e.data+t)})(Td[o],e,r,a),o})(n.unshift?n.raw?((t,e,n)=>t.reduce((t,r,s)=>{let i=e[s];if(i&&i.call){let t=i(n),e=t&&t.props&&t.props.className||/^go/.test(t)&&t;i=e?"."+e:t&&"object"==typeof t?t.props?"":Ed(t,""):!1===t?"":t}return t+r+(null==i?"":i)},""))(n,[].slice.call(arguments,1),e.p):n.reduce((t,n)=>Object.assign(t,n&&n.call?n(e.p):n),{}):n,(r=e.target,"object"==typeof window?((r?r.querySelector("#_goober"):window._goober)||Object.assign((r||document.head).appendChild(document.createElement("style")),{innerHTML:" ",id:"_goober"})).firstChild:r||kd),e.g,e.o,e.k);var r}function N(t,e,n,r){Ed.p=e,wd=t,vd=n,$d=r}function C(t,e){let n=this||{};return function(){let e=arguments;return function r(s,i){let o=Object.assign({},s),a=o.className||r.className;n.p=Object.assign({theme:vd&&vd()},o),n.o=/ *go\d+/.test(a),o.className=k.apply(n,e)+(a?" "+a:"");let u=t;return t[0]&&(u=o.as||t,delete o.as),$d&&u[0]&&$d(o),wd(u,o)}}}function S(t,e){return(S=Object.setPrototypeOf?Object.setPrototypeOf.bind():(t,e)=>(t.__proto__=e,t))(t,e)}function E(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,S(t,e)}function T(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function _(t){let e=t.length,n=0;for(;e>0;)n=Math.random()*e|0,e--,O(t,e,n)}function R(t,e,n){return Math.max(t,Math.min(e,n))}function A(t){return t%2==0?t:t+1}function O(t,e,n){const r=t[e];t[e]=t[n],t[n]=r}function I(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function F(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function M(t,e,n=""){F(P(t,e),()=>n+` Shapes ${t} and ${e} must match`)}function D(t){F(null!=t,()=>"The input to the tensor constructor must be a non-null value.")}function L(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||Z(t)&&!n)for(let r=0;r<t.length;++r)L(t[r],e,n);else e.push(t);return e}function V(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function P(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function B(t){return t%1==0}function z(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function W(t,e){return e>t.length?t+" ".repeat(e-t.length):t}function U(t,e=t=>0,n,r=setTimeout){return new Promise((s,i)=>{let o=0;const a=()=>{if(t())return void s();o++;const u=e(o);null==n||n>o?r(a,u):i()};a()})}function G(t,e){let n=1,r=-1;for(let i=0;i<t.length;++i)if(0>t[i]){if(-1===t[i]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${i}`);r=i}else if(0>t[i])throw Error(`Shapes can not be < 0. Found ${t[i]} at dim ${i}`)}else n*=t[i];if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const s=t.slice();return s[r]=e/n,s}function j(t,e){const n=e.length;return t=null==t?e.map((t,e)=>e):[].concat(t),F(t.every(t=>t>=-n&&n>t),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`),F(t.every(t=>B(t)),()=>`All values in axis param must be integers but got axis ${t}`),t.map(t=>0>t?n+t:t)}function q(t,e){const n=[],r=[],s=null!=e&&Array.isArray(e)&&0===e.length,i=null==e||s?null:j(e,t).sort();let o=0;for(let a=0;a<t.length;++a){if(null!=i){if(i[o]===a&&1!==t[a])throw new Error(`Can't squeeze axis ${a} since its dim '${t[a]}' is not 1`);null!=i[o]&&i[o]<=a||1!==t[a]||(n.push(t[a]),r.push(a)),i[o]>a||o++}1!==t[a]&&(n.push(t[a]),r.push(a))}return{newShape:n,keptDims:r}}function H(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error(`Unknown data type ${t}`);n=new Uint8Array(e)}return n}function X(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error(`Unknown data type ${t}`);n=new Array(e)}return n}function K(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function J(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}function Y(t,e){return!("complex64"===e||"float32"===e&&"complex64"!==t||"int32"===e&&"float32"!==t&&"complex64"!==t||"bool"===e&&"bool"===t)}function Z(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray}function Q(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error(`Unknown dtype ${t}`)}function tt(t){if(null==t)return 0;let e=0;return t.forEach(t=>e+=t.length),e}function et(t){return"string"==typeof t||t instanceof String}function nt(t){return"boolean"==typeof t}function rt(t){return"number"==typeof t}function st(t){return Array.isArray(t)?st(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray?"int32":rt(t)?"float32":et(t)?"string":nt(t)?"bool":"float32"}function it(t){return!!(t&&t.constructor&&t.call&&t.apply)}function ot(t,e){for(let n=e;t>n;++n)if(t%n===0)return n;return t}function at(t){const e=t.length;if(2>e)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function ut(t,e,n,r=!1){const s=new Array;if(1===e.length){const i=e[0]*(r?2:1);for(let e=0;i>e;e++)s[e]=n[t+e]}else{const i=e[0],o=e.slice(1),a=o.reduce((t,e)=>t*e)*(r?2:1);for(let e=0;i>e;e++)s[e]=ut(t+e*a,o,n,r)}return s}function lt(t,e,n=!1){if(0===t.length)return e[0];const r=t.reduce((t,e)=>t*e)*(n?2:1);if(0===r)return[];if(r!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}${n?" for a complex tensor":""}.`);return ut(0,t,e,n)}function ct(t,e){const n=ht(t,e);for(let r=0;r<n.length;r++)n[r]=1;return n}function ht(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function dt(t,e){const n=t.reduce((t,e)=>t*e,1);if(null==e||"float32"===e)return lt(t,new Float32Array(n));if("int32"===e)return lt(t,new Int32Array(n));if("bool"===e)return lt(t,new Uint8Array(n));throw new Error(`Unknown data type ${e}`)}function ft(t){t.forEach(e=>{F(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`)})}function pt(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let s=0;s<t.length-1;++s)r+=n[s]*t[s];return r}function mt(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(t/n[s]),t-=r[s]*n[s];return r[r.length-1]=t,r}function bt(t){return t&&t.then&&"function"==typeof t.then}function yt(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...n)=>(((t,e,n)=>{t[decodeURIComponent(e)]=decodeURIComponent(n||"")})(e,n[0],n[1]),n.join("="))),e}function gt(){return Ld}function xt(){if(null==Dd){let t;if("undefined"!=typeof window)t=window;else if("undefined"!=typeof global)t=global;else if("undefined"!=typeof process)t=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}Dd=t}return Dd}function wt(t,e){const n=(()=>{const t=xt();return null==t.l&&(t.l=new Map),t.l})();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}function vt(...t){!gt().getBool("IS_TEST")&&gt().getBool("PROD")}function $t(t,e){const n=Et(t,e);return Hm.get(n)}function kt(t){return Xm.get(t)}function Nt(t){const e=Hm.entries(),n=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[i,o]=s,[a]=i.split("_");a===t&&n.push(o)}return n}function Ct(t){const{kernelName:e,backendName:n}=t,r=Et(e,n);Hm.has(r)&&vt(),Hm.set(r,t)}function St(t){const{kernelName:e}=t;Xm.has(e)&&gt().getBool("DEBUG")&&vt(),Xm.set(e,t)}function Et(t,e){return`${e}_${t}`}function Tt(t,e,n){this.low=0|t,this.high=0|e,this.unsigned=!!n}function _t(t){return!0===(t&&t.h)}function Rt(t,e){var n,r,s;return e?(s=(t>>>=0)>=0&&256>t)&&(r=Zm[t])?r:(n=Ot(t,0>(0|t)?-1:0,!0),s&&(Zm[t]=n),n):(s=(t|=0)>=-128&&128>t)&&(r=Ym[t])?r:(n=Ot(t,0>t?-1:0,!1),s&&(Ym[t]=n),n)}function At(t,e){if(isNaN(t))return e?ib:sb;if(e){if(0>t)return ib;if(t>=eb)return cb}else{if(-nb>=t)return hb;if(t+1>=nb)return lb}return 0>t?At(-t,e).neg():Ot(t%tb|0,t/tb|0,e)}function Ot(t,e,n){return new Tt(t,e,n)}function It(t,e,n){if(0===t.length)throw Error("empty string");if("NaN"===t||"Infinity"===t||"+Infinity"===t||"-Infinity"===t)return sb;if("number"==typeof e?(n=e,e=!1):e=!!e,2>(n=n||10)||n>36)throw RangeError("radix");var r;if((r=t.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return It(t.substring(1),e,n).neg();for(var s=At(Qm(n,8)),i=sb,o=0;o<t.length;o+=8){var a=Math.min(8,t.length-o),u=parseInt(t.substring(o,o+a),n);if(8>a){var l=At(Qm(n,a));i=i.mul(l).add(At(u))}else i=(i=i.mul(s)).add(At(u))}return i.unsigned=e,i}function Ft(t,e){return"number"==typeof t?At(t,e):"string"==typeof t?It(t,e):Ot(t.low,t.high,"boolean"==typeof e?e:t.unsigned)}function Mt(t){return pb.fromString(t,!0,16)}function Dt(t){return t.xor(t.shru(47))}function Lt(t,e,n){const r=t.slice(e,e+n);return pb.fromBytes(Array.from(r),!0,!0)}function Vt(t,e){return Lt(t,e,8)}function Pt(t,e){return Lt(t,e,4)}function Bt(t,e){return 0===e?t:t.shru(e).or(t.shl(64-e))}function zt(t,e,n=Mt("9ddfea08eb382d69")){let r=t.xor(e).mul(n);r=r.xor(r.shru(47));let s=e.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function Wt(t,e,n,r){return((t,e,n,r,s,i)=>{s=s.add(t),i=Bt(i.add(s).add(r),21);const o=s;return s=(s=s.add(e)).add(n),i=i.add(Bt(s,44)),[s.add(r),i.add(o)]})(Vt(t,e),Vt(t,e+8),Vt(t,e+16),Vt(t,e+24),n,r)}function Ut(t,e=t.length){const n=pb.fromNumber(81,!0);if(32>=e)return e>16?((t,e=t.length)=>{const n=yb.add(2*e),r=Vt(t,0).mul(bb),s=Vt(t,8),i=Vt(t,e-8).mul(n),o=Vt(t,e-16).mul(yb);return zt(Bt(r.add(s),43).add(Bt(i,30)).add(o),r.add(Bt(s.add(yb),18)).add(i),n)})(t,e):((t,e=t.length)=>{if(e>=8){const n=yb.add(2*e),r=Vt(t,0).add(yb),s=Vt(t,e-8);return zt(Bt(s,37).mul(n).add(r),Bt(r,25).add(s).mul(n),n)}if(e>=4){const n=yb.add(2*e);return zt(Pt(t,0).shl(3).add(e),Pt(t,e-4),n)}if(e>0){const n=t[0]+(t[e>>1]<<8),r=e+(t[e-1]<<2);return Dt(yb.mul(n).xor(mb.mul(r))).mul(yb)}return yb})(t,e);if(64>=e)return((t,e=t.length)=>{const n=yb.add(2*e),r=Vt(t,0).mul(yb),s=Vt(t,8),i=Vt(t,e-8).mul(n),o=Vt(t,e-16).mul(yb),a=Bt(r.add(s),43).add(Bt(i,30)).add(o),u=zt(a,r.add(Bt(s.add(yb),18)).add(i),n),l=Vt(t,16).mul(n),c=Vt(t,24),h=a.add(Vt(t,e-32)).mul(n),d=u.add(Vt(t,e-24)).mul(n);return zt(Bt(l.add(c),43).add(Bt(h,30)).add(d),l.add(Bt(c.add(r),18)).add(h),n)})(t,e);let r=n,s=n.mul(bb).add(113),i=Dt(s.mul(yb).add(113)).mul(yb),o=[pb.UZERO,pb.UZERO],a=[pb.UZERO,pb.UZERO];r=r.mul(yb).add(Vt(t,0));let u=0;const l=64*(e-1>>6),c=l+(e-1&63)-63;do{r=Bt(r.add(s).add(o[0]).add(Vt(t,u+8)),37).mul(bb),s=Bt(s.add(o[1]).add(Vt(t,u+48)),42).mul(bb),r=r.xor(a[1]),s=s.add(o[0]).add(Vt(t,u+40)),i=Bt(i.add(a[0]),33).mul(bb),o=Wt(t,u,o[1].mul(bb),r.add(a[0])),a=Wt(t,u+32,i.add(a[1]),s.add(Vt(t,u+16))),[i,r]=[r,i],u+=64}while(u!==l);const h=bb.add(i.and(255).shl(1));return u=c,a[0]=a[0].add(e-1&63),o[0]=o[0].add(a[0]),a[0]=a[0].add(o[0]),r=Bt(r.add(s).add(o[0]).add(Vt(t,u+8)),37).mul(h),s=Bt(s.add(o[1]).add(Vt(t,u+48)),42).mul(h),r=r.xor(a[1].mul(9)),s=s.add(o[0].mul(9).add(Vt(t,u+40))),i=Bt(i.add(a[0]),33).mul(h),o=Wt(t,u,o[1].mul(h),r.add(a[0])),a=Wt(t,u+32,i.add(a[1]),s.add(Vt(t,u+16))),[i,r]=[r,i],zt(zt(o[0],a[0],h).add(Dt(s).mul(mb)).add(i),zt(o[1],a[1],h).add(r),h)}function Gt(t,e){return"string"===e?Xt(t):jt([t],e)}function jt(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=L(t)),gt().getBool("DEBUG")&&K(t,e),((t,e)=>t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e)(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error(`Unknown data type ${e}`)}function qt(){return gt().platform.now()}function Ht(t,e){return gt().platform.fetch(t,e)}function Xt(t,e="utf-8"){return e=e||"utf-8",gt().platform.encode(t,e)}function Kt(t,e="utf-8"){return e=e||"utf-8",gt().platform.decode(t,e)}function Jt(t,e,n){if("float32"!==e)return!1;for(let r=0;r<t.length;r++){const e=t[r];if(isNaN(e)||!isFinite(e))return!0}return!1}function Yt(t,e,n,r){const s=at(e),i=((t,e,n,r)=>{const s=V(e),i=r[r.length-1],o=new Array(i).fill(0),a=e.length,u="complex64"===n?ee(t):t;if(a>1)for(let l=0;s/i>l;l++){const t=l*i;for(let e=0;i>e;e++)o[e]=Math.max(o[e],Zt(u[t+e],0,n).length)}return o})(t,e,n,s),o=e.length,a=te(t,e,n,s,i),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${o}`),u.push(`  shape: [${e}]`),u.push("  values:")),u.push(a.map(t=>"    "+t).join("\n")),u.join("\n")}function Zt(t,e,n){let r;return r=Array.isArray(t)?`${parseFloat(t[0].toFixed(7))} + ${parseFloat(t[1].toFixed(7))}j`:et(t)?`'${t}'`:"bool"===n?Qt(t):parseFloat(t.toFixed(7)).toString(),W(r,e)}function Qt(t){return 0===t?"false":"true"}function te(t,e,n,r,s,i=!0){const o="complex64"===n?2:1,a=e[0],u=e.length;if(0===u)return"complex64"===n?[Zt(ee(t)[0],0,n)]:"bool"===n?[Qt(t[0])]:[t[0].toString()];if(1===u){if(a>20){const e=3*o;let r=Array.from(t.slice(0,e)),i=Array.from(t.slice((a-3)*o,a*o));return"complex64"===n&&(r=ee(r),i=ee(i)),["["+r.map((t,e)=>Zt(t,s[e],n)).join(", ")+", ..., "+i.map((t,e)=>Zt(t,s[a-3+e],n)).join(", ")+"]"]}return["["+("complex64"===n?ee(t):Array.from(t)).map((t,e)=>Zt(t,s[e],n)).join(", ")+"]"]}const l=e.slice(1),c=r.slice(1),h=r[0]*o,d=[];if(a>20){for(let e=0;3>e;e++){const r=e*h,i=r+h;d.push(...te(t.slice(r,i),l,n,c,s,!1))}d.push("...");for(let e=a-3;a>e;e++){const r=e*h,i=r+h;d.push(...te(t.slice(r,i),l,n,c,s,e===a-1))}}else for(let m=0;a>m;m++){const e=m*h,r=e+h;d.push(...te(t.slice(e,r),l,n,c,s,m===a-1))}const f=2===u?",":"";d[0]="["+d[0]+f;for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+f;let p=",\n";for(let m=2;u>m;m++)p+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":p),d}function ee(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}function ne(){return wt("Tensor",()=>Nb)}function re(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return Db[t][e]}function se(t){return re(t,"int32")}function ie(t,e){if(t.dtype===e.dtype)return[t,e];const n=re(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function oe(t,e){F(t.dtype===e.dtype,()=>`The dtypes of the first(${t.dtype}) and second(${e.dtype}) input must match`)}function ae(t,e){return e.some(e=>e.id===t.id)}function ue(t){const e=[];return le(t,e,new Set),e}function le(t,e,n){if(null==t)return;if(t instanceof Nb)return void e.push(t);if(r=t,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=t;for(const i in s){const t=s[i];n.has(t)||(n.add(t),le(t,e,n))}}function ce(t){return null!=t.kernelName}function he(){const t=xt();if(null==t.$){const e=new Md(t);t.$=new Pb(e)}var e;return e=t.$.ENV,Ld=e,$b=()=>t.$,t.$}function de(t,e){const n={a:t,b:e};return Bb.runKernel(zd,n)}function fe(t){if(void 0!==zb)return zb;if(t||"undefined"!=typeof navigator&&null!=navigator){if(t||(t=navigator),"ReactNative"===t.product)return!0;const e=t.userAgent||t.vendor||("undefined"!=typeof window?window.opera:"");if(!e){const e=t;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function pe(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}function me(t,e){let n=t;if(Z(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||Z(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&gt().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&be(t,r,[]),r}function be(t,e,n){if(n=n||[],!Array.isArray(t)&&!Z(t))return void F(0===e.length,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);F(e.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`),F(t.length===e[0],()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`);const r=e.slice(1);for(let s=0;s<t.length;++s)be(t[s],r,n.concat(s))}function ye(t,e,n,r){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}}function ge(t,e,n,r="numeric"){if(t instanceof Nb)return ye(r,t.dtype,e,n),t;let s=st(t);if("string"===s||0>["bool","int32","float32"].indexOf(r)||(s=r),ye(r,s,e,n),null==t||!Z(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const r=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const i=me(t,s);Z(t)||Array.isArray(t)||(t=[t]);const o="string"!==s?jt(t,s):L(t,[],!0);return Bb.makeTensor(o,i,s)}function xe(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map((t,s)=>ge(t,`${e}[${s}]`,n,r))}function we(t){const e=Object.keys(t);if(1!==e.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const r=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Gb;const s=(...t)=>{Bb.startScope(n);try{const e=r(...t);return bt(e),Bb.endScope(e),e}catch(e){throw Bb.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}function ve(t,e,n,r){if(null==r&&(r=st(t)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Z(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){ft(e);const t=V(e),r=V(n);F(t===r,()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`);for(let s=0;s<n.length;++s){const t=n[s],r=s!==n.length-1||t!==V(e.slice(s));F(n[s]===e[s]||!r,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `)}}return Z(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==r?jt(t,r):L(t,[],!0),Bb.makeTensor(t,e,r)}function $e(t,e,n){return ve(t,e,me(t,n),n)}function ke(t,e){return Jh(this,null,function*(){const n=[],r=[],s=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);for(let i=0;i<s.length;++i){const o=s[i],a=Array.isArray(t)?t[i].tensor:t[o];if("float32"!==a.dtype&&"int32"!==a.dtype&&"bool"!==a.dtype&&"string"!==a.dtype&&"complex64"!==a.dtype)throw new Error(`Unsupported dtype in weight '${o}': ${a.dtype}`);const u={name:o,shape:a.shape,dtype:a.dtype};if("string"===a.dtype){const t=new Promise(t=>Jh(this,null,function*(){const e=yield a.bytes(),n=e.reduce((t,e)=>t+e.length,0)+4*e.length,r=new Uint8Array(n);let s=0;for(let t=0;t<e.length;t++){const n=e[t],i=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(i,s),s+=4,r.set(n,s),s+=n.length}t(r)}));r.push(t)}else r.push(a.data());null!=e&&(u.group=e),n.push(u)}return{data:Ce(yield Promise.all(r)),specs:n}})}function Ne(t,e){const n={};let r,s=0;for(const i of e){const e=i.name,o=i.dtype,a=i.shape,u=V(a);let l;if("quantization"in i){const n=i.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${i.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${i.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${i.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${o}.`)}const a=qb[n.dtype],c=t.slice(s,s+u*a),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===o)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];l[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=Fe()),l=r(h)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${e}': ${o}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];l[t]=Math.round(e*n.scale+n.min)}}s+=u*a}else if("string"===o){const e=V(i.shape);l=[];for(let n=0;e>n;n++){const e=new Uint32Array(t.slice(s,s+4))[0];s+=4;const n=new Uint8Array(t.slice(s,s+e));l.push(n),s+=e}}else{const r=qb[o],i=t.slice(s,s+u*r);if("float32"===o)l=new Float32Array(i);else if("int32"===o)l=new Int32Array(i);else if("bool"===o)l=new Uint8Array(i);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${e}': ${o}`);{l=new Float32Array(i);const t=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let e=0;e<t.length;e++)t[e]=l[2*e],r[e]=l[2*e+1];const s=$e(t,a,"float32"),o=$e(r,a,"float32");n[e]=jb(s,o),s.dispose(),o.dispose()}}s+=u*r}"complex64"!==o&&(n[e]=$e(l,a,o))}return n}function Ce(t){if(null===t)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach(t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${t.constructor.name}`)});const r=new Uint8Array(e);let s=0;return n.forEach(t=>{r.set(new Uint8Array(t.buffer),s),s+=t.byteLength}),r.buffer}function Se(t){return Hb?Buffer.byteLength(t):new Blob([t]).size}function Ee(t){if(1===t.length)return t[0];let e=0;t.forEach(t=>{e+=t.byteLength});const n=new Uint8Array(e);let r=0;return t.forEach(t=>{n.set(new Uint8Array(t),r),r+=t.byteLength}),n.buffer}function Te(t){for(t=t.trim();t.endsWith("/");)t=t.slice(0,t.length-1);const e=t.split("/");return e[e.length-1]}function _e(t,e){const n={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:e};return null!=t.signature&&(n.signature=t.signature),null!=t.userDefinedMetadata&&(n.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(n.modelInitializer=t.modelInitializer),null!=t.trainingConfig&&(n.trainingConfig=t.trainingConfig),n}function Re(t,e,n){const r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};if(null!=t.trainingConfig&&(r.trainingConfig=t.trainingConfig),null!=t.weightsManifest){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=e,r.weightData=n}return null!=t.signature&&(r.signature=t.signature),null!=t.userDefinedMetadata&&(r.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(r.modelInitializer=t.modelInitializer),r}function Ae(t,e){return Jh(this,null,function*(){let n,r;return null!=t.weightsManifest&&([n,r]=yield e(t.weightsManifest)),Re(t,n,r)})}function Oe(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:Se(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:Se(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function Ie(t){const e=[];for(const n of t)e.push(...n.weights);return e}function Fe(){const t=(()=>{const t=t=>{let e=t<<13,n=0;for(;!(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;1024>n;n++)e[n]=t(n);for(let n=1024;2048>n;n++)e[n]=939524096+(n-1024<<13);return e})(),e=(()=>{const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;31>e;e++)t[e]=e<<23;for(let e=33;63>e;e++)t[e]=2147483648+(e-32<<23);return t})(),n=(()=>{const t=new Uint32Array(64);for(let e=0;64>e;e++)t[e]=1024;return t[0]=t[32]=0,t})();return r=>{const s=new ArrayBuffer(4*r.length),i=new Uint32Array(s);for(let o=0;o<r.length;o++){const s=r[o],a=t[n[s>>10]+(1023&s)]+e[s>>10];i[o]=a}return new Float32Array(s)}}function Me(){if(!gt().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function De(t){const e=t.result;e.createObjectStore(Zb,{keyPath:"modelPath"}),e.createObjectStore(Qb,{keyPath:"modelPath"})}function Le(t){return{info:[sy,t,iy].join(ry),topology:[sy,t,oy].join(ry),weightSpecs:[sy,t,ay].join(ry),weightData:[sy,t,uy].join(ry),modelMetadata:[sy,t,ly].join(ry)}}function Ve(t){for(const e of Object.values(t))window.localStorage.removeItem(e)}function Pe(t){const e=t.split(ry);if(3>e.length)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(ry)}function Be(t){if(-1===t.indexOf(fy))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${py.getSchemes().join(",")}`);return{scheme:t.split(fy)[0],path:t.split(fy)[1]}}function ze(t,e,n=!1){return Jh(this,null,function*(){F(t!==e,()=>`Old path and new path are the same: '${t}'`);const r=Xb.getLoadHandlers(t);F(r.length>0,()=>`Copying failed because no load handler is found for source URL ${t}.`),F(2>r.length,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${t}.`);const s=r[0],i=Xb.getSaveHandlers(e);F(i.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),F(2>i.length,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${e}.`);const o=i[0],a=Be(t).scheme,u=Be(t).path,l=a===Be(t).scheme,c=yield s.load();n&&l&&(yield py.getManager(a).removeModel(u));const h=yield o.save(c);return n&&!l&&(yield py.getManager(a).removeModel(u)),h.modelArtifactsInfo})}function We(t,e="float32",n){return e=e||"float32",ft(t),new vb(t,e,n)}function Ue(t,e=!1){}function Ge(t){return new Promise(t=>setTimeout(t)).then(t)}function je(t,e,n,r){var s,i,o;F(null!=(s=t)&&Array.isArray(s)&&s.length>0,()=>"promises must be a none empty array"),o=r=null==r?1:r,F((i=n=null==n?0:n)>=0&&1>=i,()=>`Progress fraction must be in range [0, 1], but got startFraction ${i}`),F(o>=0&&1>=o,()=>`Progress fraction must be in range [0, 1], but got endFraction ${o}`),F(o>=i,()=>`startFraction must be no more than endFraction, but got startFraction ${i} and endFraction ${o}`);let a=0;return Promise.all(t.map(s=>(s.then(s=>{const i=n+ ++a/t.length*(r-n);return e(i),s}),s)))}function qe(t,e){return Jh(this,null,function*(){null==e&&(e={});const n=null==e.fetchFunc?gt().platform.fetch:e.fetchFunc,r=t.map(t=>n(t,e.requestInit,{isBinary:!0})),s=(null==e.onProgress?yield Promise.all(r):yield je(r,e.onProgress,0,.5)).map(t=>t.arrayBuffer());return null==e.onProgress?yield Promise.all(s):yield je(s,e.onProgress,.5,1)})}function He(t,e="",n,r){return Jh(this,null,function*(){return Xe(t=>qe(t,{requestInit:r}))(t,e,n)})}function Xe(t){return(e,n="",r)=>Jh(this,null,function*(){const s=e.map(()=>!1),i={},o=null!=r?r.map(()=>!1):[],a=[];if(e.forEach((t,e)=>{let n=0;t.weights.forEach(t=>{const u="quantization"in t?t.quantization.dtype:t.dtype,l=qb[u]*V(t.shape),c=()=>{s[e]=!0,null==i[e]&&(i[e]=[]),i[e].push({manifestEntry:t,groupOffset:n,sizeBytes:l})};null!=r?r.forEach((e,n)=>{e===t.name&&(c(),o[n]=!0)}):c(),a.push(t.name),n+=l})}),!o.every(t=>t)){const t=r.filter((t,e)=>!o[e]);throw new Error(`Could not find weights in manifest with names: ${t.join(", ")}. \nManifest JSON has weights with names: ${a.join(", ")}.`)}const u=s.reduce((t,e,n)=>(e&&t.push(n),t),[]),l=[];u.forEach(t=>{e[t].paths.forEach(t=>{const e=n+(n.endsWith("/")?"":"/")+t;l.push(e)})});const c=yield t(l),h={};let d=0;return u.forEach(t=>{const n=e[t].paths.length;let r=0;for(let e=0;n>e;e++)r+=c[d+e].byteLength;const s=new ArrayBuffer(r),o=new Uint8Array(s);let a=0;for(let e=0;n>e;e++){const t=new Uint8Array(c[d+e]);o.set(t,a),a+=t.byteLength}i[t].forEach(t=>{const e=Ne(s.slice(t.groupOffset,t.groupOffset+t.sizeBytes),[t.manifestEntry]);for(const n in e)h[n]=e[n]}),d+=n}),h})}function Ke(t){return null!=t.match(vy.URL_SCHEME_REGEX)}function Je(t,e){return new vy(t,e)}function Ye(t,e){return Je(t,e)}function Ze(t,e,n,r){if(1===arguments.length){const e=null!=t.modelTopology||null!=t.weightSpecs;return new ky(e?t:{modelTopology:t})}return new ky({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:r})}function Qe(){return Bb}function tn(){return Bb.memory()}function en(t,e){return Bb.tidy(t,e)}function nn(t){ue(t).forEach(t=>t.dispose())}function rn(t){return Bb.keep(t)}function sn(t,e,n=1){return Bb.registerBackend(t,e,n)}function on(){return Bb.backend}function an(t,e){const n=t.length,r=[];for(let s=0;n>s;s++){const i=n-1-s,o=t[i]||1;(e[e.length-1-s]||1)>1&&1===o&&r.unshift(i)}return r}function un(t,e){const n=[];for(let r=0;r<e.length;r++){const s=t[t.length-r-1],i=e.length-r-1,o=e[i];(null==s||1===s&&o>1)&&n.unshift(i)}return n}function ln(t,e){const n=[],r=Math.max(t.length,e.length);for(let s=0;r>s;s++){let r=t[t.length-s-1];null==r&&(r=1);let i=e[e.length-s-1];if(null==i&&(i=1),1===r)n.unshift(i);else if(1===i)n.unshift(r);else{if(r!==i)throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`);n.unshift(r)}}return n}function cn(t,e,n){if(D(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const r=me(t,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ve(t,e,r,n)}function hn(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,i=!1,o=!1,a=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&t instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement)i=!0;else if(null!=t.getContext)o=!0;else{if(!("undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${t.constructor.name}`);a=!0}if(null!=$t(Wm,Bb.backendName)){const n={pixels:t},r={numChannels:e};return Bb.runKernel(Wm,n,r)}const[u,l]=s?[t.videoWidth,t.videoHeight]:[t.width,t.height];let c,h;if(o)c=t.getContext("2d").getImageData(0,0,u,l).data;else if(r||n)c=t.data;else if(i||s||a){if(null==Dy)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Dy=new OffscreenCanvas(1,1).getContext("2d")}else Dy=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Dy.canvas.width=u,Dy.canvas.height=l,Dy.drawImage(t,0,0,u,l),c=Dy.getImageData(0,0,u,l).data}if(4===e)h=new Int32Array(c);else{const t=u*l;h=new Int32Array(t*e);for(let n=0;t>n;n++)for(let t=0;e>t;++t)h[n*e+t]=c[4*n+t]}return cn(h,[l,u,e],"int32")}function dn(t,e){const n=t.shape.length,r=e.shape.length;if(1>n)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(1>r)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[r-1]} vs. ${n}`);if(0===V(t.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const s=e.shape,i=s[s.length-1];let o=1;for(let h=0;h<s.length-1;++h)o*=s[h];const a=t.shape,u=s.slice();u.pop();let l=1;for(let h=i;n>h;++h)l*=a[h],u.push(a[h]);const c=[...at(t.shape).map(t=>t/l),1].slice(0,i);return[u,o,l,c]}function fn(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(i+` update.rank < ${s}. `);if(t.length<r+(n.rank-s))throw new Error(i+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+t.length-r)throw new Error(i+" update.rank != "+(s+t.length-r));for(let o=0;s>o;++o)if(n.shape[o]!==e.shape[o])throw new Error(i+` updates.shape[${o}] (${n.shape[o]}) != indices.shape[${o}] (${e.shape[o]}).`);for(let o=0;o<n.rank-s;++o)if(n.shape[o+s]!==t[o+r])throw new Error(i+` updates.shape[${o+s}] (${n.shape[o+s]}) != shape[${o+s}] (${t[o+s]})`)}function pn(t,e,n){if(1>e.rank)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(1>t.rank)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(1>n.length)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===e.size)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(0===t.size)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}fn(n,e,t)}function mn(t,e,n){const r=e.shape.length,s=r>1?e.shape[r-1]:1,i=n.length;let o=1;for(let u=s;i>u;++u)o*=n[u];const a=1>s?1:s;return{sliceRank:s,numUpdates:V(e.shape)/a,sliceSize:o,strides:[...at(n.slice(0,s)),1],outputSize:V(n)}}function bn(t,e,n){const r=t.shape.length;F(r===e.length,()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`),F(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let s=0;r>s;++s)F(e[s]+n[s]<=t.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${e[s]+n[s]}) would overflow input.shape[${s}] (${t.shape[s]})`)}function yn(t,e,n){const r=[];for(let s=0;s<t.length;s++)r[s]=Math.ceil((e[s]-t[s])/n[s]);return r}function gn(t,e,n,r){const s=[...t];for(let i=s.length;i<r.length;i++)s.push(1);for(let i=0;n>i;i++)0===i?s[e]=1:(s.splice(e,0,1),s.pop());return s}function xn(t,e,n){return n>t?n-(e-1):n}function wn(t,e){const n=[];for(let r=0;t>r;r++)n.push(e+r);return n}function vn(t,e,n,r,s){const i=[...s],o=wn(n,e);for(let a=0;a<i.length;a++)if(o.indexOf(a)>-1)i[a]=0;else{const s=xn(e,n,a);let o=r[s];t&1<<s&&(o=0),i[a]=o}return i}function $n(t,e,n,r,s){const i=[...s],o=wn(n,e);for(let a=0;a<i.length;a++)if(o.indexOf(a)>-1)i[a]=Number.MAX_SAFE_INTEGER;else{const s=xn(e,n,a);let o=r[s];t&1<<s&&(o=Number.MAX_SAFE_INTEGER),i[a]=o}for(let a=0;a<i.length;a++){const t=s[a];0>i[a]&&(i[a]+=t),i[a]=R(0,i[a],s[a])}return i}function kn(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function Nn(t,e,n,r,s,i){let o=e[s];const a=n[s]||1;(t&1<<s||i&1<<s||null==o)&&(o=a>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[s];return 0>o&&(o+=u),o=R(0,o,u-1),o}function Cn(t,e,n,r,s,i){let o=e[s];const a=n[s]||1;(t&1<<s||i&1<<s||null==o)&&(o=a>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[s];return 0>o&&(o+=u),o=a>0?R(0,o,u):R(-1,o,u-1),o}function Sn(t,e,n){let r=n.length;for(let s=0;s<n.length;s++)if(n[s]>1){r=s;break}for(let s=r+1;s<n.length;s++)if(e[s]>0||n[s]!==t[s])return!1;return!0}function En(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function Tn(t,e,n){let r;const s=t.shape.length;let i;return r="number"==typeof e?[e,...new Array(s-1).fill(0)]:e.length<s?e.concat(new Array(s-e.length).fill(0)):e.slice(),r.forEach(t=>{F(-1!==t,()=>"slice() does not support negative begin indexing.")}),i=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,i=i.map((e,n)=>0>e?(F(-1===e,()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`),t.shape[n]-r[n]):e),[r,i]}function _n(t,e,n,r,s,i,o,a,u){let l;if(null==r?(l=new Array(e.length),l.fill(1)):l=r,null!=o&&o&o-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:n.slice(),strides:l.slice(),beginMask:s,endMask:i,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:u};for(let x=0;x<h.dims;x++)c&&1<<x&a&&h.numAddAxisAfterEllipsis++,1<<x&o&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:t.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};((t,e)=>{e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let n=0;e.beginValid=null!=t.begin,e.endValid=null!=t.end,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let r=0;r<t.dims;r++)if(1<<r&t.ellipsisMask){const s=Math.min(e.dims-(t.dims-r)+1+t.numAddAxisAfterEllipsis,e.dims);for(;s>n;n++)e.begin[n]=0,e.end[n]=0,e.strides[n]=1,e.beginMask|=1<<n,e.endMask|=1<<n,e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&t.newAxisMask)e.finalShapeGatherIndices.push(-2),e.finalShapeGatherIndicesSparse.push(-1);else{if(n===e.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${e.dims} dims, ${e.begin.length}.`);null!=t.begin&&(e.begin[n]=t.begin[r]),null!=t.end&&(e.end[n]=t.end[r]),e.strides[n]=t.strides[r],t.beginMask&1<<r&&(e.beginMask|=1<<n),t.endMask&1<<r&&(e.endMask|=1<<n),t.shrinkAxisMask&1<<r?(e.finalShapeGatherIndices.push(-1),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<n):(e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(r)),e.inputShapeGatherIndicesSparse[n]=r,n++}})(h,d);let f=!0,p=!0,m=!0;const b=[],y=[];for(let x=0;x<t.length;++x){if(0===d.strides[x])throw Error(`strides[${x}] must be non-zero`);const e=!!(d.shrinkAxisMask&1<<x),n=t[x];if(-1===n){b.push(e?1:-1);continue}const r=[d.beginMask&1<<x,d.endMask&1<<x],s=[d.strides[x]>0?0:-1,d.strides[x]>0?n:n-1];if(e&&0>=d.strides[x])throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[x];const i=!!(d.beginMask&1<<x&&d.endMask&1<<x);if(d.beginValid&&d.endValid){if(e){const t=0>d.begin[x]?n+d.begin[x]:d.begin[x];if(d.begin[x]=t,d.end[x]=d.begin[x]+1,0>t||t>=n)throw Error(`slice index ${d.begin[x]} of dimension ${x} out of bounds.`)}else d.begin[x]=Rn(d.begin[x],0,d.strides[x],n,r,s),d.end[x]=Rn(d.end[x],1,d.strides[x],n,r,s);const t=1===d.strides[x]&&0===d.begin[x]&&d.end[x]===n;f=f&&t,p=p&&(0===x&&1===d.strides[x]||t)}else f=f&&1===d.strides[x]&&i,p=p&&(0===x&&1===d.strides[x]||i);let o,a=!1;if(d.beginValid&&d.endValid?(o=d.end[x]-d.begin[x],a=!0):e?(o=1,a=!0):i&&(0>n||(o=0>d.strides[x]?-n:n,a=!0)),a){let t;t=0===o||0>o!=0>d.strides[x]?0:Math.trunc(o/d.strides[x])+(o%d.strides[x]!==0?1:0),b.push(t)}else b.push(-1)}for(let x=0;x<d.finalShapeGatherIndices.length;++x){const t=d.finalShapeGatherIndices[x];0>t?-2===t&&y.push(1):y.push(b[t])}const g=y.filter((t,e)=>-2!==d.finalShapeGatherIndices[e]);return{finalShapeSparse:g,finalShape:y,isIdentity:f,sliceDim0:p,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function Rn(t,e,n,r,s,i){if(s[e])return n>0?i[e]:i[e+1&1];{const e=0>t?r+t:t;return e<i[0]?i[0]:e>i[1]?i[1]:e}}function An(t){F(null!=t.className,()=>"Class being registered does not have the static className property defined."),F("string"==typeof t.className,()=>"className is required to be a string, but got type "+typeof t.className),F(t.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Uy.register(t)}function On(){return 32===Bb.backend.floatPrecision()?.001:.1}function In(t,e,n){let r=!0;if((Z(t)||Z(e))&&(r=!1),Z(t)&&Z(e)&&(r=!0),r){const n=t.constructor.name,r=e.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(t)&&Array.isArray(e)){const n=me(t),r=me(e);if(!P(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const s=Z(t)?t:L(t),i=Z(e)?e:L(e);if(s.length!==i.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${i.length}.\nActual:   ${s}.\nExpected: ${i}.`);for(let o=0;o<i.length;++o){const t=s[o],e=i[o];if(!n(t,e))throw new Error(`Arrays differ: actual[${o}] = ${t}, expected[${o}] = ${e}.\nActual:   ${s}.\nExpected: ${i}.`)}"undefined"!=typeof expect&&expect().nothing()}function Fn(t,e,n){return!isFinite(t)&&!isFinite(e)||!(isNaN(t)||isNaN(e)||Math.abs(t-e)>n)}function Mn(t,e,n,r,s="NHWC",i){return Vn(t,[...e,t[3]],n,i,r,null,null,Hn(s))}function Dn(t,e,n,r,s,i,o="channelsLast"){const[a,u]=zn(e);let l;if("channelsLast"===o)l=[a,u,t[3],t[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);l=[a,u,t[1],t[1]]}return Vn(t,l,n,r,s,i,!1,o)}function Ln(t,e,n,r,s,i,o="NDHWC"){const[a,u,l]=Wn(e);let c,h;if("NDHWC"===o)h="channelsLast",c=[a,u,l,t[4],t[4]];else{if("NCDHW"!==o)throw new Error(`Unknown dataFormat ${o}`);h="channelsFirst",c=[a,u,l,t[1],t[1]]}return Pn(t,c,n,r,s,!1,h,i)}function Vn(t,e,n,r,s,i,o=!1,a="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===a)[u,l,c,h]=t;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[u,h,l,c]=t}const[d,f,,p]=e,[m,b]=zn(n),[y,g]=zn(r),x=Un(d,y),w=Un(f,g),{padInfo:v,outHeight:$,outWidth:k}=((t,e,n,r,s,i,o,a,u)=>{let l,c,h;if("number"==typeof t){l={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const s=((t,e,n,r,s)=>{null==r&&(r=Bn(t,e,n));const i=t[1];return[Gn((t[0]-e+2*r)/n+1,s),Gn((i-e+2*r)/n+1,s)]})([e,n],i,r,t,a);c=s[0],h=s[1]}else if("same"===t){c=Math.ceil(e/r),h=Math.ceil(n/s);const t=Math.max(0,(c-1)*r+i-e),a=Math.max(0,(h-1)*s+o-n),u=Math.floor(t/2),d=t-u,f=Math.floor(a/2);l={top:u,bottom:d,left:f,right:a-f,type:"SAME"}}else if("valid"===t)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-i+1)/r),h=Math.ceil((n-o+1)/s);else{if("object"!=typeof t)throw Error(`Unknown padding parameter: ${t}`);{const d="channelsLast"===u?t[1][0]:t[2][0],f="channelsLast"===u?t[1][1]:t[2][1],p="channelsLast"===u?t[2][0]:t[3][0],m="channelsLast"===u?t[2][1]:t[3][1];l={top:d,bottom:f,left:p,right:m,type:0===d&&0===f&&0===p&&0===m?"VALID":"EXPLICIT"},c=Gn((e-i+d+f)/r+1,a),h=Gn((n-o+p+m)/s+1,a)}}return{padInfo:l,outHeight:c,outWidth:h}})(s,l,c,m,b,x,w,i,a),N=o?p*h:p;let C;return"channelsFirst"===a?C=[u,N,$,k]:"channelsLast"===a&&(C=[u,$,k,N]),{batchSize:u,dataFormat:a,inHeight:l,inWidth:c,inChannels:h,outHeight:$,outWidth:k,outChannels:N,padInfo:v,strideHeight:m,strideWidth:b,filterHeight:d,filterWidth:f,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:g,inShape:t,outShape:C,filterShape:e}}function Pn(t,e,n,r,s,i=!1,o="channelsLast",a){let[u,l,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h,d]=t;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,d,l,c,h]=t}const[f,p,m,,b]=e,[y,g,x]=Wn(n),[w,v,$]=Wn(r),k=Un(f,w),N=Un(p,v),C=Un(m,$),{padInfo:S,outDepth:E,outHeight:T,outWidth:_}=((t,e,n,r,s,i,o,a,u,l,c)=>{let h,d,f,p;if("number"==typeof t){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const i=((t,e,n,r,s,i)=>{null==s&&(s=Bn(t,e,r));const o=t[1],a=t[2];return[Gn((t[0]-e+2*s)/r+1,i),Gn((o-e+2*s)/r+1,i),Gn((a-e+2*s)/r+1,i),1]})([e,n,r,1],a,0,s,t,c);d=i[0],f=i[1],p=i[2]}else if("same"===t){d=Math.ceil(e/s),f=Math.ceil(n/i),p=Math.ceil(r/o);const t=(d-1)*s+a-e,c=(f-1)*i+u-n,m=(p-1)*o+l-r,b=Math.floor(t/2),y=t-b,g=Math.floor(c/2),x=c-g,w=Math.floor(m/2);h={top:g,bottom:x,left:w,right:m-w,front:b,back:y,type:"SAME"}}else{if("valid"!==t)throw Error(`Unknown padding parameter: ${t}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((e-a+1)/s),f=Math.ceil((n-u+1)/i),p=Math.ceil((r-l+1)/o)}return{padInfo:h,outDepth:d,outHeight:f,outWidth:p}})(s,l,c,h,y,g,x,k,N,C,a),R=i?b*d:b;let A;return"channelsFirst"===o?A=[u,R,E,T,_]:"channelsLast"===o&&(A=[u,E,T,_,R]),{batchSize:u,dataFormat:o,inDepth:l,inHeight:c,inWidth:h,inChannels:d,outDepth:E,outHeight:T,outWidth:_,outChannels:R,padInfo:S,strideDepth:y,strideHeight:g,strideWidth:x,filterDepth:f,filterHeight:p,filterWidth:m,effectiveFilterDepth:k,effectiveFilterHeight:N,effectiveFilterWidth:C,dilationDepth:w,dilationHeight:v,dilationWidth:$,inShape:t,outShape:A,filterShape:e}}function Bn(t,e,n,r=1){const s=Un(e,r);return Math.floor((t[0]*(n-1)-n+s)/2)}function zn(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function Wn(t){return"number"==typeof t?[t,t,t]:t}function Un(t,e){return e>1?t+(t-1)*(e-1):t}function Gn(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function jn(t){const[e,n,r]=zn(t);return 1===e&&1===n&&1===r}function qn(t,e){return jn(t)||jn(e)}function Hn(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}function Xn(t,e,n){if(null!=n){if("string"==typeof e)throw Error(`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);if("number"==typeof e)F(B(e),()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);else{if("object"!=typeof e)throw Error(`Error in ${t}: Unknown padding parameter: ${e}`);e.forEach(e=>{e.forEach(e=>{F(B(e),()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`)})})}}}function Kn(t,e,n){const r={shape:t,value:e,dtype:n};return Bb.runKernel(Gf,{},r)}function Jn(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function Yn(t,e,n){const r=t.length+e.length,s=[];let i=0,o=0;for(let a=0;r>a;a++)-1===n.indexOf(a)?s.push(t[i++]):s.push(e[o++]);return s}function Zn(t,e){const n=[],r=t.length;for(let s=0;r>s;s++)-1===e.indexOf(s)&&n.push(t[s]);return[n,e.map(e=>t[e])]}function Qn(t,e){return Yn(t,e.map(t=>1),e)}function tr(t,e,n){F(Jn(e,n),()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`)}function er(t,e){if(Jn(t,e))return null;const n=[];for(let r=0;e>r;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach(t=>n.push(t)),n}function nr(t){return t.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function rr(t,e){const n=[];for(let r=e-t;e>r;++r)n.push(r);return n}function sr(t,e){if((Z(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&Z(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ve(t,[],[],e)}function ir(t,e,n=null){if(0===t.rank)return Yy(t);if(1!==t.rank&&null===n)return ir(cg(t,[-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return ax(Yy(t),n);if(e===1/0)return nx(Yy(t),n);if(e===-1/0)return rx(Yy(t),n);if("euclidean"===e||2===e)return ix(ax(sx(Yy(t),sr(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&2===n.length){if(1===e)return nx(ax(Yy(t),n[0]),n[1]-1);if(e===1/0)return nx(ax(Yy(t),n[1]),n[0]);if(e===-1/0)return rx(ax(Yy(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return ix(ax(ox(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}function or(t,e,n){if(0>=n)throw new Error("The number of values should be positive.");const r={start:t,stop:e,num:n};return Bb.runKernel(up,{},r)}function ar(t,e){F(it(t),()=>"The f passed in variableGrads(f) must be a function"),F(null==e||Array.isArray(e)&&e.every(t=>t instanceof Cb),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=e;if(!n){e=[];for(const t in Bb.registeredVariables)e.push(Bb.registeredVariables[t])}const r=n?e.filter(t=>!t.trainable):null,s=e.length;F((e=e.filter(t=>t.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const{value:i,grads:o}=Bb.gradients(t,e,null,!0);F(o.some(t=>null!=t),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),F(0===i.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const a={};return e.forEach((t,e)=>{null!=o[e]&&(a[t.name]=o[e])}),null!=r&&r.forEach(t=>a[t.name]=null),{value:i,grads:a}}function ur(t){return Bb.customGrad(t)}function lr(t){if(t.filter(t=>null==t).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}function cr(t,e){return Vx(t,e,"left")}function hr(t,e="float32"){if("complex64"===e){const e=hr(t,"float32"),n=hr(t,"float32");return jb(e,n)}const n=ht(V(t),e);return Bb.makeTensor(n,t,e)}function dr(t,e="float32"){if("complex64"===e){const e=dr(t,"float32"),n=hr(t,"float32");return jb(e,n)}const n=ct(V(t),e);return Bb.makeTensor(n,t,e)}function fr(t,e,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===t)return[];let r=ge(t,"x","meshgrid",t instanceof Nb?t.dtype:"float32");if(void 0===e)return[r];let s=ge(e,"y","meshgrid",e instanceof Nb?e.dtype:"float32");const i=V(r.shape),o=V(s.shape);return"xy"===n?(r=cg(r,[1,-1]),s=cg(s,[-1,1]),[Ey(dr([o,1],r.dtype),r),Ey(s,dr([1,i],s.dtype))]):(r=cg(r,[-1,1]),s=cg(s,[1,-1]),[Ey(r,dr([1,o],r.dtype)),Ey(dr([i,1],s.dtype),s)])}function pr(t,e,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:t,stop:e,step:n,dtype:r};return Bb.runKernel(jp,{},s)}function mr(t,e){D(t);const n=me(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ve(t,null,n,e)}function br(t,e,n){if(D(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=me(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ve(t,e,r,n)}function yr(t,e,n){if(D(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const r=me(t,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return ve(t,e,r,n)}function gr(t,e,n){if(D(t),null!=e&&5!==e.length)throw new Error("tensor5d() requires shape to have five numbers");const r=me(t,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return ve(t,e,r,n)}function xr(t,e,n){if(D(t),null!=e&&6!==e.length)throw new Error("tensor6d() requires shape to have six numbers");const r=me(t,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return ve(t,e=e||r,r,n)}function wr(t,e){return Vx(t,e,"right")}function vr(t,e=!0,n,r){return Bb.makeVariable(t,e,n,r)}function $r(t,e){const n=[];for(let i=0;i<e.length;i++)e[i]&&n.push(i);const r=We(t,"int32"),s=We([n.length,t.length],"int32");for(let i=0;i<n.length;i++){const e=r.indexToLoc(n[i]),o=i*t.length;s.values.set(e,o)}return s.toTensor()}function kr(t){return Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2))))}function Nr(t,e,n){const r=1-t%2,s=new Float32Array(t);for(let i=0;t>i;++i){const o=2*Math.PI*i/(t+r-1);s[i]=e-n*Math.cos(o)}return mr(s,"float32")}function Cr(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return Jy(t,bv(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Sr(t,e){let n=e;const r=un(t.shape,e.shape);return r.length>0&&(n=ax(n,r)),cg(n,t.shape)}function Er(t,e,n,r){if("linear"===e)return t;if("relu"===e)return Ww(t);if("elu"===e)return tx(t);if("relu6"===e)return Uw(t);if("prelu"===e)return ow(t,n);if("leakyrelu"===e)return $x(t,r);if("sigmoid"===e)return pg(t);throw new Error(`Unknown fused activation ${e}.`)}function Tr(t,e,n,r,s,i){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==i&&(i=0);const o=t.shape[0];return n=Math.min(n,o),F(r>=0&&1>=r,()=>`iouThreshold must be in [0, 1], but was '${r}'`),F(2===t.rank,()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`),F(4===t.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`),F(1===e.rank,()=>"scores must be a 1D tensor"),F(e.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${e.shape[0]}`),F(i>=0&&1>=i,()=>`softNmsSigma must be in [0, 1], but was '${i}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:i}}function _r(t,e,n){const r=((t,e,n)=>((t,e,n)=>{let r=0,s=t.length,i=0,o=!1;for(;s>r;){i=r+(s-r>>>1);const a=n(e,t[i]);a>0?r=i+1:(s=i,o=!a)}return o?r:-r-1})(t,e,n||Rr))(t,e,n),s=0>r?-(r+1):r;t.splice(s,0,e)}function Rr(t,e){return t>e?1:e>t?-1:0}function Ar(t,e,n,r,s){return Fr(t,e,n,r,s,0)}function Or(t,e,n,r,s,i){return Fr(t,e,n,r,s,0,!1,i,!0)}function Ir(t,e,n,r,s,i){return Fr(t,e,n,r,s,i,!0)}function Fr(t,e,n,r,s,i,o=!1,a=!1,u=!1){const l=[];for(let b=0;b<e.length;b++)e[b]>s&&l.push({score:e[b],boxIndex:b,suppressBeginIndex:0});l.sort(Lr);const c=i>0?-.5/i:0,h=[],d=[];for(;h.length<n&&l.length>0;){const e=l.pop(),{score:n,boxIndex:i,suppressBeginIndex:o}=e;if(s>n)break;let a=!1;for(let u=h.length-1;u>=o;--u){const n=Mr(t,i,h[u]);if(n>=r){a=!0;break}if(e.score=e.score*Dr(r,c,n),e.score<=s)break}e.suppressBeginIndex=h.length,a||(e.score===n?(h.push(i),d.push(e.score)):e.score>s&&_r(l,e,Lr))}const f=h.length,p=n-f;a&&p>0&&(h.push(...new Array(p).fill(0)),d.push(...new Array(p).fill(0)));const m={selectedIndices:h};return o&&(m.selectedScores=d),u&&(m.validOutputs=f),m}function Mr(t,e,n){const r=t.subarray(4*e,4*e+4),s=t.subarray(4*n,4*n+4),i=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),a=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),f=(a-i)*(u-o),p=(h-l)*(d-c);if(0>=f||0>=p)return 0;const m=Math.max(i,l),b=Math.max(o,c),y=Math.min(a,h),g=Math.min(u,d),x=Math.max(y-m,0)*Math.max(g-b,0);return x/(f+p-x)}function Dr(t,e,n){const r=Math.exp(e*n*n);return n>t?0:r}function Lr(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}function Vr(t,e=!1){return Bb.tidy(()=>{F(2===t.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`);const n=t.shape[0],r=t.shape[1];let s=px(n),i=gy(t);const o=br([[1]],[1,1]);let a=gy(o);const u=r>n?n:r;for(let t=0;u>t;++t){const e=i,u=a,l=s;[a,i,s]=Bb.tidy(()=>{const e=mg(i,[t,t],[n-t,1]),u=ux(e),l=mg(i,[t,t],[1,1]),c=Kg(yx(l,0),br([[-1]]),br([[1]])),h=Rx(l,Jy(c,u)),d=Ky(e,h);a=1===d.shape[0]?gy(o):fg([o,mg(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const f=Ry(Ky(Ey(c,h),u)),p=mg(i,[t,0],[n-t,r]),m=Jy(f,a),b=Oy(a);if(0===t)i=Rx(p,Ey(m,Ey(b,p)));else{const e=Rx(p,Ey(m,Ey(b,p)));i=fg([mg(i,[0,0],[t,r]),e],0)}const y=Oy(m),g=mg(s,[0,t],[n,s.shape[1]-t]);if(0===t)s=Rx(g,Ey(Ey(g,a),y));else{const e=Rx(g,Ey(Ey(g,a),y));s=fg([mg(s,[0,0],[n,t]),e],1)}return[a,i,s]}),nn([e,u,l])}return!e&&n>r&&(s=mg(s,[0,0],[n,r]),i=mg(i,[0,0],[r,r])),[s,i]})}function Pr(){return new Promise(t=>P$(()=>t()))}function Br(t,e){const n=t[0].length;t.forEach((t,e)=>{F(t.length===n,()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`)}),F(e>=0&&n>e,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=t[0];t.forEach((t,s)=>{for(let i=0;n>i;i++)F(i===e||t[i]===r[i],()=>`Error in concat${n}D: Shape of tensors[${s}] (${t}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`)})}function zr(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}function Wr(t,e,n){let r=new Array;if(null==n&&null==e)return r;if(null==e)for(;r.length<t+n.length;)r.push(-1);else r=e.slice();if(null==n)return r;if(t+n.length!==r.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${t+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const i=n[s],o=r[r.length-n.length+s],a=r[o];if(i>=0)if(0>a)r[o]=i;else if(a!==i)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${s+t}] = ${i} but shape[${s+t}] = ${a}`)}return r}function Ur(t){const e={FIRST_DIM_SIZE:B$.FIRST_DIM_SIZE,VALUE_ROWIDS:B$.VALUE_ROWIDS,ROW_LENGTHS:B$.ROW_LENGTHS,ROW_SPLITS:B$.ROW_SPLITS,ROW_LIMITS:B$.ROW_LIMITS,ROW_STARTS:B$.ROW_STARTS},n=[];for(const r of t){if(!(r in e))break;n.push(e[r])}return n}function Gr(t){return 0===t.length?0:t[0]===B$.FIRST_DIM_SIZE?t.length-1:t.length}function jr(t,e){if(null==t||null==e)return;const n=t.length,r=e.length;if(n>=r)throw new Error(`defaultValue.shape=${t} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const n=t[s],r=e[s+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${t}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${s-t.length}] = ${n} but ragged tensor input.flatValues.shape[${s-t.length}] = ${r}`)}}function qr(t){return t>30?ot(t,Math.floor(Math.sqrt(t))):t}function Hr(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}function Xr(t,e,n,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(t[0]/n),s=s.concat(t.slice(1));else{s=s.concat(t[0]);const n=e.length;for(let r=0;n>r;++r)s=s.concat([t[r+1]/e[r],e[r]]);s=s.concat(t.slice(n+1))}return s}function Kr(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;t>n;++n)n>2*e?r.push(n):(r.push(n),r.push(n-(e+1)))}else{const n=[],s=[];for(let r=1;t>r;++r)2*e+1>r&&r%2!=1?n.push(r):s.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function Jr(t,e,n,r=!0){const s=[];r?s.push(t[0]/n):s.push(t[0]*n);for(let i=1;i<t.length;++i)i>e.length?s.push(t[i]):r?s.push(e[i-1]*t[i]):s.push(t[i]/e[i-1]);return s}function Yr(t,e){const n=[0];for(let r=0;e>r;++r)n.push(t[r][0]);return n}function Zr(t,e,n){const r=t.slice(0,1);for(let s=0;n>s;++s)r.push(t[s+1]-e[s][0]-e[s][1]);return r}function Qr(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function ts(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function es(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let s=0;s<t.length;s+=4)n[Math.floor(s/4)]=t[s],r[Math.floor(s/4)]=t[s+1];return{real:n,imag:r}}function ns(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let s=2;s<t.length;s+=4)n[Math.floor(s/4)]=t[s],r[Math.floor(s/4)]=t[s+1];return{real:n,imag:r}}function rs(t,e){return{real:t[2*e],imag:t[2*e+1]}}function ss(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function is(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let s=0;s<Math.ceil(t/2);s++){const i=(e?2:-2)*Math.PI*(s/t);n[s]=Math.cos(i),r[s]=Math.sin(i)}return{real:n,imag:r}}function os(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}function as(t,e){const n=((t=t.replace(/\s/g,"")).length-t.replace(Y$,"").length)/2;if(1>n)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${J$}").`);const[r,s]=t.split(J$);F(-1===r.indexOf("..."),()=>'The ellipsis notation ("...") is not supported yet.');const i=r.split(","),o=i.length;if(e!==o)throw new Error(`Expected ${o} input tensors, received ${e}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let h=0;h<s.length;++h){const t=s[h];if(!i.some(e=>-1!==e.indexOf(t)))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===a.indexOf(t)&&a.push(t)}for(let h=0;h<r.length;++h){const t=r[h];-1===a.indexOf(t)&&","!==t&&a.push(t)}const u=new Array(i.length);for(let h=0;o>h;++h){if(new Set(i[h].split("")).size!==i[h].length)throw new Error(`Found duplicate axes in input component ${i[h]}. Support for duplicate axes in input is not implemented yet.`);u[h]=[];for(let t=0;t<i[h].length;++t)u[h].push(a.indexOf(i[h][t]))}const l=a.length,c=[];for(let h=s.length;l>h;++h)c.push(h);return{allDims:a,summedDims:c,idDims:u}}function us(t,e){let n=new Array(t);n.fill(-1);for(let s=0;s<e.length;++s)n[e[s]]=s;const r=[];for(let s=0;t>s;++s)-1===n[s]&&r.push(s);return n=n.filter(t=>-1!==t),{permutationIndices:n,expandDims:r}}function ls(t,e,n){const r=new Array(t);for(let s=0;s<n.length;++s){const t=n[s].shape;for(let n=0;n<e[s].length;++n)void 0===r[e[s][n]]?r[e[s][n]]=t[n]:F(r[e[s][n]]===t[n],()=>`Expected dimension ${r[e[s][n]]} at axis ${n} of input shaped ${JSON.stringify(t)}, but got dimension ${t[n]}`)}}function cs(t,e){const n=t,r=[];let s=0;0===t.length&&n.push(-1),s=t.length+1;for(let o=0;s>o;++o)r.push([]);const i=[];for(let o=0;o<n.length;++o){const t=ds(e,n[o]);for(const e of t)-1===i.indexOf(e)&&(r[o].push(e),i.push(e))}return{path:n,steps:r}}function hs(t){return t.every((t,e)=>t===e)}function ds(t,e){const n=[];for(let r=0;r<t.length;++r)0!==t[r].length&&-1===t[r].indexOf(e)&&-1!==e||n.push(r);return n}function fs(t,e,n=0){let r=[];if("number"==typeof e)F(t.shape[n]%e===0,()=>"Number of splits must evenly divide the axis."),r=new Array(e).fill(t.shape[n]/e);else{F(1>=e.reduce((t,e)=>(-1===e&&(t+=1),t),0),()=>"There should be only one negative value in split array.");const s=e.indexOf(-1);if(-1!==s){const r=e.reduce((t,e)=>e>0?t+e:t);e[s]=t.shape[n]-r}F(t.shape[n]===e.reduce((t,e)=>t+e),()=>"The sum of sizes must match the size of the axis dimension."),r=e}return r}function ps(t){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${t}`}function ms(t,e){return`indices(${t}, 0) is invalid: ${e} < 0`}function bs(t,e,n){return`indices(${t}, 0) is invalid: ${e} >= ${n}`}function ys(t,e){return`only one output dimension may be -1, not both ${t} and ${e}`}function gs(t,e){return`size ${t} must be non-negative, not ${e}`}function xs(t,e){return`Input to reshape is a SparseTensor with ${V(t)}\n  dense values, but the requested shape requires a multiple of ${V(e)}. inputShape=${t} outputShape= ${e}`}function ws(t,e){return`Input to reshape is a tensor with ${V(t)} dense values, but the requested shape has ${V(e)}. inputShape=${t} outputShape=${e}`}function vs(){return"segment ids are not increasing"}function $s(t,e){return`Segment id ${t} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function ks(t,e,n){return`Bad: indices[${t}] == ${e} out of range [0, ${n})`}function Ns(t,e){let n,r=!1;for(t>30?n=ot(t,Math.floor(Math.sqrt(t))):(n=t,r=!0);!r;)n>e||n===t?r=!0:n=ot(t,n+1);return n}function Cs(t,e,n){const r=[],s=t.length;for(let i=0;s>i;i++)i!==e?r.push(t[i]):r.push(n);return r}function Ss(t,e,n,r){const s=e.shape.length,i=t.shape.length;if(0!==r&&(-s>r||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(0>r&&(r+=s),r>i)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${i}).`);if(r>n)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let h=0;r>h;++h)if(t.shape[h]!==e.shape[h])throw new Error(`x.shape[${h}]: ${t.shape[h]} should be equal to indices.shape[${h}]: ${e.shape[h]}.`);const o=t.shape[n],a=[];let u=1,l=1,c=1;for(let h=0;r>h;++h)a.push(t.shape[h]),u*=t.shape[h];for(let h=r;n>h;h++)a.push(t.shape[h]),l*=t.shape[h];for(let h=r;s>h;h++)a.push(e.shape[h]);for(let h=n+1;i>h;h++)a.push(t.shape[h]),c*=t.shape[h];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:o,outputShape:a}}function Es(t){try{return t.map(t=>Kt(t))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Ts(t){return t.map(t=>Xt(t))}function _s(t,e){const n=[];for(let r=t;e>r;++r)n.push(r);return n}function Rs(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}function As(t,e,n,r){return e.rank<n.rank&&(e=cg(e,Qn(e.shape,r))),t.rank<n.rank&&(t=cg(t,Qn(t.shape,r))),{x(){return Jy(t,yy(Xg(n,e),t.dtype))}}}function Os(t,e){if(Array.isArray(t)){let n=[];for(let r=0;e>r;r++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function Is(t,e){if(!t)throw new sC(e)}function Fs(t,e){let n=0;for(const r of t)r===e&&n++;return n}function Ms(t){return 1===t.length?t[0]:t}function Ds(t){return Array.isArray(t)?t:[t]}function Ls(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function Vs(t){return t.length>1?-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase()):t}function Ps(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function Bs(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach(t=>Bs(t));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"==typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!=typeof e.value?Bs(e):t[n]=e.value)}}}function zs(t,e={},n={},r="object",s=!1){if("string"==typeof t){const s=t;let i;if(s in n)i=n[s];else if(s in oC)i=oC[s];else if(i=e[s],null==i)throw new nC(`Unknown ${r}: ${t}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const i=t;if(null==i.className||null==i.config)throw new nC(`${r}: Improper config format: ${JSON.stringify(i)}.\n'className' and 'config' must set.`);const o=i.className;let a,u;if(o in n?[a,u]=n[o]:o in oC?[a,u]=oC.className:o in e&&([a,u]=e[o]),null==a)throw new nC(`Unknown ${r}: ${o}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const t={};for(const n of Object.keys(oC))t[n]=oC[n];for(const s of Object.keys(n))t[s]=n[s];i.config.customObjects=t;const e=Object.assign({},oC);for(const s of Object.keys(n))oC[s]=n[s];Bs(i.config);const r=u(a,i.config,n,s);return oC=Object.assign({},e),r}{const t=Object.assign({},oC);for(const r of Object.keys(n))oC[r]=n[r];const e=new a(i.config);return oC=Object.assign({},t),e}}}function Ws(t,e){return-1*((t,e)=>e>t?-1:t>e?1:0)(t,e)}function Us(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function Gs(t){if(null==t)throw new nC(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function js(t,e,n){if(null!=n&&0>t.indexOf(n))throw new nC(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function qs(t,e,n=0,r=1/0){return Is(n>=0),Is(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every(t=>typeof t===e)}function Hs(t,e){Array.isArray(t)?(F(t.length>0,()=>`${e} is unexpectedly an empty array.`),t.forEach((t,n)=>Hs(t,`element ${n+1} of ${e}`))):F(Number.isInteger(t)&&t>0,()=>`Expected ${e} to be a positive integer, but got ${Xs(t)}.`)}function Xs(t){return null===t?"null":Array.isArray(t)?"["+t.map(t=>Xs(t)).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}function Ks(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function Js(){return aC++}function Ys(t=""){return t in uC||(uC[t]=0),uC[t]+=1,t+uC[t].toString()}function Zs(t){js(lC,"DataFormat",t)}function Qs(t){js(hC,"PaddingMode",t)}function ti(t){js(dC,"PoolMode",t)}function ei(t,e){mC.push(t);try{const t=e();return mC.pop(),t}catch(n){throw mC.pop(),n}}function ni(t){if(!si(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===mC.length?"":mC.join("/")+"/")+t}function ri(t){if(!si(t))throw new Error("Not a valid tensor name: '"+t+"'");pC.has(t)||pC.set(t,0);const e=pC.get(t);if(pC.set(t,pC.get(t)+1),e>0){const n=`${t}_${e}`;return pC.set(n,1),n}return t}function si(t){return!!t.match(bC)}function ii(t){return t===parseInt(t.toString(),10)}function oi(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let s=e;n>s;++s)r*=t[s];return r}function ai(t){if(0===t.length)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let n=0;n<t.length;n++){const r=t[n];e>r&&(e=r)}return e}function ui(t){if(0===t.length)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let n=0;n<t.length;n++){const r=t[n];r>e&&(e=r)}return e}function li(t,e){if(t>e)throw new nC(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let r=t;e>r;++r)n.push(r);return n}function ci(){return null==yC&&(yC=on().epsilon()),yC}function hi(t,e){return yy(t,e)}function di(t,e=-1){const n=t.shape.slice();return 0>e&&(e=n.length+e+1),n.splice(e,0,1),cg(t,n)}function fi(t,e,n){return en(()=>{switch(t.rank){case 1:return rv(t,e,n);case 2:return sv(t,[e,0],[n,t.shape[1]]);case 3:return iv(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return ov(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return mg(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return mg(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new nC(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}})}function pi(t,e,n){return en(()=>{switch(t.rank){case 1:return rv(t,e,n);case 2:return sv(t,[0,e],[t.shape[0],n]);case 3:return iv(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return ov(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new nC(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}})}function mi(t,e,n,r){return en(()=>{switch(t.rank){case 1:return rv(t,e,n);case 2:switch(r){case 1:return fi(t,e,n);case 2:return pi(t,e,n);default:throw new nC(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return fi(t,e,n);case 2:return iv(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return pi(t,e,n);default:throw new nC(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return fi(t,e,n);case 2:return ov(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return ov(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return pi(t,e,n);default:throw new nC(`The axis is not within the rank of the tensor ${r}`)}default:throw new nC(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}})}function bi(t,e=-1){let n;return 0>e&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),fg(t,e)}function yi(t,e){switch(t.rank){case 1:return Tg([t,e]);case 2:return _g([t,e],0);case 3:return Rg([t,e],0);case 4:return Ag([t,e],0);default:throw new nC(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function gi(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new nC(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return fx(t,e)}function xi(t,e=0,n=1,r,s){return Vw(t,e,n,r,s)}function wi(t,e,n,r){if(2>t.rank||2>e.rank)throw new rC(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3&&t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new rC(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`);if(2===t.rank&&2===e.rank)return Vv({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?ki(t.rank,r,"channelsLast"):null,activation:n});{const s=t.shape.slice(),i=s.pop();t=cg(t,[-1,i]);const o=e.shape.slice(),a=o.pop(),u=o.pop(),l=[...o,a],c=Array.from({length:e.rank},(t,n)=>0===n?e.rank-2:n>e.rank-2?n:n-1);e=cg(Oy(e,c),[u,-1]);const h=[...s,...l];return cg(Vv({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?ki(t.rank,r,"channelsLast"):null,activation:n}),h)}}function vi(t,e,n){return en(()=>(e=Array.isArray(e)?mr(e,"int32"):yy(e,"int32"),bx(t,e,n)))}function $i(t){return Jy(t,t)}function ki(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new nC(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(5===t){if("channelsFirst"===n)return 1===r.length?cg(e,[1,r[0],1,1,1]):cg(e,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?cg(e,[1,1,1,1,r[0]]):cg(e,[1].concat(r))}else if(4===t){if("channelsFirst"===n)return 1===r.length?cg(e,[1,r[0],1,1]):cg(e,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?cg(e,[1,1,1,r[0]]):cg(e,[1].concat(r))}else if(3===t){if("channelsFirst"===n)return 1===r.length?cg(e,[1,r[0],1]):cg(e,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?cg(e,[1,1,r[0]]):cg(e,[1].concat(r))}else if(3>t)return e;throw new nC(`Unsupported input rank by biasAdd: ${e.rank}`)}function Ni(t,e,n){return en(()=>(null==n&&(n="channelsLast"),Zs(n),Hy(t,ki(t.rank,e,n))))}function Ci(t,e,n,r){return en(()=>Rv(t,e,n,r))}function Si(t,e,n=!1){return n?t():e()}function Ei(t,e={}){return zs(t,Uy.getMap().classNameMap,e,"initializer")}function Ti(t){return Ps(t)}function _i(t){if("string"==typeof t){const e=t in DC?DC[t]:t;if("GlorotNormal"===e)return new RC;if("GlorotUniform"===e)return new _C;if("HeNormal"===e)return new AC;if("HeUniform"===e)return new OC;if("LeCunNormal"===e)return new IC;if("LeCunUniform"===e)return new FC;{const t={};return t.className=e,t.config={},Ei(t)}}return t instanceof wC?t:Ei(t)}function Ri(t){return Array.isArray(t)&&Array.isArray(t[0])}function Ai(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function Oi(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new nC(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function Ii(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return t[0];throw new nC(`Expected exactly 1 Shape; got ${t.length}`)}return t}function Fi(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce((t,e)=>t*e);return e}function Mi(t){return t.map(t=>t.read())}function Di(t){t.forEach(t=>{t[0].write(t[1])})}function Li(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const r=Li(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of r)-1===e.indexOf(t)&&e.push(t)}return e}}}function Vi(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new nC("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new jC({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}function Pi(t,e,n,r){const s=null!=n&&n.training,i=Array.isArray(t),o=i?t:[t],a=o.map(t=>t.name),u=[],l=e.names();for(const p of a)-1!==l.indexOf(p)?u.push(e.getValue(p)):u.push(null);const c=a.join(",")+"|"+e.names().sort().join(",");let h,d=HC.get(c);if(null==d){const t=((t,e)=>{F(null!=t&&t.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===t.length){const s=zi(t[0],e);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const i of t){const{sorted:t,recipientMap:o}=zi(i,e);for(const e of t)s.has(e.name)||(n.push(e),s.add(e.name));for(const e in o)null==r[e]&&(r[e]=new Set),o[e].forEach(t=>r[e].add(t))}}return{sorted:n,recipientCounts:Bi(r)}})(o,e);d=t.sorted,h=t.recipientCounts,HC.put(c,d),XC.put(c,h)}h={},s||Object.assign(h,XC.get(c));const f=new qC(e);for(let p=0;p<d.length;++p){const t=d[p],r=t.sourceLayer;if(r instanceof jC)continue;const i=[],o=[],l=[];let c=!1;for(const n of t.inputs){const t=f.getValue(n),r=f.getMask(n);i.push(t),o.push(r),null!=r&&(c=!0),s||(h[n.name]--,0!==h[n.name]||e.hasKey(n)||-1!==a.indexOf(n.name)||t.isDisposed||!0===n.sourceLayer.stateful||l.push(t))}c&&((n=n||{}).mask=o[0]);const m=Ds(r.apply(i,n));let b=null;r.supportsMasking&&(b=r.computeMask(i,o));const y=Wi(t),g=Array.isArray(y)?y:[y];for(let e=0;e<g.length;++e){f.hasKey(g[e])||f.add(g[e],m[e],Array.isArray(b)?b[0]:b);const t=a.indexOf(g[e].name);-1!==t&&(u[t]=m[e])}s||nn(l)}return f.disposeMasks(),i?u:u[0]}function Bi(t){const e={};for(const n in t)e[n]=t[n].size;return e}function zi(t,e){const n=new Set,r=[],s={};for(const a of e.names())n.add(a);const i=[],o=[];for(i.push(t);i.length>0;){const t=i[i.length-1];if(n.has(t.name)){i.pop();continue}const e=o[o.length-1]===i.length-1;if(0===t.inputs.length||e)i.pop(),r.push(t),n.add(t.name),e&&o.pop();else{o.push(i.length-1);for(const e of t.inputs)null==s[e.name]&&(s[e.name]=new Set),s[e.name].add(t.name),n.has(e.name)||i.push(e)}}return{sorted:r,recipientMap:s}}function Wi(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const r of t.sourceLayer.inboundNodes[e].outputTensors)if(r.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}function Ui(t,e){return en(()=>ix(ax(Jy(t,t),e,!0)))}function Gi(t){return Ps(t)}function ji(t,e={}){return zs(t,Uy.getMap().classNameMap,e,"constraint")}function qi(t){return null==t?null:"string"==typeof t?ji({className:t in tS?tS[t]:t,config:{}}):t instanceof KC?t:ji(t)}function Hi(t){return Jh(this,null,function*(){if(null==t)return;const e=[],n=[],r=[];for(const s in t){const i=t[s];if("number"!=typeof i){const t=i;e.push(t.data()),n.push(s),r.push(t)}}if(e.length>0){const s=yield Promise.all(e);for(let e=0;e<s.length;++e)t[n[e]]=s[e][0];nn(r)}})}function Xi(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}function Ki(t,e){return null==t&&(t={}),t instanceof iS?[t]:Array.isArray(t)&&t[0]instanceof iS?t:Ds(t).map(t=>new lS(t,e))}function Ji(t,e,n,r,s,i,o,a,u){const l=new uS,c=[new aS,...cS.createCallbacks(e)];null!=t&&c.push(...t),c.push(l);const h=new oS(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:i,batchSize:o,verbose:e,doValidation:a,metrics:u}),{callbackList:h,history:l}}function Yi(t,e={},n=!1){return zs(t,Uy.getMap().classNameMap,e,"layer",n)}function Zi(t,e){return en(()=>{"float32"!==t.dtype&&(t=yy(t,"float32"));const n=ax($i(t),e,!0),r=Kn(n.shape,ci()),s=ix(Wx(n,r));return Ky(t,s)})}function Qi(t,e){return en(()=>Ux($i(Rx(e,t)),-1))}function to(t,e){return en(()=>Ux(Yy(Rx(e,t)),-1))}function eo(t,e){return en(()=>{const n=Rx(t,e),r=Eg(Yy(t),ci(),Number.MAX_VALUE),s=Yy(Ky(n,r));return Jy(100,Ux(s,-1))})}function no(t,e,n=!1){return en(()=>{if(n)e=av(e);else{const t=ax(e,e.shape.length-1,!0);e=Ky(e,t)}return e=Eg(e,ci(),1-ci()),Ry(ax(Jy(yy(t,"float32"),Sx(e)),e.shape.length-1))})}function ro(t,e,n=!1){return en(()=>{const r=yy(mx((t=>{const e=[oi(t.shape)];return cg(t,e)})(t)),"int32"),s=(e=Eg(e,ci(),1-ci())).shape;return no(cg(Ty(r,s[s.length-1]),s),e,n)})}function so(t,e){return en(()=>{let n;return n=Eg(e,ci(),1-ci()),n=Sx(Ky(n,Rx(1,n))),Ux(((t,e)=>{if(!P(t.shape,e.shape))throw new nC(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return en(()=>{const n=Ww(e),r=Ry(Yy(e));return Hy(Rx(n,Jy(e,t)),Ex(cx(r)))})})(t,n),-1)})}function io(t,e){return en(()=>{const n=Zi(t,-1),r=Zi(e,-1),s=Jy(n,r);return Ry(ax(s,-1))})}function oo(t){if("string"==typeof t){if(t in hS)return hS[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new nC(e)}return t}function ao(t,e){return en(()=>{const n=Jy(.5,Yx(e)),r=hi(yx(e,n),t.dtype);return Ux(Xg(t,r),-1)})}function uo(t,e){return en(()=>hi(Xg(rg(t,-1),rg(e,-1)),"float32"))}function lo(t,e){return en(()=>yy(ax(Ix(Xg(t,1),Xg(e,1))),"float32"))}function co(t,e){return en(()=>{const n=lo(t,e),r=((t,e)=>en(()=>yy(ax(Ix(Xg(t,0),Xg(e,1))),"float32")))(t,e),s=Hy(n,r);return yy(Kg(yx(s,0),Ky(n,s),0),"float32")})}function ho(t,e){return so(t,e)}function fo(t,e){return t.rank===e.rank&&(t=pv(t,[t.rank-1])),(e=rg(e,-1)).dtype!==t.dtype&&(e=yy(e,t.dtype)),yy(Xg(t,e),"float32")}function po(t){if("string"==typeof t&&t in pS)return pS[t];if("string"!=typeof t&&null!=t)return t;throw new nC(`Unknown metric ${t}`)}function mo(t){if(Is(null!==t,`Unknown LossOrMetricFn ${t}`),"string"==typeof t)return t;{let e;for(const n of Object.keys(hS))if(hS[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(pS))if(pS[n]===t){e=n;break}return void 0!==e?e:t.name}}function bo(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!yo(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");n&&JSON.stringify(t).length}function yo(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!=typeof n)return!1;if(!yo(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!yo(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function go(t,e,n=console.log){let r="";for(let s=0;s<t.length;++s)s>0&&(r=r.slice(0,r.length-1)+" "),r+=t[s],r=r.slice(0,e[s]),r+=" ".repeat(e[s]-r.length);n(r)}function xo(t,e,n){let r,s;try{s=t.inboundNodes.map(t=>JSON.stringify(t.inputShapes)).join(",")}catch(i){s="multiple"}try{r=JSON.stringify(t.outputShape)}catch(i){r="multiple"}go([`${t.name} (${t.getClassName()})`,s,r,t.countParams().toString()],e,n)}function wo(t,e,n,r){let s,i;try{i=t.inboundNodes.map(t=>JSON.stringify(t.inputShapes)).join(",")}catch(c){i="multiple"}try{s=JSON.stringify(t.outputShape)}catch(c){s="multiple"}const o=[];for(const h of t.inboundNodes)if(null==n||0>=n.length||-1!==n.indexOf(h))for(let t=0;t<h.inboundLayers.length;++t){const e=h.inboundLayers[t].name,n=h.nodeIndices[t],r=h.tensorIndices[t];o.push(`${e}[${n}][${r}]`)}const a=t.name,u=t.getClassName(),l=0===o.length?"":o[0];go([`${a} (${u})`,i,s,t.countParams().toString(),l],e,r);for(let h=1;h<o.length;++h)go(["","","","",o[h]],e,r)}function vo(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function $o(t,e){if(null===t)return null;if("string"==typeof t)return Vs(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;r>s;++s){const r=t[s];vo(e,s,r)?n.push(r):n.push($o(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];if("name"===n&&"string"==typeof r)e[n]=r;else{const t=Vs(n);e[t]=$o(r,t)}}return e}}function ko(t,e){if(null==t)return null;if("string"==typeof t)return Ls(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;r>s;++s){const r=t[s];vo(e,s,r)?n.push(r):n.push(ko(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];e[Ls(n)]="name"!==n&&"className"!==n||"string"!=typeof r?ko(r,n):r}return e}}function No(t,e){return((t,e,n)=>{const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>null);if(1===r)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach(e=>{e in t?n.push(t[e]):n.push(null)}),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)})(t,e,"classWeight")}function Co(t,e,n,r){return Jh(this,null,function*(){if(null!=n){const e=en(()=>{if(1===t.shape.length)return gy(t);if(2===t.shape.length){if(t.shape[1]>1)return rg(t,1);if(1===t.shape[1])return cg(t,[t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(yield e.data());nn(e);const s=[];return r.forEach(t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);s.push(n[t])}),mr(s,"float32")}return null})}function So(t,e){return Jy(t,e)}function Eo(t,e){let n,r;const s=e;n=s.xs,r=s.ys,F(null!=n&&null!=r,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const i=To("input",t.inputNames,n),o=To("output",t.outputNames,r),a=i[0].shape[0];F(i.length===t.inputs.length,()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`),F(o.length===t.outputs.length,()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`);for(let u=0;u<i.length;u++)F(i[u].shape[0]===a,()=>`Batch size mismatch: input ${t.inputNames[u]} has ${i[u].shape[0]}; expected  ${a} based on input ${t.inputNames[0]}.`);for(let u=0;u<o.length;u++)F(o[u].shape[0]===a,()=>`Batch size mismatch: output ${t.outputNames[u]} has ${o[u].shape[0]}; expected  ${a} based on input ${t.inputNames[0]}.`);return{xs:i,ys:o}}function To(t,e,n){if(n instanceof Nb)return[n];if(Array.isArray(n))return F(n.length===e.length,()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`),n;{const r=[];for(const s of e){if(null==n[s])throw new nC(`The feature data generated by the dataset lacks the required ${t} key '${s}'.`);r.push(n[s])}return r}}function _o(t){return"function"==typeof t.iterator}function Ro(t){F(t>0&&Number.isInteger(t),()=>`batchSize is required to be a positive integer, but got ${t}`)}function Ao(t,e,n){return null==t?[null]:Array.isArray(t)?t.map(t=>fi(t,e,n-e)):fi(t,e,n-e)}function Oo(t,e){return en(()=>null==t?null:Array.isArray(t)?t.map(t=>Oo(t,e)):vi(t,"int32"===e.dtype?e:yy(e,"int32")))}function Io(t,e){const n=[];let r=0,s=null;for(;t>r;)s=r+e,t>s||(s=t),n.push([r,s]),r=s;return n}function Fo(t){const e=[];t instanceof Nb&&(t=[t]);for(let n=0;n<t.length;++n){const r=t[n];if(1===r.rank)e.push(di(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function Mo(t,e){if(null==t)return;const n=[];if(e instanceof Nb)n.push(e.id);else if(Array.isArray(e))e.forEach(t=>n.push(t.id));else if(null!=e)for(const s in e){const t=e[s];n.push(t.id)}const r=[];if(t instanceof Nb)-1===n.indexOf(t.id)&&r.push(t);else if(Array.isArray(t))t.forEach(t=>{-1===n.indexOf(t.id)&&r.push(t)});else if(null!=t)for(const s in t){const e=t[s];-1===n.indexOf(e.id)&&r.push(e)}r.forEach(t=>{t.isDisposed||t.dispose()})}function Do(t){return Array.isArray(t)}function Lo(t){return!(t=>t instanceof Nb)(t)&&!Do(t)}function Vo(t,e,n,r=!0,s=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(Do(t)&&t.length>0)e=!0;else if(Lo(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new nC(`Error when checking model ${s} expected no data, but got ${t}`)}return[]}if(null==t)return e.map(t=>null);let i;if(Lo(t)){i=[];for(const n of e){if(null==t[n])throw new nC(`No data provided for "${n}". Need data for each key in: ${e}`);i.push(t[n])}}else if(Do(t)){if(t.length!==e.length)throw new nC(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);i=t}else{if(e.length>1)throw new nC(`The model ${s} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);i=[t]}if(i=Fo(i),null!=n)for(let o=0;o<e.length;++o){if(null==n[o])continue;const t=i[o];if(t.shape.length!==n[o].length)throw new nC(`Error when checking ${s}: expected ${e[o]} to have ${n[o].length} dimension(s). but got array with shape ${t.shape}`);for(let e=0;e<n[o].length;++e){if(0===e&&!r)continue;const i=t.shape[e],a=n[o][e];if(null!=a&&a>=0&&i!==a)throw new nC(`${s} expected a batch of elements where each example has shape [${n[o].slice(1,n[o].length)}] (i.e.,tensor shape [*,${n[o].slice(1,n[o].length)}]) but the ${s} received an input with ${t.shape[0]} examples, each with shape [${t.shape.slice(1,t.shape.length)}] (tensor shape [${t.shape}])`)}}return i}function Po(t,e,n,r=!0,s=""){let i;if(Array.isArray(t)){if(t.length!==e.length)throw new nC(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);i=t}else{if(e.length>1)throw new nC(`The model expects ${e.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);i=[t]}if(null!=n)for(let o=0;o<e.length;++o){if(null==n[o])continue;const t=i[o];if(t.shape.length!==n[o].length)throw new nC(`Error when checking ${s}: expected ${e[o]} to have ${n[o].length} dimension(s), but got array with shape ${JSON.stringify(t.shape)}`);for(let i=0;i<n[o].length;++i){if(0===i&&!r)continue;const a=t.shape[i],u=n[o][i];if(null!=u&&u!==a)throw new nC(`Error when checking ${s}: expected ${e[o]} to have shape ${JSON.stringify(n[o])} but got array with shape ${JSON.stringify(t.shape)}.`)}}}function Bo(t){return Vi(t)}function zo(t){return t.getClassName()}function Wo(t,e={}){return zs(t,Uy.getMap().classNameMap,e,"activation")}function Uo(t){if(null==t)return Wo({className:"linear",config:{}});if("string"==typeof t){const e={};return e.className=t,e.config={},Wo(e)}return t instanceof wS?t:Wo(t)}function Go(t){if(null!=t&&"object"!=typeof t)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}function jo(t){return Ps(t)}function qo(t,e={}){return zs(t,Uy.getMap().classNameMap,e,"regularizer")}function Ho(t){return null==t?null:"string"==typeof t?qo({className:t in LS?LS[t]:t,config:{}}):t instanceof MS?t:qo(t)}function Xo(t,e,n){if("number"==typeof t)return Os(t,e);if(t.length!==e)throw new nC(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let r=0;e>r;++r){const s=t[r];if(!ii(s))throw new nC(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${s}`)}return t}function Ko(t,e,n,r,s=1){if(null==t)return t;let i;return i="same"===n?t:t-(e+(e-1)*(s-1))+1,Math.floor((i+r-1)/r)}function Jo(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+ui([n-e,0]);else{if("same"!==r)throw new nC(`Unsupport padding mode: ${r}.`);t*=e}return t}function Yo(t,e){return en(()=>(Zs(e),"channelsFirst"===e?Oy(t,[0,2,3,1]):t))}function Zo(t,e){return en(()=>(Zs(e),"channelsFirst"===e?Oy(t,[0,2,3,4,1]):t))}function Qo(t,e,n,r=[1,1],s="valid",i,o,a=null){return en(()=>{if(null==i&&(i="channelsLast"),Zs(i),3!==t.rank&&4!==t.rank)throw new nC(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new nC(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let u=Yo(t,i);if("causal"===s)throw new rC("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Fv({x:u,filter:e,strides:r,pad:"same"===s?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:a}),"channelsFirst"===i&&(u=Oy(u,[0,3,1,2])),u})}function ta(t,e,n,r){function s(t){return null==t||Array.isArray(t)?t:[t]}if(Array.isArray(t)){if(null!=e||null!=n)throw new nC("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}return{inputs:t,initialState:e=s(e),constants:n=s(n)}}function ea(t,e,n,r=!1,s,i,o=!1,a=!1){return en(()=>{const i=e.shape.length;if(3>i)throw new nC(`Input should be at least 3D, but is ${i}D.`);const o=[1,0].concat(li(2,i));e=Oy(e,o),null!=s&&((s=yy(yy(s,"bool"),"float32")).rank===i-1&&(s=hx(s,-1)),s=Oy(s,o)),r&&(e=Gw(e,0),null!=s&&(s=Gw(s,0)));const u=[];let l,c=n;const h=e.shape[0],d=kv(e);let f,p;null!=s&&(f=kv(s));for(let e=0;h>e;++e){const n=d[e],r=en(()=>t(n,c));if(null==s)l=r[0],c=r[1];else{const t=en(()=>{const t=f[e],n=Rx(Yx(t),t),s=Hy(Jy(r[0],t),Jy(c[0],n)),i=c.map((e,s)=>Hy(Jy(r[1][s],t),Jy(e,n)));return{output:s,newStates:i}});l=t.output,c=t.newStates}a&&u.push(l)}return a&&(p=mv(u,1)),[l,p,c]})}function na(t){const{ones:e,rate:n,training:r=!1,count:s=1,dropoutFunc:i}=t,o=()=>null!=i?i(e(),n):Ci(e(),n),a=()=>Si(o,e,r);return s&&s>1?Array(s).fill(void 0).map(a).map(t=>rn(t.clone())):rn(a().clone())}function ra(t,e){for(;0>t;)t+=e;return t}function sa(t,e,n,r,s,i=.001){let o;if(2===t.rank)o=wg(t,e,n,r,s,i);else if(3===t.rank)o=vg(t,e,n,r,s,i);else{if(4!==t.rank)throw new rC(`batchNormalization is not implemented for array of rank ${t.rank} yet`);o=$g(t,e,n,r,s,i)}return o}function ia(t,e,n,r,s,i){return en(()=>{let o;Zs(s),ti(i),Qs(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),t=Yo(t,s);const a="same"===r?"same":"valid";return o="max"===i?Px(t,e,n,a):hg(t,e,n,a),"channelsFirst"===s&&(o=Oy(o,[0,3,1,2])),o})}function oa(t,e,n,r,s,i){return en(()=>{let o;Zs(s),ti(i),Qs(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),t=Zo(t,s);const a="same"===r?"same":"valid";return o="max"===i?Bx(t,e,n,a):dg(t,e,n,a),"channelsFirst"===s&&(o=Oy(o,[0,4,1,2,3])),o})}function aa(t){return new BE(t)}function ua(t){return new UE(t)}function la(t){return new qE(t)}function ca(t){return new KE(t)}function ha(t){return new ZE(t)}function da(t){return new PE(t)}function fa(t){return new WE(t)}function pa(t,e){return e>t}function ma(t,e){return t>e}function ba(t){return xT[t]}function ya(t,e,n,r,s){const i=e.inputParams[t];if(i&&void 0!==i.inputIndexStart){const t=i.inputIndexStart,o=0===i.inputIndexEnd?void 0:void 0===i.inputIndexEnd?t+1:i.inputIndexEnd;if("tensor"===i.type)return ga(e.inputNames[i.inputIndexStart],n,r,s);if("tensors"===i.type)return e.inputNames.slice(t,o).map(t=>ga(t,n,r,s));const a=ga(e.inputNames.slice(t)[0],n,r,s),u=a.dataSync();return"number"===i.type?u[0]:lt(a.shape,u)}const o=e.attrParams[t];return o&&o.value}function ga(t,e,n,r){const[s,i]=va(t);if(null!=r){const t=r.getHashTableHandleByName(s);if(null!=t)return t}const o=n.currentContextIds.find(t=>!!e[wa(s,t)]);return void 0!==o?e[wa(s,o)][i]:void 0}function xa(t,e){const[n,r,s]=va(t);return[wa(n,e&&e.currentContextId),r,s]}function wa(t,e){return e?`${t}-${e}`:t}function va(t){const e=t.split(":");if(1===e.length)return[t,0,void 0];const n=e[0],r=3===e.length?e[1]:void 0;return[n,Number(e[e.length-1]),r]}function $a(t,e,n){let r=ya("pad",t,e,n);if("explicit"===r){r=ya("explicitPaddings",t,e,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let t=0;4>t;t++)s[t][0]=r[2*t],s[t][1]=r[2*t+1];return s}return r}function ka(t){return t.kept?t:gy(t)}function Na(t,e){const n=Array.isArray(t)?String.fromCharCode.apply(null,t):(t=>{const e=gt().global;if(void 0!==e.atob)return e.atob(t);if("undefined"!=typeof Buffer)return new Buffer(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")})(t);return e?n:n.toLowerCase()}function Ca(t,e,n,r=!1){const s=t[e];return null!=s?Na(s.s,r):n}function Sa(t,e,n){const r=t[e];return r?r.b:n}function Ea(t,e,n){const r=t[e]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof s?s:parseInt(s,10)}function Ta(t){switch("string"==typeof t&&(t=pT[t]),t){case pT.DT_FLOAT:case pT.DT_HALF:return"float32";case pT.DT_INT32:case pT.DT_INT64:case pT.DT_INT8:case pT.DT_UINT8:return"int32";case pT.DT_BOOL:return"bool";case pT.DT_DOUBLE:return"float32";case pT.DT_STRING:return"string";default:return null}}function _a(t,e,n){const r=t[e];return r&&r.func?r.func.name:n}function Ra(t,e,n){const r=t[e];return r&&r.type?Ta(r.type):n}function Aa(t,e,n){const r=t[e];return r&&r.list&&r.list.type?r.list.type.map(t=>Ta(t)):n}function Oa(t){if(!t.unknownRank)return null!=t.dim?t.dim.map(t=>"number"==typeof t.size?t.size:parseInt(t.size,10)):[]}function Ia(t,e,n){const r=t[e];return r&&r.shape?Oa(r.shape):n}function Fa(t,e,n){const r=t[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(t=>"number"==typeof t?t:parseInt(t,10)):n}function Ma(t,e,n,r=!1){const s=t[e];return s&&s.list&&s.list.s?s.list.s.map(t=>Na(t,r)):n}function Da(t,e,n){const r=t[e];return r&&r.list&&r.list.shape?r.list.shape.map(t=>Oa(t)):n}function La(t,e,n){const r=t[e];return r&&r.list&&r.list.b?r.list.b:n}function Va(t,e,n=""){if("number"!=typeof t&&"number"!=typeof e){F(t.length===e.length,()=>n+` Shapes ${t} and ${e} must match`);for(let r=0;r<t.length;r++){const s=t[r],i=e[r];F(0>s||0>i||s===i,()=>n+` Shapes ${t} and ${e} must match`)}}}function Pa(t){return"number"!=typeof t&&!t.some(t=>0>t)}function Ba(t,e,n){let r=za(t,n);const s=!Pa(r);if(s&&0===e.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&e.forEach(t=>{r=za(t.shape,r)}),!Pa(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function za(t,e){if("number"==typeof t)return e;if("number"==typeof e)return t;if(t.length!==e.length)throw new Error(`Incompatible ranks during merge: ${t} vs. ${e}`);const n=[];for(let r=0;r<t.length;++r){const s=t[r],i=e[r];if(s>=0&&i>=0&&s!==i)throw new Error(`Incompatible shape during merge: ${t} vs. ${e}`);n[r]=0>s?i:s}return n}function Wa(t,e,n){const[r,s]=ya("fusedOps",t,e,n),i="biasadd"===r,o=!i,a="prelu"===s,u="fusedbatchnorm"===r,l=ya("numArgs",t,e,n);if(i){if(a&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&i&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=ya("strides",t,e,n),h=$a(t,e,n),d=ya("dataFormat",t,e,n).toUpperCase(),f=ya("dilations",t,e,n);let[p,m]=ya("args",t,e,n);return o&&(m=p,p=void 0),{stride:c,pad:h,dataFormat:d,dilations:f,biasArg:p,preluArg:m,activationFunc:s,leakyreluAlpha:ya("leakyreluAlpha",t,e,n)}}function Ua(t,e,n){return{boxes:ya("boxes",t,e,n),scores:ya("scores",t,e,n),maxOutputSize:ya("maxOutputSize",t,e,n),iouThreshold:ya("iouThreshold",t,e,n),scoreThreshold:ya("scoreThreshold",t,e,n),softNmsSigma:ya("softNmsSigma",t,e,n)}}function Ga(t,e,n,r,s=en){const i=((t,e,n)=>{switch(t.category){case"arithmetic":return s(()=>((t,e,n,r=BT)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(ya("a",t,e,n),ya("b",t,e,n))];case"AddN":return[r.addN(ya("tensors",t,e,n))];case"FloorMod":case"Mod":return[r.mod(ya("a",t,e,n),ya("b",t,e,n))];case"Mul":return[r.mul(ya("a",t,e,n),ya("b",t,e,n))];case"RealDiv":case"Div":return[r.div(ya("a",t,e,n),ya("b",t,e,n))];case"DivNoNan":return[r.divNoNan(ya("a",t,e,n),ya("b",t,e,n))];case"FloorDiv":return[r.floorDiv(ya("a",t,e,n),ya("b",t,e,n))];case"Sub":return[r.sub(ya("a",t,e,n),ya("b",t,e,n))];case"Minimum":return[r.minimum(ya("a",t,e,n),ya("b",t,e,n))];case"Maximum":return[r.maximum(ya("a",t,e,n),ya("b",t,e,n))];case"Pow":return[r.pow(ya("a",t,e,n),ya("b",t,e,n))];case"SquaredDifference":return[r.squaredDifference(ya("a",t,e,n),ya("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"basic_math":return s(()=>((t,e,n,r=BT)=>{switch(t.op){case"Abs":case"ComplexAbs":return[r.abs(ya("x",t,e,n))];case"Acos":return[r.acos(ya("x",t,e,n))];case"Acosh":return[r.acosh(ya("x",t,e,n))];case"Asin":return[r.asin(ya("x",t,e,n))];case"Asinh":return[r.asinh(ya("x",t,e,n))];case"Atan":return[r.atan(ya("x",t,e,n))];case"Atan2":return[r.atan2(ya("x",t,e,n),ya("y",t,e,n))];case"Atanh":return[r.atanh(ya("x",t,e,n))];case"Ceil":return[r.ceil(ya("x",t,e,n))];case"Complex":return[r.complex(ya("real",t,e,n),ya("imag",t,e,n))];case"Cos":return[r.cos(ya("x",t,e,n))];case"Cosh":return[r.cosh(ya("x",t,e,n))];case"Elu":return[r.elu(ya("x",t,e,n))];case"Erf":return[r.erf(ya("x",t,e,n))];case"Exp":return[r.exp(ya("x",t,e,n))];case"Expm1":return[r.expm1(ya("x",t,e,n))];case"Floor":return[r.floor(ya("x",t,e,n))];case"Log":return[r.log(ya("x",t,e,n))];case"Log1p":return[r.log1p(ya("x",t,e,n))];case"Imag":return[r.imag(ya("x",t,e,n))];case"Neg":return[r.neg(ya("x",t,e,n))];case"Reciprocal":return[r.reciprocal(ya("x",t,e,n))];case"Real":return[r.real(ya("x",t,e,n))];case"Relu":return[r.relu(ya("x",t,e,n))];case"Round":return[r.round(ya("x",t,e,n))];case"Selu":return[r.selu(ya("x",t,e,n))];case"Sigmoid":return[r.sigmoid(ya("x",t,e,n))];case"Sin":return[r.sin(ya("x",t,e,n))];case"Sign":return[r.sign(ya("x",t,e,n))];case"Sinh":return[r.sinh(ya("x",t,e,n))];case"Softplus":return[r.softplus(ya("x",t,e,n))];case"Sqrt":return[r.sqrt(ya("x",t,e,n))];case"Square":return[r.square(ya("x",t,e,n))];case"Tanh":return[r.tanh(ya("x",t,e,n))];case"Tan":return[r.tan(ya("x",t,e,n))];case"ClipByValue":return[r.clipByValue(ya("x",t,e,n),ya("clipValueMin",t,e,n),ya("clipValueMax",t,e,n))];case"Relu6":return[r.relu6(ya("x",t,e,n))];case"Rsqrt":return[r.rsqrt(ga(t.inputNames[0],e,n))];case"Prod":return[r.prod(ya("x",t,e,n),ya("axes",t,e,n))];case"LeakyRelu":return[r.leakyRelu(ya("x",t,e,n),ya("alpha",t,e,n))];case"Prelu":return[r.prelu(ya("x",t,e,n),ya("alpha",t,e,n))];case"IsNan":return[r.isNaN(ga(t.inputNames[0],e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"control":return((t,e,n)=>Jh(void 0,null,function*(){switch(t.op){case"If":case"StatelessIf":{const r=ya("thenBranch",t,e,n),s=ya("elseBranch",t,e,n),i=ya("cond",t,e,n),o=ya("args",t,e,n);return(yield i.data())[0]?n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=ya("body",t,e,n),s=ya("cond",t,e,n),i=ya("args",t,e,n),o=yield n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap),a=i.map(t=>t.id);let u=yield o[0].data();o.forEach(t=>{t.kept||-1!==a.indexOf(t.id)||t.dispose()});let l=i;for(;u[0];){const t=l;l=yield n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const e=l.map(t=>t.id);t.forEach(t=>{t.kept||-1!==a.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()});const i=yield n.functionMap[s].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=yield i[0].data(),i.forEach(t=>{t.kept||-1!==a.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()})}return l}case"LoopCond":return[ka(ya("pred",t,e,n))];case"Switch":{const r=ya("pred",t,e,n);let s=ya("data",t,e,n);return s.kept||(s=ka(s)),(yield r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=t.inputNames.find(t=>void 0!==ga(t,e,n));return r?[ka(ga(r,e,n))]:void 0}case"Enter":{const r=ya("frameName",t,e,n),s=ya("tensor",t,e,n);return n.enterFrame(r),[ka(s)]}case"Exit":{const r=ya("tensor",t,e,n);return n.exitFrame(),[ka(r)]}case"NextIteration":{const r=ya("tensor",t,e,n);return n.nextIteration(),[ka(r)]}case"TensorArrayV3":{const r=ya("size",t,e,n),s=ya("dtype",t,e,n),i=ya("elementShape",t,e,n),o=ya("dynamicSize",t,e,n),a=ya("clearAfterRead",t,e,n),u=ya("identicalElementShapes",t,e,n),l=ya("name",t,e,n),c=new zT(l,s,r,i,u,o,a);return n.addTensorArray(c),[c.idTensor,sr(1)]}case"TensorArrayWriteV3":{const r=ya("tensorArrayId",t,e,n),s=ya("index",t,e,n),i=ya("tensor",t,e,n),o=n.getTensorArray(r.id);return o.write(s,i),[o.idTensor]}case"TensorArrayReadV3":{const r=ya("tensorArrayId",t,e,n),s=ya("index",t,e,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=ya("tensorArrayId",t,e,n),s=ya("indices",t,e,n),i=ya("dtype",t,e,n);return[n.getTensorArray(r.id).gather(s,i)]}case"TensorArrayScatterV3":{const r=ya("tensorArrayId",t,e,n),s=ya("indices",t,e,n),i=ya("tensor",t,e,n),o=n.getTensorArray(r.id);return o.scatter(s,i),[o.idTensor]}case"TensorArrayConcatV3":{const r=ya("tensorArrayId",t,e,n),s=n.getTensorArray(r.id),i=ya("dtype",t,e,n);return[s.concat(i)]}case"TensorArraySplitV3":{const r=ya("tensorArrayId",t,e,n),s=ya("tensor",t,e,n),i=ya("lengths",t,e,n),o=n.getTensorArray(r.id);return o.split(i,s),[o.idTensor]}case"TensorArraySizeV3":{const r=ya("tensorArrayId",t,e,n);return[sr(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=ya("tensorArrayId",t,e,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=ya("tensorListId",t,e,n),s=ya("index",t,e,n),i=ya("tensor",t,e,n),o=n.getTensorList(r.id);return o.setItem(s,i),[o.idTensor]}case"TensorListGetItem":{const r=ya("tensorListId",t,e,n),s=ya("index",t,e,n),i=ya("elementShape",t,e,n),o=ya("elementDType",t,e,n);return[n.getTensorList(r.id).getItem(s,i,o)]}case"TensorListScatterV2":case"TensorListScatter":{const r=ya("indices",t,e,n),s=((t,e,n,r)=>{if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const i=new WT([],n,t.dtype,r),o=kv(t,0);return e.forEach((t,e)=>{i.setItem(t,o[e])}),i})(ya("tensor",t,e,n),r,ya("elementShape",t,e,n),ya("numElements",t,e,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=ya("elementShape",t,e,n),s=ya("elementDType",t,e,n);let i;i="TensorListReserve"===t.op?"numElements":"maxNumElements";const o=ya(i,t,e,n),a=((t,e,n,r)=>new WT([],t,e,r))(r,s,0,"TensorListReserve"===t.op?-1:o);return n.addTensorList(a),[a.idTensor]}case"TensorListGather":{const r=ya("tensorListId",t,e,n),s=ya("indices",t,e,n),i=ya("elementShape",t,e,n),o=ya("elementDType",t,e,n);return[n.getTensorList(r.id).gather(s,o,i)]}case"TensorListStack":{const r=ya("tensorListId",t,e,n),s=ya("elementShape",t,e,n),i=ya("elementDType",t,e,n),o=ya("numElements",t,e,n);return[n.getTensorList(r.id).stack(s,i,o)]}case"TensorListFromTensor":{const r=((t,e,n)=>{const r=t.dtype;if(1>t.shape.length)throw new Error(`Tensor must be at least a vector, but saw shape: ${t.shape}`);if(t.dtype!==n)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${n}`);Va(t.shape.slice(1),e,"TensorList shape mismatch: ");const s=kv(t);return new WT(s,e,r)})(ya("tensor",t,e,n),ya("elementShape",t,e,n),ya("elementDType",t,e,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=ya("tensorListId",t,e,n),s=n.getTensorList(r.id),i=ya("dtype",t,e,n),o=ya("elementShape",t,e,n);return[s.concat(i,o)]}case"TensorListPushBack":{const r=ya("tensorListId",t,e,n),s=ya("tensor",t,e,n),i=n.getTensorList(r.id);return i.pushBack(s),[i.idTensor]}case"TensorListPopBack":{const r=ya("tensorListId",t,e,n),s=ya("elementShape",t,e,n),i=ya("elementDType",t,e,n);return[n.getTensorList(r.id).popBack(s,i)]}case"TensorListSplit":{const r=ya("tensor",t,e,n),s=ya("elementShape",t,e,n),i=((t,e,n)=>{let r=0;const s=e.map(t=>(r+=t,r));if(r!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${t.shape}`);const i=za(t.shape.slice(1),n),o=0===r?0:t.size/r,a=en(()=>{const n=[];t=cg(t,[1,r,o]);for(let r=0;r<e.length;++r){const a=[0,0===r?0:s[r-1],0],u=[1,e[r],o];n[r]=cg(mg(t,a,u),i)}return t.dispose(),n}),u=new WT([],n,t.dtype,e.length);for(let l=0;l<a.length;l++)u.setItem(l,a[l]);return u})(r,ya("lengths",t,e,n),s);return n.addTensorList(i),[i.idTensor]}case"TensorListLength":{const r=ya("tensorListId",t,e,n);return[sr(n.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{const r=ya("tensorListId",t,e,n),s=ya("size",t,e,n),i=n.getTensorList(r.id).resize(s);return n.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}}))(t,e,n);case"convolution":return s(()=>((t,e,n,r=BT)=>{switch(t.op){case"Conv1D":{const s=ya("stride",t,e,n),i=ya("pad",t,e,n),o=ya("dataFormat",t,e,n).toUpperCase(),a=ya("dilation",t,e,n);return[r.conv1d(ya("x",t,e,n),ya("filter",t,e,n),s,i,o,a)]}case"Conv2D":{const s=ya("strides",t,e,n),i=$a(t,e,n),o=ya("dataFormat",t,e,n).toUpperCase(),a=ya("dilations",t,e,n);return[r.conv2d(ya("x",t,e,n),ya("filter",t,e,n),[s[1],s[2]],i,o,[a[1],a[2]])]}case"_FusedConv2D":{const{stride:s,pad:i,dataFormat:o,dilations:a,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:h}=Wa(t,e,n);return[r.fused.conv2d({x:ya("x",t,e,n),filter:ya("filter",t,e,n),strides:[s[1],s[2]],pad:i,dataFormat:o,dilations:[a[1],a[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:i,dataFormat:o,dilations:a,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:h}=Wa(t,e,n);return[r.fused.depthwiseConv2d({x:ya("x",t,e,n),filter:ya("filter",t,e,n),strides:[s[1],s[2]],pad:i,dataFormat:o,dilations:[a[1],a[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=ya("outputShape",t,e,n),i=ya("strides",t,e,n),o=$a(t,e,n);return[r.conv2dTranspose(ya("x",t,e,n),ya("filter",t,e,n),s,[i[1],i[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=ya("strides",t,e,n),i=$a(t,e,n),o=ya("dilations",t,e,n),a=ya("dataFormat",t,e,n).toUpperCase();return[r.depthwiseConv2d(ya("input",t,e,n),ya("filter",t,e,n),[s[1],s[2]],i,a,[o[1],o[2]])]}case"Conv3D":{const s=ya("strides",t,e,n),i=ya("pad",t,e,n),o=ya("dataFormat",t,e,n).toUpperCase(),a=ya("dilations",t,e,n);return[r.conv3d(ya("x",t,e,n),ya("filter",t,e,n),[s[1],s[2],s[3]],i,o,[a[1],a[2],a[3]])]}case"AvgPool":{const s=ya("strides",t,e,n),i=ya("pad",t,e,n),o=ya("kernelSize",t,e,n);return[r.avgPool(ya("x",t,e,n),[o[1],o[2]],[s[1],s[2]],i)]}case"MaxPool":{const s=ya("strides",t,e,n),i=ya("pad",t,e,n),o=ya("kernelSize",t,e,n);return[r.maxPool(ya("x",t,e,n),[o[1],o[2]],[s[1],s[2]],i)]}case"MaxPoolWithArgmax":{const s=ya("strides",t,e,n),i=ya("pad",t,e,n),o=ya("kernelSize",t,e,n),a=ya("includeBatchInIndex",t,e,n),{result:u,indexes:l}=r.maxPoolWithArgmax(ya("x",t,e,n),[o[1],o[2]],[s[1],s[2]],i,a);return[u,l]}case"AvgPool3D":{const s=ya("strides",t,e,n),i=ya("pad",t,e,n),o=ya("kernelSize",t,e,n);return[r.avgPool3d(ya("x",t,e,n),[o[1],o[2],o[3]],[s[1],s[2],s[3]],i)]}case"MaxPool3D":{const s=ya("strides",t,e,n),i=ya("pad",t,e,n),o=ya("kernelSize",t,e,n);return[r.maxPool3d(ya("x",t,e,n),[o[1],o[2],o[3]],[s[1],s[2],s[3]],i)]}case"Dilation2D":{const s=ya("strides",t,e,n),i=ya("pad",t,e,n),o=ya("dilations",t,e,n),a=s[1],u=s[2],l=o[1],c=o[2];return[r.dilation2d(ya("x",t,e,n),ya("filter",t,e,n),[a,u],i,[l,c],"NHWC")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"creation":return s(()=>((t,e,n,r=BT)=>{switch(t.op){case"Fill":{const s=ya("shape",t,e,n),i=ya("dtype",t,e,n),o=ya("value",t,e,n);return[r.fill(s,o,i)]}case"LinSpace":{const s=ya("start",t,e,n),i=ya("stop",t,e,n),o=ya("num",t,e,n);return[r.linspace(s,i,o)]}case"Multinomial":{const s=ya("logits",t,e,n),i=ya("numSamples",t,e,n),o=ya("seed",t,e,n);return[r.multinomial(s,i,o)]}case"OneHot":{const s=ya("indices",t,e,n),i=ya("depth",t,e,n),o=ya("onValue",t,e,n),a=ya("offValue",t,e,n),u=ya("dtype",t,e,n);return[r.oneHot(s,i,o,a,u)]}case"Ones":return[r.ones(ya("shape",t,e,n),ya("dtype",t,e,n))];case"OnesLike":return[r.onesLike(ya("x",t,e,n))];case"RandomStandardNormal":return[r.randomStandardNormal(ya("shape",t,e,n),ya("dtype",t,e,n),ya("seed",t,e,n))];case"RandomUniform":return[r.randomUniform(ya("shape",t,e,n),ya("minval",t,e,n),ya("maxval",t,e,n),ya("dtype",t,e,n))];case"Range":{const s=ya("start",t,e,n),i=ya("stop",t,e,n),o=ya("step",t,e,n);return[r.range(s,i,o,ya("dtype",t,e,n))]}case"TruncatedNormal":{const s=ya("shape",t,e,n),i=ya("mean",t,e,n),o=ya("stdDev",t,e,n),a=ya("seed",t,e,n);return[r.truncatedNormal(s,i,o,ya("dtype",t,e,n),a)]}case"Zeros":return[r.zeros(ya("shape",t,e,n),ya("dtype",t,e,n))];case"ZerosLike":return[r.zerosLike(ya("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"dynamic":return Jh(void 0,[t,e,n,void 0],function*(t,e,n,r,s=BT){switch(t.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:i,maxOutputSize:o,iouThreshold:a,scoreThreshold:u,softNmsSigma:l}=Ua(t,e,n),c=yield s.image.nonMaxSuppressionWithScoreAsync(r,i,o,a,u,l);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:i,maxOutputSize:o,iouThreshold:a,scoreThreshold:u}=Ua(t,e,n),l=ya("padToMaxOutputSize",t,e,n),c=yield s.image.nonMaxSuppressionPaddedAsync(r,i,o,a,u,l);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:i,maxOutputSize:o,iouThreshold:a,scoreThreshold:u}=Ua(t,e,n);return[yield s.image.nonMaxSuppressionAsync(r,i,o,a,u)]}case"Where":{const r=s.cast(ya("condition",t,e,n),"bool"),i=[yield s.whereAsync(r)];return r.dispose(),i}case"ListDiff":return s.setdiff1dAsync(ya("x",t,e,n),ya("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}});case"evaluation":return s(()=>((t,e,n,r=BT)=>{switch(t.op){case"LowerBound":{const s=ya("sortedSequence",t,e,n),i=ya("values",t,e,n);return[r.lowerBound(s,i)]}case"TopKV2":{const s=ya("x",t,e,n),i=ya("k",t,e,n),o=ya("sorted",t,e,n),a=r.topk(s,i,o);return[a.values,a.indices]}case"UpperBound":{const s=ya("sortedSequence",t,e,n),i=ya("values",t,e,n);return[r.upperBound(s,i)]}case"Unique":{const s=ya("x",t,e,n),i=r.unique(s);return[i.values,i.indices]}case"UniqueV2":{const s=ya("x",t,e,n),i=ya("axis",t,e,n),o=r.unique(s,i);return[o.values,o.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"image":return s(()=>((t,e,n,r=BT)=>{switch(t.op){case"ResizeBilinear":{const s=ya("images",t,e,n),i=ya("size",t,e,n),o=ya("alignCorners",t,e,n),a=ya("halfPixelCenters",t,e,n);return[r.image.resizeBilinear(s,[i[0],i[1]],o,a)]}case"ResizeNearestNeighbor":{const s=ya("images",t,e,n),i=ya("size",t,e,n),o=ya("alignCorners",t,e,n),a=ya("halfPixelCenters",t,e,n);return[r.image.resizeNearestNeighbor(s,[i[0],i[1]],o,a)]}case"CropAndResize":{const s=ya("image",t,e,n),i=ya("boxes",t,e,n),o=ya("boxInd",t,e,n),a=ya("cropSize",t,e,n),u=ya("method",t,e,n),l=ya("extrapolationValue",t,e,n);return[r.image.cropAndResize(s,i,o,a,u,l)]}case"ImageProjectiveTransformV3":{const s=ya("images",t,e,n),i=ya("transforms",t,e,n),o=ya("outputShape",t,e,n),a=ya("fillValue",t,e,n),u=ya("interpolation",t,e,n),l=ya("fillMode",t,e,n);return[r.image.transform(s,i,u.toLowerCase(),l.toLowerCase(),a,o)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"graph":return s(()=>((t,e,n,r=BT)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const s=ya("default",t,e,n);return[ga(t.name,e,n)||s];case"Placeholder":return[ga(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[ka(ya("x",t,e,n))];case"IdentityN":return ya("x",t,e,n).map(t=>ka(t));case"Shape":return[r.tensor1d(ya("x",t,e,n).shape,"int32")];case"ShapeN":return ya("x",t,e,n).map(t=>r.tensor1d(t.shape));case"Size":return[r.scalar(ya("x",t,e,n).size,"int32")];case"Rank":return[r.scalar(ya("x",t,e,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const i=ya("x",t,e,n),o=ya("data",t,e,n);ya("message",t,e,n),ya("summarize",t,e,n);for(let t=0;t<o.length;t++);return[i];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"logical":return s(()=>((t,e,n,r=BT)=>{switch(t.op){case"Equal":return[r.equal(ya("a",t,e,n),ya("b",t,e,n))];case"NotEqual":return[r.notEqual(ya("a",t,e,n),ya("b",t,e,n))];case"Greater":return[r.greater(ya("a",t,e,n),ya("b",t,e,n))];case"GreaterEqual":return[r.greaterEqual(ya("a",t,e,n),ya("b",t,e,n))];case"Less":return[r.less(ya("a",t,e,n),ya("b",t,e,n))];case"LessEqual":return[r.lessEqual(ya("a",t,e,n),ya("b",t,e,n))];case"LogicalAnd":return[r.logicalAnd(ya("a",t,e,n),ya("b",t,e,n))];case"LogicalNot":return[r.logicalNot(ya("a",t,e,n))];case"LogicalOr":return[r.logicalOr(ya("a",t,e,n),ya("b",t,e,n))];case"Select":case"SelectV2":return[r.where(ya("condition",t,e,n),ya("a",t,e,n),ya("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"matrices":return s(()=>((t,e,n,r=BT)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(ya("a",t,e,n),ya("b",t,e,n),ya("transposeA",t,e,n),ya("transposeB",t,e,n))];case"Einsum":return[r.einsum(ya("equation",t,e,n),...ya("tensors",t,e,n))];case"Transpose":return[r.transpose(ya("x",t,e,n),ya("perm",t,e,n))];case"_FusedMatMul":const[s,i]=ya("fusedOps",t,e,n),o="biasadd"===s,a="prelu"===i,u=ya("numArgs",t,e,n),l=ya("leakyreluAlpha",t,e,n);if(o){if(a&&2!==u)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&1!==u)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=ya("args",t,e,n);return[r.fused.matMul({a:ya("a",t,e,n),b:ya("b",t,e,n),transposeA:ya("transposeA",t,e,n),transposeB:ya("transposeB",t,e,n),bias:c,activation:i,preluActivationWeights:h,leakyreluAlpha:l})];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"normalization":return s(()=>((t,e,n,r=BT)=>{switch(t.op){case"EuclideanNorm":return[r.euclideanNorm(ya("x",t,e,n),ya("axis",t,e,n),ya("keepDims",t,e,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(ya("x",t,e,n),ya("mean",t,e,n),ya("variance",t,e,n),ya("offset",t,e,n),ya("scale",t,e,n),ya("epsilon",t,e,n))];case"LRN":return[r.localResponseNormalization(ya("x",t,e,n),ya("radius",t,e,n),ya("bias",t,e,n),ya("alpha",t,e,n),ya("beta",t,e,n))];case"Softmax":return[r.softmax(ya("x",t,e,n))];case"LogSoftmax":return[r.logSoftmax(ya("x",t,e,n))];case"SparseToDense":return[r.sparseToDense(ya("sparseIndices",t,e,n),ya("outputShape",t,e,n),ya("sparseValues",t,e,n),ya("defaultValue",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"reduction":return s(()=>((t,e,n,r=BT)=>{switch(t.op){case"Max":{const s=ya("axis",t,e,n),i=ya("keepDims",t,e,n);return[r.max(ya("x",t,e,n),s,i)]}case"Mean":{const s=ya("axis",t,e,n),i=ya("keepDims",t,e,n);return[r.mean(ya("x",t,e,n),s,i)]}case"Min":{const s=ya("axis",t,e,n),i=ya("keepDims",t,e,n);return[r.min(ya("x",t,e,n),s,i)]}case"Sum":{const s=ya("axis",t,e,n),i=ya("keepDims",t,e,n);return[r.sum(ya("x",t,e,n),s,i)]}case"All":{const s=ya("axis",t,e,n),i=ya("keepDims",t,e,n);return[r.all(ya("x",t,e,n),s,i)]}case"Any":{const s=ya("axis",t,e,n),i=ya("keepDims",t,e,n);return[r.any(ya("x",t,e,n),s,i)]}case"ArgMax":{const s=ya("axis",t,e,n);return[r.argMax(ya("x",t,e,n),s)]}case"ArgMin":{const s=ya("axis",t,e,n);return[r.argMin(ya("x",t,e,n),s)]}case"Prod":{const s=ya("axis",t,e,n),i=ya("keepDims",t,e,n);return[r.prod(ya("x",t,e,n),s,i)]}case"Cumprod":{const s=ya("axis",t,e,n),i=ya("exclusive",t,e,n),o=ya("reverse",t,e,n);return[r.cumprod(ya("x",t,e,n),s,i,o)]}case"Cumsum":{const s=ya("axis",t,e,n),i=ya("exclusive",t,e,n),o=ya("reverse",t,e,n);return[r.cumsum(ya("x",t,e,n),s,i,o)]}case"Bincount":const s=ya("x",t,e,n),i=ya("weights",t,e,n),o=ya("size",t,e,n);return[r.bincount(s,i,o)];case"DenseBincount":{const s=ya("x",t,e,n),i=ya("weights",t,e,n),o=ya("size",t,e,n),a=ya("binaryOutput",t,e,n);return[r.denseBincount(s,i,o,a)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"slice_join":return s(()=>Zh(t,e,n));case"sparse":return s(()=>((t,e,n,r=BT)=>{switch(t.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:i,emptyRowIndicator:o,reverseIndexMap:a}=r.sparse.sparseFillEmptyRows(ya("indices",t,e,n),ya("values",t,e,n),ya("denseShape",t,e,n),ya("defaultValue",t,e,n));return[s,i,o,a]}case"SparseReshape":{const{outputIndices:s,outputShape:i}=r.sparse.sparseReshape(ya("inputIndices",t,e,n),ya("inputShape",t,e,n),ya("newShape",t,e,n));return[s,i]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(ya("data",t,e,n),ya("indices",t,e,n),ya("segmentIds",t,e,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(ya("data",t,e,n),ya("indices",t,e,n),ya("segmentIds",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"spectral":return s(()=>((t,e,n,r=BT)=>{switch(t.op){case"FFT":return[r.fft(ya("x",t,e,n))];case"IFFT":return[r.ifft(ya("x",t,e,n))];case"RFFT":return[r.rfft(ya("x",t,e,n))];case"IRFFT":return[r.irfft(ya("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"string":return s(()=>((t,e,n,r=BT)=>{switch(t.op){case"StringNGrams":{const{nGrams:s,nGramsSplits:i}=r.string.stringNGrams(ya("data",t,e,n),ya("dataSplits",t,e,n),ya("separator",t,e,n),ya("nGramWidths",t,e,n),ya("leftPad",t,e,n),ya("rightPad",t,e,n),ya("padWidth",t,e,n),ya("preserveShortSequences",t,e,n));return[s,i]}case"StringSplit":{const{indices:s,values:i,shape:o}=r.string.stringSplit(ya("input",t,e,n),ya("delimiter",t,e,n),ya("skipEmpty",t,e,n));return[s,i,o]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(ya("input",t,e,n),ya("numBuckets",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"transformation":return s(()=>((t,e,n,r=BT)=>{switch(t.op){case"Cast":return[r.cast(ya("x",t,e,n),ya("dtype",t,e,n))];case"ExpandDims":{const s=ya("axis",t,e,n);return[r.expandDims(ya("x",t,e,n),s)]}case"Squeeze":{const s=ya("axis",t,e,n);return[r.squeeze(ya("x",t,e,n),s)]}case"Reshape":return[r.reshape(ya("x",t,e,n),ya("shape",t,e,n))];case"MirrorPad":return[r.mirrorPad(ya("x",t,e,n),ya("padding",t,e,n),ya("mode",t,e,n))];case"PadV2":case"Pad":return[r.pad(ya("x",t,e,n),ya("padding",t,e,n),ya("constantValue",t,e,n))];case"SpaceToBatchND":{const s=ya("blockShape",t,e,n),i=ya("paddings",t,e,n);return[r.spaceToBatchND(ya("x",t,e,n),s,i)]}case"BatchToSpaceND":{const s=ya("blockShape",t,e,n),i=ya("crops",t,e,n);return[r.batchToSpaceND(ya("x",t,e,n),s,i)]}case"DepthToSpace":{const s=ya("blockSize",t,e,n),i=ya("dataFormat",t,e,n).toUpperCase();return[r.depthToSpace(ya("x",t,e,n),s,i)]}case"BroadcastTo":return[r.broadcastTo(ya("x",t,e,n),ya("shape",t,e,n))];case"BroadcastArgs":return[r.broadcastArgs(ya("s0",t,e,n),ya("s1",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"hash_table":return((t,e,n,r)=>Jh(void 0,null,function*(){switch(t.op){case"HashTable":case"HashTableV2":{const s=ya("keyDType",t,e,n),i=ya("valueDType",t,e,n),o=new UT(s,i);return r.addHashTable(t.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{const s=ya("tableHandle",t,e,n,r),i=ya("keys",t,e,n),o=ya("values",t,e,n),a=r.getHashTableById(s.id);return[yield a.import(i,o)]}case"LookupTableFind":case"LookupTableFindV2":{const s=ya("tableHandle",t,e,n,r),i=ya("keys",t,e,n),o=ya("defaultValue",t,e,n),a=r.getHashTableById(s.id);return[yield a.find(i,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=ya("tableHandle",t,e,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${t.op} is not implemented`)}}))(t,e,n,r);case"custom":const i=ba(t.op);if(i&&i.customExecutor)return i.customExecutor(new PT(t,e,n));throw TypeError(`Custom op ${t.op} is not registered.`);default:throw TypeError(`Unknown op '${t.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return bt(i)?i.then(t=>[].concat(t)):[].concat(i)}function ja(t,e,n,r){const s=new Set,i=[];let o=null,a=null;const u=new Set,l=Object.keys(t).map(t=>va(t)[0]);let c=[];null!=r&&(c=r.map(t=>va(t.name)[0]));const h=[...e];for(;h.length>0;){const t=h.pop();(qa(t)||Ha(t)||Xa(t))&&null==o&&(o=t,a=o.children.map(t=>t.name).filter(t=>s.has(t))),s.add(t.name),null==n[t.name]&&-1===l.indexOf(t.name)&&-1===c.indexOf(t.name)&&(0!==t.inputs.length?t.inputs.forEach(t=>{u.has(t.name)||(u.add(t.name),h.push(t))}):i.push(t.name))}return{inputs:t,outputs:e,usedNodes:s,missingInputs:i,dynamicNode:o,syncInputs:a}}function qa(t){return jT.indexOf(t.op)>=0}function Ha(t){return qT.indexOf(t.op)>=0}function Xa(t){return HT.indexOf(t.op)>=0}function Ka(t,e,n=new Map,r=new Set){if(null==t)return null;if("function"==typeof Blob&&t instanceof Blob)return t.slice();if(r.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(tu(t)){const s=Array.isArray(t)?[]:{};r.add(t);for(const i in t){const o=Ka(t[i],e,n,r);s[i]=o}return r.delete(t),t.__proto__&&(s.__proto__=t.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${t}`)}return n.set(t,s.value),s.value}function Ja(t,e=Za){return Ya(t,e)}function Ya(t,e,n=new Set){const r=t[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(tu(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const i in r){const r=Ya(t.map(t=>t[i]),e,n);s[i]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function Za(t){return null===t?null:tu(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}function Qa(t,e){return Jh(this,null,function*(){const n=new Map;Ka(t,e,n);for(const t of Array.from(n.keys())){const e=n.get(t);if(bt(e)){const r=yield e;n.set(t,r)}}return Ka(t,e,n)})}function tu(t){let e=!1;if(gt().get("IS_BROWSER"))e=t instanceof TextDecoder;else{const{StringDecoder:n}=require("string_decoder");e=t instanceof n}return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"==typeof t&&!(t instanceof Nb)&&!(t instanceof Promise)&&!e)}function eu(t){return t instanceof Nb?{value:t.clone(),recurse:!1}:tu(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}function nu(t){return new e_(t)}function ru(t){return new n_(t)}function su(t,e=null){return new class extends x_{constructor(){super(...arguments),this.size=e}iterator(){return Jh(this,null,function*(){return t()})}}}function iu(t){return null===t?null:null==(e=t[0])||null===(n=e)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(e)||"object"==typeof e&&e instanceof Nb||Z(e)?{value:(t=>{if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof Nb?mv(t):$e(t)})(t),recurse:!1}:{value:null,recurse:!0};var e,n}function ou(t){return"string"==typeof t&&"file://"===t.slice(0,7)}function au(t,e){Array.isArray(t)||(t=[t]),t.forEach(t=>{null!=t&&F("complex64"!==t.dtype,()=>`${e} does not support complex64 tensors in the CPU backend.`)})}function uu(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}function lu(t){return(e,n,r,s,i)=>{const o=ln(e,n),a=o.length,u=at(o),l=H(i,V(o)),c=e.length,h=n.length,d=at(e),f=at(n),p=an(e,o),m=an(n,o);if(p.length+m.length===0)for(let b=0;b<l.length;++b)l[b]=t(r[b%r.length],s[b%s.length]);else for(let b=0;b<l.length;++b){const e=mt(b,a,u),n=e.slice(-c);p.forEach(t=>n[t]=0);const i=pt(n,c,d),o=e.slice(-h);m.forEach(t=>o[t]=0);const y=pt(o,h,f);l[b]=t(r[i],s[y])}return[l,o]}}function cu(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,a=n.makeTensorInfo(r.shape,"complex64");return n.data.get(a.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",i),imag:n.makeTensorInfo(s.shape,"float32",o)},a}function hu(t,e,n="float32"){if("complex64"===n)return cu({inputs:{real:hu(t,e,"float32"),imag:hu(t,e,"float32")},backend:t});const r=ht(V(e),n);return t.makeTensorInfo(e,n,r)}function du(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function fu(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.data.get(r.dataId).complexTensorInfos.real,i=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,i)}function pu(t,e,n,r){if("int32"===r)return[e,"int32",Int32Array.from(t)];if("bool"===r){const r=jt([0],n),[s,i]=lu((t,e)=>t!==e?1:0)(e,[],t,r,"bool");return[i,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function mu(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dtype:i}=r;if("complex64"===i){if("complex64"===s.dtype)return du({inputs:{x:s},backend:n});const t=hu(n,s.shape,s.dtype),e=mu({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=cu({inputs:{real:e,imag:t},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),r}if("complex64"===s.dtype){const t=fu({inputs:{input:s},backend:n}),e=mu({inputs:{x:t},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(t),e}if(!Y(s.dtype,i)){const t=du({inputs:{x:s},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:i}}const o=n.data.get(s.dataId).values,[a,u,l]=pu(o,s.shape,s.dtype,i);return n.makeTensorInfo(a,u,l)}function bu(t,e,n,r){return null==n?({inputs:n,backend:s})=>{const{a:i,b:o}=n,a=s;au([i,o],t);const u=a.data.get(i.dataId).values,l=a.data.get(o.dataId).values,c="string"===i.dtype?Es(u):u,h="string"===i.dtype?Es(l):l,d=r||i.dtype,[f,p]=e(i.shape,o.shape,c,h,d);return a.makeTensorInfo(p,d,f)}:({inputs:t,backend:s})=>{const{a:i,b:o}=t,a=s;if("complex64"===i.dtype||"complex64"===o.dtype){const t=mu({inputs:{x:i},backend:a,attrs:{dtype:"complex64"}}),e=a.data.get(t.dataId),r=e.complexTensorInfos.real,s=e.complexTensorInfos.imag,u=a.data.get(r.dataId).values,l=a.data.get(s.dataId).values,c=mu({inputs:{x:o},backend:a,attrs:{dtype:"complex64"}}),h=a.data.get(c.dataId),d=h.complexTensorInfos.real,f=h.complexTensorInfos.imag,p=a.data.get(d.dataId).values,m=a.data.get(f.dataId).values,[b,y,g]=n(i.shape,o.shape,u,l,p,m),x=a.makeTensorInfo(g,"float32",b),w=a.makeTensorInfo(g,"float32",y),v=cu({inputs:{real:x,imag:w},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(w),v}{const t=a.data.get(i.dataId).values,n=a.data.get(o.dataId).values,s=r||i.dtype,[u,l]=e(i.shape,o.shape,t,n,s);return a.makeTensorInfo(l,s,u)}}}function yu(t){return(e,n,r,s,i,o)=>{const a=ln(e,n),u=V(a),l=a.length,c=at(a),h=H("float32",u),d=H("float32",u),f=an(e,a),p=an(n,a),m=Qr(r,s),b=Qr(i,o),y=e.length,g=at(e),x=n.length,w=at(n);if(f.length+p.length===0)for(let v=0;v<h.length;v++){const e=v%m.length,n=v%b.length,r=t(m[2*e],m[2*e+1],b[2*n],b[2*n+1]);h[v]=r.real,d[v]=r.imag}else for(let v=0;v<h.length;v++){const e=mt(v,l,c),n=e.slice(-y);f.forEach(t=>n[t]=0);const r=pt(n,y,g),s=e.slice(-x);p.forEach(t=>s[t]=0);const i=pt(s,x,w),o=t(m[2*r],m[2*r+1],b[2*i],b[2*i+1]);h[v]=o.real,d[v]=o.imag}return[h,d,a]}}function gu(t,e,n,r,s){const i=V(r),o=ht(s,n);for(let a=0;a<t.length;a++){const n=t[a];if(0>n)throw new Error("Input x must be non-negative!");s>n&&(o[n]+=i>0?e[a]:1)}return o}function xu(t,e,n,r=!1){const s=t.shape[0],i=t.shape[1],o=We([s,n],e.dtype);for(let a=0;s>a;a++)for(let s=0;i>s;s++){const i=t.get(a,s);if(0>i)throw new Error("Input x must be non-negative!");n>i&&(r?o.set(1,a,i):e.size>0?o.set(o.get(a,i)+e.get(a,s),a,i):o.set(o.get(a,i)+1,a,i))}return o}function wu(t){return(e,n,r)=>{const s=H(n,e.length);for(let i=0;i<e.length;++i)s[i]=t(e[i],r);return s}}function vu(t,e,n){return({inputs:r,attrs:s,backend:i})=>{const{x:o}=r;if(au(o,t),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const a=i,u=a.data.get(o.dataId).values,l=V(o.shape),c=n||o.dtype,h=X(c,l);for(let t=0;l>t;++t)h[t]=e(u[t],s);return a.makeTensorInfo(o.shape,c,h)}}function $u(t,e,n){return({inputs:r,attrs:s,backend:i})=>{const{x:o}=r;if(au(o,t),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const a=i,u=a.data.get(o.dataId).values,l=n||o.dtype,c=e(u,l,s);return a.makeTensorInfo(o.shape,l,c)}}function ku(t,e,n,r){const s=X(n,V(e));if(r&&"string"!==n){let e=0;t.forEach(t=>{const n=V(t.shape);s.set(t.vals,e),e+=n})}else{let r=0;t.forEach(t=>{const i="string"===n?Es(t.vals):t.vals;let o=0;for(let n=0;n<t.shape[0];++n){const a=n*e[1]+r;for(let e=0;e<t.shape[1];++e)s[a+e]=i[o++]}r+=t.shape[1]})}return s}function Nu(t,e,n,r,s,i,o,a,u){const l=We([r,i],n);for(let c=0;r>c;c++){const n=[];let r=0;for(let e=0;s>e;e++){const i=t[c*s+e];r+=i*o[e],n.push(i)}if(0>r||r>=u/i)throw new Error(`Invalid indices: ${n} does not index into ${a}`);for(let t=0;i>t;t++)l.values[c*i+t]=e.get(...e.indexToLoc(r*i+t))}return l}function Cu(t,e,n){const r=We(n,t.dtype);for(let s=0;s<r.size;++s){const n=r.indexToLoc(s).slice(),i=n[0],o=n[2],a=e.locToIndex([i,o]);n[2]=e.values[a];const u=t.locToIndex(n);u>=0&&u<t.values.length&&(r.values[s]=t.values[u])}return r}function Su(t,e,n){const r=(e-t)/(n-1),s=ht(n,"float32");s[0]=t;for(let i=1;i<s.length;i++)s[i]=s[i-1]+r;return s}function Eu(t,e,n,r){const s=H(r,V(n));for(let i=0;i<s.length;++i){const n=i*e;let r=t[n];for(let s=0;e>s;++s){const e=t[n+s];(Number.isNaN(e)||e>r)&&(r=e)}s[i]=r}return s}function Tu(t,e,n){const r=Gt(-1,n);return MR([],e,r,t,n)}function _u(t,e,n,r,s){const i=e.length,o=V(e),a=at(e),u=at(s),l=H(n,V(s));for(let c=0;o>c;++c){const e=mt(c,i,a),n=new Array(e.length);for(let t=0;t<n.length;t++)n[t]=e[r[t]];l[pt(n,i,u)]=t[c]}return l}function Ru(t){const{inputs:e,attrs:n,backend:r}=t,{x:s}=e,{perm:i}=n;au(s,"transpose");const o=s.shape.length,a=new Array(o);for(let l=0;l<a.length;l++)a[l]=s.shape[i[l]];const u=_u(r.data.get(s.dataId).values,s.shape,s.dtype,i,a);return{dataId:r.write(u,a,s.dtype),shape:a,dtype:s.dtype}}function Au(t,e,n,r){const[s,i]=Zn(t,r),o=re(e,"int32"),a=ht(V(s),o),u=V(i);for(let l=0;l<a.length;++l){const t=l*u;let e=1;for(let r=0;u>r;++r)e*=n[t+r];a[l]=e}return{outVals:a,outShape:s,outDtype:o}}function Ou(t,e){const n=t.slice(0,e);for(;n.length<e;)n.push(1);for(let r=e;r<t.length;r++)n[e-1]*=t[r];return n}function Iu(t,e,n,r,s,i,o,a){if(0===t.length)throw new Error("paramsNestedSplits must be non empty");if(0===e[0].length)throw new Error("Split tensors must not be scalars");if(((t,e,n)=>{t.forEach((t,r)=>{if(0>t||t>=n){const s=mt(r,e.length,at(e)).join(",");throw new Error(`indices[${s}] = ${t} is not in [0, ${n})`)}})})(i,o,e[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const u=r[0],{outSplits:l,valueSlices:c,numValues:h}=((t,e,n,r)=>{const s=[];let i=0;const o=e.length-1+n.length,a=new Array(o).fill(null).map(()=>[0]);((t,e)=>{for(let n=0;n<t.length;++n){const r=t[n],s=n===t.length-1?e:t[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(0>r[0])throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let t=1;t<r.length;++t)if(r[t-1]>r[t])throw new Error("Ragged splits must be sorted in ascending order")}})(n,r);let u=1;for(let l=0;l<e.length-1;++l){u*=e[l];const t=e[l+1];for(let e=1;u+1>e;++e)a[l].push(e*t)}for(let l=0;l<t.length;++l){let r=t[l],o=t[l]+1;for(let t=0;t<n.length;++t){const s=n[t],i=t+e.length-1;if(i>=0){const t=a[i],e=t[t.length-1]-s[r];for(let n=r;o>n;++n)a[i].push(s[n+1]+e)}r=s[r],o=s[o]}o!==r&&(s.push([r,o]),i+=o-r)}return{outSplits:a,valueSlices:s,numValues:i}})(i,o,t,u),d=(t=>{const e=[];for(let n=0;n<t.length;++n){const r=X("int32",t[n].length);e.push(r),t[n].forEach((t,e)=>r[e]=t)}return e})(l),f=((t,e,n,r,s)=>{const i=e.slice();i[0]=s;const o=X(n,V(i)),a=t.length;return((t,e,n,r,s,i)=>{const o=Ou(e,2)[1],a=Ou(i,2)[1];let u=0;for(const l of n)for(let e=l[0];e<l[1];++e){for(let n=0;r>n;++n)s[u*a+n]=t[e*o+n];++u}})(t,e,r,0===a?0:a/e[0],o,i),[o,i]})(n,r,s,c,h);return[d,f[0],f[1]]}function Fu(t,e,n){for(let r=0;n>r;r++)t[r]=e[r]}function Mu(t,e){const n=[];for(let r of t){if(0>r){if(!e)throw new Error(`Dimension ${r} must be >= 0`);if(-1>r)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function Du(t,e,n,r,s,i,o,a,u,l){return new qR(t,e,n,r,s,i,o,a,u,l).compute()}function Lu(t,e,n,r){if(t===e||e>t&&0>n||t>e&&n>1)return ht(0,r);const s=ht(Math.abs(Math.ceil((e-t)/n)),r);t>e&&1===n&&(n=-1),s[0]=t;for(let i=1;i<s.length;i++)s[i]=s[i-1]+n;return s}function Vu(t,e,n,r,s,i,o,a,u,l){const c=[r/s,s],h=t.values,d=e.values;if(0===r)return We(n,e.dtype);const f=We(c,e.dtype);"string"==typeof u||"number"==typeof u?f.values.fill(u):"boolean"==typeof u&&f.values.fill(+u);for(let p=0;i>p;p++){const t=[];let i=0;for(let e=0;o>e;e++){const n=h[p*o+e];t.push(n),i+=n*a[e]}if(0>i||i>=r/s)throw new Error(`Invalid indices: ${t} does not index into ${n}`);for(let n=0;s>n;n++)l?f.values[i*s+n]+=d[p*s+n]:f.values[i*s+n]=0===e.rank?d[0]:d[p*s+n]}return f}function Pu(t,e,n,r,s){const i=Sn(r,e,n),o=V(n),a=at(r);if(i){const n=En(e,a);return"string"===s?t.slice(n,n+o):t.subarray(n,n+o)}const u=We(r,s,"string"===s?Es(t):t),l=We(n,s);for(let c=0;c<l.size;++c){const t=l.indexToLoc(c),n=t.map((t,n)=>t+e[n]);l.set(u.get(...n),...t)}return"string"===s?Ts(l.values):l.values}function Bu(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:i,size:o}=r;au(s,"slice");const[a,u]=Tn(s,i,o);bn(s,a,u);const l=Pu(n.data.get(s.dataId).values,a,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,l)}function zu(t,e,n,r,s,i,o){const a=e[0],u=i[0],l=new Array(u),c=new Array(a),h=e[1];if(0===u){if(0!==a)throw new Error(ps(a));return[X(n,0),[0,h],X(s,0),l,c]}let d=!0,f=0;const p=new Array(u).fill(0);for(let b=0;a>b;++b){const e=t[b*h];if(0>e)throw new Error(ms(b,e));if(e>=u)throw new Error(bs(b,e,u));++p[e],d=d&&e>=f,f=e}let m=!0;for(let b=0;u>b;++b){const t=0===p[b];l[b]=t,m=m&&!t,p[b]=Math.max(p[b],1),b>0&&(p[b]+=p[b-1])}if(m&&d){const e=t,n=r;for(let t=0;a>t;++t)c[t]=t;return[e,[a,h],n,l,c]}{const e=p[u-1],i=X(n,e*h),d=X(s,e),f=new Array(u).fill(0);for(let n=0;a>n;++n){const e=t[n*h],s=f[e],o=(0===e?0:p[e-1])+s;f[e]++;for(let r=0;h>r;++r)i[o*h+r]=t[n*h+r];d[o]=r[n],c[n]=o}for(let t=0;u>t;++t)if(0===f[t]){const e=0===t?0:p[t-1];i[e*h+0]=t;for(let t=1;h>t;++t)i[e*h+t]=0;d[e]=o}return[i,[e,h],d,l,c]}}function Wu(t,e,n,r,s){const i=V(r),o=e[0],a=s.length,u=[];let l=1,c=-1;for(let m=0;a>m;++m){const t=s[m];if(-1===t){if(-1!==c)throw new Error(ys(c,m));c=m,u.push(1)}else{if(0>t)throw new Error(gs(m,t));l*=t,u.push(t)}}if(-1!==c){if(0>=l)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const t=Math.trunc(i/l);if(l*t!==i)throw new Error(xs(r,u));u[c]=t}if(V(u)!==i)throw new Error(ws(r,u));const h=r.length,d=[];if(h>0){d[h-1]=1;for(let t=h-2;t>=0;--t)d[t]=d[t+1]*r[t+1]}const f=[];if(a>0){f[a-1]=1;for(let t=a-2;t>=0;--t)f[t]=f[t+1]*u[t+1]}const p=X(n,o*a);for(let m=0;o>m;++m){let e=0;for(let n=0;h>n;++n)e+=t[m*h+n]*d[n];for(let t=0;a>t;++t)p[m*a+t]=Math.trunc(e/f[t]),e%=f[t]}return[p,[o,a],u]}function Uu(t,e,n,r,s,i=!1,o=0){const a=r.length,u=[e[0],t.length/e[0]],l=u[1],c=a>0?s[a-1]+1:0;if(0>c)throw new Error("segment ids must be >= 0");const h=e.slice();h[0]=c;const d=X(n,h.reduce((t,e)=>t*e,1));if(0===a)return c>0&&d.fill(o),[d,h];if(0>=c)throw new Error("segment ids must be >= 0");let f=0,p=1,m=0,b=s[f];for(;;){let e=0;if(a>p){if(e=s[p],b===e){++p;continue}if(b>=e)throw new Error(vs())}if(0>b||b>=c)throw new Error($s(b,c));b>m&&d.fill(o,m*l,b*l);for(let n=f;p>n;++n){const e=r[n];if(0>e||e>=u[0])throw new Error(ks(n,r[n],u[0]));for(let n=0;l>n;n++)d[b*l+n]+=t[e*l+n]}if(i)for(let t=0;l>t;t++)d[b*l+t]/=p-f;if(f=p,++p,m=b+1,b=e,p>a)break}return c>m&&d.fill(o,m*l,c*l),[d,h]}function Gu(t,e,n,r){const s=We(t,e.dtype);for(let i=0;i<s.size;i++){const t=s.indexToLoc(i),o=new Array(t.length);for(let e=0;e<o.length;e++)o[e]=t[e]*n[e]+r[e];s.set(e.get(...o),...t)}return s}function ju(t,e,n,r,s,i,o,a){return new oA(n,r,s,i,o,a).compute(t,e)}function qu(t,e,n,r){if(!t.length)return;if(0===e.length){for(let e=0;e<t.length;++e)r.push(t.subarray(e,e+1));return}if(1===e.length){const s=e[0];let i=t.indexOf(s);for(;-1!==i;){const e=t.subarray(0,i);n&&0===e.length||r.push(e),i=(t=t.subarray(i+1)).indexOf(s)}return void(n&&0===t.length||r.push(t))}let s=0;for(let i=0;i<t.length+1;i++)if(i===t.length||-1!==e.indexOf(t[i])){const e=t.subarray(s,i);n&&0===e.length||r.push(e),s=i+1}}function Hu(t,e,n){const r=t.length,s=[];let i=0,o=0;const a=new Array(r);for(let d=0;r>d;++d){const r=s.length;qu(t[d],e,n,s);const u=s.length-r;a[d]=u,i+=u,o=Math.max(o,u)}const u=X("int32",2*i),l=new Array(i),c=[r,o];let h=0;for(let d=0;r>d;++d)for(let t=0;t<a[d];++t)u[2*h]=d,u[2*h+1]=t,l[h]=s[h],++h;return[u,l,c]}function Xu(t,e){const n=X("int32",t.length);for(let r=0;r<t.length;++r)n[r]=Ut(t[r]).modulo(e).getLowBitsUnsigned();return n}function Ku(t,e){const n=new Array(t.rank);for(let s=0;s<n.length;s++)n[s]=t.shape[s]*e[s];const r=We(n,t.dtype);for(let s=0;s<r.values.length;++s){const e=r.indexToLoc(s),n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=e[r]%t.shape[r];const i=t.locToIndex(n);r.values[s]=t.values[i]}return r}function Ju(t,e,n=0,r=t.length-1){for(;r>n;){if(r-n>600){const s=r-n+1,i=e-n+1,o=Math.log(s),a=.5*Math.exp(2*o/3),u=.5*Math.sqrt(o*a*(s-a)/s)*Math.sign(i-s/2);Ju(t,e,Math.max(n,Math.floor(e-i*a/s+u)),Math.min(r,Math.floor(e+(s-i)*a/s+u)))}const s=t[e];let i=n,o=r;for(O(t,n,e),hA(t[r],s)>0&&O(t,n,r);o>i;){for(O(t,i,o),i++,o--;0>hA(t[i],s);)i+=1;for(;hA(t[o],s)>0;)o-=1}0===hA(t[n],s)?O(t,n,o):(o+=1,O(t,o,r)),o>e||(n=o+1),e>o||(r=o-1)}}function Yu(t,e,n,r,s){const i=e[e.length-1],[o,a]=[t.length/i,i],u=H(n,o*r),l=H("int32",o*r);for(let h=0;o>h;h++){const e=h*a,n=t.subarray(e,e+a);let i=new Array(n.length);n.forEach((t,e)=>i[e]={value:t,index:e}),r<i.length&&(Ju(i,r),i=i.slice(0,r)),s&&i.sort(hA);const o=h*r,c=u.subarray(o,o+r),d=l.subarray(o,o+r);for(let t=0;r>t;t++)c[t]=i[t].value,d[t]=i[t].index}const c=e.slice();return c[c.length-1]=r,[We(c,n,u),We(c,"int32",l)]}function Zu(t,e,n,r){const s=j(e,n)[0],i=[1,n[0],1];for(let p=0;s>p;p++)i[0]*=n[p];i[1]=n[s];for(let p=s+1;p<n.length;p++)i[2]*=n[p];const o={},a=new Int32Array(n[s]),u=new vb(i,r,t),l=[],c=1===i[0]&&1===i[2];for(let p=0;p<n[s];p++){let e;if(c)e=t[p].toString();else{const t=[];for(let e=0;e<i[0];e++)for(let n=0;n<i[2];n++)t.push(u.get(e,p,n));e=t.join(",")}if(void 0!==o[e])a[p]=o[e];else{const t=Object.keys(o).length;o[e]=t,a[p]=t,l.push(p)}}const h=i.slice();h[1]=Object.keys(o).length;const d=new vb(h,r);l.forEach((t,e)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)d.set(u.get(n,t,r),n,e,r)});const f=n.slice();return f[s]=h[1],{outputValues:d.values,outputShape:f,indices:a}}function Qu(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{alpha:i}=r;au([s],"leakyRelu");const o=V(s.shape),a=n.data.get(s.dataId).values,u=H("float32",o);for(let l=0;l<a.length;l++)u[l]=0>a[l]?i*a[l]:a[l];return n.makeTensorInfo(s.shape,"float32",u)}function tl(t){const{inputs:e,backend:n}=t,{x:r,alpha:s}=e;au([r,s],"prelu");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,[a,u]=bA(r.shape,s.shape,i,o,"float32");return n.makeTensorInfo(u,"float32",a)}function el(t,e,n,r,s){if("linear"===n)return du({inputs:{x:e},backend:t});if("relu"===n)return gA({inputs:{x:e},backend:t});if("elu"===n)return fA({inputs:{x:e},backend:t});if("relu6"===n)return wA({inputs:{x:e},backend:t});if("prelu"===n)return tl({inputs:{x:e,alpha:r},backend:t});if("leakyrelu"===n)return Qu({inputs:{x:e},backend:t,attrs:{alpha:s}});if("sigmoid"===n)return YR({inputs:{x:e},backend:t});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function nl(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:i}=r,o=V(s.shape),a=G(i,o),u=V(a);F(o===u,()=>`The new shape (${a}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),n.incRef(s.dataId);const l=n.data.get(s.dataId);if(null!=l.complexTensorInfos){const t=l.complexTensorInfos.real,e=l.complexTensorInfos.imag;t.shape=a,e.shape=a}return{dataId:s.dataId,shape:a,dtype:s.dtype}}function rl(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:i}=e,{transposeA:o,transposeB:a}=r;au([s,i],"matMul");const u=s.shape.length,l=i.shape.length,c=o?s.shape[u-2]:s.shape[u-1],h=a?i.shape[l-1]:i.shape[l-2],d=o?s.shape[u-1]:s.shape[u-2],f=a?i.shape[l-2]:i.shape[l-1],p=s.shape.slice(0,-2),m=i.shape.slice(0,-2),b=V(p),y=V(m),g=ln(s.shape.slice(0,-2),i.shape.slice(0,-2)).concat([d,f]);F(c===h,()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${i.shape} and transposeA=${o} and transposeB=${a} must match.`);const x=a?[y,f,h]:[y,h,f],w=nl({inputs:{x:s},backend:n,attrs:{shape:o?[b,c,d]:[b,d,c]}}),v=nl({inputs:{x:i},backend:n,attrs:{shape:x}}),$=o?w.shape[1]:w.shape[2],k=o?w.shape[2]:w.shape[1],N=a?v.shape[1]:v.shape[2],C=Math.max(b,y),S=n.data.get(w.dataId).values,E=n.data.get(v.dataId).values,T=at(w.shape),_=at(v.shape),[R,A,O]=o?[T[0],1,T[1]]:[T[0],T[1],1],[I,M,D]=a?[1,_[1],_[0]]:[_[1],1,_[0]],L=k*N,P=We([C,k,N],w.dtype),B=P.values,z=n.blockSize;for(let F=0;C>F;F++)for(let t=0;k>t;t+=z)for(let e=0;N>e;e+=z)for(let n=0;$>n;n+=z){const r=Math.min(t+z,k),s=Math.min(e+z,N),i=Math.min(n+z,$);for(let o=t;r>o;o++)for(let t=e;s>t;t++){let e=0;for(let r=n;i>r;r++){const n=Math.min(F,b-1)*R,s=Math.min(F,y-1)*D;e+=S[n+o*A+r*O]*E[r*I+t*M+s]}B[F*L+(o*N+t)]+=e}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(g,P.dtype,P.values)}function sl(t,e,n,r,s,i){const o=s.strideHeight,a=s.strideWidth,u=s.dilationHeight,l=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,f=s.padInfo.left,p="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=We(s.outShape,n),b=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],g=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let w=0;w<s.batchSize;++w){const e=w*y,n=w*r[0];for(let m=0;m<s.inChannels;++m)for(let y=0;y<s.outHeight;++y){const w=y*o-d,v=Math.max(0,w),$=Math.min(s.inHeight,c+w),k=e+y*g;for(let e=0;e<s.outWidth;++e){const o=e*a-f,c=Math.max(0,o),d=Math.min(s.inWidth,h+o);let y=p,g=0,w=0;for(let e=v;$>e;e+=u){const s=n+e*r[1];for(let e=c;d>e;e+=l){const n=t[s+e*r[2]+m];"max"===i&&n>y?y=n:"avg"===i&&(g+=n,w++)}if(isNaN(y))break}b[k+e*x+m]="avg"===i?g/w:y}}}return m}function il(t,e,n,r,s=!1,i=!1){const o=We(r.outShape,"int32"),a=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,f=r.padInfo.top,p=r.padInfo.left,m=We(e,n,t);for(let b=0;b<r.batchSize;++b)for(let t=0;t<r.inChannels;++t)for(let e=0;e<r.outHeight;++e){const n=e*a-f;let y=n;for(;0>y;)y+=l;const g=Math.min(r.inHeight,h+n);for(let a=0;a<r.outWidth;++a){const h=a*u-p;let f=h;for(;0>f;)f+=c;const x=Math.min(r.inWidth,d+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let e=y;g>e;e+=l){const o=e-n;for(let n=f;x>n;n+=c){const a=n-h,u=m.get(b,e,n,t);u>w&&(w=u,v=s?i?((b*r.inHeight+e)*r.inWidth+n)*r.inChannels+t:(e*r.inWidth+n)*r.inChannels+t:o*d+a)}}o.set(v,b,e,a,t)}}return o}function ol(t,e,n,r,s,i){const o=s.strideDepth,a=s.strideHeight,u=s.strideWidth,l=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,f=s.effectiveFilterHeight,p=s.effectiveFilterWidth,m=s.padInfo.front,b=s.padInfo.top,y=s.padInfo.left,g="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=We(s.outShape,n),w=x.values,v=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],$=s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[3]*s.outShape[4],N=s.outShape[4];for(let C=0;C<s.batchSize;++C){const e=C*v,n=C*r[0];for(let x=0;x<s.inChannels;++x)for(let v=0;v<s.outDepth;++v){const C=v*o-m;let S=C;for(;0>S;)S+=l;const E=Math.min(s.inDepth,d+C),T=e+v*$;for(let e=0;e<s.outHeight;++e){const o=e*a-b;let d=o;for(;0>d;)d+=c;const m=Math.min(s.inHeight,f+o),v=T+e*k;for(let e=0;e<s.outWidth;++e){const o=e*u-y;let a=o;for(;0>a;)a+=h;const f=Math.min(s.inWidth,p+o),b=v+e*N;let $=g,k=0,C=0;for(let e=S;E>e;e+=l){const s=n+e*r[1];for(let e=d;m>e;e+=c){const n=s+e*r[2];for(let e=a;f>e;e+=h){const s=t[n+e*r[3]+x];if("max"===i&&s>$?$=s:"avg"===i&&(k+=s,C++),isNaN($))break}if(isNaN($))break}if(isNaN($))break}w[b+x]="avg"===i?k/C:$}}}}return x}function al(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.data.get(r.dataId).complexTensorInfos.imag,i=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,i)}function ul(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,i=j(s,e[0].shape)[0];Br(e.map(t=>t.shape),i);let o=zr(e.map(t=>t.shape),i);if(0===V(o))return n.makeTensorInfo(o,e[0].dtype,[]);const a=e.filter(t=>V(t.shape)>0);if(1===a.length)return du({inputs:{x:a[0]},backend:n});if("complex64"===a[0].dtype){const t=a.map(t=>fu({inputs:{input:t},backend:n})),e=a.map(t=>al({inputs:{input:t},backend:n})),r=ul({inputs:t,backend:n,attrs:{axis:i}}),s=ul({inputs:e,backend:n,attrs:{axis:i}}),o=cu({inputs:{real:r,imag:s},backend:n});return t.forEach(t=>n.disposeIntermediateTensorInfo(t)),e.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}const u=a.map(t=>{const e=V(t.shape.slice(i));return nl({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})}),l=u.map(t=>({vals:n.data.get(t.dataId).values,shape:t.shape}));o=zr(u.map(t=>t.shape),1);const c=1===u[0].shape[0],h=ku(l,o,e[0].dtype,c),d=zr(a.map(t=>t.shape),i),f=n.makeTensorInfo(d,e[0].dtype,h);return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),f}function ll(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:o,pad:a,dataFormat:u,dilations:l,dimRoundingMode:c}=r;au([s,i],"conv2d");const h=Hn(u),d=Vn(s.shape,i.shape,o,l,a,c,!1,h),f=d.filterHeight,p=d.filterWidth,m=d.dilationHeight,b=d.dilationWidth,y=d.padInfo.left,g=d.padInfo.top,x="channelsLast"===d.dataFormat,w=new vb(d.outShape,s.dtype),v=at(s.shape),$=at(i.shape),k=v[0],N=x?v[1]:v[2],C=x?v[2]:1,S=x?1:v[1],E=w.strides[0],T=x?w.strides[1]:w.strides[2],_=x?w.strides[2]:1,R=x?1:w.strides[1],A=n.data.get(s.dataId).values,O=n.data.get(i.dataId).values,I=w.values;for(let F=0;F<d.batchSize;++F){const t=F*k,e=F*E;for(let n=0;n<d.outHeight;++n){const r=e+n*T,s=n*d.strideHeight-g;for(let e=0;f>e;++e){const n=s+e*m;if(0>n||n>=d.inHeight)continue;const i=e*$[0],o=t+n*N;for(let t=0;t<d.outWidth;++t){const e=r+t*_,n=t*d.strideWidth-y;for(let t=0;p>t;++t){const r=n+t*b;if(0>r||r>=d.inWidth)continue;const s=o+r*C;let a=i+t*$[1];for(let t=0;t<d.inChannels;++t){const n=A[s+t*S];for(let t=0;t<d.outChannels;++t)I[e+t*R]+=n*O[a+t];a+=d.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,I)}function cl(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:o,pad:a,dilations:u,dimRoundingMode:l}=r;au([s,i],"depthwiseConv2DNative");const c=at(s.shape),h=at(i.shape);let d=u;null==d&&(d=[1,1]),F(qn(o,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`);const f=Vn(s.shape,i.shape,o,d,a,l,!0),{filterHeight:p,filterWidth:m,dilationHeight:b,dilationWidth:y,padInfo:g}=f,x=g.left,w=g.top,v=f.outChannels/f.inChannels,$=new vb(f.outShape,s.dtype),k=n.data.get(s.dataId).values,N=n.data.get(i.dataId).values,C=$.values;for(let S=0;S<f.batchSize;++S){const t=S*c[0],e=S*$.strides[0];for(let n=0;n<f.outHeight;++n){const r=e+n*$.strides[1],s=n*f.strideHeight-w;for(let e=0;p>e;++e){const n=s+e*b;if(0>n||n>=f.inHeight)continue;const i=e*h[0],o=t+n*c[1];for(let t=0;t<f.outWidth;++t){const e=r+t*$.strides[2],n=t*f.strideWidth-x;for(let t=0;m>t;++t){const r=n+t*y;if(0>r||r>=f.inWidth)continue;const s=i+t*h[1],a=o+r*f.inChannels;let u=e,l=s;for(let t=0;t<f.inChannels;++t){const e=k[a+t];for(let t=0;v>t;++t)C[u+t]+=e*N[l+t];u+=v,l+=v}}}}}}return n.makeTensorInfo($.shape,$.dtype,$.values)}function hl(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r;let a;au(s,"sum"),a="bool"===s.dtype?mu({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):du({inputs:{x:s},backend:n});const u=a.shape.length,l=j(i,a.shape),c=er(l,u);let h=l,d=a;null!=c&&(d=Ru({inputs:{x:a},backend:n,attrs:{perm:c}}),h=rr(h.length,u)),tr("sum",h,d.shape.length);const[f,p]=Zn(d.shape,h);let m=hu(n,f,re(d.dtype,"int32"));const b=V(p),y=n.data.get(m.dataId).values,g=n.data.get(d.dataId).values;for(let x=0;x<y.length;++x){const t=x*b;let e=0;for(let n=0;b>n;++n)e+=g[t+n];y[x]=e}if(o){const t=m;m=nl({inputs:{x:m},backend:n,attrs:{shape:Qn(m.shape,l)}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(a),null!=c&&n.disposeIntermediateTensorInfo(d),m}function dl(t){const{inputs:e,backend:n,attrs:r}=t,{input:s}=e,{dim:i}=r,o=s.shape.length,a=s.shape.slice();let u=i;return 0>i&&(F(i>=-(o+1),()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),u=o+i+1),a.splice(u,0,1),nl({inputs:{x:s},backend:n,attrs:{shape:a}})}function fl(t,e,n){const r=t.shape,s=r[0],i=r[1],o=n.data.get(t.dataId),a=o.complexTensorInfos.real,u=o.complexTensorInfos.imag,l=[s,i],c=V(l),h=H("float32",c),d=H("float32",c);for(let b=0;s>b;b++){const t=Bu({inputs:{x:a},backend:n,attrs:{begin:[b,0],size:[1,i]}}),r=Bu({inputs:{x:u},backend:n,attrs:{begin:[b,0],size:[1,i]}}),s=cu({inputs:{real:t,imag:r},backend:n}),{real:o,imag:l}=pl(s,e,n),c=Qr(o,l);for(let e=0;i>e;e++){const t=rs(c,e);h[b*i+e]=t.real,d[b*i+e]=t.imag}n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s)}const f=n.makeTensorInfo(l,"float32",h),p=n.makeTensorInfo(l,"float32",d),m=cu({inputs:{real:f,imag:p},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(p),m}function pl(t,e,n){const r=V(t.shape),s=n.data.get(t.dataId),i=n.data.get(s.complexTensorInfos.real.dataId).values,o=n.data.get(s.complexTensorInfos.imag.dataId).values;if((a=r)&a-1){const t=((t,e,n)=>{const r=new Float32Array(2*e);for(let s=0;e>s;s++){let i=0,o=0;for(let r=0;e>r;r++){const a=os(s*r,e,n),u=rs(t,r);i+=u.real*a.real-u.imag*a.imag,o+=u.real*a.imag+u.imag*a.real}n&&(i/=e,o/=e),ss(r,i,o,s)}return r})(Qr(i,o),r,e);return ts(t)}{const s=ml(i,o,r,e,n),a=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(a,"float32",s.real),e=n.makeTensorInfo(a,"float32",s.imag),i=n.makeTensorInfo([],"float32",Gt(r,"float32")),o=du({inputs:{x:i},backend:n}),u=BO.kernelFunc({inputs:{a:t,b:i},backend:n}),l=BO.kernelFunc({inputs:{a:e,b:o},backend:n}),c=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:h}}return s}var a}function ml(t,e,n,r,s){if(1===n)return{real:t,imag:e};const i=Qr(t,e),o=n/2,a=es(i),u=a.real,l=a.imag,c=[u.length],h=s.makeTensorInfo(c,"float32",u),d=s.makeTensorInfo(c,"float32",l),f=cu({inputs:{real:h,imag:d},backend:s}),p=ns(i),m=p.real,b=p.imag,y=[m.length],g=s.makeTensorInfo(y,"float32",m),x=s.makeTensorInfo(y,"float32",b),w=cu({inputs:{real:g,imag:x},backend:s}),v=ml(u,l,o,r,s),$=v.real,k=v.imag,N=[$.length],C=s.makeTensorInfo(N,"float32",$),S=s.makeTensorInfo(N,"float32",k),E=cu({inputs:{real:C,imag:S},backend:s}),T=ml(m,b,o,r,s),_=T.real,R=T.imag,A=[_.length],O=s.makeTensorInfo(A,"float32",_),I=s.makeTensorInfo(A,"float32",R),F=cu({inputs:{real:O,imag:I},backend:s}),M=is(n,r),D=[M.real.length],L=s.makeTensorInfo(D,"float32",M.real),V=s.makeTensorInfo(D,"float32",M.imag),P=cu({inputs:{real:L,imag:V},backend:s}),B=LR({inputs:{a:P,b:F},backend:s}),z=Y_({inputs:{a:E,b:B},backend:s}),W=lA({inputs:{a:E,b:B},backend:s}),U=fu({inputs:{input:z},backend:s}),G=fu({inputs:{input:W},backend:s}),j=al({inputs:{input:z},backend:s}),q=al({inputs:{input:W},backend:s}),H=ul({inputs:[U,G],backend:s,attrs:{axis:0}}),X=ul({inputs:[j,q],backend:s,attrs:{axis:0}}),K=s.data.get(H.dataId).values,J=s.data.get(X.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(f),s.disposeIntermediateTensorInfo(g),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo(E),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(I),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(X),{real:K,imag:J}}function bl(t){const{backend:e,attrs:n}=t,{shape:r,value:s,dtype:i}=n,o=i||st(s),a=X(o,V(r));return((t,e)=>{t.fill(e)})(a,s),e.makeTensorInfo(r,o,a)}function yl(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reductionIndices:i,keepDims:o}=r,a=n;let u=s.shape;const l=u.length,c=j(i,u);let h=c;const d=er(h,l);let f=a.data.get(s.dataId).values;if(null!=d){const t=new Array(l);for(let e=0;e<t.length;e++)t[e]=u[d[e]];f=_u(f,u,s.dtype,d,t),h=rr(h.length,l),u=t}au(s,"max"),tr("max",h,l);const[p,m]=Zn(u,h),b=Eu(f,V(m),p,s.dtype),y=a.write(b,p,s.dtype);let g=p;return o&&(g=Qn(p,c)),{dataId:y,shape:g,dtype:s.dtype}}function gl(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{dim:i}=r,o=s.shape.length;let a=i;if(-1===a&&(a=o-1),a!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${a}`);const u=j([a],s.shape),l=yl({inputs:{x:s},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=Qn(l.shape,u),h=nl({inputs:{x:l},backend:n,attrs:{shape:c}}),d=lA({inputs:{a:s,b:h},backend:n}),f=oR({inputs:{x:d},backend:n}),p=hl({inputs:{x:f},backend:n,attrs:{axis:u,keepDims:!1}}),m=nl({inputs:{x:p},backend:n,attrs:{shape:c}}),b=PO({inputs:{a:f,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),b}function xl(t){const{inputs:e,backend:n}=t,{x:r}=e;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const t=fu({inputs:{input:r},backend:n}),e=xl({inputs:{x:t},backend:n}),s=al({inputs:{input:r},backend:n}),i=xl({inputs:{x:s},backend:n}),o=cu({inputs:{real:e,imag:i},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}return bl({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}function wl(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r;if(1===e.length)return dl({inputs:{input:e[0]},backend:n,attrs:{dim:s}});const i=e[0].shape,o=e[0].dtype;e.forEach(t=>{M(i,t.shape,"All tensors passed to stack must have matching shapes"),F(o===t.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],u=ul({inputs:e.map(t=>{const e=dl({inputs:{input:t},backend:n,attrs:{dim:s}});return a.push(e),e}),backend:n,attrs:{axis:s}});return a.forEach(t=>n.disposeIntermediateTensorInfo(t)),u}function vl(t,e){let n=0,r=t.length,s=0;for(;r>n;)s=Math.floor((n+r)/2),t[s]<e?n=s+1:r=s;return r}function $l(t,e){let n=0,r=t.length,s=0;for(;r>n;)s=Math.floor((n+r)/2),t[s]>e?r=s:n=s+1;return r}function kl(t,e,n){switch(n){case"reflect":return((t,e)=>{let n=t;if(0>n)if(e>1){const t=2*e;t>n&&(n=t*Math.trunc(-n/t)+n),n=-e>n?n+t:-n-1}else n=0;else if(n>e-1)if(e>1){const t=2*e;n-=t*Math.trunc(n/t),e>n||(n=t-n-1)}else n=0;return R(0,n,e-1)})(t,e);case"wrap":return((t,e)=>{let n=t;if(0>n)if(e>1){const t=e-1;n+=e*(Math.trunc(-n/t)+1)}else n=0;else if(n>e-1)if(e>1){const t=e-1;n-=e*Math.trunc(n/t)}else n=0;return R(0,n,e-1)})(t,e);case"nearest":return((t,e)=>R(0,t,e-1))(t,e);default:return t}}function Nl(t,e,n,r,s,i,o,a,u,l,c){return a>=0&&e>a&&u>=0&&n>u?t[o*r+a*s+u*i+l]:c}function Cl(t,e,n,r,s,i,o,a,u,l,c){return Nl(t,e,n,r,s,i,o,Math.round(a),Math.round(u),l,c)}function Sl(t,e,n,r,s,i,o,a,u,l,c){const h=Math.floor(a),d=Math.floor(u),f=h+1,p=d+1;return(f-a)*((p-u)*Nl(t,e,n,r,s,i,o,h,d,l,c)+(u-d)*Nl(t,e,n,r,s,i,o,h,p,l,c))+(a-h)*((p-u)*Nl(t,e,n,r,s,i,o,f,d,l,c)+(u-d)*Nl(t,e,n,r,s,i,o,f,p,l,c))}function El(t,e){if(!(t in jF)||null!=e){const n=((t,e)=>{if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==e?(t=>{if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")})(t):e;return n.addEventListener("webglcontextlost",e=>{e.preventDefault(),delete jF[t]},!1),gt().getBool("SOFTWARE_WEBGL_ENABLED")&&(qF.failIfMajorPerformanceCaveat=!1),1===t?n.getContext("webgl",qF)||n.getContext("experimental-webgl",qF):n.getContext("webgl2",qF)})(t,e);if(null===n)return null;jF[t]=n}const n=jF[t];return null==n||n.isContextLost()?(delete jF[t],El(t)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),jF[t])}function Tl(t,e){return[e,t]}function _l(t){const e=V(t);return z(Math.ceil(e/4))}function Rl(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function Al(t,e){const n=t;let r,s,i,o,a,u,l,c,h,d;return 2===gt().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,i=n.RGBA16F,o=n.RGBA32F,a=n.RED,l=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,u=n.RGBA8):(r=t.RGBA,s=t.RGBA,i=t.RGBA,o=n.RGBA,a=t.RGBA,l=4,c=4,h=null!=e?e.HALF_FLOAT_OES:null,d=t.FLOAT,u=t.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:o,textureFormatFloat:a,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function Ol(t,e){const n=e();return gt().getBool("DEBUG")&&(t=>{const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+((t,e)=>{switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}})(t,e))})(t),n}function Il(t){return!!(gt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||Math.abs(t)>5.96e-8&&65504>Math.abs(t))}function Fl(t,e){return zl(t,()=>t.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function Ml(t,e){const n=QF.exec(e);if(null==n)return;const r=+n[1],s=t.split("\n"),i=s.length.toString().length+2,o=s.map((t,e)=>W((e+1).toString(),i)+t);let a=0;for(let u=0;u<o.length;u++)a=Math.max(o[u].length,a);o.slice(0,r-1),o.slice(r-1,r),o.slice(r)}function Dl(t,e){if(Ol(t,()=>t.validateProgram(e)),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw new Error("Shader program validation failed.")}function Ll(t,e,n,r,s,i,o){const a=t.getAttribLocation(e,n);return-1!==a&&(Ol(t,()=>t.bindBuffer(t.ARRAY_BUFFER,r)),Ol(t,()=>t.vertexAttribPointer(a,s,t.FLOAT,!1,i,o)),Ol(t,()=>t.enableVertexAttribArray(a)),!0)}function Vl(t,e,n){Ol(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,n)),Ol(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0))}function Pl(t,e){Ol(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,e)),Ol(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0))}function Bl(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+((t,e)=>{switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}})(t,e))}function zl(t,e,n){const r=Ol(t,()=>e());if(null==r)throw new Error(n);return r}function Wl(t,e=2){return V(t.slice(0,t.length-e))}function Ul(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function Gl(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[Wl(t),...Ul(t)]),e}function jl(t){return t%2==0}function ql(t,e){if(P(t=t.slice(-2),e=e.slice(-2)))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(jl(n)&&jl(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&jl(t[0])&&jl(e[0])}function Hl(t,e){return null!=t.getExtension(e)}function Xl(t){try{if(null!=El(t))return!0}catch(e){return!1}return!1}function Kl(t){const e=Al(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const s=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),s}function Jl(t,e){Array.isArray(t)||(t=[t]),t.forEach(t=>{null!=t&&F("complex64"!==t.dtype,()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}function Yl(){let t,e,n,r,s,i,o,a,u,l;return 2===gt().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",s="texture",i="outputColor",o="out vec4 outputColor;",a=gt().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",s="texture2D",i="gl_FragColor",o="",a="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:s,output:i,defineOutput:o,defineSpecialNaN:a,defineSpecialInf:u,defineRound:l}}function Zl(t,e,n="index"){const r=at(e);return r.map((e,s)=>`int ${t[s]} = ${n} / ${e}; ${s===r.length-1?`int ${t[s+1]} = ${n} - ${t[s]} * ${e}`:`index -= ${t[s]} * ${e}`};`).join("")}function Ql(t,e,n="index"){const r=at(e);return r.map((e,s)=>`int ${t[s]} = ${n} / outShapeStrides[${s}]; ${s===r.length-1?`int ${t[s+1]} = ${n} - ${t[s]} * outShapeStrides[${s}]`:`index -= ${t[s]} * outShapeStrides[${s}]`};`).join("")}function tc(t){const e=at(t).map(t=>t.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}function ec(t,e,n){const r=[];if(t.forEach(t=>{const e=V(t.shapeInfo.logicalShape);if(t.shapeInfo.isUniform?r.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(r.push(`uniform sampler2D ${t.name};`),r.push(`uniform int offset${t.name};`)),n.enableShapeUniforms){const{uniformShape:e}=ac(n.packedInputs,t.shapeInfo.logicalShape,t.shapeInfo.texShape);switch(e.length){case 1:r.push(`uniform int ${t.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${t.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${t.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${t.name}Shape;`)}r.push(`uniform ivec2 ${t.name}TexShape;`)}}),n.enableShapeUniforms){switch(e.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(t=>{r.push(`uniform ${t.type} ${t.name}${t.arrayIndex?`[${t.arrayIndex}]`:""};`)});const s=r.join("\n"),i=t.map(t=>((t,e,n=!1,r)=>{let s="";s+=n?rc(t,r):nc(t,r);const i=t.shapeInfo.logicalShape,o=e.logicalShape;return i.length>o.length||(s+=n?((t,e)=>{const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=t.shapeInfo.logicalShape.length,o=e.logicalShape.length,a=sM(t.shapeInfo.logicalShape,e.logicalShape),u=oc(o),l=o-i;let c;const h=["x","y","z","w","u","v"];c=0===i?"":2>o&&a.length>=1?"coords = 0;":a.map(t=>`coords.${h[t+l]} = 0;`).join("\n");let d="";d=2>o&&i>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>`coords.${h[e+l]}`).join(", ");let f="return outputValue;";const p=1===V(t.shapeInfo.logicalShape),m=1===V(e.logicalShape);if(1!==i||p||m){if(p&&!m)f=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(a.length){const t=i-2,e=i-1;a.indexOf(t)>-1&&a.indexOf(e)>-1?f="return vec4(outputValue.x);":a.indexOf(t)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(e)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${f}\n    }\n  `})(t,e):((t,e)=>{const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=e.texShape,o=t.shapeInfo.texShape,a=t.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!t.shapeInfo.isUniform&&a===u&&null==t.shapeInfo.flatOffset&&P(o,i))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=oc(u),c=sM(t.shapeInfo.logicalShape,e.logicalShape),h=u-a;let d;const f=["x","y","z","w","u","v"];d=0===a?"":2>u&&c.length>=1?"coords = 0;":c.map(t=>`coords.${f[t+h]} = 0;`).join("\n");let p="";return p=2>u&&a>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>`coords.${f[e+h]}`).join(", "),`\n    float ${s}() {\n      ${l} coords = getOutputCoords();\n      ${d}\n      return get${r}(${p});\n    }\n  `})(t,e)),s})(t,e,n.packedInputs,n.enableShapeUniforms)).join("\n"),o=e.texShape,a=Yl(),u=(t=>`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `)(a);let l,c,h=(t=>`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${iM}\n    ${oM}\n    ${aM}\n  `)(a);return e.isPacked?(l=((t,e,n)=>{switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return((t,e,n)=>{const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `})(0,e,n);case 2:return((t,e,n)=>{const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(P(t,e))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(t[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `})(t,e,n);case 3:return((t,e,n)=>{if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[2]/2),i=s*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `})(t,e,n);default:return((t,e,n)=>{if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[t.length-1]/2),i=s*Math.ceil(t[t.length-2]/2);let o=i,a="",u="b, r, c";for(let l=2;l<t.length-1;l++)o*=t[t.length-l-1],a=`\n      int b${l} = index / ${o};\n      index -= b${l} * ${o};\n    `+a,u=`b${l}, `+u;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${a}\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${t.length}(${u});\n    }\n  `})(t,e,n)}})(e.logicalShape,o,n.enableShapeUniforms),c=(t=>`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `)(a)):(l=((t,e,n)=>{switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return((t,e,n)=>1===e[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${e[1]}.0);\n      }\n    `:1===e[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${e[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      return resTexRC.x * ${e[1]} + resTexRC.y;\n    }\n  `)(0,e,n);case 2:return((t,e,n)=>P(t,e)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `:1===t[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===t[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `)(t,e,n);case 3:return((t,e,n)=>{if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${Ql(["r","c","d"],t)}\n    return ivec3(r, c, d);\n  }\n`;const r=Zl(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `})(t,e,n);case 4:return((t,e,n)=>{if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${Ql(["r","c","d","d2"],t)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=Zl(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `})(t,e,n);case 5:return((t,e)=>{const n=Zl(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `})(t,e);case 6:return((t,e)=>{const n=Zl(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `})(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}})(e.logicalShape,o,n.enableShapeUniforms),c=(t=>`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `)(a)),n.packedInputs&&(h+=uM),[h,u,c,s,l,i,n.userCode].join("\n")}function nc(t,e=!1){const n=t.shapeInfo.logicalShape;switch(n.length){case 0:return((t,e)=>{const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,i]=t.shapeInfo.texShape;if(1===s&&1===i)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=sc(n);if(e)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[a,u]=t.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${a}, ${u}, ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `})(t,e);case 1:return((t,e)=>{const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${ic(t)}\n      }\n    `;const s=t.shapeInfo.texShape,i=s[0],o=s[1];if(1===o&&1===i)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const a=sc(n);return 1===o?e?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${i}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===i?e?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${o}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:e?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${i}, ${o}, index + ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `})(t,e);case 2:return((t,e)=>{const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=t.shapeInfo.texShape;if(null!=i&&P(n,i)){if(e)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const t=i[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${i[1]}.0, ${t}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:o,keptDims:a}=q(n),u=o;if(u.length<n.length){const n=["row","col"];return`\n      ${nc(uc(t,u),e)}\n      float ${s}(int row, int col) {\n        return ${s}(${lc(n,a)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${ic(t)}\n      }\n    `;const l=i[0],c=i[1],h=sc(r);return 1===c?e?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===l?e?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:e?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`})(t,e);case 3:return((t,e)=>{const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[1]*n[2],o=n[2],{newShape:a,keptDims:u}=q(n),l=a;if(l.length<n.length){const n=["row","col","depth"];return`\n        ${nc(uc(t,l),e)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${lc(n,u)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${i}, ${o}, 1)));\n        ${ic(t)}\n      }\n    `;const c=t.shapeInfo.texShape,h=c[0],d=c[1],f=t.shapeInfo.flatOffset;if(d===i&&null==f)return e?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${o}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===o&&null==f)return e?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const p=sc(r);return e?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${p};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i} + col * ${o} + depth + ${p};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `})(t,e);case 4:return((t,e)=>{const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[3],o=n[2]*i,a=n[1]*o,{newShape:u,keptDims:l}=q(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${nc(uc(t,u),e)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${lc(n,l)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${a}, ${o}, ${i}, 1)));\n        ${ic(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],f=h[1],p=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,b=`int stride0 = ${r}Shape[1] * stride1;`;if(f===a&&null==c)return e?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${p}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${o}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(f===i&&null==c)return e?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=sc(r);return e?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${p}\n      ${m}\n      ${b}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${a} + col * ${o} +\n          depth * ${i} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${f}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `})(t,e);case 5:return(t=>{const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[4],i=e[3]*s,o=e[2]*i,a=e[1]*o,{newShape:u,keptDims:l}=q(e);if(u.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${nc(uc(t,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${lc(e,l)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${a}, ${o}, ${i}, ${s})) +\n          depth3;\n        ${ic(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],f=h[1];return f===a&&null==c?`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:f===s&&null==c?`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${a} + col * ${o} + depth * ${i} +\n          depth2 * ${s} + depth3 + ${sc(n)};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `})(t);case 6:return(t=>{const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:i}=q(e);if(s.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${nc(uc(t,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${lc(e,i)});\n      }\n    `}const o=e[5],a=e[4]*o,u=e[3]*a,l=e[2]*u,c=e[1]*l;if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${a})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${ic(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,f=d[0],p=d[1];return p===c&&null==h?`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${a}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:p===o&&null==h?`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${a} + depth3 * ${o} + depth4 + ${sc(n)};\n      vec2 uv = uvFromFlat(${f}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `})(t);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function rc(t,e){switch(t.shapeInfo.logicalShape.length){case 0:return(t=>{const e=t.name;return`\n    vec4 ${"get"+e.charAt(0).toUpperCase()+e.slice(1)}() {\n      return ${Yl().texture2D}(${e}, halfCR);\n    }\n  `})(t);case 1:return((t,e)=>{const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,i=Yl();if(e)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `;const o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${o[0]}, ${o[1]}, index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `})(t,e);case 2:return((t,e)=>{const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=t.shapeInfo.texShape,o=i[0],a=i[1],u=Yl();if(null!=i&&P(n,i))return e?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${o}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(e)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `})(t,e);case 3:return((t,e)=>{const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=t.shapeInfo.texShape,o=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(1===n[0]){const r=[1,2],i=["b","row","col"];return`\n        ${rc(uc(t,n.slice(1)),e)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${lc(i,r)});\n        }\n      `}const a=Yl();if(e)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${a.texture2D}(${r}, uv);\n    }\n  `;const u=o[0],l=o[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${a.texture2D}(${r}, uv);\n    }\n  `})(t,e);default:return((t,e)=>{const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=Yl();if(e)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=t.shapeInfo.logicalShape,o=i.length,a=t.shapeInfo.texShape,u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],l=u[0],c=u[1],h=Math.ceil(i[o-1]/2);let d=h*Math.ceil(i[o-2]/2),f="int b, int row, int col",p=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let m=2;o-1>m;m++)f=`int b${m}, `+f,d*=i[o-m-1],p=`b${m} * ${d} + `+p;return`\n    vec4 ${r}(${f}) {\n      int index = ${p};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `})(t,e)}}function sc(t){return`offset${t}`}function ic(t){const e=t.name,n=V(t.shapeInfo.logicalShape);return 2>n?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function oc(t){if(t>1){if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}return"int"}function ac(t,e,n){const{newShape:r,keptDims:s}=q(e),i=e.length,o=t&&3===i&&1===e[0],a=o?e.slice(1):r,u=!t&&i>1&&!P(e,n)&&r.length<i||o;return{useSqueezeShape:u,uniformShape:u?a:e,keptDims:s}}function uc(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function lc(t,e){return e.map(e=>t[e]).join(", ")}function cc(t,e,n){const r={},s={},i={},o=[];let a,u,l,c=null,h=null;h=t.getUniformLocation(n,"NAN",!1),1===gt().getNumber("WEBGL_VERSION")&&(c=t.getUniformLocation(n,"INFINITY",!1));const d=!1;for(let f=0;f<e.variableNames.length;f++){const o=e.variableNames[f];r[o]=t.getUniformLocation(n,o,d),r[`offset${o}`]=t.getUniformLocation(n,`offset${o}`,d),e.enableShapeUniforms&&(s[`${o}Shape`]=t.getUniformLocation(n,`${o}Shape`,d),i[`${o}TexShape`]=t.getUniformLocation(n,`${o}TexShape`,d))}return e.enableShapeUniforms&&(a=t.getUniformLocation(n,"outShape",d),l=t.getUniformLocation(n,"outShapeStrides",d),u=t.getUniformLocation(n,"outTexShape",d)),e.customUniforms&&e.customUniforms.forEach((e,r)=>{o[r]=t.getUniformLocation(n,e.name,d)}),{uniformLocations:r,customUniformLocations:o,infLoc:c,nanLoc:h,inShapesLocations:s,inTexShapesLocations:i,outShapeLocation:a,outShapeStridesLocation:l,outTexShapeLocation:u}}function hc(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach((t,n)=>{const r=t.logicalShape,s=e[n],i=s.shape;if(!P(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(t.isUniform&&s.isUniform)return;const o=t.texShape,a=s.isUniform?null:s.texData.texShape;if(!P(o,a))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${a} must match`)})}function dc(t){return gt().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&4>=t}function fc(t,e,n,r,s,i){((t,e)=>{const n=gt().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(0>=t||0>=e)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)})(e,n);const o=(t=>zl(t,()=>t.createTexture(),"Unable to create WebGLTexture."))(t),a=t.TEXTURE_2D;return Ol(t,()=>t.bindTexture(a,o)),Ol(t,()=>t.texParameteri(a,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)),Ol(t,()=>t.texParameteri(a,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)),Ol(t,()=>t.texParameteri(a,t.TEXTURE_MIN_FILTER,t.NEAREST)),Ol(t,()=>t.texParameteri(a,t.TEXTURE_MAG_FILTER,t.NEAREST)),1===gt().getNumber("WEBGL_VERSION")?Ol(t,()=>t.texImage2D(a,0,r,e,n,0,s,i,null)):Ol(t,()=>t.texStorage2D(a,1,r,e,n)),Ol(t,()=>t.bindTexture(t.TEXTURE_2D,null)),{texture:o,texShape:[n,e]}}function pc(t){return t.internalFormatFloat}function mc(t){return t.internalFormatHalfFloat}function bc(t){return t.downloadTextureFormat}function yc(t){return t.internalFormatPackedFloat}function gc(t){return t.internalFormatPackedHalfFloat}function xc(t,e){return["x","y","z","w","u","v"].slice(0,e).map(e=>`${t}.${e}`)}function wc(t,e){return 1===e?[t]:xc(t,e)}function vc(t,e,n,r,s){const i=((t,e)=>{switch(t){case YF.PACKED_2X2_FLOAT32:return yc(e);case YF.PACKED_2X2_FLOAT16:return gc(e);case YF.UNPACKED_FLOAT32:return pc(e);case YF.UNPACKED_FLOAT16:return mc(e);case YF.PACKED_4X1_UNSIGNED_BYTE:return bc(e);default:throw new Error(`Unknown physical texture type ${t}`)}})(e,r);let o;if(s){const[e,n]=Rl(t[0],t[1]);o=e*n}else{const[e,n]=Tl(t[0],t[1]);o=e*n}const a=((t,e)=>{const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;if(e===n.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)})(n,i);return o*a}function $c(t,e){if(t===KF.UPLOAD)return YF.PACKED_2X2_FLOAT32;if(t===KF.RENDER||null==t)return(t=>gt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?YF.PACKED_2X2_FLOAT32:YF.UNPACKED_FLOAT32:t?YF.PACKED_2X2_FLOAT16:YF.UNPACKED_FLOAT16)(e);if(t===KF.DOWNLOAD||t===KF.PIXELS)return YF.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function kc(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}function Nc(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function Cc(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,i=n.makeTensorInfo(r.shape,"complex64"),o=n.texData.get(i.dataId),a=Nc({inputs:{x:r},backend:n}),u=Nc({inputs:{x:s},backend:n});return o.complexTensorInfos={real:a,imag:u},i}function Sc({opSnippet:t,packedOpSnippet:e,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:i})=>{const{x:o}=s,a=i,u=r||o.dtype;if(a.shouldExecuteOnCPU([o])&&null!=n){const t=a.texData.get(o.dataId),e=n(t.values,u);return a.makeTensorInfo(o.shape,u,e)}let l;return l=gt().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=e?new yD(o.shape,e):new hD(o.shape,t),a.runWebGLProgram(l,[o],u)}}function Ec({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:i}){return({inputs:o,backend:a})=>{const{a:u,b:l}=o,c=a;if(r&&"complex64"===u.dtype){const e=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,s]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(e=>{const[n,r]=e,s={dataId:n.dataId,dtype:n.dtype,shape:u.shape},i={dataId:r.dataId,dtype:r.dtype,shape:l.shape},o=new ND(t,u.shape,l.shape);return c.runWebGLProgram(o,[s,i],re(n.dtype,r.dtype))}),i=Cc({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),i}const h=i||re(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||c.shouldExecuteOnCPU([u,l]))&&null!=s){const t=c.texData.get(u.dataId).values,e=c.texData.get(l.dataId).values,n="string"===u.dtype?Es(t):t,r="string"===u.dtype?Es(e):e,[i,o]=s(u.shape,l.shape,n,r,h),a=c.makeTensorInfo(o,h);return c.texData.get(a.dataId).values=i,a}let d;return d=gt().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e?new SD(e,u.shape,l.shape,n):new ND(t,u.shape,l.shape),c.runWebGLProgram(d,[u,l],h)}}function Tc(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":pD;if("elu"===t)return e?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===t)return e?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":mD;if("prelu"===t)return e?ID:OD;if("leakyrelu"===t)return e?RD:_D;if("sigmoid"===t)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}function _c(t){const{inputs:e,backend:n}=t,{a:r,b:s}=e,i=re(r.dtype,s.dtype);if("complex64"===r.dtype){const t=n.texData.get(r.dataId),e=n.texData.get(s.dataId),i=new PD(LD,r.shape,s.shape),o=new PD(VD,r.shape,s.shape),a=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(i,a,"float32"),l=n.runWebGLProgram(o,a,"float32"),c=Cc({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,s])){const t=n.texData.get(r.dataId),e=n.texData.get(s.dataId),[o,a]=LM(r.shape,s.shape,t.values,e.values,i),u=n.makeTensorInfo(a,i);return n.texData.get(u.dataId).values=o,u}let o;return o=gt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new SD(BD,r.shape,s.shape):new ND(BD,r.shape,s.shape),n.runWebGLProgram(o,[r,s],i)}function Rc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:i}=r,o=n,a=V(s.shape),u=G(i,a),l=V(u);F(a===l,()=>`The new shape (${u}) has ${l} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const c=o.texData.get(s.dataId);return!c.isPacked||ql(s.shape,u)||null!==c.texture&&ql(c.shape,u)?(o.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype}):((t,e,n)=>{const r=[Wl(t.shape),...Ul(t.shape)],s={dtype:t.dtype,shape:r,dataId:t.dataId},i=[Wl(e),...Ul(e)],o=new lD(i,r),a=[r],u=n.runWebGLProgram(o,[s],t.dtype,a,!0);return{dataId:u.dataId,shape:e,dtype:u.dtype}})(s,u,o)}function Ac(t,e,n,r){const s=(t=>{const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],r=qr(n);e.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return e})(t.shape);let i=t;for(let o=0;o<s.length;o++){const{inSize:a,windowSize:u,outSize:l}=s[o];let c,h;c="mean"===n?0===o?new UD({windowSize:u,inSize:a,batchSize:t.shape[0],outSize:l},a):new UD({windowSize:u,inSize:a,batchSize:t.shape[0],outSize:l}):new GD({windowSize:u,inSize:a,batchSize:t.shape[0],outSize:l},n),h=i,i=r.runWebGLProgram(c,[i],e),h.dataId!==t.dataId&&r.disposeIntermediateTensorInfo(h)}return i}function Oc(t,e,n){const r=gt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new qD(t.shape,e):new jD(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}function Ic(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r;return((t,e,n,r)=>{const s=e,i=t.shape.length,o=j(s,t.shape);let a=o;const u=er(a,i),l=null!=u;let c=t;l&&(c=Oc(t,u,r),a=rr(a.length,i)),tr("sum",a,i);const[h,d]=Zn(c.shape,a);let f=h;n&&(f=Qn(h,o));const p=V(d),m=Rc({inputs:{x:c},attrs:{shape:[V(t.shape)/p,p]},backend:r}),b=Ac(m,se(t.dtype),"sum",r),y=Rc({inputs:{x:b},attrs:{shape:f},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(b),l&&r.disposeIntermediateTensorInfo(c),y})(s,i,o,n)}function Fc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{perm:i}=r,o=n,a=s.shape.length,u=new Array(a);for(let c=0;c<u.length;c++)u[c]=s.shape[i[c]];let l;if(o.shouldExecuteOnCPU([s])){const t=o.texData.get(s.dataId).values,e=oD(t,s.shape,s.dtype,i,u);l=o.makeTensorInfo(u,s.dtype),o.texData.get(l.dataId).values=e}else l=Oc(s,i,o);return l}function Mc({a:t,b:e,transposeA:n,transposeB:r,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:u=null}){const l=t.shape.length,c=e.shape.length,h=n?t.shape[l-2]:t.shape[l-1],d=r?e.shape[c-1]:e.shape[c-2],f=n?t.shape[l-1]:t.shape[l-2],p=r?e.shape[c-2]:e.shape[c-1],m=t.shape.slice(0,-2),b=e.shape.slice(0,-2),y=V(m),g=V(b),x=ln(t.shape.slice(0,-2),e.shape.slice(0,-2)).concat([f,p]);F(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${r} must match.`);const w=n?[y,h,f]:[y,f,h],v=r?[g,p,d]:[g,d,p],$=Rc({inputs:{x:t},backend:s,attrs:{shape:w}}),k=Rc({inputs:{x:e},backend:s,attrs:{shape:v}}),N=[$,k],C=Math.max(y,g),S=n?$.shape[1]:$.shape[2],E=null!=i,T=null!=o,_="leakyrelu"===u,R=null!=u?Tc(u,!0):null;let A;if(1!==f&&1!==p||1e3>=S||!1!==(E||T||_||null!=R)){const u=re(t.dtype,e.dtype),l=new DD(w,v,[C,f,p],n,r,E,R,T,_),c=[$,k];if(null!=i&&c.push(i),T&&c.push(o),_){const t=s.makeTensorInfo([],"float32",Gt(a,"float32"));c.push(t),N.push(t)}A=s.runWebGLProgram(l,c,u)}else{let t=$,e=k;n&&(t=Fc({inputs:{x:$},backend:s,attrs:{perm:[0,2,1]}}),N.push(t)),r&&(e=Fc({inputs:{x:k},backend:s,attrs:{perm:[0,2,1]}}),N.push(e));const i=1===p;let o=t;1!==p&&(o=Rc({inputs:{x:t},backend:s,attrs:{shape:[C,S,1]}}),N.push(o));const a=1===p?2:1;let u=e;i&&(u=Rc({inputs:{x:e},backend:s,attrs:{shape:[C,1,S]}}),N.push(u));const l=_c({inputs:{a:o,b:u},backend:s});A=Ic({inputs:{x:l},backend:s,attrs:{axis:a,keepDims:!0}}),N.push(l)}const O=Rc({inputs:{x:A},backend:s,attrs:{shape:x}});N.push(A);for(const I of N)s.disposeIntermediateTensorInfo(I);return O}function Dc(t,e,n,r=null){let s=e.shape[0],i=e.shape[1];null!=r&&(s=r.shape[0],i=r.shape[1]);const o=qr(i),a={windowSize:o,inSize:i,batchSize:s,outSize:Math.ceil(i/o)},u=new cL(a,n,null==r),l=[e];null!=r&&l.push(r);const c=t.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const h=Dc(t,e,n,c);return t.disposeIntermediateTensorInfo(c),h}function Lc(t,e,n,r=null){const s=null!=r?r.shape:e.shape,i=qr(s[s.length-1]),o=new hL(s,i,n,null==r),a=null==r?[e]:[e,r],u=t.runWebGLProgram(o,a,"int32");if(u.shape.length===e.shape.length){const r=Lc(t,e,n,u);return t.disposeIntermediateTensorInfo(u),r}return u}function Vc(t,e,n,r){const s=[n];if(tr("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,e.shape.length),!gt().getBool("WEBGL_PACK_REDUCE")||2>=e.shape.length){const n=[],i=t.texData.get(e.dataId);let o=e;null!==i&&i.isPacked&&(o=t.unpackTensor(e),n.push(o));const[a,u]=Zn(o.shape,s),l=V(u),c=Rc({inputs:{x:o},backend:t,attrs:{shape:[-1,l]}});n.push(c);const h=Dc(t,c,r);n.push(h);const d=Rc({inputs:{x:h},backend:t,attrs:{shape:a}});return n.forEach(e=>t.disposeIntermediateTensorInfo(e)),d}return Lc(t,e,r)}function Pc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:i,size:o}=r,[a,u]=Tn(s,i,o);if(bn(s,a,u),0===V(u))return n.makeTensorInfo(u,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const t=n.texData.get(s.dataId),e=XM(t.values,a,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,e)}const{isPacked:l}=n.texData.get(s.dataId),c=Sn(s.shape,a,u);if(l||!c){const t=gt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new VL(u):new DL(u),e=[a];return n.runWebGLProgram(t,[s],s.dtype,e)}return n.uploadToGPU(s.dataId),((t,e,n,r)=>{const s=r.texData.get(t.dataId),i=r.makeTensorInfo(n,t.dtype),o=r.texData.get(i.dataId);Object.assign(o,s),o.refCount=1,o.shape=n,o.dtype=t.dtype;let a=En(e,at(t.shape));s.slice&&(a+=s.slice.flatOffset),o.slice={flatOffset:a,origDataId:s.slice&&s.slice.origDataId||t.dataId};const u=r.dataRefCount.get(o.slice.origDataId)||1;return r.dataRefCount.set(o.slice.origDataId,u+1),i})(s,a,u,n)}function Bc(t){const{inputs:e,backend:n}=t,{input:r}=e;return Nc({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}function zc(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}function Wc(t,e,n){const r=t.indexOf(e);return t.map((t,e)=>e===r?`${t} - ${n}`:t).join()}function Uc(t){const{inputs:e,backend:n}=t,{input:r}=e;return Nc({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}function Gc(t,e,n){const r=t[0].dtype;if("complex64"===r){const r=t.map(t=>Bc({inputs:{input:t},backend:n})),s=t.map(t=>Uc({inputs:{input:t},backend:n})),i=Gc(r,e,n),o=Gc(s,e,n),a=Cc({inputs:{real:i,imag:o},backend:n});return r.forEach(t=>n.disposeIntermediateTensorInfo(t)),s.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),a}let s=n.shouldExecuteOnCPU(t);if("string"===r&&(s=!0),s){const s=t.map(t=>{const r=V(t.shape.slice(e));return Rc({inputs:{x:t},backend:n,attrs:{shape:[-1,r]}})}),i=s.map(t=>({vals:n.readSync(t.dataId),shape:t.shape})),o=zr(s.map(t=>t.shape),1),a=1===s[0].shape[0],u=vM(i,o,r,a),l=zr(t.map(t=>t.shape),e),c=n.makeTensorInfo(l,r,u);return s.forEach(t=>n.disposeIntermediateTensorInfo(t)),c}const i=gt().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(t.length>i){const r=[];for(let o=0;o<t.length;o+=i){const s=t.slice(o,o+i);r.push(Gc(s,e,n))}const s=Gc(r,e,n);for(const t of r)n.disposeIntermediateTensorInfo(t);return s}if(gt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].shape.length>1){const s=new nV(t.map(t=>t.shape),e);return n.runWebGLProgram(s,t,r)}const{tensors2D:o,outShape:a}=((t,e,n)=>{const r=zr(t.map(t=>t.shape),e);return{tensors2D:t.map(t=>Rc({inputs:{x:t},attrs:{shape:[-1,V(t.shape.slice(e))]},backend:n})),outShape:r}})(t,e,n),u=new eV(o.map(t=>t.shape)),l=n.runWebGLProgram(u,o,r);o.forEach(t=>n.disposeIntermediateTensorInfo(t));const c=Rc({inputs:{x:l},attrs:{shape:a},backend:n});return n.disposeIntermediateTensorInfo(l),c}function jc(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,i=j(s,e[0].shape)[0];Br(e.map(t=>t.shape),i);const o=zr(e.map(t=>t.shape),i);if(0===V(o))return n.makeTensorInfo(o,e[0].dtype,[]);const a=e.filter(t=>V(t.shape)>0);return 1===a.length?Nc({inputs:{x:a[0]},backend:n}):Gc(a,i,n)}function qc(t,e){const n=t.length;return 3>n?!e&&1===n&&t[0]>1?[t[0],1]:null:e?[...t.slice(0,-3),t[n-3]*t[n-2],t[n-1]]:[...t.slice(0,-3),t[n-3],t[n-2]*t[n-1]]}function Hc({x:t,filter:e,convInfo:n,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:a=null}){const u=t.shape,l=r.texData.get(t.dataId),c=n.inChannels,h=u[0]*u[1]*u[2],d=n.outChannels,f="channelsLast"===n.dataFormat,p=!1;let m;const b=[];if(null!=i){const t=qc(i.shape,f);null!=t&&(i=Rc({inputs:{x:i},backend:r,attrs:{shape:t}}),b.push(i))}if(null!=s){const t=qc(s.shape,f);null!=t&&(s=Rc({inputs:{x:s},backend:r,attrs:{shape:t}}),b.push(s))}if((1!==h&&1!==d||1e3>=c)&&l.isPacked&&f&&null!=l.texture&&u[2]%2!=0&&P(l.shape.slice(-3),u.slice(-3))){const c=u[0]*u[1]*(u[2]+1),h={dataId:t.dataId,shape:[1,c,n.inChannels],dtype:t.dtype},d=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,F(ql(l.shape,h.shape),()=>`packed reshape ${l.shape} to ${h.shape} isn't free`);const f=Rc({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});b.push(f);const y=Mc({a:h,b:f,backend:r,transposeA:!1,transposeB:p,bias:s,activation:a,preluActivationWeights:i,leakyreluAlpha:o}),g=r.texData.get(y.dataId);F(g.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=d,g.shape=n.outShape,m=Nc({inputs:{x:y},backend:r}),m.shape=n.outShape,b.push(y)}else{const u=n.outHeight*n.outWidth,l=Rc({inputs:{x:t},backend:r,attrs:{shape:f?[n.batchSize,u,n.inChannels]:[n.batchSize,n.inChannels,u]}}),c=Rc({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=Mc({a:f?l:c,b:f?c:l,transposeA:!f,transposeB:p,backend:r,bias:s,activation:a,preluActivationWeights:i,leakyreluAlpha:o});m=Rc({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),b.push(l),b.push(c),b.push(h)}for(const y of b)r.disposeIntermediateTensorInfo(y);return m}function Xc({x:t,filter:e,convInfo:n,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:a=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:d,dataFormat:f}=n,p="channelsLast"===f,m=u*l*c,b=d*h,y=[n.batchSize,m,b],g=[];if(null!=i){const t=qc(i.shape,p);null!=t&&(i=Rc({inputs:{x:i},backend:r,attrs:{shape:t}}),g.push(i))}if(null!=s){const t=qc(s.shape,p);null!=t&&(s=Rc({inputs:{x:s},backend:r,attrs:{shape:t}}),g.push(s))}const x=Rc({inputs:{x:e},backend:r,attrs:{shape:[1,m,V(e.shape)/m]}});g.push(x);const w=new uV(y,n),v=[t.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],$=r.runWebGLProgram(w,[t],"float32",v),k=Rc({inputs:{x:$},backend:r,attrs:{shape:y}});g.push($),g.push(k);const N=null!=s,C=null!=i,S="leakyrelu"===a,E=a?Tc(a,!0):null,T=new DD(p?k.shape:x.shape,p?x.shape:k.shape,p?[n.batchSize,b,n.outChannels]:[n.batchSize,n.outChannels,b],!0,!1,N,E,C,S),_=p?[k,x]:[x,k];if(s&&_.push(s),C&&_.push(i),S){const t=r.makeTensorInfo([],"float32",Gt(o,"float32"));_.push(t),g.push(t)}const R=r.runWebGLProgram(T,_,"float32"),A=Rc({inputs:{x:R},backend:r,attrs:{shape:n.outShape}});g.push(R);for(const O of g)r.disposeIntermediateTensorInfo(O);return A}function Kc(t,e,n){if(1===t)return`${e}`;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}function Jc(t,e,n){if(1===t)return`${e}`;if(2===t)return`${e}.y`;if(3===t)return`${e}.z`;if(4===t)return`${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}function Yc(t,e,n,r,s,i){const o=e.shape.length,a=er([r],o);let u=e;null!=a&&(u=Fc({inputs:{x:e},backend:n,attrs:{perm:a}}));const l=rr(1,o)[0];if(l!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${r}`);const c=u.shape[l];let h=Nc({inputs:{x:u},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const e=new EV(t,u.shape,!1,i),r=[[d]],s=h;h=n.runWebGLProgram(e,[h],h.dtype,r),n.disposeIntermediateTensorInfo(s)}if(s){const e=new EV(t,u.shape,s,i),r=h;h=n.runWebGLProgram(e,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=a){const t=Fc({inputs:{x:h},backend:n,attrs:{perm:nr(a)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),t}return h}function Zc(t){const{inputs:e,attrs:n,backend:r}=t,{dim:s}=n,{input:i}=e,o=i.shape.length,a=i.shape.slice();let u=s;return 0>s&&(F(s>=-(o+1),()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),u=o+s+1),a.splice(u,0,1),Rc({inputs:{x:i},backend:r,attrs:{shape:a}})}function Qc(t,e,n){const r=n.texData.get(t.dataId),s=V(t.shape),i=t.shape[t.shape.length-1],o=Rc({inputs:{x:t},backend:n,attrs:{shape:[s/i,i]}}),a=o.shape,u=new sP("real",a,e),l=new sP("imag",a,e),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:a},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:a}],h=n.runWebGLProgram(u,c,"float32"),d=n.runWebGLProgram(l,c,"float32"),f=Cc({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const p=Rc({inputs:{x:f},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),p}function th(t){const{backend:e,attrs:n}=t,{shape:r,value:s}=n;let{dtype:i}=n;if(i=i||st(s),"string"===i){const t=X(i,V(r));return t.fill(s),e.makeTensorInfo(r,i,t)}{const t=new oP(r,s),n=[[s]];return e.runWebGLProgram(t,[],i,n)}}function eh(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,indices:i}=e,{axis:o,batchDims:a}=r,u=j(o,s.shape)[0];if(gt().get("DEBUG")){const t=n.readSync(i.dataId),e=s.shape[u];for(let n=0;n<t.length;++n){const r=t[n];F(e-1>=r&&r>=0,()=>`GatherV2: the index value ${r} is not in [0, ${e-1}]`)}}const l=Ss(s,i,u,a),c=V(i.shape),h=[],d=Rc({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),f=Rc({inputs:{x:i},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});h.push(d),h.push(f);const p=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,i])||"string"===s.dtype){const t=n.bufferSync(f),e=n.bufferSync(d),r=EM(e,t,p);return h.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const m=new NP(d.shape,p),b=n.runWebGLProgram(m,[d,f],d.dtype);h.push(b);const y=Rc({inputs:{x:b},backend:n,attrs:{shape:l.outputShape}});return h.forEach(t=>n.disposeIntermediateTensorInfo(t)),y}function nh(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reductionIndices:i,keepDims:o}=r,a=s.shape.length,u=j(i,s.shape);let l=u;const c=er(l,a),h=null!=c,d=n.shouldExecuteOnCPU([s]);let f=s;if(h){if(d){const t=n.texData.get(f.dataId).values,e=new Array(a);for(let n=0;n<e.length;n++)e[n]=s.shape[c[n]];const r=oD(t,s.shape,s.dtype,c,e);f=n.makeTensorInfo(e,s.dtype),n.texData.get(f.dataId).values=r}else f=Oc(s,c,n);l=rr(l.length,a)}tr("max",l,a);const[p,m]=Zn(f.shape,l);let b,y=p;if(o&&(y=Qn(p,u)),d){const t=n.texData.get(f.dataId).values,e=FM(t,V(m),y,s.dtype);b=n.makeTensorInfo(y,s.dtype),n.texData.get(b.dataId).values=e}else b=((t,e,n,r)=>{const s=V(e),i=Rc({inputs:{x:t},attrs:{shape:[V(t.shape)/s,s]},backend:r}),o=Ac(i,t.dtype,"max",r),a=Rc({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),a})(f,m,y,n);return h&&n.disposeIntermediateTensorInfo(f),b}function rh(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{dim:i}=r,o=j([i],s.shape),a=nh({inputs:{x:s},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),u=Qn(a.shape,o),l=Rc({inputs:{x:a},backend:n,attrs:{shape:u}}),c=SB({inputs:{a:s,b:l},backend:n}),h=ZV({inputs:{x:c},backend:n}),d=Ic({inputs:{x:h},backend:n,attrs:{axis:o,keepDims:!1}}),f=Rc({inputs:{x:d},backend:n,attrs:{shape:u}}),p=kB({inputs:{a:h,b:f},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),p}function sh(t){const{inputs:e,backend:n}=t,{x:r}=e;if("complex64"===r.dtype){const t=Bc({inputs:{input:r},backend:n}),e=sh({inputs:{x:t},backend:n}),s=Uc({inputs:{input:r},backend:n}),i=sh({inputs:{x:s},backend:n}),o=Cc({inputs:{real:e,imag:i},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}return th({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}function ih(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reps:i}=r;if("string"===s.dtype||s.shape.length>5){const t=n.readSync(s.dataId),e="string"===s.dtype?t.map(t=>Kt(t)):t,r=We(s.shape,s.dtype,e),o=sD(r,i);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new fW(s.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}function oh(t,e){null!==e&&t.disposeIntermediateTensorInfo(e)}function ah(t){let e=1;for(;t>e;)e*=2;return e}function uh(t){return!!t.constructor&&"function"==typeof t.constructor.isBuffer&&t.constructor.isBuffer(t)}function lh(t,e){return t[0]-e[0]}function ch(){var t,e=this.stride,n=new Array(e.length);for(t=0;t<n.length;++t)n[t]=[Math.abs(e[t]),t];n.sort(lh);var r=new Array(n.length);for(t=0;t<r.length;++t)r[t]=n[t][1];return r}function hh(t,e){var n=["View",e,"d",t].join("");0>e&&(n="View_Nil"+t);var r="generic"===t;if(-1===e){var s="function "+n+"(a){this.data=a;};var proto="+n+".prototype;proto.dtype='"+t+"';proto.index=function(){return -1};proto.size=0;proto.dimension=-1;proto.shape=proto.stride=proto.order=[];proto.lo=proto.hi=proto.transpose=proto.step=function(){return new "+n+"(this.data);};proto.get=proto.set=function(){};proto.pick=function(){return null};return function construct_"+n+"(a){return new "+n+"(a);}";return new Function(s)()}if(0===e)return s="function "+n+"(a,d) {this.data = a;this.offset = d};var proto="+n+".prototype;proto.dtype='"+t+"';proto.index=function(){return this.offset};proto.dimension=0;proto.size=1;proto.shape=proto.stride=proto.order=[];proto.lo=proto.hi=proto.transpose=proto.step=function "+n+"_copy() {return new "+n+"(this.data,this.offset)};proto.pick=function "+n+"_pick(){return TrivialArray(this.data);};proto.valueOf=proto.get=function "+n+"_get(){return "+(r?"this.data.get(this.offset)":"this.data[this.offset]")+"};proto.set=function "+n+"_set(v){return "+(r?"this.data.set(this.offset,v)":"this.data[this.offset]=v")+"};return function construct_"+n+"(a,b,c,d){return new "+n+"(a,d)}",new Function("TrivialArray",s)(AW[t][0]);s=["'use strict'"];var i=_W(e),o=i.map(t=>"i"+t),a="this.offset+"+i.map(t=>"this.stride["+t+"]*i"+t).join("+"),u=i.map(t=>"b"+t).join(","),l=i.map(t=>"c"+t).join(",");s.push("function "+n+"(a,"+u+","+l+",d){this.data=a","this.shape=["+u+"]","this.stride=["+l+"]","this.offset=d|0}","var proto="+n+".prototype","proto.dtype='"+t+"'","proto.dimension="+e),s.push("Object.defineProperty(proto,'size',{get:function "+n+"_size(){return "+i.map(t=>"this.shape["+t+"]").join("*"),"}})"),1===e?s.push("proto.order=[0]"):(s.push("Object.defineProperty(proto,'order',{get:"),4>e?(s.push("function "+n+"_order(){"),2===e?s.push("return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})"):3===e&&s.push("var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);if(s0>s1){if(s1>s2){return [2,1,0];}else if(s0>s2){return [1,2,0];}else{return [1,0,2];}}else if(s0>s2){return [2,0,1];}else if(s2>s1){return [0,1,2];}else{return [0,2,1];}}})")):s.push("ORDER})")),s.push("proto.set=function "+n+"_set("+o.join(",")+",v){"),r?s.push("return this.data.set("+a+",v)}"):s.push("return this.data["+a+"]=v}"),s.push("proto.get=function "+n+"_get("+o.join(",")+"){"),r?s.push("return this.data.get("+a+")}"):s.push("return this.data["+a+"]}"),s.push("proto.index=function "+n+"_index(",o.join(),"){return "+a+"}"),s.push("proto.hi=function "+n+"_hi("+o.join(",")+"){return new "+n+"(this.data,"+i.map(t=>["(typeof i",t,"!=='number'||i",t,"<0)?this.shape[",t,"]:i",t,"|0"].join("")).join(",")+","+i.map(t=>"this.stride["+t+"]").join(",")+",this.offset)}");var c=i.map(t=>"a"+t+"=this.shape["+t+"]"),h=i.map(t=>"c"+t+"=this.stride["+t+"]");s.push("proto.lo=function "+n+"_lo("+o.join(",")+"){var b=this.offset,d=0,"+c.join(",")+","+h.join(","));for(var d=0;e>d;++d)s.push("if(typeof i"+d+"==='number'&&i"+d+">=0){d=i"+d+"|0;b+=c"+d+"*d;a"+d+"-=d}");for(s.push("return new "+n+"(this.data,"+i.map(t=>"a"+t).join(",")+","+i.map(t=>"c"+t).join(",")+",b)}"),s.push("proto.step=function "+n+"_step("+o.join(",")+"){var "+i.map(t=>"a"+t+"=this.shape["+t+"]").join(",")+","+i.map(t=>"b"+t+"=this.stride["+t+"]").join(",")+",c=this.offset,d=0,ceil=Math.ceil"),d=0;e>d;++d)s.push("if(typeof i"+d+"==='number'){d=i"+d+"|0;if(d<0){c+=b"+d+"*(a"+d+"-1);a"+d+"=ceil(-a"+d+"/d)}else{a"+d+"=ceil(a"+d+"/d)}b"+d+"*=d}");s.push("return new "+n+"(this.data,"+i.map(t=>"a"+t).join(",")+","+i.map(t=>"b"+t).join(",")+",c)}");var f=new Array(e),p=new Array(e);for(d=0;e>d;++d)f[d]="a[i"+d+"]",p[d]="b[i"+d+"]";for(s.push("proto.transpose=function "+n+"_transpose("+o+"){"+o.map((t,e)=>t+"=("+t+"===undefined?"+e+":"+t+"|0)").join(";"),"var a=this.shape,b=this.stride;return new "+n+"(this.data,"+f.join(",")+","+p.join(",")+",this.offset)}"),s.push("proto.pick=function "+n+"_pick("+o+"){var a=[],b=[],c=this.offset"),d=0;e>d;++d)s.push("if(typeof i"+d+"==='number'&&i"+d+">=0){c=(c+this.stride["+d+"]*i"+d+")|0}else{a.push(this.shape["+d+"]);b.push(this.stride["+d+"])}");return s.push("var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}"),s.push("return function construct_"+n+"(data,shape,stride,offset){return new "+n+"(data,"+i.map(t=>"shape["+t+"]").join(",")+","+i.map(t=>"stride["+t+"]").join(",")+",offset)}"),new Function("CTOR_LIST","ORDER",s.join("\n"))(AW[t],ch)}function dh(t,e,n,r){for(var s=t[e++],i=1<<s,o=i+1,a=o+1,u=s+1,l=(1<<u)-1,c=0,h=0,d=0,f=t[e++],p=new Int32Array(4096),m=null;;){for(;16>c&&0!==f;)h|=t[e++]<<c,c+=8,1===f?f=t[e++]:--f;if(u>c)break;var b=h&l;if(h>>=u,c-=u,b!==i){if(b===o)break;for(var y=a>b?b:m,g=0,x=y;x>i;)x=p[x]>>8,++g;var w=x;if(d+g+(y!==b?1:0)>r)return;n[d++]=w;var v=d+=g;for(y!==b&&(n[d++]=w),x=y;g--;)x=p[x],n[--v]=255&x,x>>=8;null!==m&&4096>a&&(p[a++]=m<<8|w,a>=l+1&&12>u&&(++u,l=l<<1|1)),m=b}else a=o+1,l=(1<<(u=s+1))-1,m=null}return n}function fh(t,e,n){var r,s,i=t.length,o=e.arrayArgs.length,a=e.indexArgs.length>0,u=[],l=[],c=0,h=0;for(r=0;i>r;++r)l.push(["i",r,"=0"].join(""));for(s=0;o>s;++s)for(r=0;i>r;++r)h=c,c=t[r],0===r?l.push(["d",s,"s",r,"=t",s,"p",c].join("")):l.push(["d",s,"s",r,"=(t",s,"p",c,"-s",h,"*t",s,"p",h,")"].join(""));for(l.length>0&&u.push("var "+l.join(",")),r=i-1;r>=0;--r)c=t[r],u.push(["for(i",r,"=0;i",r,"<s",c,";++i",r,"){"].join(""));for(u.push(n),r=0;i>r;++r){for(h=c,c=t[r],s=0;o>s;++s)u.push(["p",s,"+=d",s,"s",r].join(""));a&&(r>0&&u.push(["index[",h,"]-=s",h].join("")),u.push(["++index[",c,"]"].join(""))),u.push("}")}return u.join("\n")}function ph(t,e,n){for(var r=t.body,s=[],i=[],o=0;o<t.args.length;++o){var a=t.args[o];if(a.count>0){var u=new RegExp(a.name,"g"),l="",c=e.arrayArgs.indexOf(o);switch(e.argTypes[o]){case"offset":var h=e.offsetArgIndex.indexOf(o);c=e.offsetArgs[h].array,l="+q"+h;case"array":l="p"+c+l;var d="l"+o,f="a"+c;if(0===e.arrayBlockIndices[c])1===a.count?"generic"===n[c]?a.lvalue?(s.push(["var ",d,"=",f,".get(",l,")"].join("")),r=r.replace(u,d),i.push([f,".set(",l,",",d,")"].join(""))):r=r.replace(u,[f,".get(",l,")"].join("")):r=r.replace(u,[f,"[",l,"]"].join("")):"generic"===n[c]?(s.push(["var ",d,"=",f,".get(",l,")"].join("")),r=r.replace(u,d),a.lvalue&&i.push([f,".set(",l,",",d,")"].join(""))):(s.push(["var ",d,"=",f,"[",l,"]"].join("")),r=r.replace(u,d),a.lvalue&&i.push([f,"[",l,"]=",d].join("")));else{for(var p=[a.name],m=[l],b=0;b<Math.abs(e.arrayBlockIndices[c]);b++)p.push("\\s*\\[([^\\]]+)\\]"),m.push("$"+(b+1)+"*t"+c+"b"+b);if(u=new RegExp(p.join(""),"g"),l=m.join("+"),"generic"===n[c])throw new Error("cwise: Generic arrays not supported in combination with blocks!");r=r.replace(u,[f,"[",l,"]"].join(""))}break;case"scalar":r=r.replace(u,"Y"+e.scalarArgs.indexOf(o));break;case"index":r=r.replace(u,"index");break;case"shape":r=r.replace(u,"shape")}}}return[s.join("\n"),r,i.join("\n")].join("\n").trim()}function mh(t){for(var e=new Array(t.length),n=!0,r=0;r<t.length;++r){var s=t[r],i=s.match(/\d+/);i=i?i[0]:"",0===s.charAt(0)?e[r]="u"+s.charAt(1)+i:e[r]=s.charAt(0)+i,r>0&&(n=n&&e[r]===e[r-1])}return n?e[0]:e.join("")}function bh(){this.argTypes=[],this.shimArgs=[],this.arrayArgs=[],this.arrayBlockIndices=[],this.scalarArgs=[],this.offsetArgs=[],this.offsetArgIndex=[],this.indexArgs=[],this.shapeArgs=[],this.funcName="",this.pre=null,this.body=null,this.post=null,this.debug=!1}function yh(t,e){var n;try{n=new WW(t)}catch(u){return void e(u)}if(n.numFrames()>0){var r=[],s=[n.numFrames(),n.height,n.width,4],i=new Uint8Array(s[0]*s[1]*s[2]*s[3]),o=zW(i,s);try{for(var a=0;a<n.numFrames();++a)n.decodeAndBlitFrameRGBA(a,i.subarray(o.index(a,0,0,0),o.index(a+1,0,0,0))),r.push(n.frameInfo(a))}catch(u){return void e(u)}e(null,o.transpose(0,2,1),r)}else{s=[n.height,n.width,4],i=new Uint8Array(s[0]*s[1]*s[2]),o=zW(i,s);try{n.decodeAndBlitFrameRGBA(0,i)}catch(u){return void e(u)}e(null,o.transpose(1,0))}}function gh(){gh.init.call(this)}function xh(t){if("function"!=typeof t)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof t)}function wh(t){return void 0===t.N?gh.defaultMaxListeners:t.N}function vh(t,e,n,r){var s,i,o;if(xh(n),void 0===(i=t.C)?(i=t.C=Object.create(null),t.T=0):(void 0!==i.newListener&&(t.emit("newListener",e,n.listener?n.listener:n),i=t.C),o=i[e]),void 0===o)o=i[e]=n,++t.T;else if("function"==typeof o?o=i[e]=r?[n,o]:[o,n]:r?o.unshift(n):o.push(n),(s=wh(t))>0&&o.length>s&&!o.warned){o.warned=!0;var a=new Error("Possible EventEmitter memory leak detected. "+o.length+" "+String(e)+" listeners added. Use emitter.setMaxListeners() to increase limit");a.name="MaxListenersExceededWarning",a.emitter=t,a.type=e,a.count=o.length,console&&console.warn}return t}function $h(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function kh(t,e,n){var r={fired:!1,wrapFn:void 0,target:t,type:e,listener:n},s=$h.bind(r);return s.listener=n,r.wrapFn=s,s}function Nh(t,e,n){var r=t.C;if(void 0===r)return[];var s=r[e];return void 0===s?[]:"function"==typeof s?n?[s.listener||s]:[s]:n?(t=>{for(var e=new Array(t.length),n=0;n<e.length;++n)e[n]=t[n].listener||t[n];return e})(s):Sh(s,s.length)}function Ch(t){var e=this.C;if(void 0!==e){var n=e[t];if("function"==typeof n)return 1;if(void 0!==n)return n.length}return 0}function Sh(t,e){for(var n=new Array(e),r=0;e>r;++r)n[r]=t[r];return n}function Eh(t,e,n,r){if("function"==typeof t.on)r.once?t.once(e,n):t.on(e,n);else{if("function"!=typeof t.addEventListener)throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof t);t.addEventListener(e,function s(i){r.once&&t.removeEventListener(e,s),n(i)})}}function Th(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=t.indexOf("=");return-1===n&&(n=e),[n,n===e?0:4-n%4]}function _h(t){return QW[t>>18&63]+QW[t>>12&63]+QW[t>>6&63]+QW[63&t]}function Rh(t,e,n){for(var r,s=[],i=e;n>i;i+=3)r=(t[i]<<16&16711680)+(t[i+1]<<8&65280)+(255&t[i+2]),s.push(_h(r));return s.join("")}function Ah(t){return{}.toString.call(t)}function Oh(){function t(t,e,n){this.chunk=t,this.encoding=e,this.callback=n}function e(t,e){var n=Ih(),r=(t=t||{}).highWaterMark,a=t.objectMode?16:16384;this.highWaterMark=r||0===r?r:a,this.objectMode=!!t.objectMode,e instanceof n&&(this.objectMode=this.objectMode||!!t.writableObjectMode),this.highWaterMark=~~this.highWaterMark,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1;var u=!1===t.decodeStrings;this.decodeStrings=!u,this.defaultEncoding=t.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=t=>{((t,e)=>{var n=t._,r=n.sync,a=n.writecb;if((t=>{t.writing=!1,t.writecb=null,t.length-=t.writelen,t.writelen=0})(n),e)((t,e,n,r,s)=>{n?process.nextTick(()=>{e.pendingcb--,s(r)}):(e.pendingcb--,s(r)),t._.errorEmitted=!0,t.emit("error",r)})(t,n,r,e,a);else{var u=o(0,n);u||n.corked||n.bufferProcessing||!n.buffer.length||i(t,n),r?process.nextTick(()=>{s(t,n,u,a)}):s(t,n,u,a)}})(e,t)},this.writecb=null,this.writelen=0,this.buffer=[],this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1}function n(t){var r=Ih();if(!(this instanceof n||this instanceof r))return new n(t);this._=new e(t,this),this.writable=!0,h.call(this)}function r(t,e,n,r,s,i,o){e.writelen=r,e.writecb=o,e.writing=!0,e.sync=!0,n?t.R(s,e.onwrite):t.A(s,i,e.onwrite),e.sync=!1}function s(t,e,n,r){n||((t,e)=>{0===e.length&&e.needDrain&&(e.needDrain=!1,t.emit("drain"))})(t,e),e.pendingcb--,r(),u(t,e)}function i(t,e){if(e.bufferProcessing=!0,t.R&&e.buffer.length>1){for(var n=[],s=0;s<e.buffer.length;s++)n.push(e.buffer[s].callback);e.pendingcb++,r(t,e,!0,e.length,e.buffer,"",t=>{for(var r=0;r<n.length;r++)e.pendingcb--,n[r](t)}),e.buffer=[]}else{for(s=0;s<e.buffer.length;s++){var i=e.buffer[s],o=i.chunk,a=i.encoding,u=i.callback,l=e.objectMode?1:o.length;if(r(t,e,!1,l,o,a,u),e.writing){s++;break}}s<e.buffer.length?e.buffer=e.buffer.slice(s):e.buffer.length=0}e.bufferProcessing=!1}function o(t,e){return e.ending&&0===e.length&&!e.finished&&!e.writing}function a(t,e){e.prefinished||(e.prefinished=!0,t.emit("prefinish"))}function u(t,e){var n=o(0,e);return n&&(0===e.pendingcb?(a(t,e),e.finished=!0,t.emit("finish")):a(t,e)),n}if(uU)return aU;uU=1,aU=n;var l=YW.Buffer;n.WritableState=e;var c=iU;c.inherits=pU;var h=Nw;return c.inherits(n,h),n.prototype.pipe=function(){this.emit("error",new Error("Cannot pipe. Not readable."))},n.prototype.write=function(e,n,s){var i=this._,o=!1;return c.isFunction(n)&&(s=n,n=null),c.isBuffer(e)?n="buffer":n||(n=i.defaultEncoding),c.isFunction(s)||(s=()=>{}),i.ended?((t,e,n)=>{var r=new Error("write after end");t.emit("error",r),process.nextTick(()=>{n(r)})})(this,0,s):((t,e,n,r)=>{var s=!0;if(!(c.isBuffer(n)||c.isString(n)||c.isNullOrUndefined(n)||e.objectMode)){var i=new TypeError("Invalid non-string/buffer chunk");t.emit("error",i),process.nextTick(()=>{r(i)}),s=!1}return s})(this,i,e,s)&&(i.pendingcb++,o=((e,n,s,i,o)=>{s=((t,e,n)=>(!t.objectMode&&!1!==t.decodeStrings&&c.isString(e)&&(e=new l(e,n)),e))(n,s,i),c.isBuffer(s)&&(i="buffer");var a=n.objectMode?1:s.length;n.length+=a;var u=n.length<n.highWaterMark;return u||(n.needDrain=!0),n.writing||n.corked?n.buffer.push(new t(s,i,o)):r(e,n,!1,a,s,i,o),u})(this,i,e,n,s)),o},n.prototype.cork=function(){this._.corked++},n.prototype.uncork=function(){var t=this._;t.corked&&(t.corked--,t.writing||t.corked||t.finished||t.bufferProcessing||!t.buffer.length||i(this,t))},n.prototype.A=(t,e,n)=>{n(new Error("not implemented"))},n.prototype.R=null,n.prototype.end=function(t,e,n){var r=this._;c.isFunction(t)?(n=t,t=null,e=null):c.isFunction(e)&&(n=e,e=null),c.isNullOrUndefined(t)||this.write(t,e),r.corked&&(r.corked=1,this.uncork()),r.ending||r.finished||((t,e,n)=>{e.ending=!0,u(t,e),n&&(e.finished?process.nextTick(n):t.once("finish",n)),e.ended=!0})(this,r,n)},aU}function Ih(){function t(n){if(!(this instanceof t))return new t(n);s.call(this,n),i.call(this,n),n&&!1===n.readable&&(this.readable=!1),n&&!1===n.writable&&(this.writable=!1),this.allowHalfOpen=!0,n&&!1===n.allowHalfOpen&&(this.allowHalfOpen=!1),this.once("end",e)}function e(){this.allowHalfOpen||this._.ended||process.nextTick(this.end.bind(this))}if(cU)return lU;cU=1,lU=t;var n=Object.keys||(t=>{var e=[];for(var n in t)e.push(n);return e}),r=iU;r.inherits=pU;var s=Mh(),i=Oh();return r.inherits(t,s),((t,e)=>{for(var n=0,r=t.length;r>n;n++)e(t[n])})(n(i.prototype),e=>{t.prototype[e]||(t.prototype[e]=i.prototype[e])}),lU}function Fh(){function t(t){return t.toString(this.encoding)}function e(t){this.charReceived=t.length%2,this.charLength=this.charReceived?2:0}function n(t){this.charReceived=t.length%3,this.charLength=this.charReceived?3:0}if(hU)return mU;hU=1;var r=YW.Buffer,s=r.isEncoding||(t=>{switch(t&&t.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}}),i=mU.StringDecoder=function(i){switch(this.encoding=(i||"utf8").toLowerCase().replace(/[-_]/,""),(t=>{if(t&&!s(t))throw new Error("Unknown encoding: "+t)})(i),this.encoding){case"utf8":this.surrogateSize=3;break;case"ucs2":case"utf16le":this.surrogateSize=2,this.detectIncompleteChar=e;break;case"base64":this.surrogateSize=3,this.detectIncompleteChar=n;break;default:return void(this.write=t)}this.charBuffer=new r(6),this.charReceived=0,this.charLength=0};return i.prototype.write=function(t){for(var e="";this.charLength;){var n=t.length<this.charLength-this.charReceived?t.length:this.charLength-this.charReceived;if(t.copy(this.charBuffer,this.charReceived,0,n),this.charReceived+=n,this.charReceived<this.charLength)return"";if(t=t.slice(n,t.length),55296>(r=(e=this.charBuffer.slice(0,this.charLength).toString(this.encoding)).charCodeAt(e.length-1))||r>56319){if(this.charReceived=this.charLength=0,0===t.length)return e;break}this.charLength+=this.surrogateSize,e=""}this.detectIncompleteChar(t);var r,s=t.length;if(this.charLength&&(t.copy(this.charBuffer,0,t.length-this.charReceived,s),s-=this.charReceived),s=(e+=t.toString(this.encoding,0,s)).length-1,(r=e.charCodeAt(s))>=55296&&56319>=r){var i=this.surrogateSize;return this.charLength+=i,this.charReceived+=i,this.charBuffer.copy(this.charBuffer,i,0,i),t.copy(this.charBuffer,0,0,i),e.substring(0,s)}return e},i.prototype.detectIncompleteChar=function(t){for(var e=3>t.length?t.length:3;e>0;e--){var n=t[t.length-e];if(1==e&&n>>5==6){this.charLength=2;break}if(2>=e&&n>>4==14){this.charLength=3;break}if(3>=e&&n>>3==30){this.charLength=4;break}}this.charReceived=e},i.prototype.end=function(t){var e="";if(t&&t.length&&(e=this.write(t)),this.charReceived){var n=this.charReceived,r=this.charBuffer,s=this.encoding;e+=r.slice(0,n).toString(s)}return e},mU}function Mh(){function t(t,e){var n=Ih(),r=(t=t||{}).highWaterMark,s=t.objectMode?16:16384;this.highWaterMark=r||0===r?r:s,this.highWaterMark=~~this.highWaterMark,this.buffer=[],this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.objectMode=!!t.objectMode,e instanceof n&&(this.objectMode=this.objectMode||!!t.readableObjectMode),this.defaultEncoding=t.defaultEncoding||"utf8",this.ranOut=!1,this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,t.encoding&&(d||(d=Fh().StringDecoder),this.decoder=new d(t.encoding),this.encoding=t.encoding)}function e(n){if(Ih(),!(this instanceof e))return new e(n);this.O=new t(n,this),this.readable=!0,f.call(this)}function n(t,e,n,r,i){var o=((t,e)=>{var n=null;return p.isBuffer(e)||p.isString(e)||p.isNullOrUndefined(e)||t.objectMode||(n=new TypeError("Invalid non-string/buffer chunk")),n})(e,n);if(o)t.emit("error",o);else if(p.isNullOrUndefined(n))e.reading=!1,e.ended||((t,e)=>{if(e.decoder&&!e.ended){var n=e.decoder.end();n&&n.length&&(e.buffer.push(n),e.length+=e.objectMode?1:n.length)}e.ended=!0,s(t)})(t,e);else if(e.objectMode||n&&n.length>0)if(e.ended&&!i){var a=new Error("stream.push() after EOF");t.emit("error",a)}else e.endEmitted&&i?(a=new Error("stream.unshift() after end event"),t.emit("error",a)):(!e.decoder||i||r||(n=e.decoder.write(n)),i||(e.reading=!1),e.flowing&&0===e.length&&!e.sync?(t.emit("data",n),t.read(0)):(e.length+=e.objectMode?1:n.length,i?e.buffer.unshift(n):e.buffer.push(n),e.needReadable&&s(t)),((t,e)=>{e.readingMore||(e.readingMore=!0,process.nextTick(()=>{((t,e)=>{for(var n=e.length;!e.reading&&!e.flowing&&!e.ended&&e.length<e.highWaterMark&&(m("maybeReadMore read 0"),t.read(0),n!==e.length);)n=e.length;e.readingMore=!1})(t,e)}))})(t,e));else i||(e.reading=!1);return(t=>!t.ended&&(t.needReadable||t.length<t.highWaterMark||0===t.length))(e)}function r(t,e){return 0===e.length&&e.ended?0:e.objectMode?0===t?0:1:isNaN(t)||p.isNull(t)?e.flowing&&e.buffer.length?e.buffer[0].length:e.length:t>0?(t>e.highWaterMark&&(e.highWaterMark=(t=>{if(b>t){t--;for(var e=1;32>e;e<<=1)t|=t>>e;t++}else t=b;return t})(t)),t>e.length?e.ended?e.length:(e.needReadable=!0,0):t):0}function s(t){var e=t.O;e.needReadable=!1,e.emittedReadable||(m("emitReadable",e.flowing),e.emittedReadable=!0,e.sync?process.nextTick(()=>{i(t)}):i(t))}function i(t){m("emit readable"),t.emit("readable"),o(t)}function o(t){var e=t.O;if(m("flow",e.flowing),e.flowing)do{var n=t.read()}while(null!==n&&e.flowing)}function a(t,e){var n,r=e.buffer,s=e.length,i=!!e.decoder,o=!!e.objectMode;if(0===r.length)return null;if(0===s)n=null;else if(o)n=r.shift();else if(t&&s>t)if(t<r[0].length)n=(h=r[0]).slice(0,t),r[0]=h.slice(t);else if(t===r[0].length)n=r.shift();else{n=i?"":new c(t);for(var a=0,u=0,l=r.length;l>u&&t>a;u++){var h=r[0],d=Math.min(t-a,h.length);i?n+=h.slice(0,d):h.copy(n,a,0,d),d<h.length?r[0]=h.slice(d):r.shift(),a+=d}}else n=i?r.join(""):c.concat(r,s),r.length=0;return n}function u(t){var e=t.O;if(e.length>0)throw new Error("endReadable called on non-empty stream");e.endEmitted||(e.ended=!0,process.nextTick(()=>{e.endEmitted||0!==e.length||(e.endEmitted=!0,t.readable=!1,t.emit("end"))}))}if(fU)return dU;fU=1,dU=e;var l=JW,c=YW.Buffer;e.ReadableState=t;var h=XW.EventEmitter;h.listenerCount||(h.listenerCount=(t,e)=>t.listeners(e).length);var d,f=Nw,p=iU;p.inherits=pU;var m=Nw;m=m&&m.debuglog?m.debuglog("stream"):()=>{},p.inherits(e,f),e.prototype.push=function(t,e){var r=this.O;return p.isString(t)&&!r.objectMode&&(e=e||r.defaultEncoding)!==r.encoding&&(t=new c(t,e),e=""),n(this,r,t,e,!1)},e.prototype.unshift=function(t){return n(this,this.O,t,"",!0)},e.prototype.setEncoding=function(t){return d||(d=Fh().StringDecoder),this.O.decoder=new d(t),this.O.encoding=t,this};var b=8388608;return e.prototype.read=function(t){m("read",t);var e=this.O,n=t;if(p.isNumber(t)&&0>=t||(e.emittedReadable=!1),0===t&&e.needReadable&&(e.length>=e.highWaterMark||e.ended))return m("read: emitReadable",e.length,e.ended),0===e.length&&e.ended?u(this):s(this),null;if(0===(t=r(t,e))&&e.ended)return 0===e.length&&u(this),null;var i,o=e.needReadable;return m("need readable",o),(0===e.length||e.length-t<e.highWaterMark)&&m("length less than watermark",o=!0),(e.ended||e.reading)&&m("reading or ended",o=!1),o&&(m("do read"),e.reading=!0,e.sync=!0,0===e.length&&(e.needReadable=!0),this.I(e.highWaterMark),e.sync=!1),o&&!e.reading&&(t=r(n,e)),i=t>0?a(t,e):null,p.isNull(i)&&(e.needReadable=!0,t=0),e.length-=t,0!==e.length||e.ended||(e.needReadable=!0),n!==t&&e.ended&&0===e.length&&u(this),p.isNull(i)||this.emit("data",i),i},e.prototype.I=function(t){this.emit("error",new Error("not implemented"))},e.prototype.pipe=function(t,e){function n(t){m("onunpipe"),t===f&&s()}function r(){m("onend"),t.end()}function s(){m("cleanup"),t.removeListener("close",u),t.removeListener("finish",c),t.removeListener("drain",y),t.removeListener("error",a),t.removeListener("unpipe",n),f.removeListener("end",r),f.removeListener("end",s),f.removeListener("data",i),!p.awaitDrain||t._&&!t._.needDrain||y()}function i(e){m("ondata"),!1===t.write(e)&&(m("false write response, pause",f.O.awaitDrain),f.O.awaitDrain++,f.pause())}function a(e){m("onerror",e),d(),t.removeListener("error",a),0===h.listenerCount(t,"error")&&t.emit("error",e)}function u(){t.removeListener("finish",c),d()}function c(){m("onfinish"),t.removeListener("close",u),d()}function d(){m("unpipe"),f.unpipe(t)}var f=this,p=this.O;switch(p.pipesCount){case 0:p.pipes=t;break;case 1:p.pipes=[p.pipes,t];break;default:p.pipes.push(t)}p.pipesCount+=1,m("pipe count=%d opts=%j",p.pipesCount,e);var b=e&&!1===e.end||t===process.stdout||t===process.stderr?s:r;p.endEmitted?process.nextTick(b):f.once("end",b),t.on("unpipe",n);var y=(t=>()=>{var e=t.O;m("pipeOnDrain",e.awaitDrain),e.awaitDrain&&e.awaitDrain--,0===e.awaitDrain&&h.listenerCount(t,"data")&&(e.flowing=!0,o(t))})(f);return t.on("drain",y),f.on("data",i),t.C&&t.C.error?l(t.C.error)?t.C.error.unshift(a):t.C.error=[a,t.C.error]:t.on("error",a),t.once("close",u),t.once("finish",c),t.emit("pipe",f),p.flowing||(m("pipe resume"),f.resume()),t},e.prototype.unpipe=function(t){var e=this.O;if(0===e.pipesCount)return this;if(1===e.pipesCount)return t&&t!==e.pipes||(t||(t=e.pipes),e.pipes=null,e.pipesCount=0,e.flowing=!1,t&&t.emit("unpipe",this)),this;if(!t){var n=e.pipes,r=e.pipesCount;e.pipes=null,e.pipesCount=0,e.flowing=!1;for(var s=0;r>s;s++)n[s].emit("unpipe",this);return this}return-1===(s=((t,e)=>{for(var n=0,r=t.length;r>n;n++)if(t[n]===e)return n;return-1})(e.pipes,t))||(e.pipes.splice(s,1),e.pipesCount-=1,1===e.pipesCount&&(e.pipes=e.pipes[0]),t.emit("unpipe",this)),this},e.prototype.on=function(t,e){var n=f.prototype.on.call(this,t,e);if("data"===t&&!1!==this.O.flowing&&this.resume(),"readable"===t&&this.readable){var r=this.O;if(!r.readableListening)if(r.readableListening=!0,r.emittedReadable=!1,r.needReadable=!0,r.reading)r.length&&s(this);else{var i=this;process.nextTick(()=>{m("readable nexttick read 0"),i.read(0)})}}return n},e.prototype.addListener=e.prototype.on,e.prototype.resume=function(){var t=this.O;return t.flowing||(m("resume"),t.flowing=!0,t.reading||(m("resume read 0"),this.read(0)),((t,e)=>{e.resumeScheduled||(e.resumeScheduled=!0,process.nextTick(()=>{((t,e)=>{e.resumeScheduled=!1,t.emit("resume"),o(t),e.flowing&&!e.reading&&t.read(0)})(t,e)}))})(this,t)),this},e.prototype.pause=function(){return m("call pause flowing=%j",this.O.flowing),!1!==this.O.flowing&&(m("pause"),this.O.flowing=!1,this.emit("pause")),this},e.prototype.wrap=function(t){var e=this.O,n=!1,r=this;for(var s in t.on("end",()=>{if(m("wrapped end"),e.decoder&&!e.ended){var t=e.decoder.end();t&&t.length&&r.push(t)}r.push(null)}),t.on("data",s=>{m("wrapped data"),e.decoder&&(s=e.decoder.write(s)),s&&(e.objectMode||s.length)&&(r.push(s)||(n=!0,t.pause()))}),t)p.isFunction(t[s])&&p.isUndefined(this[s])&&(this[s]=(e=>function(){return t[e].apply(t,arguments)})(s));return((t,e)=>{for(var n=0,r=t.length;r>n;n++)e(t[n])})(["error","close","destroy","pause","resume"],e=>{t.on(e,r.emit.bind(r,e))}),r.I=e=>{m("wrapped _read",e),n&&(n=!1,t.resume())},r},e.F=a,dU}function Dh(t,e){this.afterTransform=(t,n)=>((t,e,n)=>{var r=t.M;r.transforming=!1;var s=r.writecb;if(!s)return t.emit("error",new Error("no writecb in Transform class"));r.writechunk=null,r.writecb=null,gU.isNullOrUndefined(n)||t.push(n),s&&s(e);var i=t.O;i.reading=!1,(i.needReadable||i.length<i.highWaterMark)&&t.I(i.highWaterMark)})(e,t,n),this.needTransform=!1,this.transforming=!1,this.writecb=null,this.writechunk=null}function Lh(t){if(!(this instanceof Lh))return new Lh(t);yU.call(this,t),this.M=new Dh(t,this);var e=this;this.O.needReadable=!0,this.O.sync=!1,this.once("prefinish",function(){gU.isFunction(this.D)?this.D(t=>{Vh(e,t)}):Vh(e)})}function Vh(t,e){if(e)return t.emit("error",e);var n=t._,r=t.M;if(n.length)throw new Error("calling transform done when ws.length != 0");if(r.transforming)throw new Error("calling transform done when still transforming");return t.push(null)}function Ph(t){if(!(this instanceof Ph))return new Ph(t);wU.call(this,t)}function Bh(t){TU.call(this,t),this.okayToPush=!0,this.resetData()}function zh(t,e,n){function r(){i.flushData()}var s=(n=n||{}).highWaterMark;Bh.call(this,{highWaterMark:s||0===s?s:65536}),this.width=~~t,this.height=~~e,this.transparent=null,this.transIndex=0,this.repeat=-1,this.delay=0,this.pixels=null,this.indexedPixels=null,this.colorDepth=null,this.colorTab=null,this.usedEntry=[],this.palSize=7,this.dispose=-1,this.firstFrame=!0,this.sample=10;var i=this;this.on("writeHeader#stop",r),this.on("frame#stop",r),this.on("finish#stop",()=>{r(),i.push(null)})}function Wh(t,e,n){var r=t*e;return 8!==n&&(r=Math.ceil(r/(8/n))),r}function Uh(t,e,n,r,s,i){for(var o=t.width,a=t.height,u=t.index,l=0;a>l;l++)for(var c=0;o>c;c++){for(var h=n(c,l,u),d=0;4>d;d++){var f=dG[r][d];if(d===s.length)throw new Error("Ran out of data");e[h+d]=255!==f?s[f+i]:255}i+=r}return i}function Gh(t,e,n,r,s,i){for(var o=t.width,a=t.height,u=t.index,l=0;a>l;l++){for(var c=0;o>c;c++)for(var h=s.get(r),d=n(c,l,u),f=0;4>f;f++){var p=dG[r][f];e[d+f]=255!==p?h[p]:i}s.resetAfterLine()}}function jh(t,e,n){if(4===t.shape.length)return jh(t.pick(n),e,0);if(3===t.shape.length)if(3===t.shape[2])pj.assign(fj(e,[t.shape[0],t.shape[1],3],[4,4*t.shape[0],1]),t),pj.assigns(fj(e,[t.shape[0]*t.shape[1]],[4],3),255);else if(4===t.shape[2])pj.assign(fj(e,[t.shape[0],t.shape[1],4],[4,4*t.shape[0],1]),t);else{if(1!==t.shape[2])return new Error("Incompatible array shape");pj.assign(fj(e,[t.shape[0],t.shape[1],3],[4,4*t.shape[0],1]),fj(t.data,[t.shape[0],t.shape[1],3],[t.stride[0],t.stride[1],0],t.offset)),pj.assigns(fj(e,[t.shape[0]*t.shape[1]],[4],3),255)}else{if(2!==t.shape.length)return new Error("Incompatible array shape");pj.assign(fj(e,[t.shape[0],t.shape[1],3],[4,4*t.shape[0],1]),fj(t.data,[t.shape[0],t.shape[1],3],[t.stride[0],t.stride[1],0],t.offset)),pj.assigns(fj(e,[t.shape[0]*t.shape[1]],[4],3),255)}return e}function qh(t){var e=mj();return e.emit("error",t),e}function Hh(){throw new Error("Promises not supported in your environment. Use the callback argument or a Promise polyfill.")}function Xh(t,e){return $j(this,void 0,void 0,function(){var n,r,s,i,o,a;return kj(this,u=>{switch(u.label){case 0:return[4,t.data()];case 1:for(n=u.sent(),r=[],a=0;a<n.length;a++)r.push({value:n[a],index:a});for(r.sort((t,e)=>e.value-t.value),s=new Float32Array(e),i=new Int32Array(e),a=0;e>a;a++)s[a]=r[a].value,i[a]=r[a].index;for(o=[],a=0;a<i.length;a++)o.push({className:Ej.NSFW_CLASSES[i[a]],probability:s[a]});return[2,o]}})})}var Kh=Math.pow,Jh=(t,e,n)=>new Promise((r,s)=>{var i=t=>{try{a(n.next(t))}catch(e){s(e)}},o=t=>{try{a(n.throw(t))}catch(e){s(e)}},a=t=>t.done?r(t.value):Promise.resolve(t.value).then(i,o);a((n=n.apply(t,e)).next())});import{aW as Yh,aX as Zh}from"./vendor-react-kZlrx8UI.js";var Qh,td,ed="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};(td=Qh||(Qh={})).Pop="POP",td.Push="PUSH",td.Replace="REPLACE";const nd="popstate";var rd,sd;(sd=rd||(rd={})).data="data",sd.deferred="deferred",sd.redirect="redirect",sd.error="error";const id=/^:[\w-]+$/,od=3,ad=2,ud=1,ld=10,cd=-2,hd=t=>"*"===t,dd=t=>t.join("/").replace(/\/\/+/g,"/"),fd=t=>t.replace(/\/+$/,"").replace(/^\/*/,"/"),pd=t=>t&&"?"!==t?t.startsWith("?")?t:"?"+t:"",md=t=>t&&"#"!==t?t.startsWith("#")?t:"#"+t:"",bd=["post","put","patch","delete"];new Set(bd);const yd=["get",...bd];new Set(yd);const gd=e((t,e,n,r,s,i,o,a)=>{if(!t){var u;if(void 0===e)u=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var l=[n,r,s,i,o,a],c=0;(u=new Error(e.replace(/%s/g,()=>l[c++]))).name="Invariant Violation"}throw u.framesToPop=1,u}}),xd=e((t,e,n,r)=>{var s=n?n.call(r,t,e):void 0;if(void 0!==s)return!!s;if(t===e)return!0;if("object"!=typeof t||!t||"object"!=typeof e||!e)return!1;var i=Object.keys(t),o=Object.keys(e);if(i.length!==o.length)return!1;for(var a={}.hasOwnProperty.bind(e),u=0;u<i.length;u++){var l=i[u];if(!a(l))return!1;var c=t[l],h=e[l];if(!1===(s=n?n.call(r,c,h,l):void 0)||void 0===s&&c!==h)return!1}return!0});let wd,vd,$d,kd={data:""},Nd=/(?:([\u0080-\uFFFF\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\s*)/g,Cd=/\/\*[^]*?\*\/|  +/g,Sd=/\n+/g,Ed=(t,e)=>{let n="",r="",s="";for(let i in t){let o=t[i];"@"==i[0]?"i"==i[1]?n=i+" "+o+";":r+="f"==i[1]?Ed(o,i):i+"{"+Ed(o,"k"==i[1]?"":e)+"}":"object"==typeof o?r+=Ed(o,e?e.replace(/([^,])+/g,t=>i.replace(/([^,]*:\S+\([^)]*\))|([^,])+/g,e=>/&/.test(e)?e.replace(/&/g,t):t?t+" "+e:e)):i):null!=o&&(i=/^--/.test(i)?i:i.replace(/[A-Z]/g,"-$&").toLowerCase(),s+=Ed.p?Ed.p(i,o):i+":"+o+";")}return n+(e&&s?e+"{"+s+"}":s)+r},Td={},_d=t=>{if("object"==typeof t){let e="";for(let n in t)e+=n+_d(t[n]);return e}return t};k.bind({g:1});let Rd=k.bind({k:1});var Ad={};class Od{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class Id{refCount(t){return T("refCount")}incRef(t){return T("incRef")}timerAvailable(){return!0}time(t){return T("time")}read(t){return T("read")}readSync(t){return T("readSync")}readToGPU(t,e){return T("readToGPU")}numDataIds(){return T("numDataIds")}disposeData(t,e){return T("disposeData")}write(t,e,n){return T("write")}move(t,e,n,r,s){return T("move")}memory(){return T("memory")}floatPrecision(){return T("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return T("dispose")}}const Fd="tfjsflags";class Md{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=yt,this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&!gt().getBool("IS_TEST")&&gt().getBool("PROD"),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];!gt().getBool("IS_TEST")&&gt().getBool("PROD"),this.set(t,e)}}getAsync(t){return Jh(this,null,function*(){return t in this.flags||(this.flags[t]=yield this.evaluateFlag(t)),this.flags[t]})}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(bt(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=this.getQueryParams(this.global.location.search);Fd in t&&t[Fd].split(",").forEach(t=>{const[e,n]=t.split(":");this.urlFlags[e]=((t,e)=>{if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)})(e,n)})}}let Dd,Ld=null;const Vd="Abs",Pd="Acos",Bd="Acosh",zd="Add",Wd="AddN",Ud="All",Gd="Any",jd="ArgMax",qd="ArgMin",Hd="Asin",Xd="Asinh",Kd="Atan",Jd="Atanh",Yd="Atan2",Zd="AvgPool",Qd="AvgPoolGrad",tf="AvgPool3D",ef="AvgPool3DGrad",nf="BatchMatMul",rf="BatchToSpaceND",sf="Bincount",of="BroadcastTo",af="BroadcastArgs",uf="Cast",lf="Ceil",cf="ClipByValue",hf="Complex",df="ComplexAbs",ff="Concat",pf="Conv2D",mf="Conv2DBackpropFilter",bf="Conv2DBackpropInput",yf="Conv3D",gf="Conv3DBackpropFilterV2",xf="Conv3DBackpropInputV2",wf="Cos",vf="Cosh",$f="Cumprod",kf="Cumsum",Nf="CropAndResize",Cf="DenseBincount",Sf="DepthToSpace",Ef="DepthwiseConv2dNative",Tf="DepthwiseConv2dNativeBackpropFilter",_f="DepthwiseConv2dNativeBackpropInput",Rf="Diag",Af="Dilation2D",Of="Dilation2DBackpropInput",If="Dilation2DBackpropFilter",Ff="RealDiv",Mf="Einsum",Df="Elu",Lf="EluGrad",Vf="Erf",Pf="Equal",Bf="Exp",zf="ExpandDims",Wf="Expm1",Uf="FFT",Gf="Fill",jf="FlipLeftRight",qf="Floor",Hf="FloorDiv",Xf="FusedBatchNorm",Kf="GatherV2",Jf="GatherNd",Yf="Greater",Zf="GreaterEqual",Qf="Identity",tp="IFFT",ep="Imag",np="IsFinite",rp="IsInf",sp="IsNan",ip="LeakyRelu",op="Less",ap="LessEqual",up="LinSpace",lp="Log",cp="Log1p",hp="LogicalAnd",dp="LogicalNot",fp="LogicalOr",pp="LogSoftmax",mp="LRN",bp="LRNGrad",yp="Max",gp="Maximum",xp="MaxPool",wp="MaxPoolGrad",vp="MaxPool3D",$p="MaxPool3DGrad",kp="MaxPoolWithArgmax",Np="Mean",Cp="Min",Sp="Minimum",Ep="MirrorPad",Tp="Mod",_p="Multinomial",Rp="Multiply",Ap="Neg",Op="NotEqual",Ip="NonMaxSuppressionV3",Fp="NonMaxSuppressionV4",Mp="NonMaxSuppressionV5",Dp="OnesLike",Lp="OneHot",Vp="Pack",Pp="PadV2",Bp="Pow",zp="Prelu",Wp="Prod",Up="RaggedGather",Gp="RaggedTensorToTensor",jp="Range",qp="Real",Hp="Reciprocal",Xp="Relu",Kp="Reshape",Jp="ResizeNearestNeighbor",Yp="ResizeNearestNeighborGrad",Zp="ResizeBilinear",Qp="ResizeBilinearGrad",tm="Relu6",em="Reverse",nm="Round",rm="Rsqrt",sm="ScatterNd",im="SearchSorted",om="Select",am="Selu",um="Slice",lm="Sin",cm="Sinh",hm="Sign",dm="Sigmoid",fm="Softplus",pm="Sqrt",mm="Sum",bm="SpaceToBatchND",ym="SplitV",gm="Softmax",xm="SparseFillEmptyRows",wm="SparseReshape",vm="SparseSegmentMean",$m="SparseSegmentSum",km="SparseToDense",Nm="SquaredDifference",Cm="Square",Sm="StridedSlice",Em="StringNGrams",Tm="StringSplit",_m="StringToHashBucketFast",Rm="Sub",Am="Tan",Om="Tanh",Im="Tile",Fm="TopK",Mm="Transform",Dm="Transpose",Lm="Unique",Vm="Unpack",Pm="UnsortedSegmentSum",Bm="ZerosLike",zm="Step",Wm="FromPixels",Um="RotateWithOffset",Gm="_FusedMatMul",jm="FusedConv2D",qm="FusedDepthwiseConv2D",Hm=wt("kernelRegistry",()=>new Map),Xm=wt("gradRegistry",()=>new Map);var Km=Tt,Jm=null;try{Jm=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(Oj){}Tt.prototype.h,Object.defineProperty(Tt.prototype,"h",{value:!0}),Tt.isLong=_t;var Ym={},Zm={};Tt.fromInt=Rt,Tt.fromNumber=At,Tt.fromBits=Ot;var Qm=Math.pow;Tt.fromString=It,Tt.fromValue=Ft;var tb=4294967296,eb=tb*tb,nb=eb/2,rb=Rt(1<<24),sb=Rt(0);Tt.ZERO=sb;var ib=Rt(0,!0);Tt.UZERO=ib;var ob=Rt(1);Tt.ONE=ob;var ab=Rt(1,!0);Tt.UONE=ab;var ub=Rt(-1);Tt.NEG_ONE=ub;var lb=Ot(-1,2147483647,!1);Tt.MAX_VALUE=lb;var cb=Ot(-1,-1,!0);Tt.MAX_UNSIGNED_VALUE=cb;var hb=Ot(0,-2147483648,!1);Tt.MIN_VALUE=hb;var db=Tt.prototype;db.toInt=function(){return this.unsigned?this.low>>>0:this.low},db.toNumber=function(){return this.unsigned?(this.high>>>0)*tb+(this.low>>>0):this.high*tb+(this.low>>>0)},db.toString=function(t){if(2>(t=t||10)||t>36)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(hb)){var e=At(t),n=this.div(e),r=n.mul(e).sub(this);return n.toString(t)+r.toInt().toString(t)}return"-"+this.neg().toString(t)}for(var s=At(Qm(t,6),this.unsigned),i=this,o="";;){var a=i.div(s),u=(i.sub(a.mul(s)).toInt()>>>0).toString(t);if((i=a).isZero())return u+o;for(;6>u.length;)u="0"+u;o=""+u+o}},db.getHighBits=function(){return this.high},db.getHighBitsUnsigned=function(){return this.high>>>0},db.getLowBits=function(){return this.low},db.getLowBitsUnsigned=function(){return this.low>>>0},db.getNumBitsAbs=function(){if(this.isNegative())return this.eq(hb)?64:this.neg().getNumBitsAbs();for(var t=0!=this.high?this.high:this.low,e=31;e>0&&!(t&1<<e);e--);return 0!=this.high?e+33:e+1},db.isZero=function(){return 0===this.high&&0===this.low},db.eqz=db.isZero,db.isNegative=function(){return!this.unsigned&&0>this.high},db.isPositive=function(){return this.unsigned||this.high>=0},db.isOdd=function(){return!(1&~this.low)},db.isEven=function(){return!(1&this.low)},db.equals=function(t){return _t(t)||(t=Ft(t)),(this.unsigned===t.unsigned||this.high>>>31!=1||t.high>>>31!=1)&&this.high===t.high&&this.low===t.low},db.eq=db.equals,db.notEquals=function(t){return!this.eq(t)},db.neq=db.notEquals,db.ne=db.notEquals,db.lessThan=function(t){return 0>this.comp(t)},db.lt=db.lessThan,db.lessThanOrEqual=function(t){return 0>=this.comp(t)},db.lte=db.lessThanOrEqual,db.le=db.lessThanOrEqual,db.greaterThan=function(t){return this.comp(t)>0},db.gt=db.greaterThan,db.greaterThanOrEqual=function(t){return this.comp(t)>=0},db.gte=db.greaterThanOrEqual,db.ge=db.greaterThanOrEqual,db.compare=function(t){if(_t(t)||(t=Ft(t)),this.eq(t))return 0;var e=this.isNegative(),n=t.isNegative();return e&&!n?-1:!e&&n?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1},db.comp=db.compare,db.negate=function(){return!this.unsigned&&this.eq(hb)?hb:this.not().add(ob)},db.neg=db.negate,db.add=function(t){_t(t)||(t=Ft(t));var e=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,i=t.high>>>16,o=65535&t.high,a=t.low>>>16,u=0,l=0,c=0,h=0;return c+=(h+=s+(65535&t.low))>>>16,l+=(c+=r+a)>>>16,u+=(l+=n+o)>>>16,u+=e+i,Ot((c&=65535)<<16|(h&=65535),(u&=65535)<<16|(l&=65535),this.unsigned)},db.subtract=function(t){return _t(t)||(t=Ft(t)),this.add(t.neg())},db.sub=db.subtract,db.multiply=function(t){if(this.isZero())return sb;if(_t(t)||(t=Ft(t)),Jm)return Ot(Jm.mul(this.low,this.high,t.low,t.high),Jm.get_high(),this.unsigned);if(t.isZero())return sb;if(this.eq(hb))return t.isOdd()?hb:sb;if(t.eq(hb))return this.isOdd()?hb:sb;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(rb)&&t.lt(rb))return At(this.toNumber()*t.toNumber(),this.unsigned);var e=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,i=t.high>>>16,o=65535&t.high,a=t.low>>>16,u=65535&t.low,l=0,c=0,h=0,d=0;return h+=(d+=s*u)>>>16,c+=(h+=r*u)>>>16,h&=65535,c+=(h+=s*a)>>>16,l+=(c+=n*u)>>>16,c&=65535,l+=(c+=r*a)>>>16,c&=65535,l+=(c+=s*o)>>>16,l+=e*u+n*a+r*o+s*i,Ot((h&=65535)<<16|(d&=65535),(l&=65535)<<16|(c&=65535),this.unsigned)},db.mul=db.multiply,db.divide=function(t){if(_t(t)||(t=Ft(t)),t.isZero())throw Error("division by zero");var e,n,r;if(Jm)return this.unsigned||-2147483648!==this.high||-1!==t.low||-1!==t.high?Ot((this.unsigned?Jm.div_u:Jm.div_s)(this.low,this.high,t.low,t.high),Jm.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?ib:sb;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return ib;if(t.gt(this.shru(1)))return ab;r=ib}else{if(this.eq(hb))return t.eq(ob)||t.eq(ub)?hb:t.eq(hb)?ob:(e=this.shr(1).div(t).shl(1)).eq(sb)?t.isNegative()?ob:ub:(n=this.sub(t.mul(e)),r=e.add(n.div(t)));if(t.eq(hb))return this.unsigned?ib:sb;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();r=sb}for(n=this;n.gte(t);){e=Math.max(1,Math.floor(n.toNumber()/t.toNumber()));for(var s=Math.ceil(Math.log(e)/Math.LN2),i=s>48?Qm(2,s-48):1,o=At(e),a=o.mul(t);a.isNegative()||a.gt(n);)a=(o=At(e-=i,this.unsigned)).mul(t);o.isZero()&&(o=ob),r=r.add(o),n=n.sub(a)}return r},db.div=db.divide,db.modulo=function(t){return _t(t)||(t=Ft(t)),Jm?Ot((this.unsigned?Jm.rem_u:Jm.rem_s)(this.low,this.high,t.low,t.high),Jm.get_high(),this.unsigned):this.sub(this.div(t).mul(t))},db.mod=db.modulo,db.rem=db.modulo,db.not=function(){return Ot(~this.low,~this.high,this.unsigned)},db.and=function(t){return _t(t)||(t=Ft(t)),Ot(this.low&t.low,this.high&t.high,this.unsigned)},db.or=function(t){return _t(t)||(t=Ft(t)),Ot(this.low|t.low,this.high|t.high,this.unsigned)},db.xor=function(t){return _t(t)||(t=Ft(t)),Ot(this.low^t.low,this.high^t.high,this.unsigned)},db.shiftLeft=function(t){return _t(t)&&(t=t.toInt()),0==(t&=63)?this:32>t?Ot(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):Ot(0,this.low<<t-32,this.unsigned)},db.shl=db.shiftLeft,db.shiftRight=function(t){return _t(t)&&(t=t.toInt()),0==(t&=63)?this:32>t?Ot(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):Ot(this.high>>t-32,0>this.high?-1:0,this.unsigned)},db.shr=db.shiftRight,db.shiftRightUnsigned=function(t){if(_t(t)&&(t=t.toInt()),0==(t&=63))return this;var e=this.high;return 32>t?Ot(this.low>>>t|e<<32-t,e>>>t,this.unsigned):Ot(32===t?e:e>>>t-32,0,this.unsigned)},db.shru=db.shiftRightUnsigned,db.shr_u=db.shiftRightUnsigned,db.toSigned=function(){return this.unsigned?Ot(this.low,this.high,!1):this},db.toUnsigned=function(){return this.unsigned?this:Ot(this.low,this.high,!0)},db.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()},db.toBytesLE=function(){var t=this.high,e=this.low;return[255&e,e>>>8&255,e>>>16&255,e>>>24,255&t,t>>>8&255,t>>>16&255,t>>>24]},db.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,255&t,e>>>24,e>>>16&255,e>>>8&255,255&e]},Tt.fromBytes=(t,e,n)=>n?Tt.fromBytesLE(t,e):Tt.fromBytesBE(t,e),Tt.fromBytesLE=(t,e)=>new Tt(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e),Tt.fromBytesBE=(t,e)=>new Tt(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e);const fb=e(Km),pb=fb||t({__proto__:null,default:fb},[Km]),mb=Mt("c3a5c85c97cb3127"),bb=Mt("b492b66fbe98f273"),yb=Mt("9ae16a3b2f90404f"),gb=Object.freeze(Object.defineProperty({__proto__:null,arraysEqual:P,assert:F,assertNonNegativeIntegerDimensions:ft,assertNonNull:D,assertShapesMatch:M,bytesFromStringArray:tt,bytesPerElement:Q,checkConversionForErrors:K,clamp:R,computeStrides:at,createScalarValue:Gt,createShuffledIndices(t){const e=new Uint32Array(t);for(let n=0;t>n;++n)e[n]=n;return _(e),e},decodeString:Kt,distSquared(t,e){let n=0;for(let r=0;r<t.length;r++){const s=Number(t[r])-Number(e[r]);n+=s*s}return n},encodeString:Xt,fetch:Ht,fingerPrint64:Ut,flatten:L,getArrayFromDType:X,getTypedArrayFromDType:H,hasEncodingLoss:Y,hexToLong:Mt,indexToLoc:mt,inferDtype:st,inferFromImplicitShape:G,isBoolean:nt,isFunction:it,isInt:B,isNumber:rt,isPromise:bt,isScalarShape(t){return 0===t.length},isString:et,isTypedArray:Z,isValidDtype:J,locToIndex:pt,makeOnesTypedArray:ct,makeZerosNestedTypedArray:dt,makeZerosTypedArray:ht,nearestDivisor:ot,nearestLargerEven:A,now:qt,parseAxisParam:j,randUniform(t,e){const n=Math.random();return e*n+(1-n)*t},repeatedTry:U,rightPad:W,shuffle:_,shuffleCombo(t,e){if(t.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${t.length}Second array length was ${e.length}`);let n=t.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,O(t,n,r),O(e,n,r)},sizeFromShape:V,sizeToSquarishShape:z,squeezeShape:q,sum:I,swap:O,tanh(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;{const e=Math.exp(2*t);return(e-1)/(e+1)}},toNestedArray:lt,toTypedArray:jt},Symbol.toStringTag,{value:"Module"}));class xb{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new wb)}profileKernel(t,e,n){let r;const s=()=>{r=n()};let i;const o=qt();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(const t of r)t.dataSync();i=Promise.resolve({kernelMs:qt()-o})}if(gt().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let a=0;a<r.length;a++){const t=r[a];t.data().then(e=>{Jt(e,t.dtype)})}return{kernelName:t,outputs:r,inputs:e,timeMs:i.then(t=>t.kernelMs),extraInfo:i.then(t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:s,extraInfo:i}=t;n.forEach(t=>{Promise.all([t.data(),r,i]).then(n=>{this.logger.logKernelProfile(e,t,n[0],n[1],s,n[2])})})}}class wb{logKernelProfile(t,e,n,r,s,i){"number"==typeof r?W(`${r}ms`,9):r.error,W(t,25),e.rank,e.size,W(e.shape.toString(),14);let o="";for(const a in s){const t=s[a];if(null!=t){const n=t.shape||e.shape,r=n.length;o+=`${a}: ${r}D ${r>0?n:""} `}}}}class vb{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=V(t),null!=n){const t=n.length;F(t===this.size,()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||X(e,this.size),this.strides=at(t)}set(t,...e){0===e.length&&(e=[0]),F(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const r of t){if(0>r||r>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}e++}let n=t[t.length-1];for(let r=0;r<t.length-1;++r)n+=this.strides[r]*t[r];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return $b().makeTensor(this.values,this.shape,this.dtype)}}let $b=null,kb=null;class Nb{constructor(t,e,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=V(t),this.strides=at(t),this.dataId=n,this.id=r,this.rankType=5>this.rank?this.rank.toString():"higher"}get rank(){return this.shape.length}buffer(){return Jh(this,null,function*(){const t=yield this.data();return kb.buffer(this.shape,this.dtype,t)})}bufferSync(){return kb.buffer(this.shape,this.dtype,this.dataSync())}array(){return Jh(this,null,function*(){const t=yield this.data();return lt(this.shape,t,"complex64"===this.dtype)})}arraySync(){return lt(this.shape,this.dataSync(),"complex64"===this.dtype)}data(){return Jh(this,null,function*(){this.throwIfDisposed();const t=$b().read(this.dataId);if("string"===this.dtype){const n=yield t;try{return n.map(t=>Kt(t))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t})}dataToGPU(t){return this.throwIfDisposed(),$b().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=$b().readSync(this.dataId);if("string"===this.dtype)try{return t.map(t=>Kt(t))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}bytes(){return Jh(this,null,function*(){this.throwIfDisposed();const t=yield $b().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)})}dispose(){this.isDisposed||($b().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return kb.print(this,t)}clone(){return this.throwIfDisposed(),kb.clone(this)}toString(t=!1){return Yt(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),kb.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),$b().makeVariable(this,t,e,n)}}Object.defineProperty(Nb,Symbol.hasInstance,{value(t){return!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed}}),ne();class Cb extends Nb{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!P(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);$b().disposeTensor(this),this.dataId=t.dataId,$b().incRef(this,null)}dispose(){$b().disposeVariable(this),this.isDisposedInternal=!0}}var Sb,Eb,Tb,_b,Rb,Ab,Ob,Ib,Fb,Mb;Object.defineProperty(Cb,Symbol.hasInstance,{value(t){return t instanceof Nb&&null!=t.assign&&t.assign instanceof Function}}),(Eb=Sb||(Sb={})).R0="R0",Eb.R1="R1",Eb.R2="R2",Eb.R3="R3",Eb.R4="R4",Eb.R5="R5",Eb.R6="R6",(_b=Tb||(Tb={})).float32="float32",_b.int32="int32",_b.bool="int32",_b.complex64="complex64",(Ab=Rb||(Rb={})).float32="float32",Ab.int32="int32",Ab.bool="bool",Ab.complex64="complex64",(Ib=Ob||(Ob={})).float32="float32",Ib.int32="float32",Ib.bool="float32",Ib.complex64="complex64",(Mb=Fb||(Fb={})).float32="complex64",Mb.int32="complex64",Mb.bool="complex64",Mb.complex64="complex64";const Db={float32:Ob,int32:Tb,bool:Rb,complex64:Fb},Lb=Object.freeze(Object.defineProperty({__proto__:null,assertTypesMatch:oe,getTensorsInContainer:ue,isTensorInList:ae,makeTypesMatch:ie},Symbol.toStringTag,{value:"Module"}));class Vb{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class Pb{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Vb}ready(){return Jh(this,null,function*(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(yield this.initializeBackend(n).success)return void(yield this.setBackend(n))}throw new Error("Could not initialize any backends, all backend initializations failed.")})}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(vt(),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}setBackend(t){return Jh(this,null,function*(){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?yield e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new xb(this.backendInstance),!0})}setupRegisteredKernels(){Nt(this.backendName).forEach(t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){Nt(t).forEach(e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof Id||"function"!=typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,r=n.then(n=>e>=this.pendingBackendInitId&&(this.registry[t]=n,this.pendingBackendInit=null,!0)).catch(t=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,vt(),vt(t.stack||t.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return vt(),vt(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,s=this.readSync(e),i=r.refCount(e);r.disposeData(e,!0),n.backend=t,t.move(e,s,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=e(),n))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(r){throw e(),r}}nextTensorId(){return Pb.nextTensorId++}nextVariableId(){return Pb.nextVariableId++}clone(t){const e=Bb.runKernel(Qf,{x:t}),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],t=>({x(){const e={x:t};return Bb.runKernel(uf,e,{dtype:"float32"})}}),[],{}),e}runKernel(t,e,n){if(null==this.backendName&&this.backend,null==$t(t,this.backendName))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let s=0;n.forEach(t=>{s+="complex64"===t.dtype?3:1});const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-e-s-i;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${t}'`)}runKernelFunc(t){let e,n=[];const r=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;let o,a;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=ce(t)?t.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(ce(t)){const{kernelName:e,inputs:s,attrs:i}=t;null==this.backendName&&this.backend;const u=$t(e,this.backendName);F(null!=u,()=>`Cannot find registered kernel '${e}' for backend '${this.backendName}'`),o=()=>{const t=this.backend.numDataIds();a=u.kernelFunc({inputs:s,attrs:i,backend:this.backend});const o=Array.isArray(a)?a:[a];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(e,t,o);const l=o.map(t=>null!=t.rank?t:this.makeTensorFromTensorInfo(t));if(r){const t=this.getTensorsForGradient(e,s,l);n=this.saveTensorsForBackwardMode(t)}return l}}else{const{forwardFunc:e}=t,s=t=>{r&&(n=t.map(t=>this.keep(this.clone(t))))};o=()=>{const t=this.backend.numDataIds();a=this.tidy(()=>e(this.backend,s));const n=Array.isArray(a)?a:[a];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,t,n),n}}const{inputs:l,attrs:c}=t,h=ce(t)?null:t.backwardsFunc;let d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(u,l,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),e=d.outputs):e=o()}),r&&this.addTapeNode(u,l,e,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(t=>null!=l[t]?l[t].shape:null),outputShapes:e.map(t=>t.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(a)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(t,e,n){const r=kt(t);if(null!=r){const t=r.inputsToSave||[],s=r.outputsToSave||[];let i;r.saveAllInputs?(F(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(e).map(t=>e[t])):i=t.map(t=>e[t]);const o=n.filter((t,e)=>s[e]);return i.concat(o)}return[]}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=t;"string"===n&&et(t[0])&&(s=t.map(t=>Xt(t)));const i=r.write(s,e,n),o=new Nb(e,n,i,this.nextTensorId());if(this.trackTensor(o,r),"string"===n){const t=this.state.tensorInfo.get(i),e=tt(s);this.state.numBytes+=e-t.bytes,t.bytes=e}return o}makeTensorFromDataId(t,e,n,r){const s={dataId:t,shape:e,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(t,e){const{dataId:n,shape:r,dtype:s}=t,i=new Nb(r,s,n,this.nextTensorId());return this.trackTensor(i,e),i}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const s=new Cb(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(t,e){this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*Q(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof Cb||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,"string"===t.dtype&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),"complex64"!==t.dtype&&"string"!==t.dtype){const e=t.size*Q(t.dtype);this.state.numBytes-=e}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}profile(t){return Jh(this,null,function*(){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=yield t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(t=>t.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const t of this.state.activeProfile.kernels)t.kernelTimeMs=yield t.kernelTimeMs,t.extraInfo=yield t.extraInfo;return this.state.activeProfile})}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,s,i){const o={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:s},a=kt(t);null!=a&&(r=a.gradFunc),null!=r&&(o.gradient=t=>(t=t.map((t,e)=>{if(null==t){const t=n[e],r=ht(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t}),r(t.length>1?t:t[0],s,i))),this.state.activeTape.push(o)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=ue(t),n=new Set(e.map(t=>t.id));for(let s=0;s<this.state.activeScope.track.length;s++){const t=this.state.activeScope.track[s];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(t=>{t.kept||t.scopeId!==r.id||this.track(t)})}gradients(t,e,n,r=!1){if(F(e.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));F(s instanceof Nb,()=>"The result y returned by f() must be a tensor.");const i=((t,e,n)=>{const r={},s={};for(let u=0;u<e.length;u++)r[e[u].id]=!0;for(let u=0;u<t.length;u++){const n=t[u],i=n.inputs;for(const t in i){const o=i[t];let a=!1;for(let t=0;t<e.length;t++)if(r[o.id]){n.outputs.forEach(t=>r[t.id]=!0),a=!0,s[n.id]=!0;break}if(a)break}}const i={};i[n.id]=!0;const o={};for(let u=t.length-1;u>=0;u--){const e=t[u],n=e.inputs;for(let t=0;t<e.outputs.length;t++)if(i[e.outputs[t].id]){for(const t in n)i[n[t].id]=!0,o[e.id]=!0;break}}const a=[];for(let u=0;u<t.length;u++){const e=t[u];if(s[e.id]&&o[e.id]){const t={};for(const s in e.inputs){const n=e.inputs[s];r[n.id]&&(t[s]=n)}const n=Object.assign({},e);n.inputs=t,n.outputs=e.outputs,a.push(n)}}return a})(this.state.activeTape,e,s);if(!r&&0===i.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const t={};t[s.id]=null==n?(t=>{const e=ct(V(t),"float32");return Bb.makeTensor(e,t,"float32")})(s.shape):n,((t,e,n,r)=>{for(let s=e.length-1;s>=0;s--){const i=e[s],o=[];if(i.outputs.forEach(e=>{const n=t[e.id];null!=n?o.push(n):o.push(null)}),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const a=i.gradient(o);for(const e in i.inputs){if(!(e in a))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(a)}.`);const s=n(()=>a[e]());if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${s.dtype}'`);const o=i.inputs[e];if(!P(s.shape,o.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${e}' has shape '${s.shape}', which does not match the shape of the input '${o.shape}'`);if(null==t[o.id])t[o.id]=s;else{const e=t[o.id];t[o.id]=r(e,s),e.dispose()}}}})(t,i,t=>this.tidy(t),de);const r=e.map(e=>t[e.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(t=>{for(const e of t.saved)e.dispose()}),this.state.activeTape=null),{value:s,grads:r}})}customGrad(t){return F(it(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{let n;F(e.every(t=>t instanceof Nb),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};return e.forEach((t,e)=>{r[e]=t}),this.runKernelFunc({forwardFunc(r,s){return n=t(...e,s),F(n.value instanceof Nb,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),F(it(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value},backwardsFunc(t,r){const s=n.gradFunc(t,r),i=Array.isArray(s)?s:[s];F(i.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),F(i.every(t=>t instanceof Nb),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const o={};return i.forEach((t,e)=>{o[e]=()=>t}),o},inputs:r})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}time(t){return Jh(this,null,function*(){const e=qt(),n=yield this.backend.time(t);return n.wallMs=qt()-e,n})}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Vb;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Pb.nextTensorId=0,Pb.nextVariableId=0;const Bb=he();let zb;const Wb=Object.freeze(Object.defineProperty({__proto__:null,isBrowser:pe,isMobile:fe,mockIsMobile(t){zb=t}},Symbol.toStringTag,{value:"Module"})),Ub=gt();Ub.registerFlag("DEBUG",()=>!1,t=>{}),Ub.registerFlag("IS_BROWSER",()=>pe()),Ub.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),Ub.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),Ub.registerFlag("PROD",()=>!1),Ub.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Ub.getBool("DEBUG")),Ub.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),Ub.registerFlag("IS_TEST",()=>!1),Ub.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0),Ub.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),Ub.registerFlag("ENGINE_COMPILE_ONLY",()=>!1),Ub.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),Ub.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);const Gb="__op",jb=we({complex_(t,e){const n=ge(t,"real","complex"),r=ge(e,"imag","complex");M(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return Bb.runKernel(hf,s)}}),qb={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},Hb="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);class Xb{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Xb.instance&&(Xb.instance=new Xb),Xb.instance}static registerSaveRouter(t){Xb.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Xb.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Xb.getHandlers(t,"save")}static getLoadHandlers(t,e){return Xb.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?Xb.getInstance().loadRouters:Xb.getInstance().saveRouters).forEach(e=>{const s=e(t,n);null!==s&&r.push(s)}),r}}const Kb=t=>Xb.getSaveHandlers(t),Jb=(t,e)=>Xb.getLoadHandlers(t,e),Yb="tensorflowjs",Zb="models_store",Qb="model_info_store";class ty{constructor(t){if(this.indexedDB=Me(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}save(t){return Jh(this,null,function*(){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)})}load(){return Jh(this,null,function*(){return this.databaseAction(this.modelPath)})}databaseAction(t,e){return new Promise((t,n)=>{const r=this.indexedDB.open(Yb,1);r.onupgradeneeded=()=>De(r),r.onsuccess=()=>{const s=r.result;if(null==e){const e=s.transaction(Zb,"readonly"),r=e.objectStore(Zb).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(r.result.modelArtifacts)},r.onerror=t=>(s.close(),n(r.error)),e.oncomplete=()=>s.close()}else{const r=Oe(e),i=s.transaction(Qb,"readwrite");let o=i.objectStore(Qb);const a=o.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;a.onsuccess=()=>{u=s.transaction(Zb,"readwrite");const a=u.objectStore(Zb).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});a.onsuccess=()=>t({modelArtifactsInfo:r}),a.onerror=t=>{o=i.objectStore(Qb);const e=o.delete(this.modelPath);e.onsuccess=()=>(s.close(),n(a.error)),e.onerror=t=>(s.close(),n(a.error))}},a.onerror=t=>(s.close(),n(a.error)),i.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}}},r.onerror=t=>n(r.error)})}}ty.URL_SCHEME="indexeddb://";const ey=t=>{return gt().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(ty.URL_SCHEME)?(e=t.slice(ty.URL_SCHEME.length),new ty(e)):null;var e};Xb.registerSaveRouter(ey),Xb.registerLoadRouter(ey);class ny{constructor(){this.indexedDB=Me()}listModels(){return Jh(this,null,function*(){return new Promise((t,e)=>{const n=this.indexedDB.open(Yb,1);n.onupgradeneeded=()=>De(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(Qb,"readonly"),i=s.objectStore(Qb).getAll();i.onsuccess=()=>{const e={};for(const t of i.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},i.onerror=t=>(r.close(),e(i.error)),s.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)})})}removeModel(t){return Jh(this,null,function*(){var e;return t=(e=t).startsWith(ty.URL_SCHEME)?e.slice(ty.URL_SCHEME.length):e,new Promise((e,n)=>{const r=this.indexedDB.open(Yb,1);r.onupgradeneeded=()=>De(r),r.onsuccess=()=>{const s=r.result,i=s.transaction(Qb,"readwrite"),o=i.objectStore(Qb),a=o.get(t);let u;a.onsuccess=()=>{if(null==a.result)return s.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const r=o.delete(t),i=()=>{u=s.transaction(Zb,"readwrite");const r=u.objectStore(Zb).delete(t);r.onsuccess=()=>e(a.result.modelArtifactsInfo),r.onerror=t=>n(a.error)};r.onsuccess=i,r.onerror=t=>(i(),s.close(),n(a.error))}},a.onerror=t=>(s.close(),n(a.error)),i.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},r.onerror=t=>n(r.error)})})}}const ry="/",sy="tensorflowjs_models",iy="info",oy="model_topology",ay="weight_specs",uy="weight_data",ly="model_metadata";class cy{constructor(t){if(!gt().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=Le(this.modelPath)}save(t){return Jh(this,null,function*(){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(t.modelTopology),r=JSON.stringify(t.weightSpecs),s=Oe(t);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,(t=>{if(Hb)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let r=0,s=e.length;s>r;r++)n+=String.fromCharCode(e[r]);return btoa(n)})(t.weightData));const e={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:null!=t.signature?t.signature:void 0,userDefinedMetadata:null!=t.userDefinedMetadata?t.userDefinedMetadata:void 0,modelInitializer:null!=t.modelInitializer?t.modelInitializer:void 0,trainingConfig:null!=t.trainingConfig?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(e)),{modelArtifactsInfo:s}}catch(e){throw Ve(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}})}load(){return Jh(this,null,function*(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const t=JSON.parse(s);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer),null!=t.trainingConfig&&(e.trainingConfig=t.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=(t=>{if(Hb){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let r=0;r<e.length;++r)n.set([e.charCodeAt(r)],r);return n.buffer})(i),e})}}cy.URL_SCHEME="localstorage://";const hy=t=>{return gt().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(cy.URL_SCHEME)?(e=t.slice(cy.URL_SCHEME.length),new cy(e)):null;var e};Xb.registerSaveRouter(hy),Xb.registerLoadRouter(hy);class dy{constructor(){F(gt().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),F("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}listModels(){return Jh(this,null,function*(){const t={},e=sy+ry,n=ry+iy;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(e)&&s.endsWith(n)&&(t[Pe(s)]=JSON.parse(this.LS.getItem(s)))}return t})}removeModel(t){return Jh(this,null,function*(){var e;const n=Le(t=(e=t).startsWith(cy.URL_SCHEME)?e.slice(cy.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(this.LS.getItem(n.info));return Ve(n),r})}}const fy="://";class py{constructor(){this.managers={}}static getInstance(){return null==py.instance&&(py.instance=new py),py.instance}static registerManager(t,e){F(null!=t,()=>"scheme must not be undefined or null."),t.endsWith(fy)&&(t=t.slice(0,t.indexOf(fy))),F(t.length>0,()=>"scheme must not be an empty string.");const n=py.getInstance();F(null==n.managers[t],()=>`A model store manager is already registered for scheme '${t}'.`),n.managers[t]=e}static getManager(t){const e=py.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(py.getInstance().managers)}}class my{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){window&&gt().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",t=>{t.source===window&&t.data.name===this.messageName&&(t.stopPropagation(),(0,this.functionRefs[t.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))},!0))):setTimeout(t,e)}}if(gt().get("IS_BROWSER")){gt().setPlatform("browser",new my);try{py.registerManager(cy.URL_SCHEME,new dy)}catch(Ij){}try{py.registerManager(ty.URL_SCHEME,new ny)}catch(Ij){}}let by;gt().get("IS_NODE")&&!gt().get("IS_BROWSER")&&gt().setPlatform("node",new class{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=gt().global.fetch?gt().global.fetch(t,e):(null==by&&(by=require("node-fetch")),by(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}});const yy=we({cast_(t,e){const n=ge(t,"x","cast");if(!J(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:e};return Bb.runKernel(uf,r,s)}}),gy=we({clone_(t){const e={x:ge(t,"x","clone","string_or_numeric")};return Bb.runKernel(Qf,e)}});he(),kb={buffer:We,cast:yy,clone:gy,print:Ue};class xy{constructor(t){if(!gt().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(xy.URL_SCHEME)&&(t=t.slice(xy.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelJsonFileName=t+".json",this.weightDataFileName=t+".weights.bin"}save(t){return Jh(this,null,function*(){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r=_e(t,n),s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),i=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=s,yield Ge(()=>i.dispatchEvent(new MouseEvent("click"))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,yield Ge(()=>t.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Oe(t)}}})}}xy.URL_SCHEME="downloads://";class wy{constructor(t){if(null==t||1>t.length)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.jsonFile=t[0],this.weightsFiles=t.slice(1)}load(){return Jh(this,null,function*(){return new Promise((t,e)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),s=r.modelTopology;if(null==s)return void e(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void e(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void t({modelTopology:s});const i=Ae(r,t=>this.loadWeights(t));t(i)},n.onerror=t=>e(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})})}loadWeights(t){const e=[],n=[];for(const i of t)e.push(...i.weights),n.push(...i.paths);const r=this.checkManifestAndWeightFiles(t),s=n.map(t=>this.loadWeightsFile(t,r[t]));return Promise.all(s).then(t=>[e,Ee(t)])}loadWeightsFile(t,e){return new Promise((n,r)=>{const s=new FileReader;s.onload=t=>{const e=t.target.result;n(e)},s.onerror=e=>r(`Failed to weights data from file of path '${t}'.`),s.readAsArrayBuffer(e)})}checkManifestAndWeightFiles(t){const e=[],n=this.weightsFiles.map(t=>Te(t.name)),r={};for(const s of t)s.paths.forEach(t=>{const s=Te(t);if(-1!==e.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(e.push(s),-1===n.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);r[t]=this.weightsFiles[n.indexOf(s)]});if(e.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${e.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}Xb.registerSaveRouter(t=>gt().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(xy.URL_SCHEME)?((t="model")=>new xy(t))(t.slice(xy.URL_SCHEME.length)):null);class vy{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(F("function"==typeof e.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=gt().platform.fetch,F(null!=t&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&F(2===t.length,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}save(t){return Jh(this,null,function*(){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r=_e(t,n);e.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=yield this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:Oe(t),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)})}load(){return Jh(this,null,function*(){const t=yield this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=yield t.json()}catch(Oj){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,r=e.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Ae(e,t=>this.loadWeights(t))})}loadWeights(t){return Jh(this,null,function*(){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=(t=>{const e=t.lastIndexOf("/"),n=t.lastIndexOf("?");return[t.substring(0,e)+"/",n>e?t.substring(n):""]})(e),s=this.weightPathPrefix||n,i=Ie(t),o=[],a=[];for(const u of t)for(const t of u.paths)null!=this.weightUrlConverter?a.push(this.weightUrlConverter(t)):o.push(s+t+r);return this.weightUrlConverter&&o.push(...yield Promise.all(a)),[i,Ee(yield qe(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]})}}vy.URL_SCHEME_REGEX=/^https?:\/\//;const $y=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every(t=>Ke(t)):Ke(t),n)return Je(t,e)}return null};Xb.registerSaveRouter($y),Xb.registerLoadRouter($y);class ky{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}}class Ny{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}}class Cy{constructor(t){t.load&&(this.load=()=>Promise.resolve(t.load())),t.save&&(this.save=e=>Promise.resolve(t.save(e)))}}const Sy=Object.freeze(Object.defineProperty({__proto__:null,browserFiles(t){return new wy(t)},browserHTTPRequest:Ye,concatenateArrayBuffers:Ee,copyModel(t,e){return Jh(this,null,function*(){return ze(t,e,!1)})},decodeWeights:Ne,encodeWeights:ke,fromMemory(t,e,n,r){return new Cy(Ze(...arguments))},fromMemorySync:Ze,getLoadHandlers:Jb,getModelArtifactsForJSON:Ae,getModelArtifactsForJSONSync:Re,getModelArtifactsInfoForJSON:Oe,getSaveHandlers:Kb,getWeightSpecs:Ie,http:Je,isHTTPScheme:Ke,listModels(){return Jh(this,null,function*(){const t=py.getSchemes(),e={};for(const n of t){const t=yield py.getManager(n).listModels();for(const r in t)e[n+fy+r]=t[r]}return e})},loadWeights:He,moveModel(t,e){return Jh(this,null,function*(){return ze(t,e,!0)})},registerLoadRouter(t){return Xb.registerLoadRouter(t)},registerSaveRouter(t){return Xb.registerSaveRouter(t)},removeModel(t){return Jh(this,null,function*(){const e=Be(t);return py.getManager(e.scheme).removeModel(e.path)})},weightsLoaderFactory:Xe,withSaveHandler(t){return new Ny(t)},withSaveHandlerSync(t){return new Ny(t)}},Symbol.toStringTag,{value:"Module"})),Ey=we({matMul_(t,e,n=!1,r=!1){let s=ge(t,"a","matMul"),i=ge(e,"b","matMul");[s,i]=ie(s,i);const o={a:s,b:i},a={transposeA:n,transposeB:r};return Bb.runKernel(nf,o,a)}}),Ty=we({oneHot_(t,e,n=1,r=0,s="int32"){if(2>e)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const i={indices:ge(t,"indices","oneHot","int32")},o={dtype:s,depth:e,onValue:n,offValue:r};return Bb.runKernel(Lp,i,o)}}),_y=we({imag_(t){const e={input:ge(t,"input","imag")};return Bb.runKernel(ep,e)}}),Ry=we({neg_(t){const e={x:ge(t,"x","neg")};return Bb.runKernel(Ap,e)}}),Ay=we({real_(t){const e={input:ge(t,"input","real")};return Bb.runKernel(qp,e)}}),Oy=we({transpose_(t,e,n){const r=ge(t,"x","transpose");if(null==e&&(e=r.shape.map((t,e)=>e).reverse()),F(r.rank===e.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${e}.`),e.forEach(t=>{F(t>=0&&t<r.rank,()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${e}`)}),1>=r.rank)return r.clone();const s={x:r},i={perm:e};return"complex64"===r.dtype?en(()=>{let t=Ay(r),e=_y(r);return t=Bb.runKernel(Dm,{x:t},i),e=Bb.runKernel(Dm,{x:e},i),n&&(e=Ry(e)),jb(t,e)}):Bb.runKernel(Dm,s,i)}}),Iy=we({confusionMatrix_(t,e,n){const r=ge(t,"labels","confusionMatrix"),s=ge(e,"predictions","confusionMatrix");F(null==n||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),F(1===r.rank,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),F(1===s.rank,()=>`Expected the rank of predictions to be 1, but got ${s.rank}`),F(r.shape[0]===s.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`),F(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);const i=Ty(yy(r,"int32"),n),o=Ty(yy(s,"int32"),n),a=Oy(i),u=Ey(a,o);return yy(u,"int32")}}),Fy=Object.freeze(Object.defineProperty({__proto__:null,confusionMatrix:Iy},Symbol.toStringTag,{value:"Module"})),My=Object.freeze(Object.defineProperty({__proto__:null,assertAndGetBroadcastShape:ln,getBroadcastDims:an,getReductionAxes:un},Symbol.toStringTag,{value:"Module"}));let Dy;const Ly=we({fromPixels_:hn}),Vy=Object.freeze(Object.defineProperty({__proto__:null,fromPixels:Ly,fromPixelsAsync(t,e=3){return Jh(this,null,function*(){let n=null;if(gt().getBool("WRAP_TO_IMAGEBITMAP")&&(t=>"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(t instanceof ImageBitmap)&&(t=>null!=t&&0!==t.width&&0!==t.height)(t)&&!(t=>null!=t&&t.data instanceof Uint8Array)(t))(t)){let e;try{e=yield createImageBitmap(t,{premultiplyAlpha:"none"})}catch(Oj){e=null}n=null!=e&&e.width===t.width&&e.height===t.height?e:t}else n=t;return hn(n,e)})},toPixels(t,e){return Jh(this,null,function*(){let n=ge(t,"img","toPixels");if(!(t instanceof Nb)){const t=n;n=yy(t,"int32"),t.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,s]=n.shape.slice(0,2),i=2===n.rank?1:n.shape[2];if(i>4||2===i)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${i}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const o=yield n.data(),a="float32"===n.dtype?255:1,u=new Uint8ClampedArray(s*r*4);for(let t=0;r*s>t;++t){const e=[0,0,0,255];for(let s=0;i>s;s++){const r=o[t*i+s];if("float32"===n.dtype){if(0>r||r>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${r}.`)}else if("int32"===n.dtype&&(0>r||r>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${r}.`);1===i?(e[0]=r*a,e[1]=r*a,e[2]=r*a):e[s]=r*a}const r=4*t;u[r+0]=Math.round(e[0]),u[r+1]=Math.round(e[1]),u[r+2]=Math.round(e[2]),u[r+3]=Math.round(e[3])}if(null!=e){e.width=s,e.height=r;const t=e.getContext("2d"),n=new ImageData(u,s,r);t.putImageData(n,0,0)}return n!==t&&n.dispose(),u})}},Symbol.toStringTag,{value:"Module"})),Py=Object.freeze(Object.defineProperty({__proto__:null,prepareAndValidate:dn},Symbol.toStringTag,{value:"Module"})),By=Object.freeze(Object.defineProperty({__proto__:null,calculateShapes:mn,validateInput:pn,validateUpdateShape:fn},Symbol.toStringTag,{value:"Module"})),zy=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:bn,computeFlatOffset:En,computeOutShape:yn,getNormalizedAxes(t,e,n,r,s,i,o,a,u){const l=t.length;let c=new Array(l),h=new Array(l),d=new Array(l);if(e.length&&n>0){const u=e[0],l=n+1;c=vn(o,u,l,r,t),h=$n(a,u,l,s,t),d=gn(i,u,l,t)}else for(let f=0;l>f;f++)c[f]=Nn(o,r,i,t,f,u),h[f]=Cn(a,s,i,t,f,u),d[f]=kn(i,f,u);return{begin:c,end:h,strides:d}},isSliceContinous:Sn,maskToAxes(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e},parseSliceParams:Tn,sliceInfo:_n,startForAxis:Nn,startIndicesWithElidedDims:vn,stopForAxis:Cn,stopIndicesWithElidedDims:$n,stridesForAxis:kn,stridesWithElidedDims:gn},Symbol.toStringTag,{value:"Module"}));class Wy{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Uy{constructor(){this.classNameMap={}}static getMap(){return null==Uy.instance&&(Uy.instance=new Uy),Uy.instance}static register(t){Uy.getMap().classNameMap[t.className]=[t,t.fromConfig]}}const Gy=Object.freeze(Object.defineProperty({__proto__:null,Serializable:Wy,SerializationMap:Uy,registerClass:An},Symbol.toStringTag,{value:"Module"})),jy=Object.freeze(Object.defineProperty({__proto__:null,TEST_EPSILON_FLOAT16:.1,createVideoElement(t){const e=document.createElement("video");return"playsInline"in e&&(e.playsInline=!0),e.muted=!0,e.loop=!0,e.style.position="fixed",e.style.left="0px",e.style.top="0px",e.preload="auto",e.appendChild(t),new Promise(t=>{e.addEventListener("loadeddata",n=>t(e)),e.load()})},encodeStrings:function t(e){for(let n=0;n<e.length;n++){const r=e[n];Array.isArray(r)?t(r):e[n]=Xt(r)}return e},expectArrayBuffersEqual(t,e){const n=new Float32Array(t),r=new Float32Array(e);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let s=0;s<r.length;s++)if(n[s]!==r[s])throw new Error(`Expected ArrayBuffer value at ${s} to be ${r[s]} but got ${n[s]} instead`)},expectArraysClose(t,e,n){return null==n&&(n=On()),In(t,e,(t,e)=>Fn(t,e,n))},expectArraysEqual(t,e){const n="string"==typeof e||"number"==typeof e||"boolean"==typeof e?[e]:e;return et(t)||et(t[0])||et(e)||et(e[0])?In(t,n,(t,e)=>t==e):In(t,e,(t,e)=>Fn(t,e,0))},expectNumbersClose(t,e,n){if(null==n&&(n=On()),!Fn(t,e,n))throw new Error(`Numbers differ: actual === ${t}, expected === ${e}`);"undefined"!=typeof expect&&expect().nothing()},expectPromiseToFail(t,e){t().then(()=>e.fail(),()=>e()),"undefined"!=typeof expect&&expect().nothing()},expectValuesInRange(t,e,n){for(let r=0;r<t.length;r++)if(t[r]<e||t[r]>n)throw new Error(`Value out of range:${t[r]} low: ${e}, high: ${n}`)},play(t){return Jh(this,null,function*(){yield t.play(),"requestVideoFrameCallback"in t&&(yield new Promise(e=>{t.requestVideoFrameCallback(e)}))})},testEpsilon:On},Symbol.toStringTag,{value:"Module"})),qy="3.21.0",Hy=we({add_(t,e){let n=ge(t,"a","add"),r=ge(e,"b","add");[n,r]=ie(n,r);const s={a:n,b:r};return Bb.runKernel(zd,s)}}),Xy=we({floorDiv_(t,e){let n=ge(t,"a","floorDiv"),r=ge(e,"b","floorDiv");[n,r]=ie(n,r);const s={a:n,b:r};return Bb.runKernel(Hf,s)}}),Ky=we({div_(t,e){let n=ge(t,"a","div"),r=ge(e,"b","div");if([n,r]=ie(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Xy(n,r);const s={a:n,b:r};return Bb.runKernel(Ff,s,{})}}),Jy=we({mul_(t,e){let n=ge(t,"a","mul"),r=ge(e,"b","mul");[n,r]=ie(n,r);const s={a:n,b:r};return Bb.runKernel(Rp,s)}}),Yy=we({abs_(t){const e=ge(t,"x","abs");if("complex64"===e.dtype){const t={x:e};return Bb.runKernel(df,t)}{const t={x:e};return Bb.runKernel(Vd,t)}}}),Zy=we({acos_(t){const e={x:ge(t,"x","acos")};return Bb.runKernel(Pd,e)}}),Qy=we({acosh_(t){const e={x:ge(t,"x","acosh")};return Bb.runKernel(Bd,e)}}),tg=we({addN_(t){F(Array.isArray(t),()=>"The argument passed to tf.addN() must be a list of tensors"),F(t.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${t.length}`);const e=t.map((t,e)=>ge(t,`tensors${e}`,"addN")),n=e[0];e.forEach(t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(t=>{if(!P(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=e;return Bb.runKernel(Wd,r)}}),eg=we({all_(t,e=null,n=!1){const r={x:ge(t,"x","all","bool")},s={axis:e,keepDims:n};return Bb.runKernel(Ud,r,s)}}),ng=we({any_(t,e=null,n=!1){const r={x:ge(t,"x","any","bool")},s={axis:e,keepDims:n};return Bb.runKernel(Gd,r,s)}}),rg=we({argMax_(t,e=0){const n={x:ge(t,"x","argMax")},r={axis:e};return Bb.runKernel(jd,n,r)}}),sg=we({argMin_(t,e=0){const n={x:ge(t,"x","argMin")},r={axis:e};return Bb.runKernel(qd,n,r)}}),ig=we({asin_(t){const e={x:ge(t,"x","asin")};return Bb.runKernel(Hd,e)}}),og=we({asinh_(t){const e={x:ge(t,"x","asinh")};return Bb.runKernel(Xd,e)}}),ag=we({atan_(t){const e={x:ge(t,"x","atan")};return Bb.runKernel(Kd,e)}}),ug=we({atan2_(t,e){let n=ge(t,"a","atan2"),r=ge(e,"b","atan2");[n,r]=ie(n,r);const s={a:n,b:r};return Bb.runKernel(Yd,s)}}),lg=we({atanh_(t){const e={x:ge(t,"x","atanh")};return Bb.runKernel(Jd,e)}}),cg=we({reshape_(t,e){const n={x:ge(t,"x","reshape","string_or_numeric")},r={shape:e};return Bb.runKernel(Kp,n,r)}}),hg=we({avgPool_(t,e,n,r,s){const i=ge(t,"x","avgPool","float32");F(qn(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let o=i,a=!1;3===i.rank&&(a=!0,o=cg(i,[1,i.shape[0],i.shape[1],i.shape[2]])),F(4===o.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),Xn("avgPool",r,s);const u={x:o},l={filterSize:e,strides:n,pad:r,dimRoundingMode:s};let c=Bb.runKernel(Zd,u,l);return c=yy(c,i.dtype),a?cg(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),dg=we({avgPool3d_(t,e,n,r,s,i="NDHWC"){const o=ge(t,"x","avgPool3d","float32");let a=o,u=!1;4===o.rank&&(u=!0,a=cg(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),F(5===a.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),F("NDHWC"===i,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),Xn("avgPool3d",r,s);const l={x:a},c={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:i};let h=Bb.runKernel(tf,l,c);return h=yy(h,a.dtype),u?cg(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),fg=we({concat_(t,e=0){F(t.length>=1,()=>"Pass at least one tensor to concat");const n=xe(t,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach(t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)}),1===n.length)return gy(n[0]);const r=n,s={axis:e};return Bb.runKernel(ff,r,s)}}),pg=we({sigmoid_(t){const e={x:ge(t,"x","sigmoid","float32")};return Bb.runKernel(dm,e)}}),mg=we({slice_(t,e,n){const r=ge(t,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},i={begin:e,size:n};return Bb.runKernel(um,s,i)}}),bg=we({tanh_(t){const e={x:ge(t,"x","tanh","float32")};return Bb.runKernel(Om,e)}}),yg=we({basicLSTMCell_(t,e,n,r,s,i){const o=ge(t,"forgetBias","basicLSTMCell"),a=ge(e,"lstmKernel","basicLSTMCell"),u=ge(n,"lstmBias","basicLSTMCell"),l=ge(r,"data","basicLSTMCell"),c=ge(s,"c","basicLSTMCell"),h=ge(i,"h","basicLSTMCell"),d=fg([l,h],1),f=Ey(d,a),p=Hy(f,u),m=p.shape[0],b=p.shape[1]/4,y=[m,b],g=mg(p,[0,0],y),x=mg(p,[0,b],y),w=mg(p,[0,2*b],y),v=mg(p,[0,3*b],y),$=Hy(Jy(pg(g),bg(x)),Jy(c,pg(Hy(o,w))));return[$,Jy(bg($),pg(v))]}}),gg=we({batchToSpaceND_(t,e,n){const r=ge(t,"x","batchToSpaceND"),s=e.reduce((t,e)=>t*e);F(r.rank>=1+e.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`),F(n.length===e.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`),F(r.shape[0]%s===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`);const i={x:r},o={blockShape:e,crops:n};return Bb.runKernel(rf,i,o)}}),xg=we({batchNorm_(t,e,n,r,s,i){null==i&&(i=.001);const o=ge(t,"x","batchNorm"),a=ge(e,"mean","batchNorm"),u=ge(n,"variance","batchNorm");let l,c;null!=s&&(l=ge(s,"scale","batchNorm")),null!=r&&(c=ge(r,"offset","batchNorm")),F(a.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),F(null==c||a.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),F(null==l||a.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h={x:(t=>{let e;return e=0===t.rank||1===t.rank?cg(t,[1,1,1,t.size]):2===t.rank?cg(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?cg(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e})(o),scale:l,offset:c,mean:a,variance:u},d={varianceEpsilon:i},f=Bb.runKernel(Xf,h,d);return cg(f,o.shape)}}),wg=we({batchNorm2d_(t,e,n,r,s,i){const o=ge(t,"x","batchNorm"),a=ge(e,"mean","batchNorm"),u=ge(n,"variance","batchNorm");let l,c;return null!=s&&(l=ge(s,"scale","batchNorm")),null!=r&&(c=ge(r,"offset","batchNorm")),F(2===o.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),F(2===a.rank||1===a.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),F(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=l&&F(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),null!=c&&F(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),xg(o,a,u,c,l,i)}}),vg=we({batchNorm3d_(t,e,n,r,s,i){const o=ge(t,"x","batchNorm"),a=ge(e,"mean","batchNorm"),u=ge(n,"variance","batchNorm");let l,c;return null!=s&&(l=ge(s,"scale","batchNorm")),null!=r&&(c=ge(r,"offset","batchNorm")),F(3===o.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),F(3===a.rank||1===a.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),F(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=l&&F(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),null!=c&&F(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),xg(o,a,u,c,l,i)}}),$g=we({batchNorm4d_(t,e,n,r,s,i){const o=ge(t,"x","batchNorm"),a=ge(e,"mean","batchNorm"),u=ge(n,"variance","batchNorm");let l,c;return null!=s&&(l=ge(s,"scale","batchNorm")),null!=r&&(c=ge(r,"offset","batchNorm")),F(4===o.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),F(4===a.rank||1===a.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),F(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=l&&F(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),null!=c&&F(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),xg(o,a,u,c,l,i)}}),kg=we({bincount_(t,e,n){const r=ge(t,"x","bincount"),s=ge(e,"weights","bincount");F("int32"===r.dtype,()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),F(n>=0,()=>`size must be non-negative, but got ${n}.`),F(s.size===r.size||0===s.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`);const i={x:r,weights:s},o={size:n};return Bb.runKernel(sf,i,o)}}),Ng=we({broadcastArgs_(t,e){const n=ge(t,"s0","broadcastArgs","int32"),r=ge(e,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:n,s1:r};return Bb.runKernel(af,s)}}),Cg=we({broadcastTo_(t,e){let n=ge(t,"broadcastTo","x");const r=n.shape;if(e.some(t=>!(t>0)||t%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=cg(n,t)}const s=n.shape,i=Array.from(e);for(let l=e.length-1;l>=0;l--)if(s[l]===e[l])i[l]=1;else if(1!==n.shape[l])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);const o=i.map((t,e)=>t>1?e:-1).filter(t=>t>=0);if(0===o.length)return gy(n);const a={x:n},u={reps:i};return Bb.runKernel(Im,a,u)}}),Sg=we({ceil_(t){const e={x:ge(t,"x","ceil","float32")};return Bb.runKernel(lf,e)}}),Eg=we({clipByValue_(t,e,n){const r=ge(t,"x","clipByValue");if(F(n>=e,()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`),e===n)return Kn(r.shape,e,r.dtype);const s={x:r},i={clipValueMin:e,clipValueMax:n};return Bb.runKernel(cf,s,i)}}),Tg=we({concat1d_(t){return fg(t,0)}}),_g=we({concat2d_(t,e){return fg(t,e)}}),Rg=we({concat3d_(t,e){return fg(t,e)}}),Ag=we({concat4d_(t,e){return fg(t,e)}}),Og=we({conv2d_(t,e,n,r,s="NHWC",i=[1,1],o){const a=ge(t,"x","conv2d","float32"),u=ge(e,"filter","conv2d","float32");let l=a,c=!1;3===a.rank&&(c=!0,l=cg(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(4===l.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),F(4===u.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),Xn("conv2d",r,o);const h="NHWC"===s?l.shape[3]:l.shape[1];F(h===u.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`),F(qn(n,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);const d={x:l,filter:u},f={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:o},p=Bb.runKernel(pf,d,f);return c?cg(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Ig=we({conv1d_(t,e,n,r,s="NWC",i=1,o){const a=ge(t,"x","conv1d"),u=ge(e,"filter","conv1d");let l=a,c=!1;2===a.rank&&(c=!0,l=cg(a,[1,a.shape[0],a.shape[1]])),F(3===l.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),F(3===u.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),Xn("conv1d",r,o),F(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),F(qn(n,i),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`),F("NWC"===s,()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const h=cg(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=cg(l,[l.shape[0],1,l.shape[1],l.shape[2]]),f=Og(d,h,[1,n],r,"NHWC",[1,i],o);return cg(f,c?[f.shape[2],f.shape[3]]:[f.shape[0],f.shape[2],f.shape[3]])}}),Fg=we({conv2DBackpropInput_(t,e,n,r,s,i="NHWC",o){F(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let a=t,u=e,l=!1;3===e.rank&&(l=!0,u=cg(e,[1,e.shape[0],e.shape[1],e.shape[2]]),a=[1,t[0],t[1],t[2]]),F(4===a.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),F(4===u.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),F(4===n.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);const c="NHWC"===i?a[3]:a[1],h="NHWC"===i?u.shape[3]:u.shape[1];F(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),F(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),Xn("conv2dDerInput",s,o);const d={dy:u,filter:n},f={strides:r,pad:s,dataFormat:i,dimRoundingMode:o,inputShape:a},p=Bb.runKernel(bf,d,f);return l?cg(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Mg=we({conv2dTranspose_(t,e,n,r,s,i){const o=ge(t,"x","conv2dTranspose"),a=ge(e,"filter","conv2dTranspose");return Fg(n,o,a,r,s,"NHWC",i)}}),Dg=we({conv3d_(t,e,n,r,s="NDHWC",i=[1,1,1]){const o=ge(t,"x","conv3d"),a=ge(e,"filter","conv3d");let u=o,l=!1;4===o.rank&&(l=!0,u=cg(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),F(5===u.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),F(5===a.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),F(u.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${a.shape[3]}.`),F(qn(n,i),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),F("NDHWC"===s,()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`);const c={x:u,filter:a},h={strides:n,pad:r,dataFormat:s,dilations:i},d=Bb.runKernel(yf,c,h);return l?cg(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Lg=we({conv3DBackpropInput_(t,e,n,r,s){F(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let i=t,o=e,a=!1;4===e.rank&&(a=!0,o=cg(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),i=[1,t[0],t[1],t[2],t[3]]);const u=i[4],l=o.shape[4];F(5===i.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`),F(5===o.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),F(5===n.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),F(u===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`),F(l===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`);const c={dy:o,filter:n},h={pad:s,strides:r,inputShape:i},d=Bb.runKernel(xf,c,h);return a?cg(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Vg=we({conv3dTranspose_(t,e,n,r,s){const i=ge(t,"x","conv3dTranspose"),o=ge(e,"filter","conv3dTranspose");return Lg(n,i,o,r,s)}}),Pg=we({cos_(t){const e={x:ge(t,"x","cos","float32")};return Bb.runKernel(wf,e)}}),Bg=we({cosh_(t){const e={x:ge(t,"x","cosh","float32")};return Bb.runKernel(vf,e)}}),zg=we({cumprod_(t,e=0,n=!1,r=!1){const s={x:ge(t,"x","cumprod")},i={axis:e,exclusive:n,reverse:r};return Bb.runKernel($f,s,i)}}),Wg=we({cumsum_(t,e=0,n=!1,r=!1){const s={x:ge(t,"x","cumsum")},i={axis:e,exclusive:n,reverse:r};return Bb.runKernel(kf,s,i)}}),Ug=we({denseBincount_(t,e,n,r=!1){const s=ge(t,"x","denseBincount"),i=ge(e,"weights","denseBincount");F("int32"===s.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`),F(2>=s.rank,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),F(n>=0,()=>`size must be non-negative, but got ${n}.`),F(i.size===s.size||0===i.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${i.shape}.`);const o={x:s,weights:i},a={size:n,binaryOutput:r};return Bb.runKernel(Cf,o,a)}}),Gg=we({depthToSpace_(t,e,n="NHWC"){const r=ge(t,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],i="NHWC"===n?r.shape[2]:r.shape[3],o="NHWC"===n?r.shape[3]:r.shape[1];F(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),F(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${e}  for depthToSpace with input shape\n    ${r.shape}`),F(i*e>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${e} for depthToSpace with input shape\n        ${r.shape}`),F(o%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${o} for depthToSpace with input shape ${r.shape}`);const a={x:r},u={blockSize:e,dataFormat:n};return Bb.runKernel(Sf,a,u)}}),jg=we({depthwiseConv2d_(t,e,n,r,s="NHWC",i=[1,1],o){const a=ge(t,"x","depthwiseConv2d","float32"),u=ge(e,"filter","depthwiseConv2d","float32");let l=a,c=!1;3===a.rank&&(c=!0,l=cg(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(4===l.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),F(4===u.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);const h="NHWC"===s?l.shape[3]:l.shape[1];F(h===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${u.shape[2]}.`),Xn("depthwiseConv2d",r,o);const d={x:l,filter:u},f={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:o},p=Bb.runKernel(Ef,d,f);return c?cg(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),qg=we({diag_(t){const e={x:ge(t,"x","diag")};return Bb.runKernel(Rf,e)}}),Hg=we({dilation2d_(t,e,n,r,s=[1,1],i="NHWC"){const o=ge(t,"x","dilation2d"),a=ge(e,"filter","dilation2d");F(3===o.rank||4===o.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),F(3===a.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),F("NHWC"===i,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`);let u=o,l=!1;3===o.rank&&(u=cg(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=!0);const c={x:u,filter:a},h={strides:n,pad:r,dilations:s},d=Bb.runKernel(Af,c,h);return l?cg(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Xg=we({equal_(t,e){let n=ge(t,"a","equal","string_or_numeric"),r=ge(e,"b","equal","string_or_numeric");[n,r]=ie(n,r),ln(n.shape,r.shape);const s={a:n,b:r};return Bb.runKernel(Pf,s)}}),Kg=we({where_(t,e,n){const r=ge(e,"a","where"),s=ge(n,"b","where"),i=ge(t,"condition","where","bool"),o=ln(ln(i.shape,r.shape),s.shape),a={condition:Cg(i,o),t:Cg(r,o),e:Cg(s,o)};return Bb.runKernel(om,a)}}),Jg=we({zerosLike_(t){const e={x:ge(t,"x","zerosLike")};return Bb.runKernel(Bm,e)}}),Yg=we({divNoNan_(t,e){let n=ge(t,"a","div"),r=ge(e,"b","div");[n,r]=ie(n,r);const s=Ky(n,r),i=Jg(s),o=Xg(r,i);return Kg(o,i,s)}}),Zg=we({dot_(t,e){const n=ge(t,"t1","dot"),r=ge(e,"t2","dot");F(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const s=1===n.rank?n.size:n.shape[1],i=1===r.rank?r.size:r.shape[0];if(F(s===i,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${i}.`),1===n.rank&&1===r.rank){const t=cg(n,[1,-1]),e=cg(r,[-1,1]),s=Ey(t,e);return cg(s,[])}if(1===n.rank&&2===r.rank){const t=cg(n,[1,-1]),e=cg(r,[r.shape[0],r.shape[1]]),s=Ey(t,e);return cg(s,[s.size])}if(2===n.rank&&1===r.rank){const t=cg(r,[-1,1]),e=Ey(n,t);return cg(e,[e.size])}{const t=cg(r,[r.shape[0],r.shape[1]]);return Ey(n,t)}}}),Qg=we({einsum_(t,...e){const n=e.map((t,e)=>ge(t,`tensors${e}`,"einsum")),r={equation:t};return Bb.runKernel(Mf,n,r)}}),tx=we({elu_(t){const e={x:ge(t,"x","elu","float32")};return Bb.runKernel(Df,e)}}),ex=we({erf_(t){let e=ge(t,"x","erf");F("int32"===e.dtype||"float32"===e.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===e.dtype&&(e=yy(e,"float32"));const n={x:e};return Bb.runKernel(Vf,n)}}),nx=we({max_(t,e=null,n=!1){const r={x:ge(t,"x","max")},s={reductionIndices:e,keepDims:n};return Bb.runKernel(yp,r,s)}}),rx=we({min_(t,e=null,n=!1){const r={x:ge(t,"x","min")},s={axis:e,keepDims:n};return Bb.runKernel(Cp,r,s)}}),sx=we({pow_(t,e){let n=ge(t,"base","pow"),r=ge(e,"exp","pow");[n,r]=ie(n,r);const s={a:n,b:r};return Bb.runKernel(Bp,s)}}),ix=we({sqrt_(t){const e={x:ge(t,"x","sqrt","float32")};return Bb.runKernel(pm,e)}}),ox=we({square_(t){const e=ge(t,"x","square");return Bb.runKernel("Square",{x:e},{})}}),ax=we({sum_(t,e=null,n=!1){let r=ge(t,"x","sum");"bool"===r.dtype&&(r=yy(r,"int32"));const s={x:r},i={axis:e,keepDims:n};return Bb.runKernel(mm,s,i)}}),ux=we({norm_(t,e="euclidean",n=null,r=!1){const s=ir(t=ge(t,"x","norm"),e,n);let i=s.shape;if(r){const e=j(n,t.shape);i=Qn(s.shape,e)}return cg(s,i)}}),lx=we({euclideanNorm_(t,e=null,n=!1){return ux(t,"euclidean",e,n)}}),cx=we({exp_(t){const e={x:ge(t,"x","exp")};return Bb.runKernel(Bf,e)}}),hx=we({expandDims_(t,e=0){const n=ge(t,"x","expandDims","string_or_numeric");F(e<=n.rank,()=>"Axis must be <= rank of the tensor");const r={input:n},s={dim:e};return Bb.runKernel(zf,r,s)}}),dx=we({expm1_(t){const e={x:ge(t,"x","expm1")};return Bb.runKernel(Wf,e)}}),fx=we({tile_(t,e){const n=ge(t,"x","tile","string_or_numeric");F(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`);const r={x:n},s={reps:e};return Bb.runKernel(Im,r,s)}}),px=we({eye_(t,e,n,r="float32"){null==e&&(e=t);const s=We([t,e],r),i=t>e?e:t;for(let a=0;i>a;++a)s.set(1,a,a);const o=cg(s.toTensor(),[t,e]);if(null==n)return o;if(1===n.length)return fx(hx(o,0),[n[0],1,1]);if(2===n.length)return fx(hx(hx(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return fx(hx(hx(hx(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),mx=we({floor_(t){const e={x:ge(t,"x","floor","float32")};return Bb.runKernel(qf,e)}}),bx=we({gather_(t,e,n=0,r=0){const s={x:ge(t,"x","gather"),indices:ge(e,"indices","gather","int32")},i={axis:n,batchDims:r};return Bb.runKernel(Kf,s,i)}}),yx=we({greater_(t,e){let n=ge(t,"a","greater","string_or_numeric"),r=ge(e,"b","greater","string_or_numeric");[n,r]=ie(n,r),ln(n.shape,r.shape);const s={a:n,b:r};return Bb.runKernel(Yf,s)}}),gx=we({greaterEqual_(t,e){let n=ge(t,"a","greaterEqual","string_or_numeric"),r=ge(e,"b","greaterEqual","string_or_numeric");[n,r]=ie(n,r),ln(n.shape,r.shape);const s={a:n,b:r};return Bb.runKernel(Zf,s)}}),xx=we({isFinite_(t){const e={x:ge(t,"x","isFinite")};return Bb.runKernel(np,e)}}),wx=we({isInf_(t){const e={x:ge(t,"x","isInf")};return Bb.runKernel(rp,e)}}),vx=we({isNaN_(t){const e={x:ge(t,"x","isNaN")};return Bb.runKernel(sp,e)}}),$x=we({leakyRelu_(t,e=.2){const n={x:ge(t,"x","leakyRelu")},r={alpha:e};return Bb.runKernel(ip,n,r)}}),kx=we({less_(t,e){let n=ge(t,"a","less","string_or_numeric"),r=ge(e,"b","less","string_or_numeric");[n,r]=ie(n,r),ln(n.shape,r.shape);const s={a:n,b:r};return Bb.runKernel(op,s)}}),Nx=we({lessEqual_(t,e){let n=ge(t,"a","lessEqual","string_or_numeric"),r=ge(e,"b","lessEqual","string_or_numeric");[n,r]=ie(n,r),ln(n.shape,r.shape);const s={a:n,b:r};return Bb.runKernel(ap,s)}}),Cx=we({localResponseNormalization_(t,e=5,n=1,r=1,s=.5){const i=ge(t,"x","localResponseNormalization");F(4===i.rank||3===i.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`),F(B(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let o=i,a=!1;3===i.rank&&(a=!0,o=cg(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const u={x:o},l={depthRadius:e,bias:n,alpha:r,beta:s},c=Bb.runKernel(mp,u,l);return a?cg(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Sx=we({log_(t){const e={x:ge(t,"x","log","float32")};return Bb.runKernel(lp,e)}}),Ex=we({log1p_(t){const e={x:ge(t,"x","log1p")};return Bb.runKernel(cp,e)}}),Tx=we({softplus_(t){const e={x:ge(t,"x","softplus")};return Bb.runKernel(fm,e)}}),_x=we({logSigmoid_(t){const e=ge(t,"x","logSigmoid");return ur(t=>({value:Ry(Tx(Ry(t))),gradFunc(e){return Jy(e,pg(Ry(t)))}}))(e)}}),Rx=we({sub_(t,e){let n=ge(t,"a","sub"),r=ge(e,"b","sub");[n,r]=ie(n,r);const s={a:n,b:r};return Bb.runKernel(Rm,s)}}),Ax=we({logSoftmax_(t,e=-1){const n=ge(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);return ur((t,n)=>{const r=nx(t,e,!0),s=Rx(t,r),i=Rx(yy(s,"float32"),Sx(ax(cx(s),e,!0)));return n([i]),{value:i,gradFunc(t,n){const[r]=n,s=cx(r);return Rx(t,Jy(ax(t,e,!0),s))}}})(n)}}),Ox=we({logSumExp_(t,e=null,n=!1){const r=ge(t,"x","logSumExp"),s=j(e,r.shape),i=nx(r,s,!0),o=Rx(r,i),a=cx(o),u=ax(a,s),l=Sx(u),c=Hy(cg(i,l.shape),l);if(n){const t=Qn(c.shape,s);return cg(c,t)}return c}}),Ix=we({logicalAnd_(t,e){const n=ge(t,"a","logicalAnd","bool"),r=ge(e,"b","logicalAnd","bool");ln(n.shape,r.shape);const s={a:n,b:r};return Bb.runKernel(hp,s)}}),Fx=we({logicalNot_(t){const e={x:ge(t,"x","logicalNot","bool")};return Bb.runKernel(dp,e)}}),Mx=we({logicalOr_(t,e){const n=ge(t,"a","logicalOr","bool"),r=ge(e,"b","logicalOr","bool");ln(n.shape,r.shape);const s={a:n,b:r};return Bb.runKernel(fp,s)}}),Dx=we({logicalXor_(t,e){const n=ge(t,"a","logicalXor","bool"),r=ge(e,"b","logicalXor","bool");return ln(n.shape,r.shape),Ix(Mx(t,e),Fx(Ix(t,e)))}}),Lx=2147483648,Vx=we({searchSorted_(t,e,n="left"){const r=ge(t,"sortedSequence","searchSorted"),s=ge(e,"values","searchSorted"),i=r.shape[r.shape.length-1],o=s.shape[s.shape.length-1],a=cg(r,[-1,i]),u=cg(s,[-1,o]);if(2>a.rank)throw new Error("Sorted input argument must be at least 2-dimensional");if(a.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(V(u.shape)>=Lx)throw new Error("values tensor size must less than 2147483648");if(a.shape[1]>=Lx)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${a.shape[1]}`);const l={sortedSequence:a,values:u},c={side:n};return Bb.runKernel(im,l,c)}}),Px=we({maxPool_(t,e,n,r,s){const i=ge(t,"x","maxPool");let o=i,a=!1;3===i.rank&&(a=!0,o=cg(i,[1,i.shape[0],i.shape[1],i.shape[2]])),F(4===o.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),F(qn(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),Xn("maxPool",r,s);const u={x:o},l={filterSize:e,strides:n,pad:r,dimRoundingMode:s},c=Bb.runKernel(xp,u,l);return a?cg(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Bx=we({maxPool3d_(t,e=[1,1,1],n,r,s,i="NDHWC"){const o=ge(t,"x","maxPool3d");let a=o,u=!1;4===o.rank&&(u=!0,a=cg(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),F(5===a.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),F("NDHWC"===i,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),Xn("maxPool3d",r,s);const l={x:a},c={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:i},h=Bb.runKernel(vp,l,c);return u?cg(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),zx=we({maxPoolWithArgmax_(t,e,n,r,s=!1){const i={x:ge(t,"x","maxPoolWithArgmax")},o={filterSize:e,strides:n,pad:r,includeBatchInIndex:s},a=Bb.runKernel(kp,i,o);return{result:a[0],indexes:a[1]}}}),Wx=we({maximum_(t,e){let n=ge(t,"a","maximum"),r=ge(e,"b","maximum");[n,r]=ie(n,r),"bool"===n.dtype&&(n=yy(n,"int32"),r=yy(r,"int32")),ln(n.shape,r.shape);const s={a:n,b:r};return Bb.runKernel(gp,s)}}),Ux=we({mean_(t,e=null,n=!1){const r={x:ge(t,"x","mean")},s={axis:e,keepDims:n};return Bb.runKernel(Np,r,s)}}),Gx=we({minimum_(t,e){let n=ge(t,"a","minimum"),r=ge(e,"b","minimum");[n,r]=ie(n,r),"bool"===n.dtype&&(n=yy(n,"int32"),r=yy(r,"int32")),ln(n.shape,r.shape);const s={a:n,b:r};return Bb.runKernel(Sp,s)}}),jx=we({mirrorPad_(t,e,n){F("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const r=ge(t,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");F(e.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`);const s="reflect"===n?1:0;for(let a=0;a<r.rank;a++)F(2===e[a].length,()=>"Invalid number of paddings. Must be length of 2 each."),F(!(0>e[a][0]||e[a][0]>r.shape[a]-s||0>e[a][1]||e[a][1]>r.shape[a]-s),()=>`Padding in dimension ${a} cannot be greater than or equal to ${r.shape[a]-s} or less than 0 for input of shape ${r.shape}`);const i={paddings:e,mode:n},o={x:r};return Bb.runKernel(Ep,o,i)}}),qx=we({mod_(t,e){let n=ge(t,"a","mod"),r=ge(e,"b","mod");[n,r]=ie(n,r);const s={a:n,b:r};return Bb.runKernel(Tp,s)}}),Hx=we({moments_(t,e=null,n=!1){const r=j(e,(t=ge(t,"x","moments")).shape),s=Ux(t,r,n);let i=s.shape;n||(i=Qn(s.shape,r));const o=ox(Rx(yy(t,"float32"),cg(s,i)));return{mean:s,variance:Ux(o,r,n)}}}),Xx=we({multiRNNCell_(t,e,n,r){const s=ge(e,"data","multiRNNCell"),i=xe(n,"c","multiRNNCell"),o=xe(r,"h","multiRNNCell");let a=s;const u=[];for(let h=0;h<t.length;h++){const e=t[h](a,i[h],o[h]);u.push(e[0]),u.push(e[1]),a=e[1]}const l=[],c=[];for(let h=0;h<u.length;h+=2)l.push(u[h]),c.push(u[h+1]);return[l,c]}}),Kx=we({multinomial_(t,e,n,r=!1){const s=ge(t,"logits","multinomial"),i=s.size,o=s.rank;if(2>i)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${i}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();const a={logits:1===o?cg(s,[1,-1]):s},u={numSamples:e,seed:n,normalized:r},l=Bb.runKernel(_p,a,u);return 1===o?cg(l,[l.size]):l}}),Jx=we({notEqual_(t,e){let n=ge(t,"a","notEqual","string_or_numeric"),r=ge(e,"b","notEqual","string_or_numeric");[n,r]=ie(n,r),ln(n.shape,r.shape);const s={a:n,b:r};return Bb.runKernel(Op,s)}}),Yx=we({onesLike_(t){const e={x:ge(t,"x","onesLike")};return Bb.runKernel(Dp,e)}}),Zx=we({outerProduct_(t,e){const n=ge(t,"v1","outerProduct"),r=ge(e,"v2","outerProduct");F(1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const s=cg(n,[-1,1]),i=cg(r,[1,-1]);return Ey(s,i)}}),Qx=we({pad_(t,e,n=0){const r=ge(t,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:n},i={x:r};return Bb.runKernel(Pp,i,s)}}),tw=we({pad1d_(t,e,n=0){return F(2===e.length,()=>"Invalid number of paddings. Must be length of 2."),Qx(t,[e],n)}}),ew=we({pad2d_(t,e,n=0){return F(2===e.length&&2===e[0].length&&2===e[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),Qx(t,e,n)}}),nw=we({pad3d_(t,e,n=0){return F(3===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),Qx(t,e,n)}}),rw=we({pad4d_(t,e,n=0){return F(4===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length&&2===e[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),Qx(t,e,n)}}),sw=we({spaceToBatchND_(t,e,n){const r=ge(t,"x","spaceToBatchND");F(r.rank>=1+e.length,()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`),F(n.length===e.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`),F(r.shape.reduce((t,r,s)=>s>0&&s<=e.length?t&&(r+n[s-1][0]+n[s-1][1])%e[s-1]===0:t,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`);const s={x:r},i={blockShape:e,paddings:n};return Bb.runKernel(bm,s,i)}}),iw=we({pool_(t,e,n,r,s,i,o){null==s&&(s=[1,1]),null==i&&(i=1),0===r&&(r="valid");const a=ge(t,"x","maxPool");let u=a,l=!1;3===a.rank&&(l=!0,u=cg(a,[1,a.shape[0],a.shape[1],a.shape[2]])),F(qn(i,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${s}'`);const c=Dn(u.shape,e,i,s,r),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===r?((t,e)=>{const n=t.map((t,n)=>t+(t-1)*(e[n]-1)),r=n.map(t=>t-1),s=r.map(t=>Math.floor(t/2)),i=r.map((t,e)=>t-s[e]);return r.map((t,e)=>[s[e],i[e]])})([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const f=1===h[0]&&1===h[1],[p,m]=((t,e,n)=>{const r=n.map(t=>t[0]),s=n.map(t=>t[1]),i=t.concat(r,s),o=e.map((t,e)=>(t-i[e]%t)%t),a=s.map((t,e)=>t+o[e]),u=e.map((t,e)=>[r[e],a[e]]),l=e.map((t,e)=>[0,o[e]]);return[u,l]})([c.inHeight,c.inWidth],h,d),b=f?r:"valid",y=f?u:sw(u,h,p),g=("avg"===n?()=>hg(y,e,i,b,o):()=>Px(y,e,i,b,o))(),x=f?g:gg(g,h,m);return l?cg(x,[x.shape[1],x.shape[2],x.shape[3]]):x}}),ow=we({prelu_(t,e){const n={x:ge(t,"x","prelu"),alpha:ge(e,"alpha","prelu")};return Bb.runKernel(zp,n)}}),aw=we({prod_(t,e=null,n=!1){let r=ge(t,"x","prod");"bool"===r.dtype&&(r=yy(r,"int32"));const s={x:r},i={axis:e,keepDims:n};return Bb.runKernel(Wp,s,i)}}),uw=we({raggedGather_(t,e,n,r){const s=t.map((t,e)=>ge(t,`tensors${e}`,"raggedGather","int32")),i={paramsNestedSplits:s,paramsDenseValues:ge(e,"paramsDenseValues","raggedGather"),indices:ge(n,"indices","raggedGather","int32")},o={outputRaggedRank:r},a=Bb.runKernel(Up,i,o);return{outputNestedSplits:a.slice(0,a.length-1),outputDenseValues:a[a.length-1]}}}),lw=we({raggedTensorToTensor_(t,e,n,r,s){const i=ge(t,"shape","raggedTensorToTensor","int32"),o=ge(e,"values","raggedTensorToTensor"),a=ge(n,"defaultValue","raggedTensorToTensor",o.dtype),u=r.map((t,e)=>ge(t,`tensors${e}`,"raggedTensorToTensor","int32")),l={shape:i,values:o,defaultValue:a,rowPartitionTensors:u},c={rowPartitionTypes:s};return Bb.runKernel(Gp,l,c)}}),cw=we({rand_(t,e,n){const r=V(t);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);s=new Uint8Array(r)}for(let i=0;r>i;i++)s[i]=e();return Bb.makeTensor(s,t,n)}});var hw={exports:{}};!function(t,e){function n(t){var e,n=this,r=(e=4022871197,t=>{t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=()=>{var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),0>n.s0&&(n.s0+=1),n.s1-=r(t),0>n.s1&&(n.s1+=1),n.s2-=r(t),0>n.s2&&(n.s2+=1),r=null}function r(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function s(t,e){var s=new n(t),i=e&&e.state,o=s.next;return o.int32=()=>4294967296*s.next()|0,o.double=()=>o()+11102230246251565e-32*(2097152*o()|0),o.quick=o,i&&("object"==typeof i&&r(i,s),o.state=()=>r(s,{})),o}e&&e.exports?e.exports=s:this.alea=s}(0,hw);var dw=hw.exports,fw={exports:{}};!function(t,e){function n(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=()=>{var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function r(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function s(t,e){var s=new n(t),i=e&&e.state,o=()=>(s.next()>>>0)/4294967296;return o.double=()=>{do{var t=((s.next()>>>11)+(s.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},o.int32=s.next,o.quick=o,i&&("object"==typeof i&&r(i,s),o.state=()=>r(s,{})),o}e&&e.exports?e.exports=s:this.xor128=s}(0,fw);var pw=fw.exports,mw={exports:{}};!function(t,e){function n(t){var e=this,n="";e.next=()=>{var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function r(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function s(t,e){var s=new n(t),i=e&&e.state,o=()=>(s.next()>>>0)/4294967296;return o.double=()=>{do{var t=((s.next()>>>11)+(s.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},o.int32=s.next,o.quick=o,i&&("object"==typeof i&&r(i,s),o.state=()=>r(s,{})),o}e&&e.exports?e.exports=s:this.xorwow=s}(0,mw);var bw=mw.exports,yw={exports:{}};!function(t,e){function n(t){var e=this;e.next=()=>{var t,n,r=e.x,s=e.i;return t=r[s],n=(t^=t>>>7)^t<<24,n^=(t=r[s+1&7])^t>>>10,n^=(t=r[s+3&7])^t>>>3,n^=(t=r[s+4&7])^t<<7,t=r[s+7&7],n^=(t^=t<<13)^t<<9,r[s]=n,e.i=s+1&7,n},((t,e)=>{var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;8>r.length;)r.push(0);for(n=0;8>n&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()})(e,t)}function r(t,e){return e.x=t.x.slice(),e.i=t.i,e}function s(t,e){null==t&&(t=+new Date);var s=new n(t),i=e&&e.state,o=()=>(s.next()>>>0)/4294967296;return o.double=()=>{do{var t=((s.next()>>>11)+(s.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},o.int32=s.next,o.quick=o,i&&(i.x&&r(i,s),o.state=()=>r(s,{})),o}e&&e.exports?e.exports=s:this.xorshift7=s}(0,yw);var gw=yw.exports,xw={exports:{}};!function(t,e){function n(t){var e=this;e.next=()=>{var t,n,r=e.w,s=e.X,i=e.i;return e.w=r=r+1640531527|0,n=s[i+34&127],t=s[i=i+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=s[i]=n^t,e.i=i,n+(r^r>>>16)|0},((t,e)=>{var n,r,s,i,o,a=[],u=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,u=Math.max(u,e.length)),s=0,i=-32;u>i;++i)e&&(r^=e.charCodeAt((i+32)%e.length)),0===i&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,0>i||(o=o+1640531527|0,s=0==(n=a[127&i]^=r+o)?s+1:0);for(128>s||(a[127&(e&&e.length||0)]=-1),s=127,i=512;i>0;--i)r=a[s+34&127],n=a[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,a[s]=r^n;t.w=o,t.X=a,t.i=s})(e,t)}function r(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function s(t,e){null==t&&(t=+new Date);var s=new n(t),i=e&&e.state,o=()=>(s.next()>>>0)/4294967296;return o.double=()=>{do{var t=((s.next()>>>11)+(s.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},o.int32=s.next,o.quick=o,i&&(i.X&&r(i,s),o.state=()=>r(s,{})),o}e&&e.exports?e.exports=s:this.xor4096=s}(0,xw);var ww=xw.exports,vw={exports:{}};!function(t,e){function n(t){var e=this,n="";e.next=()=>{var t=e.b,n=e.c,r=e.d,s=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^s,e.a=s-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function r(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function s(t,e){var s=new n(t),i=e&&e.state,o=()=>(s.next()>>>0)/4294967296;return o.double=()=>{do{var t=((s.next()>>>11)+(s.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},o.int32=s.next,o.quick=o,i&&("object"==typeof i&&r(i,s),o.state=()=>r(s,{})),o}e&&e.exports?e.exports=s:this.tychei=s}(0,vw);var $w=vw.exports,kw={exports:{}};const Nw=n(Object.freeze(Object.defineProperty({__proto__:null,default:{}},Symbol.toStringTag,{value:"Module"})));var Cw;Cw=kw,function(t,e,n){function r(r,m,b){var y=[],g=a(o((m=1==m?{entropy:!0}:m||{}).entropy?[r,u(e)]:null==r?(()=>{try{var n;return l&&(n=l.randomBytes)?n=n(c):(n=new Uint8Array(c),(t.crypto||t.msCrypto).getRandomValues(n)),u(n)}catch(Oj){var r=t.navigator,s=r&&r.plugins;return[+new Date,t,s,t.screen,u(e)]}})():r,3),y),x=new s(y),w=()=>{for(var t=x.g(6),e=d,n=0;f>t;)t=(t+n)*c,e*=c,n=x.g(1);for(;t>=p;)t/=2,e/=2,n>>>=1;return(t+n)/e};return w.int32=()=>0|x.g(4),w.quick=()=>x.g(4)/4294967296,w.double=w,a(u(x.S),e),(m.pass||b||((t,e,r,s)=>(s&&(s.S&&i(s,x),t.state=()=>i(x,{})),r?(n[h]=t,e):t)))(w,g,"global"in m?m.global:this==n,m.state)}function s(t){var e,n=t.length,r=this,s=0,i=r.i=r.j=0,o=r.S=[];for(n||(t=[n++]);c>s;)o[s]=s++;for(s=0;c>s;s++)o[s]=o[i=m&i+t[s%n]+(e=o[s])],o[i]=e;(r.g=t=>{for(var e,n=0,s=r.i,i=r.j,o=r.S;t--;)e=o[s=m&s+1],n=n*c+o[m&(o[s]=o[i=m&i+e])+(o[i]=e)];return r.i=s,r.j=i,n})(c)}function i(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function o(t,e){var n,r=[],s=typeof t;if(e&&"object"==s)for(n in t)try{r.push(o(t[n],e-1))}catch(Oj){}return r.length?r:"string"==s?t:t+"\0"}function a(t,e){for(var n,r=t+"",s=0;s<r.length;)e[m&s]=m&(n^=19*e[m&s])+r.charCodeAt(s++);return u(e)}function u(t){return String.fromCharCode.apply(0,t)}var l,c=256,h="random",d=n.pow(c,6),f=n.pow(2,52),p=2*f,m=255;if(a(n.random(),e),Cw.exports){Cw.exports=r;try{l=Nw}catch(b){}}else n["seed"+h]=r}("undefined"!=typeof self?self:ed,[],Math);var Sw=dw,Ew=pw,Tw=bw,_w=gw,Rw=ww,Aw=$w,Ow=kw.exports;Ow.alea=Sw,Ow.xor128=Ew,Ow.xorwow=Tw,Ow.xorshift7=_w,Ow.xor4096=Rw,Ow.tychei=Aw;var Iw=Ow;class Fw{constructor(t,e,n,r,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=s||Math.random();this.random=Iw.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,s,i;do{r=2*this.random()-1,s=2*this.random()-1,i=r*r+s*s}while(i>=1||0===i);const o=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*r*o,e=this.mean+this.stdDev*s*o,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class Mw{constructor(t,e,n,r){this.alpha=t,this.beta=1/e,this.dtype=n;const s=r||Math.random();this.randu=Iw.alea(s.toString()),this.randn=new Fw(0,1,n,!1,this.randu()),this.d=1>t?t+2/3:t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,n,r,s,i;for(;;){do{r=this.randn.nextValue(),i=1+this.c*r}while(0>=i);if(i*=i*i,t=r*r,e=1-.331*t*t,n=.5*t+this.d*(1-i+Math.log(i)),s=this.randu(),e>s||Math.log(s)<n)break}return i=1/this.beta*this.d*i,1>this.alpha&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(t){return"float32"===this.dtype?t:Math.round(t)}}class Dw{constructor(t=0,e=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&1>=this.range)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=Iw.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Lw=we({randomGamma_(t,e,n=1,r="float32",s){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const i=new Mw(e,n,r,s),o=We(t,r);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}}),Vw=we({randomNormal_(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const i=new Fw(e,n,r,!1,s),o=We(t,r);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}}),Pw=we({randomStandardNormal_(t,e,n){if(null!=e&&"bool"===e)throw new Error(`Unsupported data type ${e}`);return Vw(t,0,1,e,n)}}),Bw=we({randomUniform_(t,e=0,n=1,r="float32",s){const i=We(t,r),o=new Dw(e,n,null,s);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}}),zw=we({reciprocal_(t){const e={x:ge(t,"x","reciprocal")};return Bb.runKernel(Hp,e)}}),Ww=we({relu_(t){const e={x:ge(t,"x","relu")};return Bb.runKernel(Xp,e)}}),Uw=we({relu6_(t){const e={x:ge(t,"x","relu6")};return Bb.runKernel(tm,e)}}),Gw=we({reverse_(t,e){const n={x:ge(t,"x","reverse")},r={dims:e};return Bb.runKernel(em,n,r)}}),jw=we({reverse1d_(t){const e=ge(t,"x","reverse");return F(1===e.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),Gw(e,0)}}),qw=we({reverse2d_(t,e){const n=ge(t,"x","reverse");return F(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Gw(n,e)}}),Hw=we({reverse3d_(t,e){const n=ge(t,"x","reverse");return F(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Gw(n,e)}}),Xw=we({reverse4d_(t,e){const n=ge(t,"x","reverse");return F(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Gw(n,e)}}),Kw=we({round_(t){const e={x:ge(t,"x","round")};return Bb.runKernel(nm,e)}}),Jw=we({rsqrt_(t){const e={x:ge(t,"x","rsqrt","float32")};return Bb.runKernel(rm,e)}}),Yw=we({selu_(t){const e={x:ge(t,"x","selu")};return Bb.runKernel(am,e)}}),Zw=we({separableConv2d_(t,e,n,r,s,i=[1,1],o="NHWC"){const a=ge(t,"x","separableConv2d"),u=ge(e,"depthwiseFilter","separableConv2d"),l=ge(n,"pointwiseFilter","separableConv2d");let c=a,h=!1;if(3===a.rank&&(h=!0,c=cg(a,[1,a.shape[0],a.shape[1],a.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");F(4===c.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),F(4===u.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),F(4===l.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),F(1===l.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),F(1===l.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);const d=u.shape[2],f=u.shape[3];F(l.shape[2]===d*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*f}, but got ${l.shape[2]}.`);const p=jg(c,u,r,s,o,i),m=Og(p,l,1,"valid",o);return h?cg(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Qw=function(t,e){return Jh(this,null,function*(){const n=ge(t,"x","setdiff1d"),r=ge(e,"y","setdiff1d");F(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),F(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),F(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);const s=yield n.data(),i=yield r.data(),o=new Set(i);let a=0;for(let t=0;t<s.length;t++)o.has(s[t])||a++;const u=new vb([a],n.dtype),l=new vb([a],"int32");for(let t=0,e=0;t<s.length;t++)o.has(s[t])||(u.values[e]=s[t],l.values[e]=t,e++);return[u.toTensor(),l.toTensor()]})},tv=we({sign_(t){const e={x:ge(t,"x","sign")};return Bb.runKernel(hm,e)}}),ev=we({sin_(t){const e={x:ge(t,"x","sin","float32")};return Bb.runKernel(lm,e)}}),nv=we({sinh_(t){const e={x:ge(t,"x","sinh")};return Bb.runKernel(cm,e)}}),rv=we({slice1d_(t,e,n){const r=ge(t,"x","slice1d");return F(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),mg(r,[e],[n])}}),sv=we({slice2d_(t,e,n){const r=ge(t,"x","slice2d");return F(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),mg(r,e,n)}}),iv=we({slice3d_(t,e,n){const r=ge(t,"x","slice3d");return F(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),mg(r,e,n)}}),ov=we({slice4d_(t,e,n){const r=ge(t,"x","slice4d");return F(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),mg(r,e,n)}}),av=we({softmax_(t,e=-1){const n=ge(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const r={logits:n},s={dim:e};return Bb.runKernel(gm,r,s)}}),uv=we({fft_(t){F("complex64"===t.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`);const e={input:t};return Bb.runKernel(Uf,e)}}),lv=we({ifft_(t){F("complex64"===t.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`);const e={input:t};return Bb.runKernel(tp,e)}}),cv=we({irfft_(t){const e=t.shape[t.shape.length-1],n=t.size/e;let r;if(e>2){const s=[n,2*(e-1)],i=cg(Ay(t),[n,e]),o=cg(_y(t),[n,e]),a=Gw(mg(i,[0,1],[n,e-2]),1),u=Jy(Gw(mg(o,[0,1],[n,e-2]),1),sr(-1)),l=fg([i,a],1),c=fg([o,u],1),h=cg(jb(l,c),[s[0],s[1]]);r=lv(h)}else{const s=cg(t,[n,e]);r=lv(s)}if(r=Ay(r),3===t.rank&&0!==t.shape[0]){const e=r,n=t.shape[0];r=cg(r,[n,r.shape[0]/n,r.shape[1]]),e.dispose()}return r}}),hv=we({split_(t,e,n=0){const r={x:ge(t,"x","split")},s={numOrSizeSplits:e,axis:n};return Bb.runKernel(ym,r,s)}}),dv=we({rfft_(t,e){F("float32"===t.dtype,()=>`The dtype for rfft() must be real value but got ${t.dtype}`);let n=t.shape[t.shape.length-1];const r=t.size/n;let s;if(null!=e&&n>e){const r=t.shape.map(t=>0),i=t.shape.map(t=>t);i[t.shape.length-1]=e,s=mg(t,r,i),n=e}else if(null!=e&&e>n){const r=t.shape.map(t=>t);r[t.shape.length-1]=e-n,s=fg([t,hr(r)],t.shape.length-1),n=e}else s=t;const i=Jg(s),o=cg(jb(s,i),[r,n]),a=uv(o),u=Math.floor(n/2)+1,l=Ay(a),c=_y(a),h=hv(l,[u,n-u],l.shape.length-1),d=hv(c,[u,n-u],c.shape.length-1),f=s.shape.slice();return f[s.shape.length-1]=u,cg(jb(h[0],d[0]),f)}}),fv=we({squaredDifference_(t,e){let n=ge(t,"a","squaredDifference"),r=ge(e,"b","squaredDifference");[n,r]=ie(n,r),ln(n.shape,r.shape);const s={a:n,b:r};return Bb.runKernel(Nm,s,{})}}),pv=we({squeeze_(t,e){const n=ge(t,"x","squeeze","string_or_numeric");return cg(n,q(n.shape,e).newShape)}}),mv=we({stack_(t,e=0){const n=xe(t,"tensors","stack","string_or_numeric");F(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&F(e<=n[0].rank,()=>"Axis must be <= rank of the tensor");const r=n,s={axis:e};return Bb.runKernel(Vp,r,s)}}),bv=we({step_(t,e=0){const n={x:ge(t,"x","step")},r={alpha:e};return Bb.runKernel(zm,n,r)}}),yv=we({stridedSlice_(t,e,n,r,s=0,i=0,o=0,a=0,u=0){const l={x:ge(t,"x","stridedSlice","string_or_numeric")},c={begin:e,end:n,strides:r,beginMask:s,endMask:i,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:u};return Bb.runKernel(Sm,l,c)}}),gv=we({tan_(t){const e={x:ge(t,"x","tan","float32")};return Bb.runKernel(Am,e)}}),xv=we({topk_(t,e=1,n=!0){const r=ge(t,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(0>e)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${e}`);const i={x:r},o={k:e,sorted:n},[a,u]=Bb.runKernel(Fm,i,o);return{values:a,indices:u}}}),wv=we({truncatedNormal_(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const i=new Fw(e,n,r,!0,s),o=We(t,r);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}}),vv=we({unique_(t,e=0){const n=ge(t,"x","unique","string_or_numeric");F(n.rank>0,()=>"The input tensor must be at least 1D");const r={x:n},s={axis:e},[i,o]=Bb.runKernel(Lm,r,s);return{values:i,indices:o}}}),$v=we({unsortedSegmentSum_(t,e,n){const r=ge(t,"x","unsortedSegmentSum"),s=ge(e,"segmentIds","unsortedSegmentSum","int32");F(B(n),()=>"numSegments must be of dtype int");const i={x:r,segmentIds:s},o={numSegments:n};return Bb.runKernel(Pm,i,o)}}),kv=we({unstack_(t,e=0){const n=ge(t,"x","unstack","string_or_numeric");F(e>=-n.shape.length&&e<n.shape.length,()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`);const r={value:n},s={axis:e};return Bb.runKernel(Vm,r,s)}}),Nv=function(t){return Jh(this,null,function*(){const e=ge(t,"condition","whereAsync","bool"),n=yield e.data(),r=$r(e.shape,n);return t!==e&&e.dispose(),r})},Cv=function(t,e,n){return Jh(this,null,function*(){const r=ge(t,"tensor","boolMask"),s=ge(e,"mask","boolMask","bool"),i=null==n?0:n,o=s.rank,a=r.shape;F(o>0,()=>"mask cannot be scalar"),M(a.slice(i,i+o),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let t=i;i+o>t;t++)u*=a[t];const l=a.slice(0,i).concat([u],a.slice(i+o)),c=cg(r,l),h=cg(s,[-1]),d=yield Nv(h),f=pv(d,[1]),p=bx(c,f,i);return t!==r&&r.dispose(),e!==s&&s.dispose(),f.dispose(),c.dispose(),h.dispose(),d.dispose(),p})},Sv=we({movingAverage_(t,e,n,r,s=!0){const i=ge(t,"v","movingAverage"),o=ge(e,"x","movingAverage"),a=ge(n,"decay","movingAverage");oe(i,o),F(P(i.shape,o.shape),()=>"Shape mismatch in v and x");const u=sr(1),l=Rx(u,a);let c=Jy(Rx(o,i),l);if(s){F(null!=r,()=>"When using zeroDebias: true, step is required.");const t=ge(r,"step","movingAverage");c=Ky(c,Rx(u,sx(a,t)))}return Hy(i,c)}}),Ev=we({scatterND_(t,e,n){const r=ge(t,"indices","scatterND","int32"),s=ge(e,"updates","scatterND");pn(s,r,n);const i={indices:r,updates:s},o={shape:n};return Bb.runKernel(sm,i,o)}}),Tv=we({sparseToDense_(t,e,n,r=0){const s=ge(t,"sparseIndices","sparseToDense","int32"),i=ge(e,"sparseValues","sparseToDense","string_or_numeric"),o=ge(r,"defaultValue","sparseToDense",i.dtype);((t,e,n,r)=>{if("int32"!==t.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const s=t.rank>0?t.shape[0]:1,i=t.rank>1?t.shape[1]:1;if(n.length!==i)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${i}.`);const o=e.size;if(0!==e.rank&&(1!==e.rank||o!==s))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${s}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")})(s,i,n,o);const a={sparseIndices:s,sparseValues:i,defaultValue:o},u={outputShape:n};return Bb.runKernel(km,a,u)}}),_v=we({gatherND_(t,e){const n=ge(e,"indices","gatherND","int32"),r={params:ge(t,"x","gatherND","string_or_numeric"),indices:n};return Bb.runKernel(Jf,r)}}),Rv=we({dropout_(t,e,n,r){const s=ge(t,"x","dropout");if(F("float32"===s.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),F(e>=0&&1>e,()=>`rate must be a float in the range [0, 1), but got ${e}.`),0===e)return t instanceof Nb?s.clone():s;const i=((t,e)=>{if(null==e)return t.shape.slice();if(P(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e})(s,n),o=1-e,a=Ky(mx(Hy(Bw(i,0,1,"float32",r),o)),o);return Jy(s,a)}}),Av=function(t,e,n=1){return Jh(this,null,function*(){const r=ge(t,"predictions","inTopK"),s=ge(e,"targets","inTopK");F(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),F(r.rank-1===s.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`),M(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const i=r.shape[r.shape.length-1];F(n>0&&i>=n,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${i}), but got ${n}`);const o=yield r.data(),a=yield s.data(),[u,l]=[o.length/i,i],c=H("bool",u);for(let t=0;u>t;t++){const e=t*l,r=o.subarray(e,e+l),s=[];for(let t=0;t<r.length;t++)s.push({value:r[t],index:t});s.sort((t,e)=>e.value-t.value),c[t]=0;for(let i=0;n>i;i++)if(s[i].index===a[t]){c[t]=1;break}}return t!==r&&r.dispose(),e!==s&&s.dispose(),$e(c,s.shape,"bool")})},Ov=we({conv2DBackpropFilter_(t,e,n,r,s,i="NHWC",o){let a=t;3===t.rank&&(a=cg(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u=e;3===u.rank&&(u=cg(e,[1,e.shape[0],e.shape[1],e.shape[2]])),F(4===a.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),F(4===u.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),F(4===n.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);const l="NHWC"===i?a.shape[3]:a.shape[1],c="NHWC"===i?u.shape[3]:u.shape[1];F(l===n[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`),F(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),Xn("conv2dDerFilter",s,o);const h={x:a,dy:u},d={strides:r,pad:s,dataFormat:i,dimRoundingMode:o,filterShape:n};return Bb.runKernel(mf,h,d)}}),Iv=(t,e)=>!(t>0)||"linear"===e,Fv=we({fusedConv2d_({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:a,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===Iv(Bb.state.gradientDepth,u)){F("NHWC"===s,()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let h=Og(t,e,n,r,s,i,o);return null!=a&&(h=Hy(h,a)),Er(h,u,l,c)}const h=ge(t,"x","conv2d","float32"),d=ge(e,"filter","conv2d","float32");let f=h,p=!1;3===h.rank&&(p=!0,f=cg(h,[1,h.shape[0],h.shape[1],h.shape[2]])),F(4===f.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),F(4===d.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),Xn("fused conv2d",r,o);const m="NHWC"===s?f.shape[3]:f.shape[1];F(d.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`),F(qn(n,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);const b=Vn(f.shape,d.shape,n,i,r,o);let y,g;if(null!=a&&(y=ge(a,"bias","fused conv2d"),[y]=ie(y,h),"NHWC"===s?ln(b.outShape,y.shape):(F(1>=y.shape.length,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),F(0===y.shape.length||y.shape[0]===b.outChannels||1===y.shape[0],()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${b.outChannels})`))),null!=l){const t=l.shape;if(F(1>=t.length||3===t.length,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${t.length}.`),1===t.length)F(1===t[0]||t[0]===b.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${t}) is not compatible with the number of output channels (${b.outChannels}).`);else if(3===t.length)try{ln(t,b.outShape)}catch(Oj){const n=`Error in fused conv2d: PReLU activation weights (${t}) is not compatible with the output shape of the conv2d (${b.outShape}).`;throw Error(n)}g=ge(l,"prelu weights","fused conv2d")}const x=(t,e)=>{F("NHWC"===s,()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`);const[o,a,l,c]=e,h=Cr(t,l,u);F(jn(i),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`);const d=[Fg(a.shape,h,o,n,r),Ov(a,h,o.shape,n,r)];if(null!=c){const t=Sr(c,h);d.push(t)}return d},w={x:f,filter:d,bias:y,preluActivationWeights:g},v={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:o,activation:u,leakyreluAlpha:c};return null==a?ur((t,e,n)=>{let r=Bb.runKernel(jm,w,v);return n([e,t,r]),p&&(r=cg(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}})(f,d):ur((t,e,n,r)=>{let s=Bb.runKernel(jm,w,v);return r([e,t,s,n]),p&&(s=cg(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:x}})(f,d,y)}}),Mv=we({depthwiseConv2dNativeBackpropFilter_(t,e,n,r,s,i=[1,1],o){let a=t;3===t.rank&&(a=cg(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u=e;3===u.rank&&(u=cg(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={x:a,dy:u},c={strides:r,pad:s,dimRoundingMode:o,dilations:i,filterShape:n};return Bb.runKernel(Tf,l,c)}}),Dv=we({depthwiseConv2dNativeBackpropInput_(t,e,n,r,s,i=[1,1],o){let a=e,u=!1;3===e.rank&&(u=!0,a=cg(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={dy:a,filter:n},c={strides:r,pad:s,dimRoundingMode:o,dilations:i,inputShape:t},h=Bb.runKernel(_f,l,c);return u?cg(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Lv=we({fusedDepthwiseConv2d_({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:a,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===Iv(Bb.state.gradientDepth,u)){let h=jg(t,e,n,r,s,i,o);return null!=a&&(h=Hy(h,a)),Er(h,u,l,c)}const h=ge(t,"x","depthwiseConv2d","float32"),d=ge(e,"filter","depthwiseConv2d","float32");let f=h,p=!1;3===h.rank&&(p=!0,f=cg(h,[1,h.shape[0],h.shape[1],h.shape[2]])),F(4===f.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),F(4===d.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),F(f.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),null==i&&(i=[1,1]),F(qn(n,i),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),Xn("fused depthwiseConv2d",r,o);const m=Vn(f.shape,d.shape,n,i,r,o,!0);let b,y;null!=a&&(b=ge(a,"bias","fused conv2d"),[b]=ie(b,h),ln(m.outShape,b.shape)),null!=l&&(y=ge(l,"prelu weights","fused depthwiseConv2d"));const g=(t,e)=>{F(jn(i),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[s,a,l,c]=e,h=Cr(t,l,u),d=Dv(a.shape,h,s,n,r,i,o),f=Mv(a,h,s.shape,n,r,i,o);return null!=c?[d,f,Sr(b,h)]:[d,f]},x={x:f,filter:d,bias:b,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:o,activation:u,leakyreluAlpha:c};return null==a?ur((t,e,n)=>{let r=Bb.runKernel(qm,x,w);return n([e,t,r]),p&&(r=cg(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:g}})(f,d):ur((t,e,n,r)=>{let s=Bb.runKernel(qm,x,w);return r([e,t,s,n]),p&&(s=cg(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:g}})(f,d,b)}}),Vv=we({fusedMatMul_({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:s,activation:i="linear",preluActivationWeights:o,leakyreluAlpha:a=.2}){if(!1===Iv(Bb.state.gradientDepth,i)){let u=Ey(t,e,n,r);return null!=s&&(u=Hy(u,s)),Er(u,i,o,a)}let u=ge(t,"a","fused matMul"),l=ge(e,"b","fused matMul");[u,l]=ie(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],d=n?u.shape[u.rank-1]:u.shape[u.rank-2],f=r?l.shape[l.rank-2]:l.shape[l.rank-1],p=u.shape.slice(0,-2),m=l.shape.slice(0,-2),b=V(p),y=V(m);F(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`);const g=ln(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([d,f]),x=cg(u,n?[b,c,d]:[b,d,c]),w=cg(l,r?[y,f,h]:[y,h,f]);let v,$;null!=s&&(v=ge(s,"bias","fused matMul"),[v]=ie(v,u),ln(g,v.shape)),null!=o&&($=ge(o,"prelu weights","fused matMul"));const k=(t,e)=>{const[o,a,u,l]=e,c=Cr(cg(t,u.shape),u,i);let h,d;return n||r?!n&&r?(h=Ey(c,a,!1,!1),d=Ey(c,o,!0,!1)):n&&!r?(h=Ey(a,c,!1,!0),d=Ey(o,c,!1,!1)):(h=Ey(a,c,!0,!0),d=Ey(c,o,!0,!0)):(h=Ey(c,a,!1,!0),d=Ey(o,c,!0,!1)),null!=s?[h,d,Sr(l,c)]:[h,d]},N={a:x,b:w,bias:v,preluActivationWeights:$},C={transposeA:n,transposeB:r,activation:i,leakyreluAlpha:a};return null==s?ur((t,e,n)=>{const r=Bb.runKernel(Gm,N,C);return n([t,e,r]),{value:cg(r,g),gradFunc:k}})(x,w):ur((t,e,n,r)=>{const s=Bb.runKernel(Gm,N,C);return r([t,e,s,n]),{value:cg(s,g),gradFunc:k}})(x,w,v)}}),Pv=Object.freeze(Object.defineProperty({__proto__:null,conv2d:Fv,depthwiseConv2d:Lv,matMul:Vv},Symbol.toStringTag,{value:"Module"})),Bv=we({hammingWindow_(t){return Nr(t,.54,.46)}}),zv=we({hannWindow_(t){return Nr(t,.5,.5)}}),Wv=we({frame_(t,e,n,r=!1,s=0){let i=0;const o=[];for(;i+e<=t.size;)o.push(mg(t,i,e)),i+=n;if(r)for(;i<t.size;){const r=i+e-t.size,a=fg([mg(t,i,e-r),Kn([r],s)]);o.push(a),i+=n}return 0===o.length?br([],[0,e]):cg(fg(o),[o.length,e])}}),Uv=we({stft_(t,e,n,r,s=zv){null==r&&(r=kr(e));const i=Wv(t,e,n),o=Jy(i,s(e));return dv(o,r)}}),Gv=we({cropAndResize_(t,e,n,r,s="bilinear",i=0){const o=ge(t,"image","cropAndResize"),a=ge(e,"boxes","cropAndResize","float32"),u=ge(n,"boxInd","cropAndResize","int32"),l=a.shape[0];F(4===o.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),F(2===a.rank&&4===a.shape[1],()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${a.shape}.`),F(1===u.rank&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${a.shape}.`),F(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),F(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),F("bilinear"===s||"nearest"===s,()=>`method must be bilinear or nearest, but was ${s}`);const c={image:o,boxes:a,boxInd:u},h={method:s,extrapolationValue:i,cropSize:r};return Bb.runKernel(Nf,c,h)}}),jv=we({flipLeftRight_(t){const e=ge(t,"image","flipLeftRight","float32");F(4===e.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const n={image:e};return Bb.runKernel(jf,n,{})}}),qv=we({grayscaleToRGB_(t){const e=ge(t,"image","grayscaleToRGB"),n=e.rank-1,r=e.shape[n];F(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),F(1===r,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);const s=new Array(e.rank);return s.fill(1,0,n),s[n]=3,fx(e,s)}}),Hv=we({rotateWithOffset_(t,e,n=0,r=.5){const s=ge(t,"image","rotateWithOffset","float32");F(4===s.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`);const i={image:s},o={radians:e,fillValue:n,center:r};return Bb.runKernel(Um,i,o)}}),Xv=we({nonMaxSuppression_(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const i=ge(t,"boxes","nonMaxSuppression","float32"),o=ge(e,"scores","nonMaxSuppression","float32"),a=Tr(i,o,n,r,s),u={maxOutputSize:n=a.maxOutputSize,iouThreshold:r=a.iouThreshold,scoreThreshold:s=a.scoreThreshold};return Bb.runKernel(Ip,{boxes:i,scores:o},u)}}),Kv=we({nonMaxSuppressionWithScore_(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const o=ge(t,"boxes","nonMaxSuppression"),a=ge(e,"scores","nonMaxSuppression"),u=Tr(o,a,n,r,s,i),l={boxes:o,scores:a},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:s=u.scoreThreshold,softNmsSigma:i=u.softNmsSigma},h=Bb.runKernel(Mp,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),Jv=we({nonMaxSuppressionPadded_(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const o=ge(t,"boxes","nonMaxSuppression"),a=ge(e,"scores","nonMaxSuppression"),u=Tr(o,a,n,r,s,null),l={boxes:o,scores:a},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:i},h=Bb.runKernel(Fp,l,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),Yv=we({resizeBilinear_(t,e,n=!1,r=!1){const s=ge(t,"images","resizeBilinear");F(3===s.rank||4===s.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),F(2===e.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),F(!1===r||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let i=s,o=!1;3===s.rank&&(o=!0,i=cg(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const a={images:i},u={alignCorners:n,halfPixelCenters:r,size:e},l=Bb.runKernel(Zp,a,u);return o?cg(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),Zv=we({resizeNearestNeighbor_(t,e,n=!1,r=!1){const s=ge(t,"images","resizeNearestNeighbor");F(3===s.rank||4===s.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),F(2===e.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),F("float32"===s.dtype||"int32"===s.dtype,()=>"`images` must have `int32` or `float32` as dtype"),F(!1===r||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let i=s,o=!1;3===s.rank&&(o=!0,i=cg(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const a={images:i},u={alignCorners:n,halfPixelCenters:r,size:e},l=Bb.runKernel(Jp,a,u);return o?cg(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),Qv=we({threshold_(t,e="binary",n=!1,r=.5){const s=ge(t,"image","threshold"),i=s.shape[0]*s.shape[1];let o,a,u,l,c=Jy(mr([r]),255);if(F(3===s.rank,()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`),F(3===s.shape[2]||1===s.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`),F("int32"===s.dtype||"float32"===s.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`),F("otsu"===e||"binary"===e,()=>`Method must be binary or otsu, but was ${e}`),3===s.shape[2]){[o,a,u]=hv(s,[1,1,1],-1);const t=Jy(o,.2989),e=Jy(a,.587),n=Jy(u,.114);l=Hy(Hy(t,e),n)}else l=t;"otsu"===e&&(c=((t,e)=>{let n,r,s,i,o,a,u=mr([-1]),l=mr([0]),c=mr([0]);for(let h=0;h<t.size-1;h++){n=mg(t,0,h+1),r=mg(t,h+1),o=Ky(ax(n),e),a=Ky(ax(r),e);const d=ax(Jy(n,pr(0,n.size)));s=Ky(d,ax(n));const f=Kn(r.shape,n.size),p=Hy(pr(0,r.size),f),m=Jy(r,p);i=Ky(ax(m),ax(r));const b=Rx(s,i),y=Rx(s,i),g=Jy(o,a);c=Jy(Jy(g,b),y);const x=yx(c,l);l=Kg(x,c,l),u=Kg(x,mr([h]),u)}return u})(kg(yy(Kw(l),"int32"),$e([]),256),i));const h=n?Nx(l,c):yx(l,c);return yy(Jy(h,255),"int32")}}),t$=we({transform_(t,e,n="nearest",r="constant",s=0,i){const o=ge(t,"image","transform","float32"),a=ge(e,"transforms","transform","float32");F(4===o.rank,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),F(2===a.rank&&(a.shape[0]===o.shape[0]||1===a.shape[0])&&8===a.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),F(null==i||2===i.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`);const u={image:o,transforms:a},l={interpolation:n,fillMode:r,fillValue:s,outputShape:i};return Bb.runKernel(Mm,u,l)}}),e$=we({bandPart_(t,e,n){F(e%1==0,()=>`bandPart(): numLower must be an integer, got ${e}.`),F(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=ge(t,"a","bandPart");F(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[i,o]=r.shape.slice(-2);if(e>i)throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${i}).`);if(n>o)throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);0>e&&(e=i),0>n&&(n=o);const a=cg(pr(0,i,1,"int32"),[-1,1]),u=pr(0,o,1,"int32"),l=Rx(a,u),c=Ix(Nx(l,sr(+e,"int32")),gx(l,sr(-n,"int32"))),h=hr([i,o],r.dtype);return cg(mv(kv(cg(r,[-1,i,o])).map(t=>Kg(c,t,h))),s)}}),n$=we({gramSchmidt_(t){let e;if(Array.isArray(t)){e=!1,F(null!=t&&t.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=t[0].shape[0];for(let e=1;e<t.length;++e)F(t[e].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`)}else e=!0,t=hv(t,t.shape[0],0).map(t=>pv(t,[0]));F(t.length<=t[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`);const n=[],r=t;for(let s=0;s<t.length;++s)n.push(Bb.tidy(()=>{let t=r[s];if(s>0)for(let e=0;s>e;++e){const r=Jy(ax(Jy(n[e],t)),n[e]);t=Rx(t,r)}return Ky(t,ux(t,"euclidean"))}));return e?mv(n,0):n}}),r$=we({qr_(t,e=!1){if(F(t.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`),2===t.rank)return Vr(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce((t,e)=>t*e),r=kv(cg(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),s=[],i=[];return r.forEach(t=>{const[n,r]=Vr(t,e);s.push(n),i.push(r)}),[cg(mv(s,0),t.shape),cg(mv(i,0),t.shape)]}}});var s$,i$;(i$=s$||(s$={}))[i$.NONE=0]="NONE",i$[i$.MEAN=1]="MEAN",i$[i$.SUM=2]="SUM",i$[i$.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS";const o$=we({computeWeightedLoss_(t,e,n=s$.SUM_BY_NONZERO_WEIGHTS){const r=ge(t,"losses","computeWeightedLoss");let s=null;null!=e&&(s=ge(e,"weights","computeWeightedLoss"));const i=null==s?r:Jy(r,s);if(n===s$.NONE)return i;if(n===s$.SUM)return ax(i);if(n===s$.MEAN){if(null==s)return Ux(i);{const t=r.size/s.size,e=Ky(ax(i),ax(s));return t>1?Ky(e,sr(t)):e}}if(n===s$.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Ky(ax(i),sr(r.size));{const t=Jy(s,dr(r.shape)),e=yy(ax(Jx(t,sr(0))),"float32");return Ky(ax(i),e)}}throw Error(`Unknown reduction: ${n}`)}}),a$=we({absoluteDifference_(t,e,n,r=s$.SUM_BY_NONZERO_WEIGHTS){const s=ge(t,"labels","absoluteDifference"),i=ge(e,"predictions","absoluteDifference");let o=null;null!=n&&(o=ge(n,"weights","absoluteDifference")),M(s.shape,i.shape,"Error in absoluteDifference: ");const a=Yy(Rx(s,i));return o$(a,o,r)}}),u$=we({cosineDistance_(t,e,n,r,s=s$.SUM_BY_NONZERO_WEIGHTS){const i=ge(t,"labels","cosineDistance"),o=ge(e,"predictions","cosineDistance");let a=null;null!=r&&(a=ge(r,"weights","cosineDistance")),M(i.shape,o.shape,"Error in cosineDistance: ");const u=sr(1),l=Rx(u,ax(Jy(i,o),n,!0));return o$(l,a,s)}}),l$=we({hingeLoss_(t,e,n,r=s$.SUM_BY_NONZERO_WEIGHTS){let s=ge(t,"labels","hingeLoss");const i=ge(e,"predictions","hingeLoss");let o=null;null!=n&&(o=ge(n,"weights","hingeLoss")),M(s.shape,i.shape,"Error in hingeLoss: ");const a=sr(1);s=Rx(Jy(sr(2),s),a);const u=Ww(Rx(a,Jy(s,i)));return o$(u,o,r)}}),c$=we({huberLoss_(t,e,n,r=1,s=s$.SUM_BY_NONZERO_WEIGHTS){const i=ge(t,"labels","huberLoss"),o=ge(e,"predictions","huberLoss");let a=null;null!=n&&(a=ge(n,"weights","huberLoss")),M(i.shape,o.shape,"Error in huberLoss: ");const u=sr(r),l=Yy(Rx(o,i)),c=Gx(l,u),h=Rx(l,c),d=Hy(Jy(sr(.5),ox(c)),Jy(u,h));return o$(d,a,s)}}),h$=we({logLoss_(t,e,n,r=1e-7,s=s$.SUM_BY_NONZERO_WEIGHTS){const i=ge(t,"labels","logLoss"),o=ge(e,"predictions","logLoss");let a=null;null!=n&&(a=ge(n,"weights","logLoss")),M(i.shape,o.shape,"Error in logLoss: ");const u=sr(1),l=sr(r),c=Ry(Jy(i,Sx(Hy(o,l)))),h=Jy(Rx(u,i),Sx(Hy(Rx(u,o),l))),d=Rx(c,h);return o$(d,a,s)}}),d$=we({meanSquaredError_(t,e,n,r=s$.SUM_BY_NONZERO_WEIGHTS){const s=ge(t,"labels","meanSquaredError"),i=ge(e,"predictions","meanSquaredError");let o=null;null!=n&&(o=ge(n,"weights","meanSquaredError")),M(s.shape,i.shape,"Error in meanSquaredError: ");const a=fv(s,i);return o$(a,o,r)}}),f$=we({sigmoidCrossEntropy_(t,e,n,r=0,s=s$.SUM_BY_NONZERO_WEIGHTS){let i=ge(t,"multiClassLabels","sigmoidCrossEntropy");const o=ge(e,"logits","sigmoidCrossEntropy");let a=null;if(null!=n&&(a=ge(n,"weights","sigmoidCrossEntropy")),M(i.shape,o.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=sr(r),e=sr(1),n=sr(.5);i=Hy(Jy(i,Rx(e,t)),Jy(n,t))}const u=((t,e)=>{const n=ge(t,"labels","sigmoidCrossEntropyWithLogits"),r=ge(e,"logits","sigmoidCrossEntropyWithLogits");M(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Ww(r),i=Jy(r,n),o=Ex(cx(Ry(Yy(r))));return Hy(Rx(s,i),o)})(i,o);return o$(u,a,s)}}),p$=we({softmaxCrossEntropy_(t,e,n,r=0,s=s$.SUM_BY_NONZERO_WEIGHTS){let i=ge(t,"onehotLabels","softmaxCrossEntropy");const o=ge(e,"logits","softmaxCrossEntropy");let a=null;if(null!=n&&(a=ge(n,"weights","softmaxCrossEntropy")),M(i.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const t=sr(r),e=sr(1),n=sr(i.shape[1]);i=Hy(Jy(i,Rx(e,t)),Ky(t,n))}const u=((t,e,n=-1)=>{if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);return ur((t,e,r)=>{const s=Ox(e,[n],!0),i=Rx(yy(e,"float32"),s);r([t,i]);const o=Ry(Jy(i,t));return{value:ax(o,[n]),gradFunc(t,e){const[r,s]=e,i=Qn(t.shape,[n]);return[Jy(cg(t,i),Rx(yy(r,"float32"),cx(s))),Jy(cg(t,i),Rx(cx(s),yy(r,"float32")))]}}})(t,e)})(i,o);return o$(u,a,s)}}),m$=we({sparseFillEmptyRows_(t,e,n,r){const s=ge(t,"indices","sparseFillEmptyRows","int32"),i=ge(e,"values","sparseFillEmptyRows"),o=ge(n,"denseShape","sparseFillEmptyRows","int32"),a=ge(r,"defaultValue","sparseFillEmptyRows",i.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==i.rank)throw new Error(`Values should be Tensor1D but received shape ${i.shape}`);if(1!==o.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(0!==a.rank)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);const u={indices:s,values:i,denseShape:o,defaultValue:a},l=Bb.runKernel(xm,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}}),b$=we({sparseReshape_(t,e,n){const r=ge(t,"inputIndices","sparseReshape","int32"),s=ge(e,"inputShape","sparseReshape","int32"),i=ge(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`New shape should be Tensor1D but received shape ${i.shape}`);const o={inputIndices:r,inputShape:s,newShape:i},a=Bb.runKernel(wm,o);return{outputIndices:a[0],outputShape:a[1]}}}),y$=we({sparseSegmentMean_(t,e,n){const r=ge(t,"data","sparseSegmentMean"),s=ge(e,"indices","sparseSegmentMean","int32"),i=ge(n,"segmentIds","sparseSegmentMean","int32");if(1>r.rank)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==i.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${i.shape}`);const o={data:r,indices:s,segmentIds:i};return Bb.runKernel(vm,o)}}),g$=we({sparseSegmentSum_(t,e,n){const r=ge(t,"data","sparseSegmentSum"),s=ge(e,"indices","sparseSegmentSum","int32"),i=ge(n,"segmentIds","sparseSegmentSum","int32");if(1>r.rank)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==i.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${i.shape}`);const o={data:r,indices:s,segmentIds:i};return Bb.runKernel($m,o)}}),x$=we({stringNGrams_(t,e,n,r,s,i,o,a){const u=ge(t,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=ge(e,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:s,rightPad:i,padWidth:o,preserveShortSequences:a},h={data:u,dataSplits:l},d=Bb.runKernel(Em,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}}),w$=we({stringSplit_(t,e,n=!0){const r=ge(t,"input","stringSplit","string"),s=ge(e,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const i={skipEmpty:n},o={input:r,delimiter:s},a=Bb.runKernel(Tm,o,i);return{indices:a[0],values:a[1],shape:a[2]}}}),v$=we({stringToHashBucketFast_(t,e){const n=ge(t,"input","stringToHashBucketFast","string"),r={numBuckets:e};if(0>=e)throw new Error("Number of buckets must be at least 1");const s={input:n};return Bb.runKernel(_m,s,r)}}),$$={fft:uv,ifft:lv,rfft:dv,irfft:cv},k$={hammingWindow:Bv,hannWindow:zv,frame:Wv,stft:Uv},N$={flipLeftRight:jv,grayscaleToRGB:qv,resizeNearestNeighbor:Zv,resizeBilinear:Yv,rotateWithOffset:Hv,cropAndResize:Gv,nonMaxSuppression:Xv,nonMaxSuppressionAsync(t,e,n){return Jh(this,arguments,function*(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const i=ge(t,"boxes","nonMaxSuppressionAsync"),o=ge(e,"scores","nonMaxSuppressionAsync"),a=Tr(i,o,n,r,s);n=a.maxOutputSize,r=a.iouThreshold,s=a.scoreThreshold;const u=yield Promise.all([i.data(),o.data()]),l=u[0],c=u[1],{selectedIndices:h}=Ar(l,c,n,r,s);return i!==t&&i.dispose(),o!==e&&o.dispose(),mr(h,"int32")})},nonMaxSuppressionWithScore:Kv,nonMaxSuppressionWithScoreAsync(t,e,n){return Jh(this,arguments,function*(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const o=ge(t,"boxes","nonMaxSuppressionAsync"),a=ge(e,"scores","nonMaxSuppressionAsync"),u=Tr(o,a,n,r,s,i);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,i=u.softNmsSigma;const l=yield Promise.all([o.data(),a.data()]),c=l[0],h=l[1],{selectedIndices:d,selectedScores:f}=Ir(c,h,n,r,s,i);return o!==t&&o.dispose(),a!==e&&a.dispose(),{selectedIndices:mr(d,"int32"),selectedScores:mr(f)}})},nonMaxSuppressionPadded:Jv,nonMaxSuppressionPaddedAsync(t,e,n){return Jh(this,arguments,function*(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const o=ge(t,"boxes","nonMaxSuppressionAsync"),a=ge(e,"scores","nonMaxSuppressionAsync"),u=Tr(o,a,n,r,s,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[d,f]=yield Promise.all([o.data(),a.data()]),{selectedIndices:p,validOutputs:m}=Or(d,f,l,c,h,i);return o!==t&&o.dispose(),a!==e&&a.dispose(),{selectedIndices:mr(p,"int32"),validOutputs:sr(m,"int32")}})},threshold:Qv,transform:t$},C$={bandPart:e$,gramSchmidt:n$,qr:r$},S$={absoluteDifference:a$,computeWeightedLoss:o$,cosineDistance:u$,hingeLoss:l$,huberLoss:c$,logLoss:h$,meanSquaredError:d$,sigmoidCrossEntropy:f$,softmaxCrossEntropy:p$},E$={sparseFillEmptyRows:m$,sparseReshape:b$,sparseSegmentMean:y$,sparseSegmentSum:g$},T$={stringNGrams:x$,stringSplit:w$,stringToHashBucketFast:v$};class _$ extends Wy{minimize(t,e=!1,n){const{value:r,grads:s}=this.computeGradients(t,n);if(null!=n){const t=n.map(t=>({name:t.name,tensor:s[t.name]}));this.applyGradients(t)}else this.applyGradients(s);return nn(s),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return ar(t,e)}dispose(){null!=this.iterations_&&nn(this.iterations_)}saveIterations(){return Jh(this,null,function*(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:sr(this.iterations_,"int32")}})}getWeights(){return Jh(this,null,function*(){throw new Error("getWeights() is not implemented for this optimizer yet.")})}setWeights(t){return Jh(this,null,function*(){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)})}extractIterations(t){return Jh(this,null,function*(){return this.iterations_=(yield t[0].tensor.data())[0],t.slice(1)})}}Object.defineProperty(_$,Symbol.hasInstance,{value(t){return null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients}});class R$ extends _${constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Bb.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Bb.registeredVariables[e],s=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${e}/accum_grad`,variable:en(()=>Jg(r).variable(s))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${e}/accum_var`,variable:en(()=>Jg(r).variable(s))});const i=Array.isArray(t)?t[n].tensor:t[e];if(null==i)return;const o=this.accumulatedGrads[n].variable,a=this.accumulatedUpdates[n].variable;en(()=>{const t=Hy(Jy(o,this.rho),Jy(ox(i),1-this.rho)),e=Jy(Ky(ix(Hy(a,this.epsilon)),ix(Hy(o,this.epsilon))),i),n=Hy(Jy(a,this.rho),Jy(ox(e),1-this.rho));o.assign(t),a.assign(n);const s=Hy(Jy(e,-this.learningRate),r);r.assign(s)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(nn(this.accumulatedGrads.map(t=>t.variable)),nn(this.accumulatedUpdates.map(t=>t.variable)))}getWeights(){return Jh(this,null,function*(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[yield this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(t){return Jh(this,null,function*(){const e=(t=yield this.extractIterations(t)).length/2,n=!1;this.accumulatedGrads=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)})),this.accumulatedUpdates=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)}))})}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}R$.className="Adadelta",An(R$);class A$ extends _${constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Bb.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:`${e}/accumulator`,variable:en(()=>Kn(r.shape,this.initialAccumulatorValue).variable(t))}}const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const i=this.accumulatedGrads[n].variable;en(()=>{const t=Hy(i,ox(s));i.assign(t);const e=Hy(Jy(Ky(s,ix(Hy(t,Bb.backend.epsilon()))),-this.learningRate),r);r.assign(e)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&nn(this.accumulatedGrads.map(t=>t.variable))}getWeights(){return Jh(this,null,function*(){return[yield this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(t){return Jh(this,null,function*(){t=yield this.extractIterations(t),this.accumulatedGrads=t.map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))})}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}A$.className="Adagrad",An(A$);class O$ extends _${constructor(t,e,n,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],en(()=>{this.accBeta1=sr(e).variable(),this.accBeta2=sr(n).variable()}),null==r&&(this.epsilon=Bb.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);en(()=>{const n=Rx(1,this.accBeta1),r=Rx(1,this.accBeta2);e.forEach((e,s)=>{const i=Bb.registeredVariables[e],o=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${e}/m`,variable:en(()=>Jg(i).variable(o))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${e}/v`,variable:en(()=>Jg(i).variable(o))});const a=Array.isArray(t)?t[s].tensor:t[e];if(null==a)return;const u=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,c=Hy(Jy(u,this.beta1),Jy(a,1-this.beta1)),h=Hy(Jy(l,this.beta2),Jy(ox(a),1-this.beta2)),d=Ky(c,n),f=Ky(h,r);u.assign(c),l.assign(h);const p=Hy(Jy(Ky(d,Hy(ix(f),this.epsilon)),-this.learningRate),i);i.assign(p)}),this.accBeta1.assign(Jy(this.accBeta1,this.beta1)),this.accBeta2.assign(Jy(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&nn(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedSecondMoment&&nn(this.accumulatedSecondMoment.map(t=>t.variable))}getWeights(){return Jh(this,null,function*(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[yield this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(t){return Jh(this,null,function*(){t=yield this.extractIterations(t),en(()=>{this.accBeta1.assign(sx(this.beta1,this.iterations_+1)),this.accBeta2.assign(sx(this.beta2,this.iterations_+1))});const e=t.length/2,n=!1;this.accumulatedFirstMoment=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)})),this.accumulatedSecondMoment=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)}))})}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}O$.className="Adam",An(O$);class I$ extends _${constructor(t,e,n,r=null,s=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],en(()=>{this.iteration=sr(0).variable(),this.accBeta1=sr(e).variable()}),null==r&&(this.epsilon=Bb.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);en(()=>{const n=Rx(1,this.accBeta1),r=Ky(-this.learningRate,Hy(Jy(this.iteration,this.decay),1));e.forEach((e,s)=>{const i=Bb.registeredVariables[e],o=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${e}/m`,variable:Jg(i).variable(o)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${e}/v`,variable:Jg(i).variable(o)});const a=Array.isArray(t)?t[s].tensor:t[e];if(null==a)return;const u=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,c=Hy(Jy(u,this.beta1),Jy(a,1-this.beta1)),h=Jy(l,this.beta2),d=Yy(a),f=Wx(h,d);u.assign(c),l.assign(f);const p=Hy(Jy(Ky(r,n),Ky(c,Hy(f,this.epsilon))),i);i.assign(p)}),this.iteration.assign(Hy(this.iteration,1)),this.accBeta1.assign(Jy(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&nn(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedWeightedInfNorm&&nn(this.accumulatedWeightedInfNorm.map(t=>t.variable))}getWeights(){return Jh(this,null,function*(){throw new Error("getWeights() is not implemented for Adamax yet.")})}setWeights(t){return Jh(this,null,function*(){throw new Error("setWeights() is not implemented for Adamax yet.")})}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}I$.className="Adamax",An(I$);class F$ extends _${constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const s=Bb.registeredVariables[e];en(()=>{const t=Hy(Jy(this.c,r),s);s.assign(t)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=rn(sr(-t))}dispose(){this.c.dispose()}getWeights(){return Jh(this,null,function*(){return[yield this.saveIterations()]})}setWeights(t){return Jh(this,null,function*(){if(0!==(t=yield this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")})}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}F$.className="SGD",An(F$);class M$ extends F${constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=sr(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Bb.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:`${e}/momentum`,variable:en(()=>Jg(r).variable(t))}}const s=this.accumulations[n].variable,i=Array.isArray(t)?t[n].tensor:t[e];null!=i&&en(()=>{let t;const e=Hy(Jy(this.m,s),i);t=this.useNesterov?Hy(Jy(this.c,Hy(i,Jy(e,this.m))),r):Hy(Jy(this.c,e),r),s.assign(e),r.assign(t)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&nn(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}getWeights(){return Jh(this,null,function*(){return[yield this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(t){return Jh(this,null,function*(){t=yield this.extractIterations(t),this.accumulations=t.map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))})}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}M$.className="Momentum",An(M$);class D$ extends _${constructor(t,e=.9,n=0,r=null,s=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=Bb.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Bb.registeredVariables[e],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${e}/rms`,variable:en(()=>Jg(r).variable(s))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${e}/momentum`,variable:en(()=>Jg(r).variable(s))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${e}/mg`,variable:en(()=>Jg(r).variable(s))});const i=Array.isArray(t)?t[n].tensor:t[e];if(null==i)return;const o=this.accumulatedMeanSquares[n].variable,a=this.accumulatedMoments[n].variable;en(()=>{const t=Hy(Jy(o,this.decay),Jy(ox(i),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,s=Hy(Jy(e,this.decay),Jy(i,1-this.decay)),u=Ky(Jy(i,this.learningRate),ix(Rx(t,Hy(ox(s),this.epsilon)))),l=Hy(Jy(a,this.momentum),u);o.assign(t),e.assign(s),a.assign(l);const c=Rx(r,l);r.assign(c)}else{const t=Hy(Jy(o,this.decay),Jy(ox(i),1-this.decay)),e=Hy(Jy(a,this.momentum),Ky(Jy(i,this.learningRate),ix(Hy(t,this.epsilon))));o.assign(t),a.assign(e);const n=Rx(r,e);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&nn(this.accumulatedMeanSquares.map(t=>t.variable)),null!=this.accumulatedMeanGrads&&this.centered&&nn(this.accumulatedMeanGrads.map(t=>t.variable)),null!=this.accumulatedMoments&&nn(this.accumulatedMoments.map(t=>t.variable))}getWeights(){return Jh(this,null,function*(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[yield this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(t){return Jh(this,null,function*(){t=yield this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)})),this.accumulatedMoments=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)})))})}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}D$.className="RMSProp",An(D$);class L${static sgd(t){return new F$(t)}static momentum(t,e,n=!1){return new M$(t,e,n)}static rmsprop(t,e=.9,n=0,r=null,s=!1){return new D$(t,e,n,r,s)}static adam(t=.001,e=.9,n=.999,r=null){return new O$(t,e,n,r)}static adadelta(t=.001,e=.95,n=null){return new R$(t,e,n)}static adamax(t=.002,e=.9,n=.999,r=null,s=0){return new I$(t,e,n,r,s)}static adagrad(t,e=.1){return new A$(t,e)}}const V$={sgd:L$.sgd,momentum:L$.momentum,adadelta:L$.adadelta,adagrad:L$.adagrad,rmsprop:L$.rmsprop,adamax:L$.adamax,adam:L$.adam},P$="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:t=>t();var B$,z$;(z$=B$||(B$={}))[z$.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",z$[z$.VALUE_ROWIDS=1]="VALUE_ROWIDS",z$[z$.ROW_LENGTHS=2]="ROW_LENGTHS",z$[z$.ROW_SPLITS=3]="ROW_SPLITS",z$[z$.ROW_LIMITS=4]="ROW_LIMITS",z$[z$.ROW_STARTS=5]="ROW_STARTS";const W$=1.7580993408473768,U$=1.0507009873554805,G$=.3275911,j$=.254829592,q$=-.284496736,H$=1.421413741,X$=-1.453152027,K$=1.061405429,J$="->",Y$=/->/g,Z$=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:Ss,computeOutShape:Cs,segOpComputeOptimalWindowSize:Ns},Symbol.toStringTag,{value:"Module"})),Q$=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:j$,ERF_A2:q$,ERF_A3:H$,ERF_A4:X$,ERF_A5:K$,ERF_P:G$,PARALLELIZE_THRESHOLD:30,get RowPartitionType(){return B$},SELU_SCALE:U$,SELU_SCALEALPHA:W$,applyActivation:Er,assertAndGetBroadcastShape:ln,assertAxesAreInnerMostDims:tr,assertParamsConsistent:Br,assignToTypedArray:ss,axesAreInnerMostDims:Jn,calculateShapes:mn,checkEinsumDimSizes:ls,checkPadOnDimRoundingMode:Xn,combineLocations:Yn,combineRaggedTensorToTensorShapes:Wr,complexWithEvenIndex:es,complexWithOddIndex:ns,computeConv2DInfo:Vn,computeConv3DInfo:Pn,computeDefaultPad:Bn,computeDilation2DInfo:Mn,computeOptimalWindowSize:qr,computeOutAndReduceShapes:Zn,computeOutShape:zr,computePool2DInfo:Dn,computePool3DInfo:Ln,convertConv2DDataFormat:Hn,decodeEinsumEquation:as,eitherStridesOrDilationsAreOne:qn,expandShapeToKeepDim:Qn,exponent:os,exponents:is,fromStringArrayToUint8:Ts,fromUint8ToStringArray:Es,getAxesPermutation:er,getBroadcastDims:an,getComplexWithIndex:rs,getEinsumComputePath:cs,getEinsumPermutation:us,getFusedBiasGradient:Sr,getFusedDyActivation:Cr,getImageCenter:Hr,getInnerMostAxes:rr,getPermuted:Kr,getRaggedRank:Gr,getReductionAxes:un,getReshaped:Xr,getReshapedPermuted:Jr,getRowPartitionTypesHelper:Ur,getSliceBeginCoords:Yr,getSliceSize:Zr,getSparseFillEmptyRowsIndicesDenseShapeMismatch:ps,getSparseFillEmptyRowsNegativeIndexErrorMessage:ms,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:bs,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero",getSparseReshapeInputOutputMismatchErrorMessage:ws,getSparseReshapeInputOutputMultipleErrorMessage:xs,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:ys,getSparseReshapeNegativeOutputDimErrorMessage:gs,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:ks,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>"segment ids must be >= 0",getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:vs,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:$s,getUndoAxesPermutation:nr,isIdentityPermutation:hs,log(...t){!gt().getBool("IS_TEST")&&gt().getBool("PROD")},mergeRealAndImagArrays:Qr,prepareAndValidate:dn,prepareSplitSize:fs,segment_util:Z$,shouldFuse:Iv,slice_util:zy,splitRealAndImagArrays:ts,tupleValuesAreOne:jn,upcastType:re,validateDefaultValueShape:jr,validateInput:pn,validateUpdateShape:fn,warn:vt},Symbol.toStringTag,{value:"Module"})),tk=Object.freeze(Object.defineProperty({__proto__:null,nonMaxSuppressionV3Impl:Ar,nonMaxSuppressionV4Impl:Or,nonMaxSuppressionV5Impl:Ir,whereImpl:$r},Symbol.toStringTag,{value:"Module"})),ek={kernelName:Vd,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return Jy(t,bv(yy(n,"float32"),-1))}}}},nk={kernelName:Pd,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){const e=ox(yy(n,"float32")),r=ix(Rx(sr(1),e));return Ry(Ky(t,r))}}}},rk={kernelName:Bd,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){const e=ix(Rx(ox(yy(n,"float32")),1));return Ky(t,e)}}}},sk={kernelName:zd,inputsToSave:["a","b"],gradFunc(t,e){const[n,r]=e,s=ln(n.shape,r.shape);return{a(){let e=t;const r=un(n.shape,s);return r.length>0&&(e=ax(e,r)),cg(e,n.shape)},b(){let e=t;const n=un(r.shape,s);return n.length>0&&(e=ax(e,n)),cg(e,r.shape)}}}},ik={kernelName:Wd,saveAllInputs:!0,gradFunc(t,e){const n={};return e.forEach((e,r)=>{n[r]=()=>t.clone()}),n}},ok={kernelName:jd,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return Jg(n)}}}},ak={kernelName:qd,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return Jg(n)}}}},uk={kernelName:Hd,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return Ky(t,ix(Rx(sr(1),ox(yy(n,"float32")))))}}}},lk={kernelName:Xd,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){const e=ix(Hy(sr(1),ox(yy(n,"float32"))));return Ky(t,e)}}}},ck={kernelName:Yd,inputsToSave:["a","b"],gradFunc(t,e){const[n,r]=e,s=ln(n.shape,r.shape);return{a(){const e=Hy(ox(n),ox(r));let i=Jy(t,Ky(r,e));const o=un(n.shape,s);return o.length>0&&(i=ax(i,o)),cg(i,n.shape)},b(){const e=Hy(ox(n),ox(r));let i=Ry(Jy(t,Ky(n,e)));const o=un(r.shape,s);return o.length>0&&(i=ax(i,o)),cg(i,r.shape)}}}},hk={kernelName:Kd,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return Ky(t,Hy(ox(yy(n,"float32")),1))}}}},dk={kernelName:Jd,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return Ky(t,Rx(sr(1),ox(yy(n,"float32"))))}}}},fk=we({avgPool3dGrad_(t,e,n,r,s,i){const o=ge(t,"dy","avgPool3dGrad"),a=ge(e,"input","avgPool3dGrad");let u=o,l=a,c=!1;4===a.rank&&(c=!0,u=cg(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),l=cg(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),F(5===u.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),F(5===l.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`),Xn("avgPool3dGrad",s,i);const h={dy:u,input:l},d={filterSize:n,strides:r,pad:s,dimRoundingMode:i},f=Bb.runKernel(ef,h,d);return c?cg(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),pk={kernelName:tf,inputsToSave:["x"],gradFunc(t,e,n){const[r]=e,{filterSize:s,strides:i,pad:o,dimRoundingMode:a}=n;return{x(){return fk(t,r,s,i,o,a)}}}},mk=we({avgPoolGrad_(t,e,n,r,s){const i=ge(t,"dy","avgPoolGrad"),o=ge(e,"input","avgPoolGrad");F(o.rank===i.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${i.rank})`);let a=o,u=i,l=!1;3===o.rank&&(l=!0,a=cg(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=cg(i,[1,i.shape[0],i.shape[1],i.shape[2]])),F(4===u.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),F(4===a.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);const c={dy:u,input:a},h={filterSize:n,strides:r,pad:s},d=Bb.runKernel(Qd,c,h);return l?cg(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),bk={kernelName:Zd,inputsToSave:["x"],gradFunc(t,e,n){const[r]=e,{filterSize:s,strides:i,pad:o}=n;return{x(){return mk(t,r,s,i,o)}}}},yk={kernelName:nf,inputsToSave:["a","b"],gradFunc(t,e,n){const[r,s]=e,{transposeA:i,transposeB:o}=n;return i||o?!i&&o?{a(){return Ey(t,s,!1,!1)},b(){return Ey(t,r,!0,!1)}}:i&&!o?{a(){return Ey(s,t,!1,!0)},b(){return Ey(r,t,!1,!1)}}:{a(){return Ey(s,t,!0,!0)},b(){return Ey(t,r,!0,!0)}}:{a(){return Ey(t,s,!1,!0)},b(){return Ey(r,t,!0,!1)}}}},gk={kernelName:rf,gradFunc(t,e,n){const{blockShape:r,crops:s}=n;return{x(){return sw(t,r,s)}}}},xk={kernelName:of,gradFunc(t,e,n){const r=n,s=r.inputShape,i=r.shape,o=Array.from(i);for(let u=s.length-1;u>=0;u--)if(s[u]===i[u])o[u]=1;else if(1!==s[u])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${i}].`);const a=[];for(let u=0;u<o.length;u++)o[u]>1&&a.push(u);return{x(){return ax(t,a,!0)}}}},wk={kernelName:uf,gradFunc(t){return{x(){return t.clone()}}}},vk={kernelName:lf,gradFunc(t){return{x(){return Jg(t)}}}},$k={kernelName:cf,inputsToSave:["x"],gradFunc(t,e,n){const[r]=e,{clipValueMin:s,clipValueMax:i}=n;return{x(){return Kg(Ix(gx(r,s),Nx(r,i)),t,Jg(t))}}}},kk={kernelName:df,inputsToSave:["x"],gradFunc:ek.gradFunc},Nk={kernelName:ff,saveAllInputs:!0,gradFunc(t,e,n){const r=e.map(t=>t.shape),{axis:s}=n,i=j(s,e[0].shape)[0],o=r.map(t=>t[i]);return hv(t,o,i).map(t=>()=>t)}},Ck={kernelName:pf,inputsToSave:["x","filter"],gradFunc(t,e,n){const[r,s]=e,{dilations:i,strides:o,pad:a,dataFormat:u}=n;return F(jn(i),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`),{x(){return Fg(r.shape,t,s,o,a,u)},filter(){return Ov(r,t,s.shape,o,a,u)}}}},Sk={kernelName:bf,inputsToSave:["dy","filter"],gradFunc(t,e,n){const[r,s]=e,{strides:i,pad:o,dataFormat:a,dimRoundingMode:u}=n;return{dy(){return Og(t,s,i,o,a,1,u)},filter(){return Ov(t,r,s.shape,i,o,a,u)}}}},Ek=we({conv3DBackpropFilter_(t,e,n,r,s){let i=t;4===t.rank&&(i=cg(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let o=e;4===o.rank&&(o=cg(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),F(5===i.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`),F(5===o.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`),F(5===n.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),F(i.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`),F(o.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`);const a={x:i,dy:o},u={strides:r,pad:s,filterShape:n};return Bb.runKernel(gf,a,u)}}),Tk={kernelName:yf,inputsToSave:["x","filter"],gradFunc(t,e,n){const{dilations:r,strides:s,pad:i}=n;F(jn(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[o,a]=e;return{x(){return Lg(o.shape,t,a,s,i)},filter(){return Ek(o,t,a.shape,s,i)}}}},_k={kernelName:wf,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return Jy(Ry(ev(yy(n,"float32"))),t)}}}},Rk={kernelName:vf,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return Jy(nv(yy(n,"float32")),t)}}}},Ak={kernelName:kf,inputsToSave:["x"],gradFunc(t,e,n){const[r]=e,{axis:s,exclusive:i,reverse:o}=n;return{x(){const e=er([s],r.rank);let n=Wg(t,s,i,!o);return null!=e&&(n=Oy(n,e)),n}}}},Ok={kernelName:Ef,inputsToSave:["x","filter"],gradFunc(t,e,n){const{dilations:r,strides:s,pad:i,dimRoundingMode:o}=n,a=null==r?[1,1]:r;F(jn(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[u,l]=e;return F(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),F(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),F(u.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),F(qn(s,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${a}'.`),Xn("depthwiseConv2d",i,o),{x(){return Dv(u.shape,t,l,s,i,a,o)},filter(){return Mv(u,t,l.shape,s,i,a,o)}}}},Ik={kernelName:Af,inputsToSave:["x","filter"],gradFunc(t,e,n){const[r,s]=e,i={x:r,filter:s,dy:t},o={x:r,filter:s,dy:t};return{x(){return Bb.runKernel(Of,i,n)},filter(){return Bb.runKernel(If,o,n)}}}},Fk={kernelName:Df,outputsToSave:[!0],gradFunc(t,e){const[n]=e,r={dy:t,y:n};return{x(){return Bb.runKernel(Lf,r)}}}},Mk={kernelName:Vf,inputsToSave:["x"],gradFunc(t,e){const[n]=e,r=Jy(cx(Ry(ox(n))),2/Math.sqrt(Math.PI));return{x(){return Jy(t,r)}}}},Dk={kernelName:Bf,outputsToSave:[!0],gradFunc(t,e){const[n]=e;return{x(){return Jy(t,n)}}}},Lk={kernelName:zf,inputsToSave:["input"],gradFunc(t,e){const[n]=e;return{input(){return cg(t,n.shape)}}}},Vk={kernelName:Wf,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return Jy(t,cx(n))}}}},Pk={kernelName:qf,gradFunc(t){return{x(){return Jg(t)}}}},Bk={kernelName:Hf,inputsToSave:["a","b"],gradFunc(t,e){const[n,r]=e,s=ln(n.shape,r.shape);return{a(){const e=Ky(t,yy(r,"float32")),i=un(n.shape,s);return i.length>0?cg(ax(e,i),n.shape):e},b(){let e=Jy(t,yy(n,"float32"));const i=un(r.shape,s);i.length>0&&(e=cg(ax(e,i),r.shape));const o=ox(r);return Ry(Ky(e,yy(o,"float32")))}}}},zk={kernelName:Xf,inputsToSave:["x","mean","variance","scale"],gradFunc(t,e,n){const{varianceEpsilon:r}=n,[s,i,o,a]=e,u=null==a?sr(1):a,l=un(i.shape,s.shape),c=[];if(1===i.rank){for(let t=0;t<s.shape.length-1;++t)c.push(s.shape[t]);c.push(1)}const h=Rx(s,i),d=Jy(t,u),f=Jw(Hy(o,sr(r))),p=Jy(Jy(Jy(f,f),f),sr(-.5));return{x(){return 1===i.rank?cg(Jy(Jy(t,fx(cg(f,[1,1,1,i.shape[0]]),c)),u),s.shape):cg(Jy(Jy(t,f),u),s.shape)},mean(){let t=Jy(Jy(f,sr(-1)),d);return 1===i.rank&&(t=ax(t,l)),cg(t,i.shape)},variance(){let t=Jy(Jy(p,h),d);return 1===i.rank&&(t=ax(t,l)),cg(t,i.shape)},scale(){const e=Jy(h,f);let n=Jy(t,e);return 1===i.rank&&(n=ax(n,l)),cg(n,i.shape)},offset(){let e=t;return 1===i.rank&&(e=ax(e,l)),cg(e,i.shape)}}}},Wk={kernelName:Kf,inputsToSave:["x","indices"],gradFunc(t,e,n){const[r,s]=e,{axis:i}=n,o=j(i,r.shape)[0];return{x(){const e=r.shape,n=s.size,a=e.slice(0,o),u=a.length,l=e.slice(i,e.length).slice(1),c=l.length,h=_s(0,u),d=_s(u+1,u+1+c),f=Rs([a,[n],l]),p=cg(t,f),m=cg(s,[n]),b=Rs([[u],h,d]),y=Oy(p,b);let g=$v(y,m,r.shape[o]);const x=nr(b);return g=Oy(g,x),g},indices(){return s}}}},Uk={kernelName:Zf,inputsToSave:["a","b"],gradFunc(t,e){const[n,r]=e;return{a(){return Jg(n)},b(){return Jg(r)}}}},Gk={kernelName:Qf,gradFunc(t){return{x(){return yy(t,"float32")}}}},jk={kernelName:np,gradFunc(t){return{x(){return Jg(t)}}}},qk={kernelName:rp,gradFunc(t){return{x(){return Jg(t)}}}},Hk={kernelName:sp,gradFunc(t){return{x(){return Jg(t)}}}},Xk={kernelName:ip,inputsToSave:["x"],gradFunc(t,e,n){const[r]=e,{alpha:s}=n,i=yx(r,0);return{x(){return Kg(i,t,Jy(t,s))}}}},Kk={kernelName:cp,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return Ky(t,Hy(n,1))}}}},Jk={kernelName:lp,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return Ky(t,yy(n,"float32"))}}}},Yk={kernelName:pp,inputsToSave:[],outputsToSave:[!0],gradFunc(t,e,n){const[r]=e,{axis:s}=n;return{logits(){const e=cx(r);return Rx(t,Jy(ax(t,s,!0),e))}}}},Zk=we({localResponseNormalizationBackprop_(t,e,n,r=5,s=1,i=1,o=.5){const a={x:t,y:e,dy:n},u={depthRadius:r,bias:s,alpha:i,beta:o};return Bb.runKernel(bp,a,u)}}),Qk={kernelName:mp,inputsToSave:["x"],outputsToSave:[!0],gradFunc(t,e,n){const[r,s]=e,{depthRadius:i,bias:o,alpha:a,beta:u}=n;return{x(){return Zk(r,s,t,i,o,a,u)}}}},tN={kernelName:yp,inputsToSave:["x"],outputsToSave:[!0],gradFunc(t,e,n){const r=n,{reductionIndices:s}=r,i=e[0],o=As(t,e[1],i,j(s,i.shape));return{x(){return o.x()}}}},eN={kernelName:gp,inputsToSave:["a","b"],gradFunc(t,e){const[n,r]=e;return{a(){return Jy(t,yy(gx(n,r),"float32"))},b(){return Jy(t,yy(kx(n,r),"float32"))}}}},nN=we({maxPool3dGrad_(t,e,n,r,s,i,o){const a=ge(t,"dy","maxPool3dGrad"),u=ge(e,"input","maxPool3dGrad"),l=ge(n,"output","maxPool3dGrad");let c=a,h=u,d=l,f=!1;4===u.rank&&(f=!0,c=cg(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),h=cg(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=cg(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),F(5===c.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),F(5===h.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),F(5===d.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),Xn("maxPool3dGrad",i,o);const p={dy:c,input:h,output:d},m={filterSize:r,strides:s,pad:i,dimRoundingMode:o},b=Bb.runKernel($p,p,m);return f?cg(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}}),rN={kernelName:vp,inputsToSave:["x"],outputsToSave:[!0],gradFunc(t,e,n){const[r,s]=e,{filterSize:i,strides:o,pad:a,dimRoundingMode:u}=n;return{x(){return nN(t,r,s,i,o,a,u)}}}},sN=we({maxPoolGrad_(t,e,n,r,s,i,o){const a=ge(t,"dy","maxPoolGrad"),u=ge(e,"input","maxPoolGrad"),l=ge(n,"output","maxPoolGrad");F(u.rank===a.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${a.rank})`),F(4===a.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),F(4===u.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),Xn("maxPoolGrad",i,o);const c={dy:a,input:u,output:l},h={filterSize:r,strides:s,pad:i,dimRoundingMode:o};return Bb.runKernel(wp,c,h)}}),iN={kernelName:xp,inputsToSave:["x"],outputsToSave:[!0],gradFunc(t,e,n){const[r,s]=e,{filterSize:i,strides:o,pad:a}=n;return{x(){return sN(t,r,s,i,o,a)}}}},oN={kernelName:Np,inputsToSave:["x"],gradFunc(t,e,n){const[r]=e,{axis:s}=n,i=j(s,r.shape),o=V(Zn(r.shape,i)[1]);return{x(){const e=r.shape.slice();i.forEach(t=>{e[t]=1});const n=cg(t,e);return Ky(Jy(n,dr(r.shape,"float32")),o)}}}},aN={kernelName:Cp,inputsToSave:["x"],outputsToSave:[!0],gradFunc(t,e,n){const r=n,{axis:s}=r,[i,o]=e,a=As(t,o,i,j(s,i.shape));return{x(){return a.x()}}}},uN={kernelName:Sp,inputsToSave:["a","b"],gradFunc(t,e){const[n,r]=e;return{a(){return Jy(t,yy(Nx(n,r),"float32"))},b(){return Jy(t,yy(yx(n,r),"float32"))}}}},lN={kernelName:Ep,inputsToSave:["x"],gradFunc(t,e,n){const r=e[0],{paddings:s}=n,i=s.map(t=>t[0]);return{x(){return mg(t,i,r.shape)}}}},cN={kernelName:Tp,inputsToSave:["a","b"],gradFunc(t,e){const[n,r]=e,s=ln(n.shape,r.shape);return{a(){const e=un(n.shape,s);return e.length>0?cg(ax(t,e),n.shape):t},b(){const e=Jy(t,Ry(mx(Ky(n,r)))),i=un(r.shape,s);return i.length>0?cg(ax(e,i),r.shape):e}}}},hN={kernelName:Rp,inputsToSave:["a","b"],gradFunc(t,e){const[n,r]=e,s=ln(n.shape,r.shape);return{a(){const e=Jy(t,yy(r,"float32")),i=un(n.shape,s);return i.length>0?cg(ax(e,i),n.shape):e},b(){const e=Jy(t,yy(n,"float32")),i=un(r.shape,s);return i.length>0?cg(ax(e,i),r.shape):e}}}},dN={kernelName:Ap,gradFunc(t){return{x(){return Ry(t)}}}},fN={kernelName:Lp,inputsToSave:["indices"],gradFunc(t,e){const n=e[0];return{indices(){return hr(n.shape,"float32")}}}},pN={kernelName:Dp,gradFunc(t){return{x(){return Jg(t)}}}},mN={kernelName:Vp,saveAllInputs:!0,gradFunc(t,e,n){const{axis:r}=n;return kv(t,r).map(t=>()=>t)}},bN={kernelName:Pp,inputsToSave:["x"],gradFunc(t,e,n){const r=e[0],{paddings:s}=n,i=s.map(t=>t[0]);return{x(){return mg(t,i,r.shape)}}}},yN={kernelName:Bp,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc(t,e){const[n,r,s]=e,i=n,o=r,a=ln(i.shape,o.shape);return{a(){const e=yy(o,"float32");let n=Jy(t,Jy(e,sx(i,Rx(e,sr(1)))));const r=un(i.shape,a);return r.length>0&&(n=ax(n,r)),cg(n,i.shape)},b(){const e=yx(i,0),n=Kg(e,Sx(i),Jg(i));let r=Jy(t,Jy(s,n));const u=un(o.shape,a);return u.length>0&&(r=ax(r,u)),cg(r,o.shape)}}}},gN={kernelName:zp,inputsToSave:["x","alpha"],gradFunc(t,e){const[n,r]=e,s=yx(n,0);return{x(){return Kg(s,t,Jy(t,r))},alpha(){let e=Kg(s,Jg(t),Jy(t,n));const i=un(r.shape,t.shape);return i.length>0&&(e=ax(e,i)),cg(e,r.shape)}}}},xN={kernelName:Wp,inputsToSave:["x"],gradFunc(t,e,n){const[r]=e,{axis:s}=n;let i=[];return i=null==s?r.shape.map((t,e)=>e):"number"==typeof s?[s]:s,{x(){return((t,e,n)=>{const r=t.shape.length,s=r-n.length,i=er(n,r);let o=t;null!=i&&(o=Oy(t,i));const a=o.shape.slice(),u=a.splice(r-n.length,n.length).reduce((t,e)=>t*e,1);a.push(u);let l=((t,e,n)=>{const r=t.shape.slice();r[n]=1;const s=cg(e,r),i=zg(t,n,!0,!1),o=zg(t,n,!0,!0),a=Jy(i,o);return Jy(s,a)})(o.reshape(a),e,s);if(l=l.reshape(o.shape),null!=i){const t=nr(i);l=Oy(l,t)}return l})(r,t,i)}}}},wN={kernelName:Ff,inputsToSave:["a","b"],gradFunc(t,e){const[n,r]=e,s=ln(n.shape,r.shape);return{a(){const e=Ky(t,yy(r,"float32")),i=un(n.shape,s);return i.length>0?cg(ax(e,i),n.shape):e},b(){let e=Jy(t,yy(n,"float32"));const i=un(r.shape,s);i.length>0&&(e=cg(ax(e,i),r.shape));const o=ox(r);return Ry(Ky(e,yy(o,"float32")))}}}},vN={kernelName:Hp,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return Ky(t,Ry(ox(n)))}}}},$N={kernelName:tm,inputsToSave:["x"],gradFunc(t,e){const[n]=e,r=Jy(Nx(n,6),bv(n));return{x(){return Jy(t,yy(r,"float32"))}}}},kN={kernelName:Xp,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return Jy(t,yy(bv(n),"float32"))}}}},NN={kernelName:Kp,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return cg(t,n.shape)}}}},CN={kernelName:Zp,inputsToSave:["images"],gradFunc(t,e,n){const[r]=e,s={dy:t,images:r};return{images(){return Bb.runKernel(Qp,s,n)}}}},SN={kernelName:Jp,inputsToSave:["images"],gradFunc(t,e,n){const[r]=e,s={dy:t,images:r};return{images(){return Bb.runKernel(Yp,s,n)}}}},EN={kernelName:em,gradFunc(t,e,n){const{dims:r}=n,s=j(r,t.shape);return{x(){return Gw(t,s)}}}},TN={kernelName:nm,gradFunc(t){return{x(){return Jg(t)}}}},_N={kernelName:rm,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return Ry(Ky(t,Jy(sx(n,1.5),2)))}}}},RN={kernelName:om,inputsToSave:["condition"],gradFunc(t,e){const[n]=e;return{condition(){return yy(Jg(n),"float32")},t(){return Jy(t,yy(n,t.dtype))},e(){return Jy(t,yy(Fx(n),t.dtype))}}}},AN={kernelName:am,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){const e=yx(n,sr(0)),r=sr(W$),s=sr(U$),i=Jy(t,s),o=Jy(Jy(t,r),cx(yy(n,"float32")));return Kg(e,i,o)}}}},ON={kernelName:dm,outputsToSave:[!0],gradFunc(t,e){const[n]=e;return{x(){return Jy(t,Jy(n,Rx(sr(1),n)))}}}},IN={kernelName:hm,gradFunc(t){return{x(){return Jg(t)}}}},FN={kernelName:lm,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return Jy(Pg(yy(n,"float32")),t)}}}},MN={kernelName:cm,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return Jy(Bg(yy(n,"float32")),t)}}}},DN={kernelName:um,inputsToSave:["x"],gradFunc(t,e,n){const[r]=e,{begin:s,size:i}=n,o=r.shape,[a,u]=Tn(r,s,i),l=[];for(let c=0;c<t.rank;c++)l.push([a[c],o[c]-a[c]-u[c]]);return{x(){return Qx(t,l)}}}},LN={kernelName:gm,outputsToSave:[!0],gradFunc(t,e,n){const[r]=e,{dim:s}=n,i=Jy(t,r);return{logits(){return Rx(i,Jy(ax(i,[s],!0),r))}}}},VN={kernelName:fm,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return Jy(t,pg(n))}}}},PN={kernelName:bm,gradFunc(t,e,n){const{blockShape:r,paddings:s}=n;return{x(){return gg(t,r,s)}}}},BN={kernelName:ym,gradFunc(t,e,n){const{axis:r}=n;return{x(){return fg(t,r)}}}},zN={kernelName:pm,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return Ky(t,Jy(ix(yy(n,"float32")),2))}}}},WN={kernelName:Cm,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return Jy(t,Jy(yy(n,"float32"),2))}}}},UN={kernelName:Nm,inputsToSave:["a","b"],gradFunc(t,e){const[n,r]=e,s=sr(2);return{a(){return Jy(t,Jy(s,Rx(n,r)))},b(){return Jy(t,Jy(s,Rx(r,n)))}}}},GN={kernelName:zm,gradFunc(t){return{x(){return Jg(t)}}}},jN={kernelName:Rm,inputsToSave:["a","b"],gradFunc(t,e){const[n,r]=e,s=ln(n.shape,r.shape);return{a(){let e=t;const r=un(n.shape,s);return r.length>0&&(e=ax(e,r)),cg(e,n.shape)},b(){let e=t;const n=un(r.shape,s);return n.length>0&&(e=ax(e,n)),cg(Ry(e),r.shape)}}}},qN={kernelName:mm,inputsToSave:["x"],gradFunc(t,e,n){const[r]=e,s=r.shape.slice(),{axis:i}=n;j(i,r.shape).forEach(t=>{s[t]=1});const o=cg(t,s),a=Jy(o,dr(r.shape,"float32"));return{x(){return a}}}},HN={kernelName:Am,inputsToSave:["x"],gradFunc(t,e){const[n]=e;return{x(){return Ky(t,ox(Pg(n)))}}}},XN={kernelName:Om,outputsToSave:[!0],gradFunc(t,e){const[n]=e;return{x(){return Jy(Rx(sr(1),ox(n)),t)}}}},KN={kernelName:Im,inputsToSave:["x"],gradFunc(t,e,n){const[r]=e,{reps:s}=n;return{x(){let e=Jg(r);if(1===r.rank)for(let n=0;n<s[0];++n)e=Hy(e,mg(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)e=Hy(e,mg(t,[n*r.shape[0],i*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let o=0;o<s[2];++o)e=Hy(e,mg(t,[n*r.shape[0],i*r.shape[1],o*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let o=0;o<s[2];++o)for(let a=0;a<s[3];++a)e=Hy(e,mg(t,[n*r.shape[0],i*r.shape[1],o*r.shape[2],a*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},JN={kernelName:Dm,gradFunc(t,e,n){const r=n,{perm:s}=r,i=nr(s);return{x(){return Oy(t,i)}}}},YN={kernelName:Vm,gradFunc(t,e,n){const r=n,{axis:s}=r;return{value(){return mv(t,s)}}}},ZN={kernelName:Pm,inputsToSave:["segmentIds"],gradFunc(t,e){const[n]=e;return{x(){return((t,e)=>{const n=Wx(e,Jg(e)),r=bx(t,n);let s=gx(e,sr(0,"int32"));const i=r.rank-s.rank;for(let a=0;i>a;++a)s=hx(s,a+1);s=Ix(s,dr(r.shape,"bool"));const o=Jg(r);return Kg(s,r,o)})(t,n)}}}},QN=[ek,nk,rk,sk,ik,ok,ak,uk,lk,ck,hk,dk,pk,bk,yk,gk,xk,wk,vk,$k,kk,Nk,Sk,Ck,Tk,_k,Rk,Ak,Ok,Ik,wN,Fk,Mk,Dk,Lk,Vk,Bk,Pk,zk,Wk,Uk,Gk,jk,qk,Hk,Xk,Kk,Jk,Yk,Qk,tN,tN,eN,rN,iN,oN,aN,uN,lN,cN,hN,dN,fN,pN,mN,bN,bN,yN,gN,xN,vN,$N,kN,NN,CN,SN,EN,TN,_N,RN,AN,ON,IN,FN,MN,DN,LN,VN,PN,PN,BN,BN,zN,UN,WN,GN,jN,qN,HN,XN,KN,JN,YN,ZN,{kernelName:Bm,gradFunc(t){return{x(){return Jg(t)}}}}];for(const Fj of QN)St(Fj);ne().prototype.abs=function(){return this.throwIfDisposed(),Yy(this)},ne().prototype.acos=function(){return this.throwIfDisposed(),Zy(this)},ne().prototype.acosh=function(){return this.throwIfDisposed(),Qy(this)},ne().prototype.add=function(t){return this.throwIfDisposed(),Hy(this,t)},ne().prototype.all=function(t,e){return this.throwIfDisposed(),eg(this,t,e)},ne().prototype.any=function(t,e){return this.throwIfDisposed(),ng(this,t,e)},ne().prototype.argMax=function(t){return this.throwIfDisposed(),rg(this,t)},ne().prototype.argMin=function(t){return this.throwIfDisposed(),sg(this,t)},ne().prototype.asScalar=function(){return this.throwIfDisposed(),F(1===this.size,()=>"The array must have only 1 element."),cg(this,[])},ne().prototype.asType=function(t){return this.throwIfDisposed(),yy(this,t)},ne().prototype.as1D=function(){return this.throwIfDisposed(),cg(this,[this.size])},ne().prototype.as2D=function(t,e){return this.throwIfDisposed(),cg(this,[t,e])},ne().prototype.as3D=function(t,e,n){return this.throwIfDisposed(),cg(this,[t,e,n])},ne().prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),cg(this,[t,e,n,r])},ne().prototype.as5D=function(t,e,n,r,s){return this.throwIfDisposed(),cg(this,[t,e,n,r,s])},ne().prototype.asin=function(){return this.throwIfDisposed(),ig(this)},ne().prototype.asinh=function(){return this.throwIfDisposed(),og(this)},ne().prototype.atan=function(){return this.throwIfDisposed(),ag(this)},ne().prototype.atan2=function(t){return this.throwIfDisposed(),ug(this,t)},ne().prototype.atanh=function(){return this.throwIfDisposed(),lg(this)},ne().prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),hg(this,t,e,n,r)},ne().prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),gg(this,t,e)},ne().prototype.batchNorm=function(t,e,n,r,s){return this.throwIfDisposed(),xg(this,t,e,n,r,s)},ne().prototype.broadcastTo=function(t){return this.throwIfDisposed(),Cg(this,t)},ne().prototype.cast=function(t){return this.throwIfDisposed(),yy(this,t)},ne().prototype.ceil=function(){return this.throwIfDisposed(),Sg(this)},ne().prototype.clipByValue=function(t,e){return this.throwIfDisposed(),Eg(this,t,e)},ne().prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof Nb&&(t=[t]),fg([this,...t],e)},ne().prototype.conv1d=function(t,e,n,r,s,i){return this.throwIfDisposed(),Ig(this,t,e,n,r,s,i)},ne().prototype.conv2dTranspose=function(t,e,n,r,s){return this.throwIfDisposed(),Mg(this,t,e,n,r,s)},ne().prototype.conv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),Og(this,t,e,n,r,s,i)},ne().prototype.cos=function(){return this.throwIfDisposed(),Pg(this)},ne().prototype.cosh=function(){return this.throwIfDisposed(),Bg(this)},ne().prototype.cumprod=function(t,e,n){return this.throwIfDisposed(),zg(this,t,e,n)},ne().prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),Wg(this,t,e,n)},ne().prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),Gg(this,t,e)},ne().prototype.depthwiseConv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),jg(this,t,e,n,r,s,i)},ne().prototype.dilation2d=function(t,e,n,r,s){return this.throwIfDisposed(),Hg(this,t,e,n,r,s)},ne().prototype.divNoNan=function(t){return this.throwIfDisposed(),Yg(this,t)},ne().prototype.div=function(t){return this.throwIfDisposed(),Ky(this,t)},ne().prototype.dot=function(t){return this.throwIfDisposed(),Zg(this,t)},ne().prototype.elu=function(){return this.throwIfDisposed(),tx(this)},ne().prototype.equal=function(t){return this.throwIfDisposed(),Xg(this,t)},ne().prototype.erf=function(){return this.throwIfDisposed(),ex(this)},ne().prototype.euclideanNorm=function(t,e){return this.throwIfDisposed(),lx(this,t,e)},ne().prototype.exp=function(){return this.throwIfDisposed(),cx(this)},ne().prototype.expandDims=function(t){return this.throwIfDisposed(),hx(this,t)},ne().prototype.expm1=function(){return this.throwIfDisposed(),dx(this)},ne().prototype.fft=function(){return this.throwIfDisposed(),uv(this)},ne().prototype.flatten=function(){return this.throwIfDisposed(),cg(this,[this.size])},ne().prototype.floor=function(){return this.throwIfDisposed(),mx(this)},ne().prototype.floorDiv=function(t){return this.throwIfDisposed(),Xy(this,t)},ne().prototype.gather=function(t,e){return this.throwIfDisposed(),bx(this,t,e)},ne().prototype.greaterEqual=function(t){return this.throwIfDisposed(),gx(this,t)},ne().prototype.greater=function(t){return this.throwIfDisposed(),yx(this,t)},ne().prototype.ifft=function(){return this.throwIfDisposed(),lv(this)},ne().prototype.irfft=function(){return this.throwIfDisposed(),cv(this)},ne().prototype.isFinite=function(){return this.throwIfDisposed(),xx(this)},ne().prototype.isInf=function(){return this.throwIfDisposed(),wx(this)},ne().prototype.isNaN=function(){return this.throwIfDisposed(),vx(this)},ne().prototype.leakyRelu=function(t){return this.throwIfDisposed(),$x(this,t)},ne().prototype.lessEqual=function(t){return this.throwIfDisposed(),Nx(this,t)},ne().prototype.less=function(t){return this.throwIfDisposed(),kx(this,t)},ne().prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),Cx(this,t,e,n,r)},ne().prototype.logSigmoid=function(){return this.throwIfDisposed(),_x(this)},ne().prototype.logSoftmax=function(t){return this.throwIfDisposed(),Ax(this,t)},ne().prototype.logSumExp=function(t,e){return this.throwIfDisposed(),Ox(this,t,e)},ne().prototype.log=function(){return this.throwIfDisposed(),Sx(this)},ne().prototype.log1p=function(){return this.throwIfDisposed(),Ex(this)},ne().prototype.logicalAnd=function(t){return this.throwIfDisposed(),Ix(this,t)},ne().prototype.logicalNot=function(){return this.throwIfDisposed(),Fx(this)},ne().prototype.logicalOr=function(t){return this.throwIfDisposed(),Mx(this,t)},ne().prototype.logicalXor=function(t){return this.throwIfDisposed(),Dx(this,t)},ne().prototype.matMul=function(t,e,n){return this.throwIfDisposed(),Ey(this,t,e,n)},ne().prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),Px(this,t,e,n,r)},ne().prototype.max=function(t,e){return this.throwIfDisposed(),nx(this,t,e)},ne().prototype.maximum=function(t){return this.throwIfDisposed(),Wx(this,t)},ne().prototype.mean=function(t,e){return this.throwIfDisposed(),Ux(this,t,e)},ne().prototype.min=function(t,e){return this.throwIfDisposed(),rx(this,t,e)},ne().prototype.minimum=function(t){return this.throwIfDisposed(),Gx(this,t)},ne().prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),jx(this,t,e)},ne().prototype.mod=function(t){return this.throwIfDisposed(),qx(this,t)},ne().prototype.mul=function(t){return this.throwIfDisposed(),Jy(this,t)},ne().prototype.neg=function(){return this.throwIfDisposed(),Ry(this)},ne().prototype.norm=function(t,e,n){return this.throwIfDisposed(),ux(this,t,e,n)},ne().prototype.notEqual=function(t){return this.throwIfDisposed(),Jx(this,t)},ne().prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),Ty(this,t,e,n)},ne().prototype.onesLike=function(){return this.throwIfDisposed(),Yx(this)},ne().prototype.pad=function(t,e){return this.throwIfDisposed(),Qx(this,t,e)},ne().prototype.pool=function(t,e,n,r,s,i){return this.throwIfDisposed(),iw(this,t,e,n,r,s,i)},ne().prototype.pow=function(t){return this.throwIfDisposed(),sx(this,t)},ne().prototype.prelu=function(t){return this.throwIfDisposed(),ow(this,t)},ne().prototype.prod=function(t,e){return this.throwIfDisposed(),aw(this,t,e)},ne().prototype.reciprocal=function(){return this.throwIfDisposed(),zw(this)},ne().prototype.relu=function(){return this.throwIfDisposed(),Ww(this)},ne().prototype.relu6=function(){return this.throwIfDisposed(),Uw(this)},ne().prototype.reshapeAs=function(t){return this.throwIfDisposed(),cg(this,t.shape)},ne().prototype.reshape=function(t){return this.throwIfDisposed(),cg(this,t)},ne().prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),Yv(this,t,e,n)},ne().prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),Zv(this,t,e,n)},ne().prototype.reverse=function(t){return this.throwIfDisposed(),Gw(this,t)},ne().prototype.rfft=function(){return this.throwIfDisposed(),dv(this)},ne().prototype.round=function(){return this.throwIfDisposed(),Kw(this)},ne().prototype.rsqrt=function(){return this.throwIfDisposed(),Jw(this)},ne().prototype.selu=function(){return this.throwIfDisposed(),Yw(this)},ne().prototype.separableConv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),Zw(this,t,e,n,r,s,i)},ne().prototype.sigmoid=function(){return this.throwIfDisposed(),pg(this)},ne().prototype.sign=function(){return this.throwIfDisposed(),tv(this)},ne().prototype.sin=function(){return this.throwIfDisposed(),ev(this)},ne().prototype.sinh=function(){return this.throwIfDisposed(),nv(this)},ne().prototype.slice=function(t,e){return this.throwIfDisposed(),mg(this,t,e)},ne().prototype.softmax=function(t){return this.throwIfDisposed(),av(this,t)},ne().prototype.softplus=function(){return this.throwIfDisposed(),Tx(this)},ne().prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),sw(this,t,e)},ne().prototype.split=function(t,e){return this.throwIfDisposed(),hv(this,t,e)},ne().prototype.sqrt=function(){return this.throwIfDisposed(),ix(this)},ne().prototype.square=function(){return this.throwIfDisposed(),ox(this)},ne().prototype.squaredDifference=function(t){return this.throwIfDisposed(),fv(this,t)},ne().prototype.squeeze=function(t){return this.throwIfDisposed(),pv(this,t)},ne().prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof Nb?[this,t]:[this,...t];return mv(n,e)},ne().prototype.step=function(t){return this.throwIfDisposed(),bv(this,t)},ne().prototype.stridedSlice=function(t,e,n,r,s,i,o,a){return this.throwIfDisposed(),yv(this,t,e,n,r,s,i,o,a)},ne().prototype.sub=function(t){return this.throwIfDisposed(),Rx(this,t)},ne().prototype.sum=function(t,e){return this.throwIfDisposed(),ax(this,t,e)},ne().prototype.tan=function(){return this.throwIfDisposed(),gv(this)},ne().prototype.tanh=function(){return this.throwIfDisposed(),bg(this)},ne().prototype.tile=function(t){return this.throwIfDisposed(),fx(this,t)},ne().prototype.toBool=function(){return this.throwIfDisposed(),yy(this,"bool")},ne().prototype.toFloat=function(){return this.throwIfDisposed(),yy(this,"float32")},ne().prototype.toInt=function(){return this.throwIfDisposed(),yy(this,"int32")},ne().prototype.topk=function(t,e){return this.throwIfDisposed(),xv(this,t,e)},ne().prototype.transpose=function(t){return this.throwIfDisposed(),Oy(this,t)},ne().prototype.unique=function(t){return this.throwIfDisposed(),vv(this,t)},ne().prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),$v(this,t,e)},ne().prototype.unstack=function(t){return this.throwIfDisposed(),kv(this,t)},ne().prototype.where=function(t,e){return this.throwIfDisposed(),Kg(t,this,e)},ne().prototype.zerosLike=function(){return this.throwIfDisposed(),Jg(this)};class tC extends Error{constructor(t){super(t),Object.setPrototypeOf(this,tC.prototype)}}class eC extends Error{constructor(t){super(t),Object.setPrototypeOf(this,eC.prototype)}}class nC extends Error{constructor(t){super(t),Object.setPrototypeOf(this,nC.prototype)}}class rC extends Error{constructor(t){super(t),Object.setPrototypeOf(this,rC.prototype)}}class sC extends Error{constructor(t){super(t),Object.setPrototypeOf(this,sC.prototype)}}class iC{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const t=this.cache.keys().next().value;this.cache.delete(t)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(0>t)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const t=this.cache.keys().next().value;this.cache.delete(t)}this.maxEntries=t}}let oC={},aC=0;const uC={},lC=["channelsFirst","channelsLast"],cC=["nearest","bilinear"],hC=["valid","same","causal"],dC=["max","avg"],fC=["sum","mul","concat","ave"],pC=new Map,mC=[],bC=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);let yC;const gC=["fanIn","fanOut","fanAvg"],xC=["normal","uniform","truncatedNormal"];class wC extends Wy{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class vC extends wC{apply(t,e){return hr(t,e)}}vC.className="Zeros",An(vC);class $C extends wC{apply(t,e){return dr(t,e)}}$C.className="Ones",An($C);class kC extends wC{constructor(t){if(super(),"object"!=typeof t)throw new nC(`Expected argument of type ConstantConfig but got ${t}`);if(void 0===t.value)throw new nC(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return en(()=>Jy(sr(this.value),dr(t,e)))}getConfig(){return{value:this.value}}}kC.className="Constant",An(kC);class NC extends wC{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Bw(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}NC.className="RandomUniform",An(NC);class CC extends wC{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new rC(`randomNormal does not support dType ${e}.`);return xi(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}CC.className="RandomNormal",An(CC);class SC extends wC{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new rC(`truncatedNormal does not support dType ${e}.`);return wv(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}SC.className="TruncatedNormal",An(SC);class EC extends wC{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return en(()=>{if(2!==t.length||t[0]!==t[1])throw new nC("Identity matrix initializer can only be used for 2D square matrices.");return Jy(this.gain,px(t[0]))})}getConfig(){return{gain:this.gain}}}EC.className="Identity",An(EC);class TC extends wC{constructor(t){if(super(),0>t.scale)throw new nC(`scale must be a positive float. Got: ${t.scale}`);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,js(gC,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,(t=>{js(xC,"Distribution",t)})(this.distribution),this.seed=t.seed}apply(t,e){const n=((t,e="channelsLast")=>{let n,r;if(Zs(e),2===t.length)n=t[0],r=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=oi(t,2);n=t[1]*e,r=t[0]*e}else if("channelsLast"===e){const e=oi(t,0,t.length-2);n=t[t.length-2]*e,r=t[t.length-1]*e}}else{const e=oi(t);n=Math.sqrt(e),r=Math.sqrt(e)}return[n,r]})(t),r=n[0],s=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,r):"fanOut"===this.mode?i/=Math.max(1,s):i/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new rC(`${this.getClassName()} does not support dType ${e}.`);return wv(t,0,n,e,this.seed)}{const n=Math.sqrt(3*i);return Bw(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}TC.className="VarianceScaling",An(TC);class _C extends TC{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return TC.className}}_C.className="GlorotUniform",An(_C);class RC extends TC{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return TC.className}}RC.className="GlorotNormal",An(RC);class AC extends TC{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return TC.className}}AC.className="HeNormal",An(AC);class OC extends TC{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return TC.className}}OC.className="HeUniform",An(OC);class IC extends TC{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return TC.className}}IC.className="LeCunNormal",An(IC);class FC extends TC{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return TC.className}}FC.className="LeCunNormal",An(FC);class MC extends wC{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new rC("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return en(()=>{if(2>t.length)throw new rC("Shape must be at least 2D.");t[0],t[1];const e=xi(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=C$.gramSchmidt(e);return t[0]>t[1]&&(n=Oy(n)),Jy(this.gain,n)})}getConfig(){return{gain:this.gain,seed:this.seed}}}MC.className="Orthogonal",An(MC);const DC={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"},LC="Variable";class VC{constructor(t,e="float32",n=LC,r=!0,s=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=Js(),n=null==n?LC:n,this.originalName=ni(n),this.name=ri(this.originalName),this.trainable_=r,this.constraint=s,this.val=vr(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),((t,e)=>{if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))})(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}class PC{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class BC{constructor(t,e,n,r,s,i,o){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=o,this.id=Js(),null!=i&&(this.originalName=ni(i),this.name=ri(this.originalName)),this.rank=e.length}}let zC=0;class WC{constructor(t,e){this.callArgs=e,this.id=zC++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const n of t.inboundLayers)null!=n&&n.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let UC=0;class GC extends Wy{constructor(t={}){super(),this.L=null,this.V=[],this.P=!1,this.id=UC++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this.B=[],this.W=[],this.U=[],this.G=[],this.q=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=Ls(t)+"_"+Ys(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this.H=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new eC(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new nC(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return Ms(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return Ms(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new tC(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new tC(`Layer ${this.name} is not connected, no input to return.`);return Ms(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new tC(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new tC(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Ms(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this.U}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this.G}get built(){return this.q}set built(t){this.q=t}get trainable(){return this.trainable_}set trainable(t){this.B.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this.B.filter(t=>t.trainable):[]}set trainableWeights(t){this.B=t}get nonTrainableWeights(){return this.trainable?this.B.filter(t=>!t.trainable).concat(this.W):this.B.concat(this.W)}set nonTrainableWeights(t){this.W=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this.P}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=Ds(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=Ds(this.inputSpec);if(t.length!==e.length)throw new nC(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){const r=t[n],s=e[n];if(null==s)continue;const i=r.rank;if(null!=s.ndim&&i!==s.ndim)throw new nC(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${i}`);if(null!=s.maxNDim&&i>s.maxNDim)throw new nC(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${i}`);if(null!=s.minNDim&&i<s.minNDim)throw new nC(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${i}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new nC(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const t=r.shape;for(const e in s.axes){const r=Number(e),i=s.axes[e],o=0>r?t[t.length+r]:t[r];if(null!=i&&-1===[i,null].indexOf(o))throw new nC(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${i} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const e=s.shape[t],i=r.shape[t];if(null!=e&&null!=i&&e!==i)throw new nC(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this.L&&this.L(t,e)}setCallHook(t){this.L=t}clearCallHook(){this.L=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=Ds(t);let r=!0;for(const i of n)if(!(i instanceof BC)){r=!1;break}let s=!0;for(const i of n)if(i instanceof BC){s=!1;break}if(r===s)throw new nC("Arguments to apply() must be all SymbolicTensors or all Tensors");return ei(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of Ds(t))e.push(n.shape);this.build(Ms(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this.H&&s&&(this.H=1)}if(this.assertInputCompatibility(t),s){let r=this.call(t,e);const s=Ds(r),i=[];for(let t of s)-1!==n.indexOf(t)&&(t=t.clone()),i.push(t);if(r=Ms(i),null!=this.activityRegularizer)throw new rC("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=(t=>{t=Ds(t);const e=[];for(const n of t)e.push(n.shape);return Ms(e)})(t),r=this.computeOutputShape(n);let s;const i="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,r)=>new BC(i,n,this,Ds(t),e,this.name,r)):new BC(i,r,this,Ds(t),e,this.name),this.addInboundNode(t,s,null,null,n,r,e),this.H++,null!=this.activityRegularizer)throw new rC("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}})}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length);else{let e=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)})}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new tC(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new tC(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new eC(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Fi(this.weights)}build(t){this.built=!0}getWeights(t=!1){return Mi(t?this.trainableWeights:this.weights)}setWeights(t){en(()=>{const e=this.weights;if(e.length!==t.length)throw new nC(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],r=Mi(e);for(let s=0;s<r.length;++s){const i=r[s],o=e[s],a=t[s];if(!P(i.shape,a.shape))throw new nC(`Layer weight shape ${i.shape} not compatible with provided weight shape ${a.shape}`);n.push([o,a])}Di(n)})}addWeight(t,e,n,r,s,i,o,a){if(-1!==this.V.indexOf(t))throw new nC(`Duplicate weight name ${t} for layer ${this.name}`);this.V.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=a?a():_i("zeros"));const u=r.apply(e,n),l=new VC(u,n,t,i,o);return u.dispose(),null!=s&&this.addLoss(()=>s.apply(l.read())),null==i&&(i=!0),i?this.B.push(l):this.W.push(l),l}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=Ds(t),void 0!==this.U&&null!==this.U&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach(t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return e}addInboundNode(t,e,n,r,s,i,o=null){const a=Ds(t);e=Ds(e),n=Ds(n),r=Ds(r),s=Ai(s),i=Ai(i);const u=[],l=[],c=[];for(const h of a)u.push(h.sourceLayer),l.push(h.nodeIndex),c.push(h.tensorIndex);new WC({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:a,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:i},o);for(let h=0;h<e.length;h++)e[h].sourceLayer=this,e[h].nodeIndex=this.inboundNodes.length-1,e[h].tensorIndex=h}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(0===this.H)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this.H)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0===--this.H&&(t=this.disposeWeights()),{refCountAfterDispose:this.H,numDisposedVariables:t}}}class jC extends GC{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:Ys("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new nC("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new nC("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new nC("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new BC(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new WC({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new nC(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this.H,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}jC.className="InputLayer",An(jC);class qC{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof qC)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new nC(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=((t,e)=>{if(null==t.dtype||t.dtype===e.dtype)return e;try{return yy(e,t.dtype)}catch(Ij){throw new nC(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}})(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof BC){if(null==this.id2Value[t.id])throw new nC(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new nC(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof BC){if(null==this.id2Value[t.id])throw new nC(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new nC(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&nn(this.id2Mask)}}const HC=new iC,XC=new iC;gt().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,t=>{null!=HC&&HC.setMaxEntries(t),null!=XC&&XC.setMaxEntries(t)});class KC extends Wy{getConfig(){return{}}}class JC extends KC{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return en(()=>{const e=Ui(t,this.axis),n=Eg(e,0,this.maxValue);return Jy(t,Ky(n,Hy(ci(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}JC.className="MaxNorm",An(JC);class YC extends KC{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return en(()=>Ky(t,Hy(ci(),Ui(t,this.axis))))}getConfig(){return{axis:this.axis}}}YC.className="UnitNorm",An(YC);class ZC extends KC{apply(t){return Ww(t)}}ZC.className="NonNeg",An(ZC);class QC extends KC{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return en(()=>{const e=Ui(t,this.axis),n=Hy(Jy(this.rate,Eg(e,this.minValue,this.maxValue)),Jy(1-this.rate,e));return Jy(t,Ky(n,Hy(ci(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}QC.className="MinMaxNorm",An(QC);const tS={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"},eS=Object.freeze(Object.defineProperty({__proto__:null,maxNorm(t){return new JC(t)},minMaxNorm(t){return new QC(t)},nonNeg(){return new ZC},unitNorm(t){return new YC(t)}},Symbol.toStringTag,{value:"Module"})),nS=Object.freeze(Object.defineProperty({__proto__:null,constant(t){return new kC(t)},glorotNormal(t){return new RC(t)},glorotUniform(t){return new _C(t)},heNormal(t){return new AC(t)},heUniform(t){return new OC(t)},identity(t){return new EC(t)},leCunNormal(t){return new IC(t)},leCunUniform(t){return new FC(t)},ones(){return new $C},orthogonal(t){return new MC(t)},randomNormal(t){return new CC(t)},randomUniform(t){return new NC(t)},truncatedNormal(t){return new SC(t)},varianceScaling(t){return new TC(t)},zeros(){return new vC}},Symbol.toStringTag,{value:"Module"}));var rS,sS;(sS=rS||(rS={}))[sS.SILENT=0]="SILENT",sS[sS.VERBOSE=1]="VERBOSE";class iS{constructor(){this.validationData=null}setParams(t){this.params=t}onEpochBegin(t,e){return Jh(this,null,function*(){})}onEpochEnd(t,e){return Jh(this,null,function*(){})}onBatchBegin(t,e){return Jh(this,null,function*(){})}onBatchEnd(t,e){return Jh(this,null,function*(){})}onTrainBegin(t){return Jh(this,null,function*(){})}onTrainEnd(t){return Jh(this,null,function*(){})}setModel(t){}}class oS{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}onEpochBegin(t,e){return Jh(this,null,function*(){null==e&&(e={});for(const n of this.callbacks)yield n.onEpochBegin(t,e)})}onEpochEnd(t,e){return Jh(this,null,function*(){null==e&&(e={});for(const n of this.callbacks)yield n.onEpochEnd(t,e)})}onBatchBegin(t,e){return Jh(this,null,function*(){null==e&&(e={});for(const n of this.callbacks)yield n.onBatchBegin(t,e)})}onBatchEnd(t,e){return Jh(this,null,function*(){null==e&&(e={});for(const n of this.callbacks)yield n.onBatchEnd(t,e)})}onTrainBegin(t){return Jh(this,null,function*(){null==t&&(t={});for(const e of this.callbacks)yield e.onTrainBegin(t)})}onTrainEnd(t){return Jh(this,null,function*(){null==t&&(t={});for(const e of this.callbacks)yield e.onTrainEnd(t)})}}class aS extends iS{constructor(){super()}onEpochBegin(t){return Jh(this,null,function*(){this.seen=0,this.totals={}})}onBatchEnd(t,e){return Jh(this,null,function*(){null==e&&(e={});const t=null==e.size?0:e.size;this.seen+=t;for(const n in e){const r=e[n];if("number"==typeof r)this.totals.hasOwnProperty(n)||(this.totals[n]=0),this.totals[n]=this.totals[n]+r*t;else{let e;n in this.totals?e=this.totals[n]:this.totals[n]=0;const s=en(()=>Hy(this.totals[n],Jy(r,t)));this.totals[n]=s,null!=e&&e.dispose()}}})}onEpochEnd(t,e){return Jh(this,null,function*(){if(null!=e)for(const t of this.params.metrics)null!=this.totals[t]&&("number"==typeof this.totals[t]?e[t]=this.totals[t]/this.seen:en(()=>{const n=Jy(Ky(1,this.seen),this.totals[t]);e[t]=n,this.totals[t].dispose(),rn(e[t])}))})}}class uS extends iS{onTrainBegin(t){return Jh(this,null,function*(){this.epoch=[],this.history={}})}onEpochEnd(t,e){return Jh(this,null,function*(){null==e&&(e={}),this.epoch.push(t);for(const t in e)null==this.history[t]&&(this.history[t]=[]),this.history[t].push(e[t])})}syncData(){return Jh(this,null,function*(){const t=[],e=[],n=[];for(const s in this.history){const r=this.history[s];for(let i=0;i<r.length;++i)if("number"!=typeof r[i]){const o=r[i];t.push(o.data()),e.push(s),n.push(i)}}const r=yield Promise.all(t);for(let s=0;s<r.length;++s)this.history[e[s]][n[s]].dispose(),this.history[e[s]][n[s]]=r[s][0]})}}class lS extends iS{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||Pr,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");rt(this.yieldEvery)&&(this.maybeWait=((t,e,n)=>{let r,s=null!=n?n():qt();return(...i)=>{const o=null!=n?n():qt();return e>o-s||(s=o,r=t(...i)),r}})(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}maybeWait(t,e,n){return Jh(this,null,function*(){const r=[];null!=this.yield&&(yield Hi(n),r.push(this.yield(t,e,n))),r.push(this.nextFrameFunc()),yield Promise.all(r)})}onEpochBegin(t,e){return Jh(this,null,function*(){this.currentEpoch=t,null!=this.epochBegin&&(yield Hi(e),yield this.epochBegin(t,e))})}onEpochEnd(t,e){return Jh(this,null,function*(){const n=[];null!=this.epochEnd&&(yield Hi(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),yield Promise.all(n)})}onBatchBegin(t,e){return Jh(this,null,function*(){null!=this.batchBegin&&(yield Hi(e),yield this.batchBegin(t,e))})}onBatchEnd(t,e){return Jh(this,null,function*(){const n=[];null!=this.batchEnd&&(yield Hi(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):rt(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),yield Promise.all(n)})}onTrainBegin(t){return Jh(this,null,function*(){null!=this.trainBegin&&(yield Hi(t),yield this.trainBegin(t))})}onTrainEnd(t){return Jh(this,null,function*(){null!=this.trainEnd&&(yield Hi(t),yield this.trainEnd(t))})}}class cS{constructor(){}static registerCallbackConstructor(t,e){F(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),cS.checkForDuplicate(e),null==cS.constructors[t]&&(cS.constructors[t]=[]),cS.constructors[t].push(e)}static checkForDuplicate(t){for(const e in cS.constructors)cS.constructors[+e].forEach(e=>{if(e===t)throw new nC("Duplicate callback constructor.")})}static clear(){cS.constructors={}}static createCallbacks(t){const e=[];for(const n in cS.constructors){const r=+n;r>t||e.push(...cS.constructors[r])}return e.map(t=>new t)}}cS.constructors={};const hS={meanSquaredError:Qi,meanAbsoluteError:to,meanAbsolutePercentageError:eo,meanSquaredLogarithmicError(t,e){return en(()=>{const n=Eg(e,ci(),Number.MAX_VALUE),r=Sx(Hy(1,n)),s=Eg(t,ci(),Number.MAX_VALUE),i=Sx(Hy(1,s));return Ux($i(Rx(r,i)),-1)})},squaredHinge(t,e){return en(()=>{const n=Wx(0,Rx(1,Jy(t,e)));return Ux($i(n),-1)})},hinge(t,e){return en(()=>{const n=Wx(0,Rx(1,Jy(t,e)));return Ux(n,-1)})},categoricalHinge(t,e){return en(()=>{const n=ax(Jy(t,e),-1),r=nx(Jy(Rx(1,t),e),-1);return Wx(0,Hy(1,Rx(r,n)))})},logcosh(t,e){return en(()=>{const n=Math.log(2),r=Rx(e,t),s=Rx(Hy(r,Tx(Jy(-2,r))),n);return Ux(s,-1)})},categoricalCrossentropy:no,sparseCategoricalCrossentropy:ro,binaryCrossentropy:so,kullbackLeiblerDivergence(t,e){return en(()=>{const n=Eg(t,ci(),1),r=Eg(e,ci(),1);return ax(Jy(t,Sx(Ky(n,r))),-1)})},poisson(t,e){return en(()=>{const n=Sx(Hy(ci(),e));return Ux(Rx(e,Jy(t,n)),-1)})},cosineProximity:io},dS=no,fS=ro,pS={binaryAccuracy:ao,categoricalAccuracy:uo,precision:co,categoricalCrossentropy:dS,sparseCategoricalCrossentropy:fS,mse:Qi,MSE:Qi,mae:to,MAE:to,mape:eo,MAPE:eo,cosine:io},mS="3.21.0";class bS extends GC{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=Ys(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],Us(this.inputs).length!==this.inputs.length)throw new nC(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(t=>t.name)}`);Us(this.outputs).length,this.outputs.length,this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const t=y.sourceLayer,e=y.nodeIndex,n=y.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(e),this.outputLayersTensorIndices.push(n)}for(const y of this.inputs){const t=y.sourceLayer,e=y.nodeIndex,n=y.tensorIndex;Is(0===e,"input layer has >1 nodes"),Is(0===n,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(e),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const e=this.inputLayers[y];if(!(e instanceof jC))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${y} (0-based) originates from layer type ${e.getClassName()}.`);this.inputNames.push(e.name),this.feedInputShapes.push(e.batchInputShape),this.feedInputNames.push(e.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(t=>t.shape),this.internalOutputShapes=this.outputs.map(t=>t.shape);const e={},n={},r={},s={},i={},o=[],a=(t,e,n,r,s,u)=>{null!=r&&null!=s&&null!=u||(r=t.sourceLayer,s=t.nodeIndex,u=t.tensorIndex);const l=r.inboundNodes[s];if(-1!==n.indexOf(l))throw new eC(`The tensor ${t.name} at layer "${r.name}" is part of a cycle.`);if(-1!==e.indexOf(l))return;this.containerNodes.add(bS.nodeKey(r,s)),r.id in i||(i[r.id]=Object.keys(i).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let i=0;c>i;i++){const t=l.inputTensors[i],r=l.inboundLayers[i],s=l.nodeIndices[i],o=l.tensorIndices[i];a(t,e,n,r,s,o)}for(e.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);o.push(l)},u=[],l=[];for(const y of this.outputs)a(y,u,l);const c=o.slice().reverse();for(const y of c){n[y.id]=y,y.id in e||(e[y.id]=0);let t=e[y.id];const i=null==r[y.outboundLayer.id]?0:r[y.outboundLayer.id];t=Math.max(t,i),r[y.outboundLayer.id]=t,s[y.outboundLayer.id]=y.outboundLayer,e[y.id]=t;for(let r=0;r<y.inboundLayers.length;r++){const s=y.inboundLayers[r],i=y.nodeIndices[r],o=s.inboundNodes[i],a=null==e[o.id]?0:e[o.id];e[o.id]=Math.max(t+1,a),n[o.id]=o}}const h={};for(const y in e){const t=e[y];t in h||(h[t]=[]),h[t].push(n[y])}const d={};for(const y in r){const t=r[y];t in d||(d[t]=[]),d[t].push(s[y])}let f=Object.keys(d).map(t=>parseInt(t,10)).sort(Ws);this.layers=[];for(const y of f){const t=d[y];t.sort((t,e)=>{const n=i[t.id],r=i[e.id];return r>n?-1:n>r?1:0});for(const e of t)e instanceof bS&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,f=Object.keys(h).map(t=>parseInt(t,10)).sort(Ws);const p=this.inputs.slice(),m=[];for(const y of f)for(const t of h[y]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===p.indexOf(n))throw new eC(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)p.push(e);m.push(e.name)}}this.nodesByDepth=h;const b=this.layers.map(t=>t.name);for(const y of b){const t=b.filter(t=>t===y).length;if(1!==t)throw new eC(`The name "${y}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(b))}this.outboundNodes=[],this.inboundNodes=[],new WC({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(t=>null),outputMasks:this.outputs.map(t=>null),inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs.map(t=>t.shape)}),this.built=!0,this.H=1}assertNotDisposed(){if(0===this.H)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this.H){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this.H,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e.B.forEach(e=>e.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this.B.length>0)throw new nC("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let r=0;for(const i of this.layers)for(const t of i.weights){if(null!=n[t.originalName])throw new nC(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const s=[];for(const i in t){let r=i;if(null==n[i]){const t=i.split("/");r=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[r])s.push([n[r],t[i]]);else if(e)throw new nC(`Provided weight data has no target variable: ${i}`);delete n[r]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new nC(`${t.length} of ${r} weights are not set: ${t}`)}Di(s)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${mS}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=ko(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return en(()=>{t=Ds(t);const n=new qC;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return Pi(this.outputs,n,e)})}computeMask(t,e){return en(()=>{let n;return t=Ds(t),n=null==e?Os(null,t.length):Ds(e),this.runInternalGraph(t,n)[1]})}computeOutputShape(t){const e=Ai(t);if(e.length!==this.inputLayers.length)throw new nC(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let o=0;o<e.length;o++){const t=this.inputLayers[o],r=e[o];n[t.name+"_0_0"]=r}const r=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(Ws);if(r.length>1)for(const o of r){const t=this.nodesByDepth[o];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map(t=>t.id).indexOf(t.id))continue;const r=[];for(let o=0;o<e.inboundLayers.length;o++){const t=e.inboundLayers[o],s=e.nodeIndices[o],i=e.tensorIndices[o],a=n[`${t.name}_${s}_${i}`];r.push(a)}const s=Ai(t.computeOutputShape(Ms(r))),i=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++)n[`${t.name}_${i}_${e}`]=s[e]}}const s=[],i=[];for(let o=0;o<this.outputLayers.length;o++){const t=this.outputLayers[o],e=this.outputLayersNodeIndices[o],n=this.outputLayersTensorIndices[o],r=`${t.name}_${e}_${n}`;i.push(r)}for(let o=0;o<i.length;o++){const t=i[o];Is(t in n),s.push(n[t])}return Ms(s)}runInternalGraph(t,e){null==e&&(e=Os(null,t.length));const n={};for(let a=0;a<this.inputs.length;++a){const r=this.inputs[a],s=t[a],i=e[a];n[r.id]=[s,i]}const r=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(Ws);for(const a of r){const t=this.nodesByDepth[a];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,s=e.outputTensors,i=new Array;for(const e of r)e.id in n&&i.push(n[e.id]);if(i.length===r.length){let r,o,a,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===i.length){const[e,n]=i[0];null==l.mask&&(l.mask=n),a=Ds(t.call(e,l)),u=Ds(t.computeMask(e,n)),r=[e],o=[n]}else r=i.map(t=>t[0]),o=i.map(t=>t[1]),null==l.mask&&(l.mask=o),a=Ds(t.call(r,l)),u=Ds(t.computeMask(r,o));if(t.activityRegularizer)throw new rC("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<s.length;++t){const e=s[t],r=a[t],i=u[t];n[e.id]=[r,i]}}}}const s=[],i=[],o=[];for(const a of this.outputs){Is(a.id in n,`Could not compute output ${a.name} : ${a.id}`);const[t,e]=n[a.id];o.push(t.shape),s.push(t),i.push(e)}return[s,i,o]}buildNodeConversionMap(t){const e={};let n;for(const r of this.layers){n=r instanceof bS?1:0;for(let t=0;t<r.inboundNodes.length;t++){const s=bS.nodeKey(r,t);this.containerNodes.has(s)&&(e[s]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length>e)return this.layers[e];throw new nC(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`)}if(null==t)throw new nC("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===t)return n;throw new nC(`No such layer: ${t}`)}calculateLosses(){return en(()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=bS.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const i of this.layers){const t=i.getClassName(),r=i.getConfig(),s=[];for(let n=0;n<i.inboundNodes.length;n++){const t=i.inboundNodes[n],r=bS.nodeKey(i,n);let o={};if(this.containerNodes.has(r)){if(t.callArgs)try{JSON.stringify(t.callArgs),o=t.callArgs}catch(Ij){o={}}if(t.inboundLayers.length>0){const n=[];for(let r=0;r<t.inboundLayers.length;r++){const s=t.inboundLayers[r],i=t.nodeIndices[r],a=t.tensorIndices[r];let u=e[bS.nodeKey(s,i)];null==u&&(u=0),n.push([s.name,u,a,o])}s.push(n)}}}const o={};o.name=i.name,o.className=t,o.config=r,o.inboundNodes=s,n.push(o)}t.layers=n;const r=[];for(let i=0;i<this.inputLayers.length;i++){const t=this.inputLayers[i],n=this.inputLayersNodeIndices[i],s=bS.nodeKey(t,n);if(!this.containerNodes.has(s))continue;let o=e[s];null==o&&(o=0);const a=this.inputLayersTensorIndices[i];r.push([t.name,o,a])}t.inputLayers=r;const s=[];for(let i=0;i<this.outputLayers.length;i++){const t=this.outputLayers[i],n=this.outputLayersNodeIndices[i],r=bS.nodeKey(t,n);if(!this.containerNodes.has(r))continue;let o=e[r];null==o&&(o=0);const a=this.outputLayersTensorIndices[i];s.push([t.name,o,a])}return t.outputLayers=s,t}static fromConfig(t,e,n={},r=!1){function s(t,e){t.name in u?u[t.name].push(e):u[t.name]=[e]}function i(t,e){const n=[];let r;for(const i of e){const o=i[0],u=i[1],l=i[2];if(r=null==i[3]?{}:i[3],!(o in a))return void s(t,e);const c=a[o];if(c.inboundNodes.length<=u)return void s(t,e);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&t.apply(Ms(n),r)}function o(t){const n=t.name,i=Yi(t,null!=e.customObjects?e.customObjects:{});i.setFastWeightInitDuringBuild(r),a[n]=i,t.inboundNodes.forEach(t=>{if(!(t instanceof Array))throw new nC(`Corrupted configuration, expected array for nodeData: ${t}`);s(i,t)})}const a={},u={},l=e.name,c=e.layers;for(const m of c)o(m);for(;!Gs(u);)for(const t of c){const e=a[t.name];if(e.name in u){const t=u[e.name];delete u[e.name];for(const n of t)i(e,n)}}const h=[],d=[],f=e.inputLayers;for(const m of f){const t=m[0],e=m[1],n=m[2];Is(t in a);const r=a[t].inboundNodes[e].outputTensors;h.push(r[n])}const p=e.outputLayers;for(const m of p){const t=m[0],e=m[1],n=m[2];Is(t in a);const r=a[t].inboundNodes[e].outputTensors;d.push(r[n])}return new t({inputs:h,outputs:d,name:l})}get stateful(){if(this.P)throw new nC("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){en(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}class yS extends bS{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new nC("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");((t,e,n,r=console.log)=>{const s=(t=>{let e=!0;const n=[],r=[];for(const s in t.nodesByDepth)n.push(t.nodesByDepth[s]);for(const s of n){if(s.length>1||1===s.length&&s[0].inboundLayers.length>1){e=!1;break}r.push(...s)}if(e)for(const s of t.layers){let t=!1;for(const n of s.inboundNodes)if(-1!==r.indexOf(n)){if(t){e=!1;break}t=!0}if(!e)break}return e})(t),i=["Layer (type)","Input Shape","Output shape","Param #"];let o;if(s?(e=e||90,n=n||[.32,.61,.89,1]):(e=e||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]>1||(n=n.map(t=>Math.floor(e*t))),!s){i.push("Receives inputs"),o=[];for(const e in t.nodesByDepth)o.push(...t.nodesByDepth[e])}r("_".repeat(e)),go(i,n,r),r("=".repeat(e));const a=t.layers;for(let c=0;c<a.length;++c)s?xo(a[c],n,r):wo(a[c],n,o,r),r((c===a.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const u=(t=>{let e;return e=null!=t.collectedTrainableWeights?Fi(t.collectedTrainableWeights):Fi(t.trainableWeights),e})(t),l=Fi(t.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(e))})(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=(t=>{const e={Adagrad:()=>V$.adagrad(.01),Adadelta:()=>V$.adadelta(1,.95,ci()),Adam:()=>V$.adam(.001,.9,.999,ci()),Adamax:()=>V$.adamax(.002,.9,.999,ci(),0),RMSProp:()=>V$.rmsprop(.001,.9,0,ci()),SGD:()=>V$.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new nC(`Unknown Optimizer ${t}`)})(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof _$))throw new nC("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new nC(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map(t=>oo(t))}else{const n=oo(t.loss);this.outputs.forEach(t=>{e.push(n)})}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new nC(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)t.loss[n],e.push(oo(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const t=this.internalOutputShapes[i],e=this.outputNames[i];this.feedOutputNames.push(e),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[i])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],ei("loss",()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}});const r=((t,e)=>{if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>[]);let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);n=t}if(Array.isArray(n))return e.map(t=>n);{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}})(t.metrics,this.outputNames),s=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};ei("metric",()=>{for(let t=0;t<this.outputs.length;++t)-1===n.indexOf(t)&&(e=>{let n,r,i;for(const o of e){if("string"==typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const e=this.internalOutputShapes[t];let s;1===e[e.length-1]||this.lossFunctions[t]===so?-1!==["accuracy","acc"].indexOf(o)?r=ao:-1!==["crossentropy","ce"].indexOf(o)&&(r=ho):this.lossFunctions[t]===ro?-1!==["accuracy","acc"].indexOf(o)?r=fo:-1!==["crossentropy","ce"].indexOf(o)&&(r=fS):-1!==["accuracy","acc"].indexOf(o)?r=uo:-1!==["crossentropy","ce"].indexOf(o)&&(r=dS),-1!==["accuracy","acc"].indexOf(o)?s="acc":-1!==["crossentropy","ce"].indexOf(o)&&(s="ce"),i=r,n=""+s}else{const t=po(o);i=t,n=""+mo(o)}let e;ei(n,()=>{e=i}),s(t,n,e)}})(r[t])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&(this.trainableWeights.length,this.collectedTrainableWeights.length)}evaluate(t,e,n={}){const r=null==n.batchSize?32:n.batchSize;Ro(r);const s=this.standardizeUserDataXY(t,e,!0,r);try{const t=s[0].concat(s[1]);this.makeTestFunction();const e=this.testFunction;return Ms(this.testLoop(e,t,r,n.verbose,n.steps))}finally{Mo(s[0],t),Mo(s[1],e)}}evaluateDataset(t,e){return Jh(this,null,function*(){return this.makeTestFunction(),function(t,e,n){return Jh(this,null,function*(){const r=null!=(n=n||{}).batches,s=t.testFunction;let i=[];if(n.verbose>0)throw new rC("Verbose mode is not implemented yet.");F(!r||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);const o="function"==typeof e.next?e:yield e.iterator();let a=0,u=0;for(;!r||u<n.batches;){const e=yield o.next();if(i=en(()=>{if(e.value){const{xs:n,ys:r}=Eo(t,e.value),o=n.concat(r),l=en(()=>s(o));if(nn(o),0===u)for(let t=0;t<l.length;++t)i.push(sr(0));const c=o[0].shape[0];for(let t=0;t<l.length;++t){const e=l[t],n=i[t];i[t]=en(()=>Hy(i[t],Jy(c,e))),u>0&&nn(n)}nn(l),a+=c,++u}return i}),e.done)break}for(let t=0;t<i.length;++t){const e=i[t];i[t]=Ky(i[t],a),nn(e)}return Ms(i)})}(this,t,e)})}checkNumSamples(t,e,n,r="steps"){let s;if(null!=n){if(s=null,null!=e)throw new nC(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(null==t)throw new nC(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return s}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new nC("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),r=n?e:[e],s=this.retrieveSymbolicTensors(r),i=new qC;if(t instanceof Nb&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new nC(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)i.add(this.inputs[e],t[e])}else for(const a of this.inputs){const e=t[a.name];if(null==e)throw new nC(`No value is provided for the model's input ${a.name}`);i.add(a,e)}const o=Pi(s,i);return n?o:o[0]}retrieveSymbolicTensors(t){const e=Os(null,t.length);let n=t.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],i=s.map(t=>t.name);for(let r=0;r<t.length;++r){const o=i.indexOf(t[r]);if(-1!==o&&(e[r]=s[o],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach((e,r)=>{null==e&&n.push(t[r])}),new nC(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return e}predictLoop(t,e=32,n=!1){return en(()=>{const r=this.checkNumSamples(t);if(n)throw new rC("Verbose predictLoop() is not implemented yet.");const s=Io(r,e),i=this.outputs.map(t=>[]);for(let e=0;e<s.length;++e){const n=en(()=>{const n=s[e][0],r=s[e][1],i=Ao(t,n,r),o=[];if(Array.isArray(i))for(let t=0;t<i.length;++t)o.push({key:this.inputs[t],value:i[t]});else o.push({key:this.inputs[0],value:i});const a=new qC(o);return Pi(this.outputs,a)});n.forEach((t,e)=>i[e].push(t))}return Ms(i.map(t=>fg(t,0)))})}predict(t,e={}){const n=Fo(t);Po(n,this.inputNames,this.feedInputShapes,!1);try{const t=null==e.batchSize?32:e.batchSize;return Ro(t),this.predictLoop(n,t)}finally{Mo(n,t)}}predictOnBatch(t){Po(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,r){if(null==this.optimizer_)throw new eC("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let i=0;i<this.feedOutputShapes.length;++i){const t=this.feedOutputShapes[i];this.feedLossFns[i]===ro?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(((t,e)=>{const n=Us(t.map(t=>t.shape[0]));n.sort();const r=Us(e.map(t=>t.shape[0]));if(r.sort(),n.length>1)throw new nC(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(t=>t.shape))}`);if(r.length>1)throw new nC(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(t=>t.shape))}`);if(n.length>0&&r.length>0&&!P(n,r))throw new nC(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${r[0]} target sample(s).`)})(t=Vo(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=Vo(e,this.feedOutputNames,s,!1,"target")),((t,e,n)=>{const r=[Qi,so,no];for(let s=0;s<t.length;++s){const i=t[s],o=e[s],a=n[s];if(null!=o){if(o===no&&1===i.shape[i.shape.length-1])throw new nC(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(o)){const t=i.shape.slice(1),e=a.slice(1);for(let n=0;n<t.length;++n){const r=t[n],s=e[n];if(null!=s&&r!==s)throw new nC(`A target Tensor with shape ${i.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}})(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&t[0].shape[0]%r!==0)throw new nC(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}standardizeUserData(t,e,n,r,s=!0,i){return Jh(this,null,function*(){const[o,a]=this.standardizeUserDataXY(t,e,s,i);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const t=No(r,this.outputNames);u=[];for(let e=0;e<t.length;++e)u.push(yield Co(a[e],0,t[e]))}return[o,a,u]})}testLoop(t,e,n,r=0,s){return en(()=>{const i=this.checkNumSamples(e,n,s,"steps"),o=[];if(r>0)throw new rC("Verbose mode is not implemented yet.");if(null!=s)throw new rC("steps mode in testLoop() is not implemented yet");{const r=Io(i,n),s=mr(li(0,i));for(let n=0;n<r.length;++n){const i=r[n][0],a=r[n][1],u=fi(s,i,a-i),l=Oo(e,u),c=t(l);if(0===n)for(let t=0;t<c.length;++t)o.push(sr(0));for(let t=0;t<c.length;++t){const e=c[t];o[t]=Hy(o[t],Jy(a-i,e))}}for(let t=0;t<o.length;++t)o[t]=Ky(o[t],i)}return o})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const r=t[n];let s=r;Fs(t,r)>1&&(s+=`_${Fs(t.slice(0,n),r)}`),e.push(s)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],o=this.collectedTrainableWeights.map(t=>t.read()),a=this.optimizer_.minimize(()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const o=new qC(t),a=Pi(this.outputs,o,{training:!0});let u;for(let n=0;n<this.lossFunctions.length;++n){let t=(0,this.lossFunctions[n])(r[n],a[n]);null!=s[n]&&(t=So(t,s[n]));const i=Ux(t);e.push(i),u=0===n?t:Hy(u,t)}for(let n=0;n<this.metricsTensors.length;++n){let t;if(this.outputs.length>1&&n<this.outputs.length)t=e[n];else{const e=this.metricsTensors[n][0],s=this.metricsTensors[n][1];t=Ux(e(r[s],a[s]))}rn(t),i.push(t)}return u=Ux(u),this.calculateLosses().forEach(t=>{u=Hy(u,t)}),u},!0,o);return[a].concat(i)}}makeTestFunction(){this.testFunction=t=>en(()=>{const e=[];let n;const r=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let t=0;t<this.inputs.length;++t)i.push({key:this.inputs[t],value:r[t]});const o=new qC(i),a=Pi(this.outputs,o);for(let t=0;t<this.lossFunctions.length;++t){const r=this.lossFunctions[t],i=Ux(r(s[t],a[t]));n=0===t?i:Hy(n,i),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],r=this.metricsTensors[t][1],i=Ux(n(s[r],a[r]));e.push(i)}return e})}fit(t,e){return Jh(this,arguments,function*(t,e,n={}){return function(t,e,n){return Jh(this,arguments,function*(t,e,n,r={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,i,o,a,u,l,c,h,d;t.isTraining=!0;try{const f=null==r.batchSize?32:r.batchSize;Ro(f);const p=!1,m=yield t.standardizeUserData(e,n,r.sampleWeight,r.classWeight,p,f);s=m[0],i=m[1],d=m[2];let b,y=!1;if(null!=r.validationData&&r.validationData.length>0){if(y=!0,2!==r.validationData.length)throw 3===r.validationData.length?new rC("validationData including sample weights is not supported yet."):new nC(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);u=r.validationData[0],l=r.validationData[1];const e=!0,n=yield t.standardizeUserData(u,l,null,null,e,f);c=n[0],h=n[1],b=c.concat(h)}else if(null!=r.validationSplit&&r.validationSplit>0&&1>r.validationSplit){y=!0;const t=Math.floor(s[0].shape[0]*(1-r.validationSplit)),e=s[0].shape[0];c=Ao(s,t,e),o=s,s=Ao(s,0,t),h=Ao(i,t,e),a=i,i=Ao(i,0,t),b=c.concat(h)}else null!=r.validationSteps&&(y=!0);const g=s.concat(i).concat(d);t.checkTrainableWeightsConsistency();const x=t.makeTrainFunction(),w=t.getDedupedMetricsNames();let v,$;y?(t.makeTestFunction(),v=t.testFunction,$=w.slice().concat(w.map(t=>"val_"+t))):(v=null,b=[],$=w.slice());const k=Ki(r.callbacks,r.yieldEvery),N=yield function(t,e,n,r,s,i,o,a,u,l,c,h,d){return Jh(this,null,function*(){null==s&&(s=32),null==i&&(i=1),null==c&&(c=!0),null==d&&(d=0);let f=!1;null!=u&&null!=l&&(f=!0);const p=t.checkNumSamples(n,s,null,"steps_per_epoch");let m;null!=p&&(m=li(0,p)),null==o&&(o=1);const{callbackList:b,history:y}=Ji(a,o,i,d,p,null,s,f,h);b.setModel(t),t.history=y,yield b.onTrainBegin(),t.stopTraining_=!1;for(let o=d;i>o;++o){yield b.onEpochBegin(o);const i={};{if("batch"===c)throw new rC("batch shuffling is not implemneted yet");c&&_(m);const o=mr(m),a=Io(p,s);for(let c=0;c<a.length;++c){const h={};if(yield b.onBatchBegin(c,h),en(()=>{const d=a[c][0],p=a[c][1],m=fi(o,d,p-d);h.batch=c,h.size=p-d;const b=Oo(n,m),y=e(b);for(let t=0;t<r.length;++t){const e=r[t],n=y[t];h[e]=n,rn(n)}if(c===a.length-1&&f){const e=t.testLoop(u,l,s);for(let t=0;t<r.length;++t){const n=r[t],s=e[t];rn(s),i["val_"+n]=s}}}),yield b.onBatchEnd(c,h),Xi(h),t.stopTraining_)break}o.dispose()}if(yield b.onEpochEnd(o,i),t.stopTraining_)break}return yield b.onTrainEnd(),yield t.history.syncData(),t.history})}(t,x,g,w,f,r.epochs,r.verbose,k,v,b,r.shuffle,$,r.initialEpoch);return N}finally{t.isTraining=!1,Mo(s,e),Mo(i,n),Mo(o,e),Mo(a,n),Mo(c,u),Mo(h,l),null!=d&&nn(d)}})}(this,t,e,n)})}fitDataset(t,e){return Jh(this,null,function*(){return function(t,e,n){return Jh(this,null,function*(){const r=null!=n.batchesPerEpoch;if(F(null!=t.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),F(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),F(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),F(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),F(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const s=null!=n.validationData;let i,o;if(s)if(_o(n.validationData))F(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{const t=(t=>{if(3===t.length)throw new rC("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}})(n.validationData);i=t.xs,o=t.ys}const a=t.makeTrainFunction(),u=t.getDedupedMetricsNames();let l;l=s?u.slice().concat(u.map(t=>"val_"+t)):u.slice();const c=Ki(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:f}=Ji(c,h,n.epochs,null,null,((t,e)=>{let n=null;return null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n})(e,n),null,s,l);d.setModel(t),t.history=f,yield d.onTrainBegin(),t.stopTraining_=!1;let p=null==n.initialEpoch?0:n.initialEpoch,m=yield e.iterator();for(;p<n.epochs;){const l={};yield d.onEpochBegin(p);let c=0,h=0;for(r||(m=yield e.iterator());!r||c<n.batchesPerEpoch;){const e=yield m.next();if(r&&e.done)break;if(null!=e.value){const{xs:r,ys:s}=Eo(t,e.value),i={};i.batch=h,i.size=r[0].shape[0],yield d.onBatchBegin(h,i);const o=[];if(null!=n.classWeight){const e=No(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)o.push(yield Co(s[t],0,e[t]))}const l=r.concat(s).concat(o),f=a(l);nn(l);for(let t=0;t<u.length;++t){const e=u[t],n=f[t];i[e]=n,rn(n)}yield d.onBatchEnd(h,i),Xi(i),h++,c++}if(r?c>=n.batchesPerEpoch:e.done){if(s){let e;e=_o(n.validationData)?Ds(yield t.evaluateDataset(n.validationData,{batches:n.validationBatches})):Ds(t.evaluate(i,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)l[`val_${t.metricsNames[n]}`]=e[n]}break}if(t.stopTraining_)break}if(yield d.onEpochEnd(p,l),p++,t.stopTraining_)break}return yield d.onTrainEnd(),yield t.history.syncData(),t.history}finally{t.isTraining=!1}})}(this,t,e)})}trainOnBatch(t,e){return Jh(this,null,function*(){const n=yield this.standardizeUserData(t,e),r=n[0],s=n[1],i=this.makeTrainFunction()(r.concat(s)),o=[];for(const t of i){const e=yield t.data();o.push(e[0])}return nn(i),Mo(n[0],t),Mo(n[1],e),Ms(o)})}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let i=0;i<r.length;++i)n&&!r[i].trainable||e.push({name:r[i].originalName,tensor:s[i]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=tn().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-tn().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=Ls(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(t=>Ls(t))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=Ls(n[r])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Ls(mo(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>Ls(mo(t)));{const t={};for(const e in this.metrics)t[e]=Ls(mo(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=Yi($o(t.optimizer_config));let n,r;if("string"==typeof t.loss)n=Vs(t.loss);else if(Array.isArray(t.loss))n=t.loss.map(t=>Vs(t));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=Vs(t.loss[e])}if(Array.isArray(t.metrics))r=t.metrics.map(t=>Vs(t));else if(null!=t.metrics){r={};for(const e in t.metrics)r[e]=Vs(t.metrics[e])}this.compile({loss:n,metrics:r,optimizer:e})}save(t,e){return Jh(this,null,function*(){if("string"==typeof t){const e=Kb(t);if(0===e.length)throw new nC(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new nC(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new nC("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=yield ke(this.getNamedWeights(e)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${mS}`,convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:s}=yield ke(yield this.optimizer.getWeights(),t);n.specs.push(...s),n.data=Ee([n.data,e])}if(null!=this.userDefinedMetadata){const t=!0;bo(this.userDefinedMetadata,this.name,t),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,t.save(r)})}setUserDefinedMetadata(t){bo(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}yS.className="Model",An(yS);class gS extends yS{}gS.className="Functional",An(gS);class xS extends yS{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:Ys("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(t=>0>t))throw new nC(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof xS||t instanceof yS;let n;if(e){if(n=t,1!==n.outputs.length)throw new nC("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new nC("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new nC("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=Vi({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new nC(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new nC("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=Li(this.outputs[0])}this.inboundNodes=[],new WC({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Os(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(Ii(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new yS({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new eC("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}evaluateDataset(t,e){return Jh(this,null,function*(){if(!this.built)throw new eC("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)})}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}fit(t,e){return Jh(this,arguments,function*(t,e,n={}){if(!this.built)throw new eC("The model needs to be compiled before being used.");return this.model.fit(t,e,n)})}fitDataset(t,e){return Jh(this,null,function*(){if(!this.built)throw new eC("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)})}trainOnBatch(t,e){return Jh(this,null,function*(){return this.model.trainOnBatch(t,e)})}static fromConfig(t,e,n={},r=!1){let s,i={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new nC("Legacy serialization format not supported yet.");s=e}else F(null!=e.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=e.layers,delete e.layers,i=e;const o=new t(i);if(!(o instanceof xS))throw new rC(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(const a of s){const t=Yi(a,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),o.add(t)}return o}set stopTraining(t){if(null==this.model)throw new nC("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new nC("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}xS.className="Sequential",An(xS);let wS=class extends Wy{getConfig(){return{}}};class vS extends wS{apply(t,e=1){return((t,e=1)=>{if(1!==e)throw new rC(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return tx(t)})(t,e)}}vS.className="elu",An(vS);class $S extends wS{apply(t){return Yw(t)}}$S.className="selu",An($S);class kS extends wS{apply(t){return Ww(t)}}kS.className="relu",An(kS);class NS extends wS{apply(t){return en(()=>Gx(6,Ww(t)))}}NS.className="relu6",An(NS);class CS extends wS{apply(t){return t}}CS.className="linear",An(CS);class SS extends wS{apply(t){return pg(t)}}SS.className="sigmoid",An(SS);class ES extends wS{apply(t){return(t=>en(()=>{const e=Hy(.5,Jy(.2,t));return Eg(e,0,1)}))(t)}}ES.className="hardSigmoid",An(ES);class TS extends wS{apply(t){return Tx(t)}}TS.className="softplus",An(TS);class _S extends wS{apply(t){return(t=>en(()=>Ky(t,Hy(Yy(t),1))))(t)}}_S.className="softsign",An(_S);class RS extends wS{apply(t){return bg(t)}}RS.className="tanh",An(RS);let AS=class extends wS{apply(t,e=-1){return av(t,e)}};AS.className="softmax",An(AS);class OS extends wS{apply(t,e=-1){return Ax(t,e)}}OS.className="logSoftmax",An(OS);class IS extends wS{apply(t,e=1){return en(()=>Jy(pg(Jy(t,e)),t))}}IS.className="swish",An(IS);class FS extends wS{apply(t){return en(()=>Jy(t,bg(Tx(t))))}}FS.className="mish",An(FS);class MS extends Wy{}class DS extends MS{constructor(t){super(),Go(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return en(()=>{let e=hr([1]);return this.hasL1&&(e=Hy(e,ax(Jy(this.l1,Yy(t))))),this.hasL2&&(e=Hy(e,ax(Jy(this.l2,$i(t))))),cg(e,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}DS.className="L1L2",An(DS);const LS={l1l2:"L1L2"};class VS extends GC{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=Oi(t);let n=Ww(t);return null!=this.maxValue&&(n=Eg(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}VS.className="ReLU",An(VS);class PS extends GC{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Oi(t);return $x(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}PS.className="LeakyReLU",An(PS);class BS extends GC{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=_i(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Ho(t.alphaRegularizer),this.alphaConstraint=qi(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new nC(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=Ii(t)).slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)e[r-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<t.length;++r)n[r]=t[r];this.inputSpec=[new PC({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=Oi(t),ow(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Ti(this.alphaInitializer),alphaRegularizer:jo(this.alphaRegularizer),alphaConstraint:Gi(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}BS.className="PReLU",An(BS);let zS=class extends GC{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new rC(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Oi(t);return tx(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}};zS.className="ELU",An(zS);class WS extends GC{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=Oi(t);return Jy(n,yy(yx(n,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}WS.className="ThresholdedReLU",An(WS);class US extends GC{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new AS).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=Oi(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}US.className="Softmax",An(US);class GS extends GC{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",GS.verifyArgs(e),this.rank=t,Hs(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new rC(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Xo(e.kernelSize,t,"kernelSize"),this.strides=Xo(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,Qs(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Zs(this.dataFormat),this.activation=Uo(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=_i(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=qi(e.biasConstraint),this.biasRegularizer=Ho(e.biasRegularizer),this.activityRegularizer=Ho(e.activityRegularizer),this.dilationRate=Xo(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new nC(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new nC(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new nC(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if(Is("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!qs(t.kernelSize,"number",1,3))throw new nC(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:zo(this.activation),useBias:this.useBias,biasInitializer:Ti(this.biasInitializer),biasRegularizer:jo(this.biasRegularizer),activityRegularizer:jo(this.activityRegularizer),biasConstraint:Gi(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class jS extends GS{constructor(t,e){super(t,e),this.kernel=null,jS.verifyArgs(e),this.filters=e.filters,Hs(this.filters,"filters"),this.kernelInitializer=_i(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=qi(e.kernelConstraint),this.kernelRegularizer=Ho(e.kernelRegularizer)}build(t){t=Ii(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new nC(`The channel dimension of the input should be defined. Found ${t[e]}`);const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return en(()=>{let e;t=Oi(t);const n=null==this.bias?null:this.bias.read(),r=Ks(this.activation.getClassName());if(null!=r&&2===this.rank)e=Qo(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=((t,e,n,r=1,s="valid",i,o=1)=>en(()=>{if(null==i&&(i="channelsLast"),Zs(i),3!==t.shape.length)throw new nC(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(3!==e.shape.length)throw new nC(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new nC(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if("channelsFirst"===i&&(t=Oy(t,[0,2,1])),"causal"===s)throw new rC("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=Ig(t,e,r,"same"===s?"same":"valid","NWC",o);return null!=n&&(a=Ni(a,n)),a}))(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=Qo(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new rC("convolutions greater than 3D are not implemented yet.");e=((t,e,n,r=[1,1,1],s="valid",i,o)=>en(()=>{if(null==i&&(i="channelsLast"),Zs(i),4!==t.rank&&5!==t.rank)throw new nC(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(4!==e.rank&&5!==e.rank)throw new nC(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let a=Zo(t,i);if("causal"===s)throw new rC("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=Dg(a,e,r,"same"===s?"same":"valid","NDHWC",o),null!=n&&(a=Ni(a,n)),"channelsFirst"===i&&(a=Oy(a,[0,4,1,2,3])),a}))(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e})}computeOutputShape(t){t=Ii(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let s=0;s<n.length;++s){const t=Ko(n[s],this.kernelSize[s],this.padding,this.strides[s],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[s]);e.push(t)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:Ti(this.kernelInitializer),kernelRegularizer:jo(this.kernelRegularizer),kernelConstraint:Gi(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||1>t.filters)throw new nC(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class qS extends jS{constructor(t){super(2,t),qS.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!qs(t.kernelSize,"number",1,2))throw new nC(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}qS.className="Conv2D",An(qS);class HS extends jS{constructor(t){super(3,t),HS.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new nC(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}HS.className="Conv3D",An(HS);class XS extends qS{constructor(t){if(super(t),this.inputSpec=[new PC({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new nC(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(4!==(t=Ii(t)).length)throw new nC("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new nC("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new PC({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return en(()=>{let e=Oi(t);if(4!==e.shape.length)throw new nC(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,r=n[0];let s,i;"channelsFirst"===this.dataFormat?(s=2,i=3):(s=1,i=2);const o=n[s],a=n[i],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,Jo(o,c,u,this.padding),Jo(a,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=Oy(e,[0,2,3,1]));let f=Mg(e,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(f=Oy(f,[0,3,1,2])),null!=this.bias&&(f=Ni(f,this.bias.read(),this.dataFormat)),null!=this.activation&&(f=this.activation.apply(f)),f})}computeOutputShape(t){const e=(t=Ii(t)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const i=this.kernelSize[0],o=this.kernelSize[1],a=this.strides[0],u=this.strides[1];return e[n]=this.filters,e[r]=Jo(e[r],a,i,this.padding),e[s]=Jo(e[s],u,o,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}XS.className="Conv2DTranspose",An(XS);class KS extends HS{constructor(t){if(super(t),this.inputSpec=[new PC({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new nC(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(5!==(t=Ii(t)).length)throw new nC("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new nC("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new PC({ndim:5,axes:{[e]:n}})],this.built=!0}call(t,e){return en(()=>{let e=Oi(t);if(5!==e.shape.length)throw new nC(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,r=n[0];let s,i,o;"channelsFirst"===this.dataFormat?(o=2,s=3,i=4):(o=1,s=2,i=3);const a=n[o],u=n[s],l=n[i],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],f=this.strides[0],p=this.strides[1],m=this.strides[2],b=[r,Jo(a,f,c,this.padding),Jo(u,p,h,this.padding),Jo(l,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=Oy(e,[0,2,3,4,1]));let y=Vg(e,this.kernel.read(),b,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Oy(y,[0,4,1,2,3])),null!==this.bias&&(y=Ni(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y})}computeOutputShape(t){const e=(t=Ii(t)).slice();let n,r,s,i;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,i=4):(n=4,r=1,s=2,i=3);const o=this.kernelSize[0],a=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],h=this.strides[2];return e[n]=this.filters,e[r]=Jo(e[r],l,o,this.padding),e[s]=Jo(e[s],c,a,this.padding),e[i]=Jo(e[i],h,u,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}KS.className="Conv3DTranspose",An(KS);class JS extends jS{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new nC("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new nC("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new nC(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=_i(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Ho(e.depthwiseRegularizer),this.depthwiseConstraint=qi(e.depthwiseConstraint),this.pointwiseInitializer=_i(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Ho(e.pointwiseRegularizer),this.pointwiseConstraint=qi(e.pointwiseConstraint)}build(t){if((t=Ii(t)).length<this.rank+2)throw new nC(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||0>t[e])throw new nC(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let o=0;o<this.rank;++o)s.push(1);s.push(n*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new PC({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return en(()=>{let e;if(t=Oi(t),1===this.rank)throw new rC("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=Oy(t,[0,2,3,1])),e=Zw(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=Ni(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=Oy(e,[0,3,1,2])),e})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Ti(this.depthwiseInitializer),t.pointwiseInitializer=Ti(this.pointwiseInitializer),t.depthwiseRegularizer=jo(this.depthwiseRegularizer),t.pointwiseRegularizer=jo(this.pointwiseRegularizer),t.depthwiseConstraint=Gi(this.depthwiseConstraint),t.pointwiseConstraint=Gi(this.pointwiseConstraint),t}}JS.className="SeparableConv";class YS extends JS{constructor(t){super(2,t)}}YS.className="SeparableConv2D",An(YS);class ZS extends jS{constructor(t){super(1,t),ZS.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!qs(t.kernelSize,"number",1,1))throw new nC(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}ZS.className="Conv1D",An(ZS);class QS extends GC{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return en(()=>{if(t=Oi(t),"channelsLast"===this.dataFormat){const e=mi(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return mi(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=mi(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return mi(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}QS.className="Cropping2D",An(QS);class tE extends GC{constructor(t){var e;super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Zs(this.dataFormat),this.interpolation=null==t.interpolation?"nearest":t.interpolation,e=this.interpolation,js(cC,"InterpolationFormat",e)}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return en(()=>{let e=Oi(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=Oy(e,[0,2,3,1]);const t=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?N$.resizeNearestNeighbor(e,[t,r]):N$.resizeBilinear(e,[t,r]);return Oy(s,[0,3,1,2])}{const t=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?N$.resizeNearestNeighbor(e,[t,r]):N$.resizeBilinear(e,[t,r])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}tE.className="UpSampling2D",An(tE);class eE extends GS{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=_i(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=qi(t.depthwiseConstraint),this.depthwiseRegularizer=Ho(t.depthwiseRegularizer)}build(t){if(4>(t=Ii(t)).length)throw new nC(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||0>t[e])throw new nC(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return en(()=>{let e=((t,e,n=[1,1],r="valid",s,i)=>en(()=>{null==s&&(s="channelsLast"),Zs(s);let o=Yo(t,s);if(4!==t.rank)throw new nC(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(4!==e.rank)throw new nC(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return o=jg(o,e,n,"same"===r?"same":"valid","NHWC",i),"channelsFirst"===s&&(o=Oy(o,[0,3,1,2])),o}))(t=Oi(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=Ni(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e})}computeOutputShape(t){t=Ii(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,s=Ko(e,this.kernelSize[0],this.padding,this.strides[0]),i=Ko(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,s,i]:[t[0],s,i,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Ti(this.depthwiseInitializer),t.depthwiseRegularizer=jo(this.depthwiseRegularizer),t.depthwiseConstraint=Gi(this.depthwiseRegularizer),t}}eE.className="DepthwiseConv2D",An(eE);class nE extends GC{constructor(t){let e;if(super(t),null==t.cell)throw new nC("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new cE({cells:t.cell}):t.cell,null==e.stateSize)throw new nC("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this.P=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new PC({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?li(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(t=>null):this.states_}setStates(t){this.states_=t}computeOutputShape(t){Ri(t)&&(t=t[0]);let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,e){return en(()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map(t=>null);return[t].concat(e)}return t})}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;t>n;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new rC("Constants support is not implemented in RNN yet.");Ri(t)&&(t=t[0]);const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new PC({shape:[e,null,...n]});const r=[t[0]].concat(t.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!P(this.stateSpec.map(t=>t.shape[t.shape.length-1]),s))throw new nC(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map(t=>new PC({shape:[null,t]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){en(()=>{if(!this.stateful)throw new tC("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new nC("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>hr([n,t])):this.states_=[hr([n,this.cell.stateSize])];else if(null==t)nn(this.states_),null!=this.keptStates&&(nn(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>hr([n,t])):this.states_[0]=hr([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new nC(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);!0===e?this.keptStates.push(this.states_.slice()):nn(this.states_);for(let e=0;e<this.states_.length;++e){const r=t[e],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,i=[n,s];if(!P(r.shape,i))throw new nC(`State ${e} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[e]=r}}this.states_=this.states_.map(t=>rn(t.clone()))})}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=ta(t,n,r,this.numConstants);t=s.inputs,n=s.initialState,r=s.constants;let i=[],o=[];if(null!=n){e.initialState=n,i=i.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new PC({shape:t.shape}));o=o.concat(this.stateSpec)}if(null!=r&&(e.constants=r,i=i.concat(r),this.numConstants=r.length),i[0]instanceof BC){const n=[t].concat(i),r=this.inputSpec.concat(o),s=this.inputSpec;this.inputSpec=r;const a=super.apply(n,e);return this.inputSpec=s,a}return super.apply(t,e)}call(t,e){return en(()=>{const n=null==e?null:e.mask,r=null==e?null:e.training;let s=null==e?null:e.initialState;t=Oi(t),null==s&&(s=this.stateful?this.states_:this.getInitialState(t));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==i)throw new nC(`RNN Layer has ${i} state(s) but was passed ${s.length} initial state(s).`);this.unroll;const o={training:r},a=ea((t,e)=>{const n=this.cell.call([t].concat(e),o);return[n[0],n.slice(1)]},t,s,this.goBackwards,n,0,this.unroll,this.returnSequences),u=a[0],l=a[1],c=a[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h})}getInitialState(t){return en(()=>{let e=hr(t.shape);return e=ax(e,[1,2]),e=di(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(t=>t>1?gi(e,[1,t]):e):this.cell.stateSize>1?[gi(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===nE.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e,n={}){const r=Yi(e.cell,n);return new t(Object.assign(e,{cell:r}))}}nE.className="RNN",An(nE);class rE extends GC{}class sE extends rE{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Hs(this.units,"units"),this.activation=Uo(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=_i(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=_i(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=_i(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ho(t.kernelRegularizer),this.recurrentRegularizer=Ho(t.recurrentRegularizer),this.biasRegularizer=Ho(t.biasRegularizer),this.kernelConstraint=qi(t.kernelConstraint),this.recurrentConstraint=qi(t.recurrentConstraint),this.biasConstraint=qi(t.biasConstraint),this.dropout=ai([1,ui([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=ai([1,ui([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Ii(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return en(()=>{if(2!==t.length)throw new nC(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const r=null!=e.training&&e.training;let s;this.dropout>0&&1>this.dropout&&null==this.dropoutMask&&(this.dropoutMask=na({ones(){return Yx(t)},rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),this.recurrentDropout>0&&1>this.recurrentDropout&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=na({ones(){return Yx(n)},rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=this.recurrentDropoutMask;s=wi(null!=i?Jy(t,i):t,this.kernel.read()),null!=this.bias&&(s=Ni(s,this.bias.read())),null!=o&&(n=Jy(n,o));let a=Hy(s,wi(n,this.recurrentKernel.read()));return null!=this.activation&&(a=this.activation.apply(a)),[a,a]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:zo(this.activation),useBias:this.useBias,kernelInitializer:Ti(this.kernelInitializer),recurrentInitializer:Ti(this.recurrentInitializer),biasInitializer:Ti(this.biasInitializer),kernelRegularizer:jo(this.kernelRegularizer),recurrentRegularizer:jo(this.recurrentRegularizer),biasRegularizer:jo(this.biasRegularizer),activityRegularizer:jo(this.activityRegularizer),kernelConstraint:Gi(this.kernelConstraint),recurrentConstraint:Gi(this.recurrentConstraint),biasConstraint:Gi(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}sE.className="SimpleRNNCell",An(sE);class iE extends nE{constructor(t){t.cell=new sE(t),super(t)}call(t,e){return en(()=>{null!=this.cell.dropoutMask&&(nn(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(nn(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})})}static fromConfig(t,e){return new t(e)}}iE.className="SimpleRNN",An(iE);class oE extends rE{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new nC("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Hs(this.units,"units"),this.activation=Uo(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Uo(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=_i(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=_i(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=_i(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ho(t.kernelRegularizer),this.recurrentRegularizer=Ho(t.recurrentRegularizer),this.biasRegularizer=Ho(t.biasRegularizer),this.kernelConstraint=qi(t.kernelConstraint),this.recurrentConstraint=qi(t.recurrentConstraint),this.biasConstraint=qi(t.biasConstraint),this.dropout=ai([1,ui([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=ai([1,ui([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=Ii(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return en(()=>{if(2!==t.length)throw new nC(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const n=null!=e.training&&e.training;let r=t[1];t=t[0],this.dropout>0&&1>this.dropout&&null==this.dropoutMask&&(this.dropoutMask=na({ones(){return Yx(t)},rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),this.recurrentDropout>0&&1>this.recurrentDropout&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=na({ones(){return Yx(r)},rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,a,u;this.dropout>0&&1>this.dropout&&(t=Jy(t,s[0]));let l=wi(t,this.kernel.read());this.useBias&&(l=Ni(l,this.bias.read())),this.recurrentDropout>0&&1>this.recurrentDropout&&(r=Jy(r,i[0]));const c=this.recurrentKernel.read(),[h,d]=hv(c,[2*this.units,this.units],c.rank-1),f=wi(r,h),[p,m,b]=hv(l,3,l.rank-1),[y,g]=hv(f,2,f.rank-1);o=this.recurrentActivation.apply(Hy(p,y)),a=this.recurrentActivation.apply(Hy(m,g));const x=wi(Jy(a,r),d);u=this.activation.apply(Hy(b,x));const w=Hy(Jy(o,r),Jy(Hy(1,Ry(o)),u));return[w,w]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:zo(this.activation),recurrentActivation:zo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ti(this.kernelInitializer),recurrentInitializer:Ti(this.recurrentInitializer),biasInitializer:Ti(this.biasInitializer),kernelRegularizer:jo(this.kernelRegularizer),recurrentRegularizer:jo(this.recurrentRegularizer),biasRegularizer:jo(this.biasRegularizer),activityRegularizer:jo(this.activityRegularizer),kernelConstraint:Gi(this.kernelConstraint),recurrentConstraint:Gi(this.recurrentConstraint),biasConstraint:Gi(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}oE.className="GRUCell",An(oE);class aE extends nE{constructor(t){t.implementation,t.cell=new oE(t),super(t)}call(t,e){return en(()=>{null!=this.cell.dropoutMask&&(nn(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(nn(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})})}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}aE.className="GRU",An(aE);class uE extends rE{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Hs(this.units,"units"),this.activation=Uo(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Uo(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=_i(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=_i(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=_i(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=Ho(t.kernelRegularizer),this.recurrentRegularizer=Ho(t.recurrentRegularizer),this.biasRegularizer=Ho(t.biasRegularizer),this.kernelConstraint=qi(t.kernelConstraint),this.recurrentConstraint=qi(t.recurrentConstraint),this.biasConstraint=qi(t.biasConstraint),this.dropout=ai([1,ui([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=ai([1,ui([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=Ii(t))[t.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;r=new((e=class extends wC{apply(e,r){const s=t.apply([n]),i=(new $C).apply([n]),o=t.apply([2*n]);return yi(yi(s,i),o)}}).className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return en(()=>{const n=null!=e.training&&e.training;if(3!==t.length)throw new nC(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let r=t[1];const s=t[2];t=t[0],this.dropout>0&&1>this.dropout&&null==this.dropoutMask&&(this.dropoutMask=na({ones(){return Yx(t)},rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),this.recurrentDropout>0&&1>this.recurrentDropout&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=na({ones(){return Yx(r)},rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=this.recurrentDropoutMask;let a,u,l,c;this.dropout>0&&1>this.dropout&&(t=Jy(t,i[0]));let h=wi(t,this.kernel.read());this.recurrentDropout>0&&1>this.recurrentDropout&&(r=Jy(r,o[0])),h=Hy(h,wi(r,this.recurrentKernel.read())),this.useBias&&(h=Ni(h,this.bias.read()));const[d,f,p,m]=hv(h,4,h.rank-1);a=this.recurrentActivation.apply(d),u=this.recurrentActivation.apply(f),l=Hy(Jy(u,s),Jy(a,this.activation.apply(p))),c=this.recurrentActivation.apply(m);const b=Jy(c,this.activation.apply(l));return[b,b,l]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:zo(this.activation),recurrentActivation:zo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ti(this.kernelInitializer),recurrentInitializer:Ti(this.recurrentInitializer),biasInitializer:Ti(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:jo(this.kernelRegularizer),recurrentRegularizer:jo(this.recurrentRegularizer),biasRegularizer:jo(this.biasRegularizer),activityRegularizer:jo(this.activityRegularizer),kernelConstraint:Gi(this.kernelConstraint),recurrentConstraint:Gi(this.recurrentConstraint),biasConstraint:Gi(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}uE.className="LSTMCell",An(uE);class lE extends nE{constructor(t){t.implementation,t.cell=new uE(t),super(t)}call(t,e){return en(()=>{null!=this.cell.dropoutMask&&(nn(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(nn(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})})}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}lE.className="LSTM",An(lE);class cE extends rE{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return en(()=>{let n=t.slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let i;for(let o=0;o<this.cells.length;++o){const a=this.cells[o];n=r[o],i=0===o?[t[0]].concat(n):[i[0]].concat(n),i=a.call(i,e),s.push(i.slice(1))}n=[];for(const t of s.slice().reverse())n.push(...t);return[i[0]].concat(n)})}build(t){let e;Ri(t)&&(t=t[0]),this.cells.forEach((n,r)=>{ei(`RNNCell_${r}`,()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map(t=>({className:t.getClassName(),config:t.getConfig()}))};return Object.assign({},t,e)}static fromConfig(t,e,n={}){const r=[];for(const s of e.cells)r.push(Yi(s,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return Mi(t)}setWeights(t){const e=[];for(const n of this.cells){const r=n.weights.length,s=t.splice(r);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],s[t]])}Di(e)}}cE.className="StackedRNNCells",An(cE);class hE extends nE{constructor(t){if(t.unroll)throw new rC("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new rC("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new PC({ndim:5})]}call(t,e){return en(()=>{if(null!=this.cell.dropoutMask&&(nn(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(nn(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new nC("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return en(()=>{const{stateSize:e}=this.cell,n=t.shape,r=this.computeSingleOutputShape(n),s=hr([r[0],...r.slice(2)]);return Array.isArray(e)?Array(e.length).fill(s):[s]})}resetStates(t,e=!1){en(()=>{if(!this.stateful)throw new tC("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new nC("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>hr(s)):this.states_=[hr(s)];else if(null==t)nn(this.states_),null!=this.keptStates&&(nn(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>hr(s)):this.states_[0]=hr(s);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new nC(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):nn(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],r=s;if(!P(n.shape,r))throw new nC(`State ${e} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map(t=>rn(t.clone()))})}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:r,padding:s,strides:i,dilationRate:o}=this.cell,a="channelsFirst"===e,u=t[a?3:2],l=t[a?4:3],c=Ko(u,r[0],s,i[0],o[0]),h=Ko(l,r[1],s,i[1],o[1]);return[...t.slice(0,2),...a?[n,c,h]:[c,h,n]]}}hE.className="ConvRNN2D";class dE extends uE{constructor(t){const{filters:e,kernelSize:n,strides:r,padding:s,dataFormat:i,dilationRate:o}=t;super(Object.assign({},t,{units:e})),this.filters=e,Hs(this.filters,"filters"),this.kernelSize=Xo(n,2,"kernelSize"),this.kernelSize.forEach(t=>Hs(t,"kernelSize")),this.strides=Xo(r||1,2,"strides"),this.strides.forEach(t=>Hs(t,"strides")),this.padding=s||"valid",Qs(this.padding),this.dataFormat=i||"channelsLast",Zs(this.dataFormat),this.dilationRate=Xo(o||1,2,"dilationRate"),this.dilationRate.forEach(t=>Hs(t,"dilationRate"))}build(t){var e;t=Ii(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new nC(`The channel dimension of the input should be defined. Found ${t[n]}`);const r=t[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;t=new((e=class extends wC{apply(t,e){return bi([n.apply([r]),dr([r]),n.apply([2*r])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return en(()=>{if(3!==t.length)throw new nC(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training||!1,r=t[0],s=t[1],i=t[2];this.dropout>0&&1>this.dropout&&null==this.dropoutMask&&(this.dropoutMask=na({ones(){return Yx(r)},rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,a=(t,e,n)=>e&&e[n]?Jy(e[n],t):t;let u=a(r,o,0),l=a(r,o,1),c=a(r,o,2),h=a(r,o,3);this.recurrentDropout>0&&1>this.recurrentDropout&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=na({ones(){return Yx(s)},rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let f=a(s,d,0),p=a(s,d,1),m=a(s,d,2),b=a(s,d,3);const[y,g,x,w]=hv(this.kernel.read(),4,3),[v,$,k,N]=this.useBias?hv(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,v,this.padding),l=this.inputConv(l,g,$,this.padding),c=this.inputConv(c,x,k,this.padding),h=this.inputConv(h,w,N,this.padding);const[C,S,E,T]=hv(this.recurrentKernel.read(),4,3);f=this.recurrentConv(f,C),p=this.recurrentConv(p,S),m=this.recurrentConv(m,E),b=this.recurrentConv(b,T);const _=this.recurrentActivation.apply(Hy(u,f)),R=this.recurrentActivation.apply(Hy(l,p)),A=Hy(Jy(R,i),Jy(_,this.activation.apply(Hy(c,m)))),O=Jy(this.recurrentActivation.apply(Hy(h,b)),this.activation.apply(A));return[O,O,A]})}getConfig(){const t=super.getConfig(),{units:e}=t,n=((t,e)=>{var n={};for(var r in t)({}).hasOwnProperty.call(t,r)&&0>e.indexOf(r)&&(n[r]=t[r]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(t);s<r.length;s++)0>e.indexOf(r[s])&&{}.propertyIsEnumerable.call(t,r[s])&&(n[r[s]]=t[r[s]])}return n})(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(t,e,n,r){const s=Og(t,e,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Ni(s,n,this.dataFormat):s}recurrentConv(t,e){return Og(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}dE.className="ConvLSTM2DCell",An(dE);class fE extends hE{constructor(t){const e=new dE(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}fE.className="ConvLSTM2D",An(fE);class pE extends GC{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?e[r]:this.noiseShape[r]);return n}call(t,e){return en(()=>{this.invokeCallHook(t,e);const n=Oi(t);if(this.rate>0&&1>this.rate){const t=null!=e.training&&e.training,r=this.getNoiseShape(n);return Si(()=>Ci(n,this.rate,r,this.seed),()=>n,t)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}pE.className="Dropout",An(pE);class mE extends pE{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}mE.className="SpatialDropout1D",An(mE);class bE extends GC{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Hs(this.units,"units"),this.activation=Uo(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=_i(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=_i(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=qi(t.kernelConstraint),this.biasConstraint=qi(t.biasConstraint),this.kernelRegularizer=Ho(t.kernelRegularizer),this.biasRegularizer=Ho(t.biasRegularizer),this.activityRegularizer=Ho(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=Ii(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=Ii(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return en(()=>{this.invokeCallHook(t,e);const n=Oi(t),r=Ks(this.activation.getClassName());let s;return null!=r?s=wi(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=wi(n,this.kernel.read()),null!=this.bias&&(s=Ni(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s})}getConfig(){const t={units:this.units,activation:zo(this.activation),useBias:this.useBias,kernelInitializer:Ti(this.kernelInitializer),biasInitializer:Ti(this.biasInitializer),kernelRegularizer:jo(this.kernelRegularizer),biasRegularizer:jo(this.biasRegularizer),activityRegularizer:jo(this.activityRegularizer),kernelConstraint:Gi(this.kernelConstraint),biasConstraint:Gi(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}bE.className="Dense",An(bE);class yE extends GC{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Ii(t);for(const e of t.slice(1))if(null==e)throw new nC(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],oi(t,1)]}call(t,e){return en(()=>{this.invokeCallHook(t,e);let n=Oi(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=Oy(n,t)}return(t=>{if(1>=t.rank)throw new nC(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],oi(t.shape,1)];return cg(t,e)})(n)})}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}yE.className="Flatten",An(yE);class gE extends GC{constructor(t){super(t),this.supportsMasking=!0,this.activation=Uo(t.activation)}call(t,e){return en(()=>{this.invokeCallHook(t,e);const n=Oi(t);return this.activation.apply(n)})}getConfig(){const t={activation:zo(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}gE.className="Activation",An(gE);class xE extends GC{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return en(()=>{return t=Oi(t),e=t,n=this.n,en(()=>{if(2!==e.shape.length)throw new nC(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return gi(di(e,1),[1,n,1])});var e,n})}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}xE.className="RepeatVector",An(xE);class wE extends GC{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return 0>t||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let s=1,i=null;for(let a=0;a<r.length;++a){const t=r[a];if(this.isUnknown(t)){if(null!==i)throw new nC("Can only specifiy one unknown dimension.");i=a}else s*=t}const o=oi(t);if(null!==i){if(0===s||o%s!==0)throw new nC(n);r[i]=o/s}else if(o!==s)throw new nC(n);return r}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return en(()=>{this.invokeCallHook(t,e);const n=Oi(t),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return cg(n,s)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}wE.className="Reshape",An(wE);class vE extends GC{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=li(1,t.dims.length+1);if(!P(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new PC({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=Ii(t)).slice();return this.dims.forEach((n,r)=>{e[r+1]=t[n]}),e}call(t,e){return Oy(Oi(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}vE.className="Permute",An(vE);class $E extends GC{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=Oi(t);return ng(Jx(n,this.maskValue),-1)}call(t,e){return en(()=>{this.invokeCallHook(t,e);const n=Oi(t),r=ng(Jx(n,this.maskValue),-1,!0);return Jy(n,yy(r,n.dtype))})}}$E.className="Masking",An($E);class kE extends GC{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(Ds(t.inputLength))}this.inputDim=t.inputDim,Hs(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Hs(this.outputDim,"outputDim"),this.embeddingsInitializer=_i(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Ho(t.embeddingsRegularizer),this.activityRegularizer=Ho(t.activityRegularizer),this.embeddingsConstraint=qi(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return en(()=>this.maskZero?(t=Oi(t),Jx(t,Jg(t))):null)}computeOutputShape(t){if(t=Ii(t),null==this.inputLength)return[...t,this.outputDim];const e=Ds(this.inputLength);if(e.length!==t.length-1)throw new nC(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let r=0;r<e.length;++r){const s=e[r],i=t[r+1];if(null!=s&&null!=i&&s!==i)throw new nC(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);null==s&&(e[n]=i),n++}}return[t[0],...e,this.outputDim]}call(t,e){return en(()=>{this.invokeCallHook(t,e);let n=Oi(t);"int32"!==n.dtype&&(n=hi(n,"int32"));const r=vi(this.embeddings.read(),cg(n,[n.size]));return cg(r,Ii(this.computeOutputShape(n.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ti(this.embeddingsInitializer),embeddingsRegularizer:jo(this.embeddingsRegularizer),activityRegularizer:jo(this.activityRegularizer),embeddingsConstraint:Gi(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}kE.className="Embedding",An(kE);class NE extends GC{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new rC}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const s=t[t.length-e.length+r],i=e[r];if(null==s||null==i||0>s||0>i)n.push(null);else if(1===s)n.push(i);else if(1===i)n.push(s);else{if(s!==i)throw new nC("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(s)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Ii(t)]),2>t.length)throw new nC(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const s of t)null!=s&&null!==s[0]&&e.push(s[0]);if(e=Us(e),e.length>1)throw new nC(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let s=1;s<t.length;++s){const e=null==t[s]?null:t[s].slice(1);n=this.computeElementwiseOpOutputShape(n,e)}const r=t.map(t=>t.length);-1===t.indexOf(null)&&1===Us(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return en(()=>{if(this.reshapeRequired){const e=[],n=t.map(t=>t.rank);if(-1===n.indexOf(null)){const r=ui(n);for(let n of t){const t=n.rank;for(let e=0;r-t>e;++e)n=di(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const i of t){const t=i.rank;if(null==t){const t=i.shape,r=t[0],s=t.slice(1).concat([r]);let o=cg(i,[r].concat(oi(t.slice(1))));o=Oy(o,[1,0]),o=cg(o,s),e.push(o),n=!0}else if(t>1){const r=li(1,t).concat([0]);e.push(Oy(i,r)),n=!0}else e.push(i)}let r=this.mergeFunction(e);const s=r.rank;if(n)if(null==s){const t=r.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));r=cg(Oy(cg(r,[-1,e]),[1,0]),n)}else if(s>1){const t=[s-1].concat(li(0,s-1));r=Oy(r,t)}return r}}return this.mergeFunction(t)})}computeOutputShape(t){let e;e=null==t[0]?null:t[0].slice(1);for(let r=1;r<t.length;++r){const n=null==t[r]?null:t[r].slice(1);e=this.computeElementwiseOpOutputShape(e,n)}let n=[];for(const r of t)null!=r&&null!==r[0]&&n.push(r[0]);return n=Us(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return en(()=>{if(null==e)return null;if(!Array.isArray(e))throw new nC("`mask` should be an Array");if(!Array.isArray(t))throw new nC("`inputs` should be an Array");if(e.length!==t.length)throw new nC(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(t=>null==t))return null;let n=(e=e.map(t=>null==t?t:hx(t,0)))[0];for(let t=1;t<e.length-1;++t)n=Ix(n,e[t]);return n})}}class CE extends NE{constructor(t){super(t)}mergeFunction(t){return en(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Hy(e,t[n]);return e})}}CE.className="Add",An(CE);class SE extends NE{constructor(t){super(t)}mergeFunction(t){return en(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Jy(e,t[n]);return e})}}SE.className="Multiply",An(SE);class EE extends NE{constructor(t){super(t)}mergeFunction(t){return en(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Hy(e,t[n]);return Jy(1/t.length,e)})}}EE.className="Average",An(EE);class TE extends NE{constructor(t){super(t)}mergeFunction(t){return en(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Wx(e,t[n]);return e})}}TE.className="Maximum",An(TE);class _E extends NE{constructor(t){super(t)}mergeFunction(t){return en(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Gx(e,t[n]);return e})}}_E.className="Minimum",An(_E);class RE extends NE{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new nC("A `Concatenate` layer should be called on a list of at least 2 inputs");let e=!0;for(const r of t)if(null!=r){e=!1;break}if(e)return;const n=[];for(let r=0;r<t.length;++r){const e=t[r].slice();e.splice(this.axis,1);let s=!1;for(const t of n)if(P(t,e)){s=!0;break}s||n.push(e)}if(n.length>1)throw new nC("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return en(()=>bi(t,this.axis))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new nC("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=0>this.axis?n.length+this.axis:this.axis;for(const s of e.slice(1)){if(null==n[r]||null==s[r]){n[r]=null;break}n[r]+=s[r]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new nC("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new nC("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new nC(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return en(()=>{let n=!0;if(e.forEach(t=>{null==t||(n=!1)}),n)return null;const r=[];for(let i=0;i<t.length;++i)null==e[i]?r.push(yy(Yx(t[i]),"bool")):e[i].rank<t[i].rank?r.push(hx(e[i],-1)):r.push(e[i]);const s=fg(r,this.axis);return eg(s,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}RE.className="Concatenate",An(RE);class AE extends NE{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){F(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new rC("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);if(e[r[0]]!==n[r[1]])throw new nC(`Dimension incompatibility: ${e[r[0]]} !== ${n[r[1]]}`)}mergeFunction(t){if(2!==t.length)throw new nC(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],r=t[1];return e=Array.isArray(this.axes)?this.axes.map((e,n)=>ra(e,t[n].shape.length)):[ra(this.axes,n.shape.length),ra(this.axes,r.shape.length)],this.normalize&&(n=Zi(n,e[0]),r=Zi(r,e[1])),((t,e,n)=>{if(t.shape.length>3||e.shape.length>3)throw new rC("batchDot is not implemented for tensors of 4D or higher rank yet");if(F(t.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`),F(t.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new rC("batchDot is not implemented for complex64-type Tensors yet.");const r=t.shape.length,s=e.shape.length;null==n&&(n=[r-1,s-2]);const i=n;return en(()=>{let n,o;if(r>s){n=r-s;const t=[];for(let e=0;n>e;++e)t.push(1);e=cg(e,e.shape.concat(t))}else if(s>r){n=s-r;const e=[];for(let t=0;n>t;++t)e.push(1);t=cg(t,t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)o=i[0]===i[1]?ax(Jy(t,e),i[0]):ax(Jy(Oy(t,[1,0]),e),i[1]);else{const n=i[0]!==t.shape.length-1,r=i[1]===e.shape.length-1;o=Ey(t,e,n,r)}if(n>0){let t;t=r>s?r+s-3:r-1;const e=[];for(let r=t;t+n>r;++r)e.push(r);o=pv(o,e)}return 1===o.shape.length&&(o=hx(o,1)),o})})(n,r,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[ra(this.axes,t.length),ra(this.axes,e.length)],n}computeOutputShape(t){F(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new rC("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);e.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=e.concat(n);return 1===s.length&&s.push(1),s}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}AE.className="Dot",An(AE);class OE extends GC{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return en(()=>{this.invokeCallHook(t,e);const n=Oi(t);return Si(()=>Hy(xi(n.shape,0,this.stddev),n),()=>n,e.training||!1)})}}OE.className="GaussianNoise",An(OE);class IE extends GC{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return en(()=>{this.invokeCallHook(t,e);const n=Oi(t);return this.rate>0&&1>this.rate?Si(()=>{const t=Math.sqrt(this.rate/(1-this.rate));return Jy(n,xi(n.shape,1,t))},()=>n,e.training||!1):n})}}IE.className="GaussianDropout",An(IE);class FE extends GC{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}K(t){return this.noiseShape||Oi(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return en(()=>{if(1>this.rate&&this.rate>0){const n=this.K(t);return Si(()=>{const e=Oi(t),r=-1.7580993408473766;let s=gx(Bw(n),this.rate);s=hi(s,"float32");const i=Kh((1-this.rate)*(1+this.rate*Kh(r,2)),-.5),o=-i*r*this.rate,a=Hy(Jy(e,s),Jy(Hy(s,-1),r));return Hy(Jy(a,i),o)},()=>Oi(t),e.training||!1)}return t})}}FE.className="AlphaDropout",An(FE);class ME extends GC{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=_i(t.betaInitializer||"zeros"),this.gammaInitializer=_i(t.gammaInitializer||"ones"),this.movingMeanInitializer=_i(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=_i(t.movingVarianceInitializer||"ones"),this.betaConstraint=qi(t.betaConstraint),this.gammaConstraint=qi(t.gammaConstraint),this.betaRegularizer=Ho(t.betaRegularizer),this.gammaRegularizer=Ho(t.gammaRegularizer)}build(t){t=Ii(t);const e=0>this.axis?this.axis+t.length:this.axis,n=t[e];if(null==n)throw new nC(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new PC({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return en(()=>{const n=null!=e.training&&e.training,r=Oi(t),s=r.shape,i=s.length,o=li(0,i),a=0>this.axis?this.axis+i:this.axis;o.splice(a,1);const u=Os(1,i);u[a]=s[a];const l=o.slice();l.sort();const c=!P(l,li(0,i).slice(0,i-1));if(!n)return(()=>{if(c){const t=cg(this.movingMean.read(),u),e=cg(this.movingVariance.read(),u),n=this.center?cg(this.beta.read(),u):null,s=this.scale?cg(this.gamma.read(),u):null;return sa(r,t,e,n,s,this.epsilon)}return sa(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,f]=((t,e,n,r,s=.001)=>P(r.slice().sort(),li(0,t.rank-1))?((t,e,n,r,s=.001)=>en(()=>{const i=Hx(t,r),o=i.mean,a=i.variance;return[sa(t,o,a,n,e,s),o,a]}))(t,e,n,r,s):((t,e,n,r,s=.001)=>en(()=>{const i=Hx(t,r),o=i.mean,a=i.variance,u=[];for(const e of li(0,t.rank))-1!==r.indexOf(e)?u.push(1):u.push(t.shape[e]);const l=cg(o,u),c=cg(a,u),h=null==e?null:cg(e,u),d=null==n?null:cg(n,u);return[sa(t,l,c,d,h,s),o,a]}))(t,e,n,r,s))(r,this.gamma.read(),this.beta.read(),o,this.epsilon),p=(t,e,n)=>{en(()=>{const r=1-n,s=t.read(),i=Jy(Rx(s,e),r);t.write(Rx(s,i))})};return(()=>{p(this.movingMean,d,this.momentum),p(this.movingVariance,f,this.momentum)})(),h})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ti(this.betaInitializer),gammaInitializer:Ti(this.gammaInitializer),movingMeanInitializer:Ti(this.movingMeanInitializer),movingVarianceInitializer:Ti(this.movingVarianceInitializer),betaRegularizer:jo(this.betaRegularizer),gammaRegularizer:jo(this.gammaRegularizer),betaConstraint:Gi(this.betaConstraint),gammaConstraint:Gi(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}ME.className="BatchNormalization",An(ME);class DE extends GC{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=_i(t.betaInitializer||"zeros"),this.gammaInitializer=_i(t.gammaInitializer||"ones"),this.betaRegularizer=Ho(t.betaRegularizer),this.gammaRegularizer=Ho(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=Ii(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)0>this.axis[s]&&(this.axis[s]+=e);for(const s of this.axis)if(0>s||s>=e)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==Us(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map(e=>t[e]),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(t,e){const n=Oi(t),r=n.shape,s=r.length;return en(()=>{let{mean:t,variance:e}=Hx(n,this.axis,!0);const i=Os(1,s);for(const n of this.axis)i[n]=r[n];const o=t=>null!=t&&t.shape.length!==s?cg(t,i):t;let a=this.scale?o(this.gamma.read()):null,u=this.center?o(this.beta.read()):null;const l=[],c=[];for(let n=0;s>n;++n)-1!==this.axis.indexOf(n)?(l.push(r[n]),c.push(1)):(l.push(1),c.push(r[n]));return t=fx(t,l),e=fx(e,l),null!=a&&(a=fx(a,c)),null!=u&&(u=fx(u,c)),sa(n,t,e,u,a,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ti(this.betaInitializer),gammaInitializer:Ti(this.gammaInitializer),betaRegularizer:jo(this.betaRegularizer),gammaRegularizer:jo(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}DE.className="LayerNormalization",An(DE);class LE extends GC{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new nC(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new nC(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new nC(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new PC({ndim:4})]}computeOutputShape(t){let e,n;return t=Ii(t),"channelsFirst"===this.dataFormat?(e=null==t[2]||0>t[2]?null:t[2]+this.padding[0][0]+this.padding[0][1],n=null==t[3]||0>t[3]?null:t[3]+this.padding[1][0]+this.padding[1][1],[t[0],t[1],e,n]):(e=null==t[1]||0>t[1]?null:t[1]+this.padding[0][0]+this.padding[0][1],n=null==t[2]||0>t[2]?null:t[2]+this.padding[1][0]+this.padding[1][1],[t[0],e,n,t[3]])}call(t,e){return en(()=>{return e=Oi(t),n=this.padding,r=this.dataFormat,en(()=>{if(4!==e.rank)throw new nC(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new nC("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new nC(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Qx(e,t)});var e,n,r})}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}LE.className="ZeroPadding2D",An(LE);class VE extends GC{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new nC(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(Hs(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new nC(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}Hs(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,Qs(this.padding),this.inputSpec=[new PC({ndim:3})]}computeOutputShape(t){const e=Ko((t=Ii(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return en(()=>{this.invokeCallHook(t,e),t=di(Oi(t),2);const n=this.poolingFunction(Oi(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return pv(n,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class PE extends VE{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Zs(s),Qs(r),ia(t,e,n,r,s,"max")}}PE.className="MaxPooling1D",An(PE);class BE extends VE{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Zs(s),Qs(r),ia(t,e,n,r,s,"avg")}}BE.className="AveragePooling1D",An(BE);class zE extends GC{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new nC(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];Hs(this.poolSize,"poolSize"),Hs(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Zs(this.dataFormat),Qs(this.padding),this.inputSpec=[new PC({ndim:4})]}computeOutputShape(t){t=Ii(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=Ko(e,this.poolSize[0],this.padding,this.strides[0]),n=Ko(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return en(()=>(this.invokeCallHook(t,e),this.poolingFunction(Oi(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class WE extends zE{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Zs(s),Qs(r),ia(t,e,n,r,s,"max")}}WE.className="MaxPooling2D",An(WE);class UE extends zE{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Zs(s),Qs(r),ia(t,e,n,r,s,"avg")}}UE.className="AveragePooling2D",An(UE);class GE extends GC{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new nC(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Hs(this.poolSize,"poolSize"),Hs(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Zs(this.dataFormat),Qs(this.padding),this.inputSpec=[new PC({ndim:5})]}computeOutputShape(t){t=Ii(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=Ko(e,this.poolSize[0],this.padding,this.strides[0]),n=Ko(n,this.poolSize[1],this.padding,this.strides[1]),r=Ko(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return en(()=>(this.invokeCallHook(t,e),this.poolingFunction(Oi(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class jE extends GE{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Zs(s),Qs(r),oa(t,e,n,r,s,"max")}}jE.className="MaxPooling3D",An(jE);class qE extends GE{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Zs(s),Qs(r),oa(t,e,n,r,s,"avg")}}qE.className="AveragePooling3D",An(qE);class HE extends GC{constructor(t){super(t),this.inputSpec=[new PC({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new rC}}class XE extends HE{constructor(t){super(t||{})}call(t,e){return en(()=>{const e=Oi(t);return Ux(e,1)})}}XE.className="GlobalAveragePooling1D",An(XE);class KE extends HE{constructor(t){super(t||{})}call(t,e){return en(()=>{const e=Oi(t);return nx(e,1)})}}KE.className="GlobalMaxPooling1D",An(KE);class JE extends GC{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Zs(this.dataFormat),this.inputSpec=[new PC({ndim:4})]}computeOutputShape(t){return"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new rC}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class YE extends JE{call(t,e){return en(()=>{const e=Oi(t);return"channelsLast"===this.dataFormat?Ux(e,[1,2]):Ux(e,[2,3])})}}YE.className="GlobalAveragePooling2D",An(YE);class ZE extends JE{call(t,e){return en(()=>{const e=Oi(t);return"channelsLast"===this.dataFormat?nx(e,[1,2]):nx(e,[2,3])})}}ZE.className="GlobalMaxPooling2D",An(ZE);class QE extends GC{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer.G}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const r=Yi(e.layer,n);delete e.layer;const s={layer:r};return Object.assign(s,e),new t(s)}}class tT extends QE{constructor(t){super(t),this.supportsMasking=!0}build(t){if(3>(t=Ii(t)).length)throw new nC(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=Ii(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))}call(t,e){return en(()=>ea((t,n)=>[Oi(this.layer.call(t,e)),[]],t=Oi(t),[],!1,null,0,!1,!0)[1])}}tT.className="TimeDistributed",An(tT);class eT extends QE{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=Yi(n),e.goBackwards=!0!==e.goBackwards;const r={};var s;if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=Yi(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,s=this.mergeMode,js(fC,"BidirectionalMergeMode",s),t.weights)throw new rC("weights support is not implemented for Bidirectional layer yet.");this.P=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this.J=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this.J}set trainable(t){this.J=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,r,s=this.forwardLayer.computeOutputShape(t);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),e=s[0]):e=s[0],"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):Ms(n)}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=ta(t,n,r,this.numConstants);if(t=s.inputs,n=s.initialState,r=s.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const i=[],o=[];if(null!=n){const t=n.length;if(t%2>0)throw new nC("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,i.push(...n);const r=n.map(t=>new PC({shape:t.shape}));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),o.push(...r)}if(null!=r)throw new rC("Support for constants in Bidirectional layers is not implemented yet.");const a=i[0]instanceof BC;for(const u of i)if(u instanceof BC!==a)throw new nC("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(a){const n=[t].concat(i),r=this.inputSpec.concat(o),s=this.inputSpec;this.inputSpec=r;const a=super.apply(n,e);return this.inputSpec=s,a}return super.apply(t,e)}call(t,e){return en(()=>{const n=e.initialState;let r,s,i,o;if(null==n)r=this.forwardLayer.call(t,e),s=this.backwardLayer.call(t,e);else{const i=n.slice(0,n.length/2),o=n.slice(n.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:i})),s=this.backwardLayer.call(t,Object.assign(e,{initialState:o}))}return this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Gw(s,1)),"concat"===this.mergeMode?o=bi([r,s]):"sum"===this.mergeMode?o=Hy(r,s):"ave"===this.mergeMode?o=Jy(.5,Hy(r,s)):"mul"===this.mergeMode?o=Jy(r,s):null==this.mergeMode&&(o=[r,s]),this.returnState?null==this.mergeMode?o.concat(i):[o].concat(i):o})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){ei(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),ei(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map(t=>null);return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=Yi(e.layer);if(delete e.layer,null!=e.numConstants)throw new rC("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=n,new t(r)}}eT.className="Bidirectional",An(eT);class nT extends GC{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){const t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return en(()=>("float32"!==(t=Oi(t)).dtype&&(t=hi(t,"float32")),Hy(Jy(t,this.scale),this.offset)))}}nT.className="Rescaling",An(nT);const rT=ca,sT=ha,iT=da,oT=fa,aT=Object.freeze(Object.defineProperty({__proto__:null,Layer:GC,RNN:nE,RNNCell:rE,activation(t){return new gE(t)},add(t){return new CE(t)},alphaDropout(t){return new FE(t)},average(t){return new EE(t)},averagePooling1d:aa,averagePooling2d:ua,averagePooling3d:la,avgPool1d(t){return aa(t)},avgPool2d(t){return ua(t)},avgPool3d(t){return la(t)},avgPooling1d(t){return aa(t)},avgPooling2d(t){return ua(t)},avgPooling3d(t){return la(t)},batchNormalization(t){return new ME(t)},bidirectional(t){return new eT(t)},concatenate(t){return new RE(t)},conv1d(t){return new ZS(t)},conv2d(t){return new qS(t)},conv2dTranspose(t){return new XS(t)},conv3d(t){return new HS(t)},conv3dTranspose(t){return new KS(t)},convLstm2d(t){return new fE(t)},convLstm2dCell(t){return new dE(t)},cropping2D(t){return new QS(t)},dense(t){return new bE(t)},depthwiseConv2d(t){return new eE(t)},dot(t){return new AE(t)},dropout(t){return new pE(t)},elu(t){return new zS(t)},embedding(t){return new kE(t)},flatten(t){return new yE(t)},gaussianDropout(t){return new IE(t)},gaussianNoise(t){return new OE(t)},globalAveragePooling1d(t){return new XE(t)},globalAveragePooling2d(t){return new YE(t)},globalMaxPool1d:rT,globalMaxPool2d:sT,globalMaxPooling1d:ca,globalMaxPooling2d:ha,gru(t){return new aE(t)},gruCell(t){return new oE(t)},input:Bo,inputLayer(t){return new jC(t)},layerNormalization(t){return new DE(t)},leakyReLU(t){return new PS(t)},lstm(t){return new lE(t)},lstmCell(t){return new uE(t)},masking(t){return new $E(t)},maxPool1d:iT,maxPool2d:oT,maxPooling1d:da,maxPooling2d:fa,maxPooling3d(t){return new jE(t)},maximum(t){return new TE(t)},minimum(t){return new _E(t)},multiply(t){return new SE(t)},permute(t){return new vE(t)},prelu(t){return new BS(t)},reLU(t){return new VS(t)},repeatVector(t){return new xE(t)},rescaling(t){return new nT(t)},reshape(t){return new wE(t)},rnn(t){return new nE(t)},separableConv2d(t){return new YS(t)},simpleRNN(t){return new iE(t)},simpleRNNCell(t){return new sE(t)},softmax(t){return new US(t)},spatialDropout1d(t){return new mE(t)},stackedRNNCells(t){return new cE(t)},thresholdedReLU(t){return new WS(t)},timeDistributed(t){return new tT(t)},upSampling2d(t){return new tE(t)},zeroPadding2d(t){return new LE(t)}},Symbol.toStringTag,{value:"Module"})),uT=Object.freeze(Object.defineProperty({__proto__:null,MAPE(t,e){return eo(t,e)},MSE(t,e){return Qi(t,e)},binaryAccuracy(t,e){return ao(t,e)},binaryCrossentropy(t,e){return ho(t,e)},categoricalAccuracy(t,e){return uo(t,e)},categoricalCrossentropy(t,e){return dS(t,e)},cosineProximity(t,e){return io(t,e)},mape(t,e){return eo(t,e)},meanAbsoluteError(t,e){return to(t,e)},meanAbsolutePercentageError(t,e){return eo(t,e)},meanSquaredError(t,e){return Qi(t,e)},mse(t,e){return Qi(t,e)},precision(t,e){return co(t,e)},recall(t,e){return((t,e)=>en(()=>{const n=lo(t,e),r=((t,e)=>en(()=>yy(ax(Ix(Xg(t,1),Xg(e,0))),"float32")))(t,e),s=Hy(n,r);return yy(Kg(yx(s,0),Ky(n,s),0),"float32")}))(t,e)},sparseCategoricalAccuracy(t,e){return fo(t,e)}},Symbol.toStringTag,{value:"Module"})),lT=Object.freeze(Object.defineProperty({__proto__:null,modelFromJSON(t,e){return Jh(this,null,function*(){"modelTopology"in t||(t={modelTopology:t});let n=t.modelTopology;null!=n.model_config&&(n=n.model_config);const r=Yi($o(n),e);if(null!=t.weightsManifest){const e=yield He(t.weightsManifest,t.pathPrefix,r.weights.map(t=>t.originalName)),n={};for(const t of r.weights)n[t.originalName]=e[t.originalName];r.loadWeights(n),nn(e)}return r})}},Symbol.toStringTag,{value:"Module"})),cT=Object.freeze(Object.defineProperty({__proto__:null,l1(t){return Go(e=t),new DS({l1:null!=e?e.l1:null,l2:0});var e},l1l2(t){return new DS(t)},l2(t){return Go(e=t),new DS({l2:null!=e?e.l2:null,l1:0});var e}},Symbol.toStringTag,{value:"Module"}));class hT extends iS{constructor(){super(...arguments),this.model=null}setModel(t){if(!(t instanceof yS))throw new Error("model must be a LayersModel, not some other Container");this.model=t}}class dT extends hT{constructor(t){if(super(),null==t&&(t={}),t.restoreBestWeights)throw new rC("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=t.monitor||"val_loss",this.minDelta=Math.abs(t.minDelta||0),this.patience=t.patience||0,this.verbose=t.verbose||0,this.mode=t.mode||"auto",this.baseline=t.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(this.mode="auto"),"min"===this.mode?this.monitorFunc=pa:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=ma:this.monitorFunc=pa,this.monitorFunc===pa&&(this.minDelta*=-1)}onTrainBegin(t){return Jh(this,null,function*(){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===pa?1/0:-1/0})}onEpochEnd(t,e){return Jh(this,null,function*(){yield Hi(e);const n=this.getMonitorValue(e);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait<this.patience||(this.stoppedEpoch=t,this.model.stopTraining=!0)))})}onTrainEnd(t){return Jh(this,null,function*(){this.stoppedEpoch>0&&this.verbose})}getMonitorValue(t){return null==t&&(t={}),t[this.monitor]}}const fT={earlyStopping(t){return new dT(t)}};var pT,mT,bT,yT,gT;gt().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,t=>{}),(mT=pT||(pT={}))[mT.DT_INVALID=0]="DT_INVALID",mT[mT.DT_FLOAT=1]="DT_FLOAT",mT[mT.DT_DOUBLE=2]="DT_DOUBLE",mT[mT.DT_INT32=3]="DT_INT32",mT[mT.DT_UINT8=4]="DT_UINT8",mT[mT.DT_INT16=5]="DT_INT16",mT[mT.DT_INT8=6]="DT_INT8",mT[mT.DT_STRING=7]="DT_STRING",mT[mT.DT_COMPLEX64=8]="DT_COMPLEX64",mT[mT.DT_INT64=9]="DT_INT64",mT[mT.DT_BOOL=10]="DT_BOOL",mT[mT.DT_QINT8=11]="DT_QINT8",mT[mT.DT_QUINT8=12]="DT_QUINT8",mT[mT.DT_QINT32=13]="DT_QINT32",mT[mT.DT_BFLOAT16=14]="DT_BFLOAT16",mT[mT.DT_QINT16=15]="DT_QINT16",mT[mT.DT_QUINT16=16]="DT_QUINT16",mT[mT.DT_UINT16=17]="DT_UINT16",mT[mT.DT_COMPLEX128=18]="DT_COMPLEX128",mT[mT.DT_HALF=19]="DT_HALF",mT[mT.DT_RESOURCE=20]="DT_RESOURCE",mT[mT.DT_VARIANT=21]="DT_VARIANT",mT[mT.DT_UINT32=22]="DT_UINT32",mT[mT.DT_UINT64=23]="DT_UINT64",mT[mT.DT_FLOAT_REF=101]="DT_FLOAT_REF",mT[mT.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",mT[mT.DT_INT32_REF=103]="DT_INT32_REF",mT[mT.DT_UINT8_REF=104]="DT_UINT8_REF",mT[mT.DT_INT16_REF=105]="DT_INT16_REF",mT[mT.DT_INT8_REF=106]="DT_INT8_REF",mT[mT.DT_STRING_REF=107]="DT_STRING_REF",mT[mT.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",mT[mT.DT_INT64_REF=109]="DT_INT64_REF",mT[mT.DT_BOOL_REF=110]="DT_BOOL_REF",mT[mT.DT_QINT8_REF=111]="DT_QINT8_REF",mT[mT.DT_QUINT8_REF=112]="DT_QUINT8_REF",mT[mT.DT_QINT32_REF=113]="DT_QINT32_REF",mT[mT.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",mT[mT.DT_QINT16_REF=115]="DT_QINT16_REF",mT[mT.DT_QUINT16_REF=116]="DT_QUINT16_REF",mT[mT.DT_UINT16_REF=117]="DT_UINT16_REF",mT[mT.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",mT[mT.DT_HALF_REF=119]="DT_HALF_REF",mT[mT.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",mT[mT.DT_VARIANT_REF=121]="DT_VARIANT_REF",mT[mT.DT_UINT32_REF=122]="DT_UINT32_REF",mT[mT.DT_UINT64_REF=123]="DT_UINT64_REF",(gT=(yT=bT||(bT={})).CheckpointFormatVersion||(yT.CheckpointFormatVersion={}))[gT.LEGACY=0]="LEGACY",gT[gT.V1=1]="V1",gT[gT.V2=2]="V2";const xT={},wT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},Symbol.toStringTag,{value:"Module"})),vT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},Symbol.toStringTag,{value:"Module"})),$T=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}]},Symbol.toStringTag,{value:"Module"})),kT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]},Symbol.toStringTag,{value:"Module"})),NT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]},Symbol.toStringTag,{value:"Module"})),CT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},Symbol.toStringTag,{value:"Module"})),ST=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}]},Symbol.toStringTag,{value:"Module"})),ET=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]},Symbol.toStringTag,{value:"Module"})),TT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}]},Symbol.toStringTag,{value:"Module"})),_T=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}]},Symbol.toStringTag,{value:"Module"})),RT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},Symbol.toStringTag,{value:"Module"})),AT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}]},Symbol.toStringTag,{value:"Module"})),OT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]},Symbol.toStringTag,{value:"Module"})),IT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]},Symbol.toStringTag,{value:"Module"})),FT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}]},Symbol.toStringTag,{value:"Module"})),MT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]},Symbol.toStringTag,{value:"Module"})),DT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}]},Symbol.toStringTag,{value:"Module"})),LT=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}]},Symbol.toStringTag,{value:"Module"}));class VT{static get Instance(){return this.Y||(this.Y=new this)}constructor(){const t=[].concat(...[wT,vT,$T,kT,NT,CT,ST,ET,TT,_T,RT,AT,OT,IT,Yh,FT,MT,DT,LT].map(t=>t.json));this.opMappers=t.reduce((t,e)=>(t[e.tfOpName]=e,t),{})}transformGraph(t,e={}){const n=t.node,r=[],s=[],i=[],o=n.reduce((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?r.push(t[e.name]):"Const"===e.op?s.push(t[e.name]):null!=e.input&&0!==e.input.length||i.push(t[e.name]),t),{});let a=[];const u=[];let l={},c={};null!=e&&(l=this.mapSignatureEntries(e.inputs),c=this.mapSignatureEntries(e.outputs));const h=Object.keys(o);h.forEach(t=>{const e=o[t];e.inputNames.forEach((t,n)=>{const[r,,s]=xa(t),i=o[r];if(null!=i.outputs){const t=i.outputs.indexOf(s);if(-1!==t){const s=`${r}:${t}`;e.inputNames[n]=s}}e.inputs.push(i),i.children.push(e)})}),0===Object.keys(c).length?h.forEach(t=>{const e=o[t];0===e.children.length&&u.push(e)}):Object.keys(c).forEach(t=>{const[e]=xa(t),n=o[e];null!=n&&(n.signatureKey=c[t],u.push(n))}),Object.keys(l).length>0?Object.keys(l).forEach(t=>{const[e]=xa(t),n=o[e];n&&(n.signatureKey=l[t],a.push(n))}):a=r;let d={};null!=t.library&&null!=t.library.function&&(d=t.library.function.reduce((t,e)=>(t[e.signature.name]=this.mapFunction(e),t),{}));const f={nodes:o,inputs:a,outputs:u,weights:s,placeholders:r,signature:e,functions:d};return i.length>0&&(f.initNodes=i),f}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,n)=>(e[t[n].name]=n,e),{})}mapNode(t){const e=ba(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(t=>t.startsWith("^")?t.slice(1):t),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:e.outputs};return null!=e.inputs&&(n.inputParams=e.inputs.reduce((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce((e,n)=>{const r=n.type;let s;switch(n.type){case"string":s=Ca(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Ca(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=Ma(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Ma(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=Ea(t.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=Ea(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=Fa(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Fa(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=Sa(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Sa(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=La(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=La(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=Ia(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Ia(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=Da(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Da(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=Ra(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Ra(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=Aa(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Aa(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=_a(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=_a(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${t.op}`)}return e[n.name]={value:s,type:r},e},{})),n}mapFunction(t){const e=t.nodeDef,n=[];let r={};null!=e&&(r=e.reduce((t,e)=>(t[e.name]=this.mapNode(e),"Const"===e.op&&n.push(t[e.name]),t),{}));const s=[],i=[];t.signature.inputArg.forEach(t=>{const[e]=xa(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Ta(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,s.push(n),r[e]=n}),Object.keys(r).forEach(t=>{const e=r[t];e.inputNames.forEach((t,n)=>{const[s,,i]=xa(t),o=r[s];if(null!=o.outputs){const t=o.outputs.indexOf(i);if(-1!==t){const r=`${s}:${t}`;e.inputNames[n]=r}}e.inputs.push(o),o.children.push(e)})});const o=t.ret;t.signature.outputArg.forEach(t=>{const[e,n]=xa(o[t.name]),s=r[e];null!=s&&(s.defaultOutput=n,i.push(s))});const a=this.mapArgsToSignature(t);return{nodes:r,inputs:s,outputs:i,weights:n,placeholders:[],signature:a}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((t,e)=>(t[e.name]=this.mapArgToTensorInfo(e),t),{}),outputs:t.signature.outputArg.reduce((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}class PT{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(t=>this.getInput(t)),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce((t,e)=>(t[e]=this.getAttr(e),t),{}))}getInput(t){return ga(t,this.tensorMap,this.context)}getAttr(t,e){const n=this.node.rawAttrs[t];if(null!=n.tensor)return ga(t,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Ea(this.node.rawAttrs,t,e);if(null!=n.s)return Ca(this.node.rawAttrs,t,e);if(null!=n.b)return Sa(this.node.rawAttrs,t,e);if(null!=n.shape)return Ia(this.node.rawAttrs,t,e);if(null!=n.type)return Ra(this.node.rawAttrs,t,e);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Fa(this.node.rawAttrs,t,e);if(null!=n.list.s)return Ma(this.node.rawAttrs,t,e);if(null!=n.list.shape)return Da(this.node.rawAttrs,t,e);if(null!=n.list.b)return La(this.node.rawAttrs,t,e);if(null!=n.list.type)return Aa(this.node.rawAttrs,t,e)}return e}}const BT=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:Gb,abs:Yy,acos:Zy,acosh:Qy,add:Hy,addN:tg,all:eg,any:ng,argMax:rg,argMin:sg,asin:ig,asinh:og,atan:ag,atan2:ug,atanh:lg,avgPool:hg,avgPool3d:dg,basicLSTMCell:yg,batchNorm:xg,batchNorm2d:wg,batchNorm3d:vg,batchNorm4d:$g,batchToSpaceND:gg,bincount:kg,booleanMaskAsync:Cv,broadcastArgs:Ng,broadcastTo:Cg,buffer:We,cast:yy,ceil:Sg,clipByValue:Eg,clone:gy,complex:jb,concat:fg,concat1d:Tg,concat2d:_g,concat3d:Rg,concat4d:Ag,conv1d:Ig,conv2d:Og,conv2dTranspose:Mg,conv3d:Dg,conv3dTranspose:Vg,cos:Pg,cosh:Bg,cosineWindow:Nr,cumprod:zg,cumsum:Wg,denseBincount:Ug,depthToSpace:Gg,depthwiseConv2d:jg,diag:qg,dilation2d:Hg,div:Ky,divNoNan:Yg,dot:Zg,dropout:Rv,einsum:Qg,elu:tx,enclosingPowerOfTwo:kr,equal:Xg,erf:ex,euclideanNorm:lx,exp:cx,expandDims:hx,expm1:dx,eye:px,fft:uv,fill:Kn,floor:mx,floorDiv:Xy,fused:Pv,gather:bx,gatherND:_v,greater:yx,greaterEqual:gx,ifft:lv,imag:_y,image:N$,inTopKAsync:Av,irfft:cv,isFinite:xx,isInf:wx,isNaN:vx,leakyRelu:$x,less:kx,lessEqual:Nx,linalg:C$,linspace:or,localResponseNormalization:Cx,log:Sx,log1p:Ex,logSigmoid:_x,logSoftmax:Ax,logSumExp:Ox,logicalAnd:Ix,logicalNot:Fx,logicalOr:Mx,logicalXor:Dx,losses:S$,lowerBound:cr,matMul:Ey,max:nx,maxPool:Px,maxPool3d:Bx,maxPoolWithArgmax:zx,maximum:Wx,mean:Ux,meshgrid:fr,min:rx,minimum:Gx,mirrorPad:jx,mod:qx,moments:Hx,movingAverage:Sv,mul:Jy,multiRNNCell:Xx,multinomial:Kx,neg:Ry,norm:ux,notEqual:Jx,oneHot:Ty,ones:dr,onesLike:Yx,op:we,outerProduct:Zx,pad:Qx,pad1d:tw,pad2d:ew,pad3d:nw,pad4d:rw,pool:iw,pow:sx,prelu:ow,print:Ue,prod:aw,raggedGather:uw,raggedTensorToTensor:lw,rand:cw,randomGamma:Lw,randomNormal:Vw,randomStandardNormal:Pw,randomUniform:Bw,range:pr,real:Ay,reciprocal:zw,relu:Ww,relu6:Uw,reshape:cg,reverse:Gw,reverse1d:jw,reverse2d:qw,reverse3d:Hw,reverse4d:Xw,rfft:dv,round:Kw,rsqrt:Jw,scalar:sr,scatterND:Ev,searchSorted:Vx,selu:Yw,separableConv2d:Zw,setdiff1dAsync:Qw,sigmoid:pg,sign:tv,signal:k$,sin:ev,sinh:nv,slice:mg,slice1d:rv,slice2d:sv,slice3d:iv,slice4d:ov,softmax:av,softplus:Tx,spaceToBatchND:sw,sparse:E$,sparseToDense:Tv,spectral:$$,split:hv,sqrt:ix,square:ox,squaredDifference:fv,squeeze:pv,stack:mv,step:bv,stridedSlice:yv,string:T$,sub:Rx,sum:ax,tan:gv,tanh:bg,tensor:$e,tensor1d:mr,tensor2d:br,tensor3d:cn,tensor4d:yr,tensor5d:gr,tensor6d:xr,tile:fx,topk:xv,transpose:Oy,truncatedNormal:wv,unique:vv,unsortedSegmentSum:$v,unstack:kv,upperBound:wr,variable:vr,where:Kg,whereAsync:Nv,zeros:hr,zerosLike:Jg},Symbol.toStringTag,{value:"Module"}));class zT{constructor(t,e,n,r,s,i,o){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=i,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=sr(0),rn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{null!=t&&t.has(e.tensor.id)||e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(0>t||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(t=>this.read(t))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(0>t||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},\n          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),Va(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);n.tensor=e,rn(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((t,n)=>this.write(t,e[n]))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let e=0;e<this.size();e++)t.push(e)}if(0===t.length)return $e([],[0].concat(this.elementShape));const n=this.readMany(t);return Va(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),mv(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(0===this.size())return $e([],[0].concat(this.elementShape));const e=[];for(let r=0;r<this.size();r++)e.push(r);const n=this.readMany(e);return Va(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),fg(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(t,kv(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let n=0;const r=t.map(t=>(n+=t,n));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:e.size/n,i=[];en(()=>{e=cg(e,[1,n,s]);for(let n=0;n<t.length;++n){const o=[0,0===n?0:r[n-1],0],a=[1,t[n],s];i[n]=cg(mg(e,o,a),this.elementShape)}return i});const o=[];for(let a=0;a<t.length;a++)o[a]=a;this.writeMany(o,i)}}class WT{constructor(t,e,n,r=-1){this.tensors=t,this.elementShape=e,this.elementDtype=n,null!=t&&t.forEach(t=>{if(n!==t.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${t.dtype}`);Va(e,t.shape,"TensorList shape mismatch: "),rn(t)}),this.idTensor=sr(0),this.maxNumElements=r,rn(this.idTensor)}get id(){return this.idTensor.id}copy(){return new WT([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{null!=t&&t.has(e.id)||e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,n=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Va(t,this.elementShape,"TensorList shape mismatch: ");const r=Ba(this.elementShape,this.tensors,t);return en(()=>{const t=this.tensors.map(t=>cg(t,r));return mv(t,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=Ba(this.elementShape,this.tensors,t),r=this.tensors.pop();return r.kept=!1,Va(r.shape,t,"TensorList shape mismatch: "),cg(r,n)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(Va(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");rn(t),this.tensors.push(t)}resize(t){if(0>t)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);const e=new WT([],this.elementShape,this.elementDtype,this.maxNumElements);e.tensors.length=t;for(let n=0;n<Math.min(this.tensors.length,t);++n)e.tensors[n]=this.tensors[n];return e}getItem(t,e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(0>t||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[t])throw new Error(`element at index ${t} is null.`);Va(this.tensors[t].shape,e,"TensorList shape mismatch: ");const r=Ba(this.elementShape,this.tensors,e);return cg(this.tensors[t],r)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(0>t||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);Va(this.elementShape,e.shape,"TensorList shape mismatch: "),rn(e),null!=this.tensors[t]&&(this.tensors[t].kept=!1),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);Va(this.elementShape,n,"TensorList shape mismatch: "),t=t.slice(0,this.size());const r=Ba(this.elementShape,this.tensors,n);return 0===t.length?$e([],[0].concat(r)):en(()=>{const e=t.map(t=>cg(this.tensors[t],r));return mv(e,0)})}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);Va(this.elementShape,e,"TensorList shape mismatch: ");const n=Ba(this.elementShape,this.tensors,e);return 0===this.size()?$e([],[0].concat(n)):en(()=>{const t=this.tensors.map(t=>cg(t,n));return fg(t,0)})}}class UT{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=sr(0),this.tensorMap=new Map,rn(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return sr(this.size(),"int32")}import(t,e){return Jh(this,null,function*(){this.checkKeyAndValueTensor(t,e);const n=yield t.data();return this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),en(()=>{const t=kv(e),r=n.length,s=t.length;F(r===s,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`);for(let e=0;r>e;e++){const r=n[e],s=t[e];rn(s),this.tensorMap.set(r,s)}return this.handle})})}find(t,e){return Jh(this,null,function*(){this.checkKeyAndValueTensor(t,e);const n=yield t.data();return en(()=>{const t=[];for(let r=0;r<n.length;r++){const s=n[r],i=this.findWithDefault(s,e);t.push(i)}return mv(t)})})}findWithDefault(t,e){const n=this.tensorMap.get(t);return null!=n?n:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}}class GT{constructor(t={},e={},n={},r={}){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this.Z[0]}get currentContextIds(){return this.Z}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this.Z=t}contextIdforContexts(t){return t?t.map(t=>0===t.id&&0===t.iterationId?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this.Z.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!this.contexts||1>=this.contexts.length)throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!this.contexts||0>=this.contexts.length)throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this.Z.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}const jT=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],qT=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],HT=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];class XT{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this.tt={},this.SEPERATOR=",",this.et={},this.nt={},this.intermediateTensors={},this.keepTensorForDebug=!1,this.rt=t.outputs,this.st=t.inputs,this.it=t.initNodes,this.ot=t.signature,this.et=t.functions,null!=t.functions&&Object.keys(t.functions).forEach(e=>{this.nt[e]=new XT(t.functions[e],this)})}get weightIds(){return this.parent?this.parent.weightIds:this.ut}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this.nt}get weightMap(){return this.parent?this.parent.weightMap:this.tt}set weightMap(t){const e=Object.keys(t).map(e=>t[e].map(t=>t.id));this.ut=[].concat(...e),this.tt=t}set resourceManager(t){this.ct=t}get inputs(){return this.st.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this.rt.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this.st.map(t=>t.signatureKey||t.name)}get outputNodes(){return this.rt.map(t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this.et).reduce((t,e)=>(t[e]=this.et[e].signature,t),{})}getCompilationKey(t,e){const n=t.map(t=>t.name).sort(),r=e.map(t=>t.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(t,e){const n=ja(t,e,this.weightMap,this.it),{missingInputs:r,dynamicNode:s,syncInputs:i}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(r.length>0){const n=e.map(t=>t.name),s=Object.keys(t);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}return((t,e,n)=>{const{usedNodes:r,inputs:s}=n,i=[],o=Object.keys(s).map(t=>va(t)[0]).map(e=>t.nodes[e]),a=t.initNodes;o.forEach(t=>{r.has(t.name)&&i.push(t)}),t.weights.forEach(t=>{r.has(t.name)&&i.push(t)}),null!=a&&a.forEach(t=>{r.has(t.name)&&i.push(t)});const u=new Set,l=[];for(;i.length>0;){const t=i.pop();u.add(t.name),e[t.name]||l.push(t),t.children.forEach(t=>{!u.has(t.name)&&r.has(t.name)&&t.inputs.every(t=>u.has(t.name))&&i.push(t)})}return l})(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);const n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const r=n.map(t=>this.graph.nodes[va(t)[0]]),s=e.map(t=>va(t)[0]);let i=s.map(t=>this.graph.nodes[t]);this.resetIntermediateTensors(),0===i.length&&(i=this.rt);const o=this.getCompilationKey(r,i);let a=this.compiledMap.get(o);null==a&&(a=this.compile(t,i),this.compiledMap.set(o,a));const u={},l={};return en(()=>{const n=new GT(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(t).forEach(e=>{const[n,s]=va(e),i=[];i[s]=t[e],r[n]=i});const i=this.getFrozenTensorIds(r),o={};for(let t=0;t<a.length;t++){const e=a[t];if(!r[e.name]){const t=Ga(e,r,n,this.ct);if(bt(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.checkTensorForDisposal(e.name,e,r,n,i,s,o)}}return null==this.parent&&n.dispose(i),e.map(t=>ga(t,r,n))})}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map(e=>t[e]).map(t=>t.map(t=>t.id)));return new Set(e)}checkTensorForDisposal(t,e,n,r,s,i,o){"control"!==e.category&&-1===i.indexOf(t)&&(n[t].forEach(t=>{null!=t&&(o[t.id]=(o[t.id]||0)+e.children.length)}),e.inputs.forEach(t=>{if("control"!==t.category){const i=((t,e,n)=>e[wa(t,n.currentContextId)])(t.name,n,r);null!=i&&i.forEach(t=>{if(t&&!t.kept&&!s.has(t.id)){const n=o[t.id];if(1===n){if(this.keepTensorForDebug){const[n,s]=xa(e.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][s]=t}else t.dispose();delete o[t.id]}else null!=n&&o[t.id]--}})}}))}executeAsync(t,e){return Jh(this,null,function*(){return this.ht(t,e)})}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach(t=>this.intermediateTensors[t].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach(t=>{this.tensorsMap[t].forEach(t=>{!t||t.kept||t.isDisposed||this.keepIds.has(t.id)||t.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const t in this.intermediateTensors)this.intermediateTensors[t].forEach(t=>t.dispose()),delete this.intermediateTensors[t]}ht(t,e){return Jh(this,arguments,function*(t,e,n=!1,r={},s={}){n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));try{this.keepTensorForDebug=gt().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(Oj){}this.resetIntermediateTensors();const i=new GT(this.weightMap,r,s,this.functionExecutorMap);this.tensorsMap=yield this.executeWithControlFlow(t,i,e,n);const o=e.map(t=>ga(t,this.tensorsMap,i)),a=o.map(t=>t.id),u=Object.keys(t).map(e=>t[e].id);return this.keepIds=new Set([...a,...u,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&i.dispose(this.keepIds),o})}executeFunctionAsync(t,e,n){return Jh(this,null,function*(){const r=t.reduce((t,e,n)=>(t[this.inputs[n].name]=e,t),{});return this.ht(r,this.outputNodes,!0,e,n)})}executeWithControlFlow(t,e,n,r){return Jh(this,null,function*(){const r=Object.keys(t),s=r.map(t=>this.graph.nodes[va(t)[0]]),i=n.map(t=>va(t)[0]);let o=i.map(t=>this.graph.nodes[t]);0===o.length&&(o=this.rt);const{usedNodes:a,missingInputs:u,dynamicNode:l,syncInputs:c}=ja(t,o,this.weightMap,this.it),h=[...s,...this.graph.weights,...this.it||[]].map(t=>({node:t,contexts:e.currentContext})),d=Object.assign({},this.weightMap);Object.keys(t).forEach(e=>{const[n,r]=va(e),s=[];s[r]=t[e],d[n]=s});const f={},p=this.getFrozenTensorIds(d),m={};for(;h.length>0;){const t=this.processStack(s,h,e,d,m,p,i,f,a);yield Promise.all(t)}const b=o.filter(t=>!qa(t)&&!ga(t.name,d,e)).map(t=>t.name);if(b.length>0){let t="";throw null!=l&&(t=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${c}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${r}]. Consider providing the following inputs: [${u}]. ${t}`)}return d})}processStack(t,e,n,r,s,i,o,a,u){const l=[];for(;e.length>0;){const t=e.pop();n.currentContext=t.contexts;let c="";if("Enter"===t.node.op&&ya("isConstant",t.node,r,n)&&([c]=xa(t.node.name,n)),null==r[t.node.name]){const h=Ga(t.node,r,n,this.ct);c||([c]=xa(t.node.name,n));const d=n.currentContext;bt(h)?l.push(h.then(l=>(r[c]=l,n.currentContext=d,this.checkTensorForDisposal(c,t.node,r,n,i,o,a),this.processChildNodes(t.node,e,n,r,s,u),l))):(r[c]=h,this.checkTensorForDisposal(c,t.node,r,n,i,o,a),this.processChildNodes(t.node,e,n,r,s,u))}else this.processChildNodes(t.node,e,n,r,s,u)}return l}processChildNodes(t,e,n,r,s,i){t.children.forEach(t=>{const[o]=xa(t.name,n);!s[o]&&i.has(t.name)&&("Merge"===t.op?t.inputNames.some(t=>!!ga(t,r,n))&&(s[o]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every(t=>!!ga(t,r,n))&&(s[o]=!0,e.push({contexts:n.currentContext,node:t})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(t=>t.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{const n=t[e],[r]=va(e),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const t=s.attrParams.shape.value;F(t.length===n.shape.length&&n.shape.every((e,n)=>-1===t[n]||t[n]===e),()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${t}], but was [${n.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&F(n.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(t){const e={};for(const n in t)null!=this.ot&&null!=this.ot.inputs&&null!=this.ot.inputs[n]?e[this.ot.inputs[n].name]=t[n]:e[n]=t[n];return e}checkInputs(t){const e=Object.keys(t).filter(t=>{const[e]=va(t);return null==this.graph.nodes[e]});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(t=>null!=this.ot&&null!=this.ot.outputs&&null!=this.ot.outputs[t]?this.ot.outputs[t].name:t,{})}checkOutputs(t){t.forEach(t=>{const[e]=va(t);if(!this.graph.nodes[e])throw new Error(`The output '${t}' is not found in the graph`)})}}class KT{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}class JT{constructor(t,e={},n=Sy){this.modelUrl=t,this.loadOptions=e,this.version="n/a",this.io=n,null==e&&(this.loadOptions={}),this.resourceManager=new KT}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(t,this.loadOptions);else{const e=this.io.getLoadHandlers(t,this.loadOptions);if(0===e.length)e.push(this.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=this.handler.load();return bt(t)?t.then(t=>this.loadSync(t)):this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let n=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const t=this.artifacts.userDefinedMetadata;null!=t.signature&&(n=t.signature),null!=t.structuredOutputKeys&&(this.structuredOutputKeys=t.structuredOutputKeys)}this.signature=n,this.version=`${e.versions.producer}.${e.versions.minConsumer}`;const r=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new XT(VT.Instance.transformGraph(e,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer&&null!=t.modelInitializer.node){const e=VT.Instance.transformGraph(t.modelInitializer);this.initializer=new XT(e),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}save(t,e){return Jh(this,null,function*(){if("string"==typeof t){const e=this.io.getSaveHandlers(t);if(0===e.length)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Error(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)})}predict(t,e){const n=this.execute(t,this.outputNodes);if(this.structuredOutputKeys){const t={};return(n instanceof Nb?[n]:n).forEach((e,n)=>t[this.structuredOutputKeys[n]]=e),t}return n}normalizeInputs(t){if(!(t instanceof Nb||Array.isArray(t)))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce((e,n,r)=>(e[n]=t[r],e),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=this.executor.execute(t,e);return n.length>1?n:n[0]}executeAsync(t,e){return Jh(this,null,function*(){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=yield this.executor.executeAsync(t,e);return n.length>1?n:n[0]})}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,n)=>(e[n]=[t[n]],e),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}const YT="3.21.0";class ZT{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(1>t)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;0>t;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(0>t)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(0>t)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return 0>t&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class QT extends ZT{constructor(){super(QT.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let r=0;n>r;r++)e[r]=this.get(this.wrap(this.begin+r));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}QT.INITIAL_CAPACITY=32;class t_{toArray(){return Jh(this,null,function*(){const t=[];let e=yield this.next();for(;!e.done;)t.push(e.value),e=yield this.next();return t})}toArrayForTest(){return Jh(this,null,function*(){const t=this.prefetch(100),e=[];let n=yield t.next();for(;!n.done;)e.push(n.value),n=yield t.next();return e})}resolveFully(){return Jh(this,null,function*(){let t=yield this.next();for(;!t.done;)t=yield this.next()})}resolveWhile(t){return Jh(this,null,function*(){let e=yield this.next(),n=t(e.value);for(;!e.done&&n;)e=yield this.next(),n=t(e.value)})}handleErrors(t){return new l_(this,t)}filter(t){return new a_(this,t)}map(t){return new u_(this,t)}mapAsync(t){return new c_(this,t)}serialMapAsync(t){return new c_(this,t).serial()}flatmap(t){return new d_(this,t)}forEachAsync(t){return Jh(this,null,function*(){return this.map(t).resolveFully()})}serialForEach(t){return Jh(this,null,function*(){return this.serialMapAsync(t).resolveWhile(t=>!0===t)})}rowMajorBatch(t,e=!0){return new o_(this,t,e)}columnMajorBatch(t,e=!0,n=Za){return this.rowMajorBatch(t,e).map(t=>Ja(t,n))}concatenate(t,e){return new f_(nu([this,t]),e)}take(t){return 0>t||null==t?this:new i_(this,t)}skip(t){return 0>t||null==t?this:new s_(this,t)}prefetch(t){return new y_(this,t)}shuffle(t,e){return new g_(this,t,e)}serial(){return new r_(this)}}class e_ extends t_{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}next(){return Jh(this,null,function*(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:(e=t,Ka(e,eu)),done:!1};var e})}}class n_ extends t_{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}next(){return Jh(this,null,function*(){try{return this.nextFn()}catch(Oj){throw Oj.message=`Error thrown while iterating through a dataset: ${Oj.message}`,Oj}})}}class r_ extends t_{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}next(){return Jh(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}serialNext(){return Jh(this,null,function*(){return this.upstream.next()})}}class s_ extends t_{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}next(){return Jh(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}serialNext(){return Jh(this,null,function*(){for(;this.count++<this.maxCount;){const t=yield this.upstream.next();if(t.done)return t;nn(t.value)}return this.upstream.next()})}}class i_ extends t_{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}next(){return Jh(this,null,function*(){return this.count++<this.maxCount?this.upstream.next():{value:null,done:!0}})}}class o_ extends t_{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}next(){return Jh(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}serialNext(){return Jh(this,null,function*(){const t=[];for(;t.length<this.batchSize;){const e=yield this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}})}}class a_ extends t_{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}next(){return Jh(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}serialNext(){return Jh(this,null,function*(){for(;;){const t=yield this.upstream.next();if(t.done||this.predicate(t.value))return t;nn(t.value)}})}}class u_ extends t_{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}next(){return Jh(this,null,function*(){const t=yield this.upstream.next();if(t.done)return{value:null,done:!0};const e=ue(t.value),n=this.transform(t.value),r=ue(n);for(const s of e)ae(s,r)||s.dispose();return{value:n,done:!1}})}}class l_ extends t_{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}next(){return Jh(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}serialNext(){return Jh(this,null,function*(){for(;;)try{return yield this.upstream.next()}catch(Oj){if(!this.handler(Oj))return{value:null,done:!0}}})}}class c_ extends t_{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}next(){return Jh(this,null,function*(){const t=yield this.upstream.next();if(t.done)return{value:null,done:!0};const e=ue(t.value),n=yield this.transform(t.value),r=ue(n);for(const s of e)ae(s,r)||s.dispose();return{value:n,done:!1}})}}class h_ extends t_{constructor(){super(),this.outputQueue=new QT,this.lastRead=Promise.resolve({value:null,done:!1})}next(){return Jh(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}serialNext(){return Jh(this,null,function*(){for(;0===this.outputQueue.length();)if(!(yield this.pump()))return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}})}}class d_ extends h_{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}pump(){return Jh(this,null,function*(){const t=yield this.upstream.next();if(t.done)return!1;const e=ue(t.value),n=this.transform(t.value),r=ue(n);this.outputQueue.pushAll(n);for(const s of e)ae(s,r)||s.dispose();return!0})}}class f_ extends t_{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}next(){return Jh(this,null,function*(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead})}readFromChain(t){return Jh(this,null,function*(){if(yield t,null==this.iterator){const t=yield this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=yield this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e})}}var p_,m_;(m_=p_||(p_={}))[m_.FAIL=0]="FAIL",m_[m_.SHORTEST=1]="SHORTEST",m_[m_.LONGEST=2]="LONGEST";class b_ extends t_{constructor(t,e=p_.FAIL){super(),this.iterators=t,this.mismatchMode=e,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}nextState(t){return Jh(this,null,function*(){yield t;let e=0,n=0;const r=yield Qa(this.iterators,t=>t instanceof t_?{value:t.next().then(t=>(e++,t.done&&n++,t.value)),recurse:!1}:{value:null,recurse:!0});if(e===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case p_.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case p_.SHORTEST:return{value:null,done:!0};case p_.LONGEST:}return this.count++,{value:r,done:!1}})}next(){return Jh(this,null,function*(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise})}}class y_ extends t_{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new ZT(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class g_ extends y_{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=Iw.alea(n||qt().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}next(){return Jh(this,null,function*(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead})}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}serialNext(){return Jh(this,null,function*(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=yield this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}})}}class x_{constructor(){this.size=null}batch(t,e=!0){const n=this;let r;return F(t>0,()=>`batchSize needs to be positive, but it is\n      ${t}`),r=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),su(()=>Jh(this,null,function*(){return(yield n.iterator()).columnMajorBatch(t,e,iu)}),r)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,su(()=>Jh(this,null,function*(){return(yield e.iterator()).concatenate(yield t.iterator())}),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,su(()=>Jh(this,null,function*(){return(yield e.iterator()).filter(e=>en(()=>t(e)))}),n)}forEachAsync(t){return Jh(this,null,function*(){return(yield this.iterator()).forEachAsync(t)})}map(t){const e=this;return su(()=>Jh(this,null,function*(){return(yield e.iterator()).map(e=>en(()=>t(e)))}),this.size)}mapAsync(t){const e=this;return su(()=>Jh(this,null,function*(){return(yield e.iterator()).mapAsync(t)}),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return su(()=>Jh(this,null,function*(){return(yield e.iterator()).prefetch(t)}),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null==this.size||void 0!==t&&t>=0?null:1/0,su(()=>Jh(this,null,function*(){return n=ru(()=>Jh(this,null,function*(){return{value:yield e.iterator(),done:!1}})).take(t),new f_(n,void 0);var n}),n)}skip(t){const e=this;let n;return n=null==this.size||0>t||this.size<t?null!=this.size&&(this.size<t||void 0===t||0>t)?0:null:this.size-t,su(()=>Jh(this,null,function*(){return(yield e.iterator()).skip(t)}),n)}shuffle(t,e,n=!0){if(null==t||0>t)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=Iw.alea(e||qt().toString());return su(()=>Jh(this,null,function*(){let e=s.int32();return n&&(e+=s.int32()),(yield r.iterator()).shuffle(t,e.toString())}),this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null==this.size||this.size>t?null:this.size,su(()=>Jh(this,null,function*(){return(yield e.iterator()).take(t)}),n)}toArray(){return Jh(this,null,function*(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(yield this.iterator()).toArray()})}toArrayForTest(){return Jh(this,null,function*(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(yield this.iterator()).toArrayForTest()})}}x_.MAX_BUFFER_SIZE=1e4;class w_ extends x_{constructor(t){super(),this.input=t}iterator(){return Jh(this,null,function*(){return(yield this.input.iterator()).decodeUTF8().split("\n").map(t=>(t.endsWith("\r")&&(t=t.slice(0,-1)),t))})}}const v_='"',$_=Symbol("out"),k_=Symbol("field"),N_=Symbol("quote"),C_=Symbol("quoteafterquote"),S_=Symbol("quoteinquote");class E_ extends x_{constructor(t,e){super(),this.input=t,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new w_(t),e||(e={}),this.hasHeader=!1!==e.hasHeader,this.fullColumnNames=e.columnNames,this.columnConfigs=e.columnConfigs,this.configuredColumnsOnly=e.configuredColumnsOnly,e.delimWhitespace?(F(null==e.delimiter,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=e.delimiter?e.delimiter:","}columnNames(){return Jh(this,null,function*(){return this.columnNamesValidated||(yield this.setColumnNames()),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames})}setColumnNames(){return Jh(this,null,function*(){const t=yield this.maybeReadHeaderLine();if(!this.fullColumnNames&&!t)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&t&&F(t.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+t.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=t);const e=this.fullColumnNames.reduce((t,e)=>(t[e]=t[e]+1||1,t),{}),n=Object.keys(e).filter(t=>e[t]>1);if(F(0===n.length,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs)for(const r of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(r))throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0})}maybeReadHeaderLine(){return Jh(this,null,function*(){if(this.hasHeader){const t=yield this.base.iterator(),e=yield t.next();if(e.done)throw new Error("No data was found for CSV parsing.");const n=e.value;return this.parseRow(n,!1)}return null})}iterator(){return Jh(this,null,function*(){this.columnNamesValidated||(yield this.setColumnNames());let t=yield this.base.iterator();return this.hasHeader&&(t=t.skip(1)),t.map(t=>this.makeDataElement(t))})}makeDataElement(t){const e=this.parseRow(t),n={},r={};for(let s=0;s<this.fullColumnNames.length;s++){const i=this.fullColumnNames[s],o=this.columnConfigs?this.columnConfigs[i]:null;if(!this.configuredColumnsOnly||o){const a=e[s];let u=null;if(""===a)if(o&&void 0!==o.default)u=o.default;else{if(o&&(o.required||o.isLabel))throw new Error(`Required column ${i} is empty in this line: ${t}`);u=void 0}else{const t=Number(a);if(isNaN(t))u=o&&"bool"===o.dtype?this.getBoolean(a):a;else if(o&&o.dtype)switch(o.dtype){case"float32":default:u=t;break;case"int32":u=Math.floor(t);break;case"bool":u=this.getBoolean(a)}else u=t}o&&o.isLabel?r[i]=u:n[i]=u}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(t){return"1"===t||"true"===t.toLowerCase()?1:0}parseRow(t,e=!0){const n=[];let r=0;const s=t.length;let i=$_;for(let o=0;s>o;o++)switch(i){case $_:switch(t.charAt(o)){case v_:r=o+1,i=N_;break;case this.delimiter:if(r=o+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),i=$_;break;default:i=k_,r=o}break;case k_:t.charAt(o)===this.delimiter&&(n.push(t.substring(r,o)),i=$_,r=o+1);break;case N_:t.charAt(o)===v_&&(i=C_);break;case C_:switch(t.charAt(o)){case this.delimiter:n.push(t.substring(r,o-1)),i=$_,r=o+1;break;case v_:i=N_;break;default:i=S_}break;case S_:t.charAt(o)===v_&&(i=N_)}if(i===C_?n.push(t.substring(r,s-1)):n.push(t.substring(r)),e&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class T_ extends t_{constructor(t){super(),this.microphoneConfig=t,this.isClosed=!1,this.fftSize=t.fftSize||1024;const e=Math.log2(this.fftSize);if(0>this.fftSize||4>e||e>14||!Number.isInteger(e))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=t.numFramesPerSpectrogram||43,this.sampleRateHz=t.sampleRateHz,this.columnTruncateLength=t.columnTruncateLength||this.fftSize,this.audioTrackConstraints=t.audioTrackConstraints,this.smoothingTimeConstant=t.smoothingTimeConstant||0,this.includeSpectrogram=!1!==t.includeSpectrogram,this.includeWaveform=!0===t.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static create(){return Jh(this,arguments,function*(t={}){if(!gt().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");const e=new T_(t);return yield e.start(),e})}start(){return Jh(this,null,function*(){try{this.stream=yield navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(Oj){throw new Error(`Error thrown while initializing video stream: ${Oj.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const t=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new t,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const e=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,e.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)})}next(){return Jh(this,null,function*(){if(this.isClosed)return{value:null,done:!0};let t,e;const n=yield this.getAudioData();if(this.includeSpectrogram){const e=this.flattenQueue(n.freqDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const t=this.flattenQueue(n.timeDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:t,waveform:e},done:!1}})}capture(){return Jh(this,null,function*(){return(yield this.next()).value})}getAudioData(){return Jh(this,null,function*(){const t=[],e=[];let n=0;return new Promise(r=>{const s=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:t,timeDataQueue:e}),t.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),e.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),r({freqDataQueue:t,timeDataQueue:e}))},this.fftSize/this.sampleRateHz*1e3)})})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(t){const e=t[0].length,n=new Float32Array(t.length*e);return t.forEach((t,r)=>n.set(t,r*e)),n}getTensorFromAudioDataArray(t,e){const n=new Float32Array(V(e));return n.set(t,n.length-t.length),$e(n,e)}}class __ extends t_{constructor(t,e){if(super(),this.webcamVideoElement=t,this.webcamConfig=e,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=mr([0],"int32"),this.webcamConfig.centerCrop){const t=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,e=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-t)/2,r=(1-e)/2,s=n+t,i=e+r;this.cropBox=br([r,n,i,s],[1,4])}else this.cropBox=br([0,0,1,1],[1,4])}summary(){return"webcam"}static create(t){return Jh(this,arguments,function*(t,e={}){if(!gt().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!t){if(t=document.createElement("video"),!e.resizeWidth||!e.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");t.width=e.resizeWidth,t.height=e.resizeHeight}const n=new __(t,e);return yield n.start(),n})}start(){return Jh(this,null,function*(){this.webcamConfig.facingMode&&F("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=yield navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(Oj){throw Oj.message=`Error thrown while initializing video stream: ${Oj.message}`,Oj}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(t){this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(t=>{this.webcamVideoElement.onloadedmetadata=()=>{t()}})})}next(){return Jh(this,null,function*(){if(this.isClosed)return{value:null,done:!0};let t;try{t=Ly(this.webcamVideoElement)}catch(Oj){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(Oj)}`)}if(!this.resize)return{value:t,done:!1};try{return{value:this.cropAndResizeFrame(t),done:!1}}catch(Oj){throw new Error(`Error thrown cropping the video: ${Oj.message}`)}finally{t.dispose()}})}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(t){return en(()=>{const e=hx(yy(t,"float32"),0);let n;n=N$.cropAndResize(e,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return cg(n,r.slice(1))})}capture(){return Jh(this,null,function*(){return(yield this.next()).value})}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class R_{}class A_ extends t_{split(t){return new O_(this,t)}}class O_ extends A_{constructor(t,e){super(),this.upstream=t,this.impl=new I_(t,e)}summary(){return this.impl.summary()}next(){return Jh(this,null,function*(){return this.impl.next()})}}class I_ extends h_{constructor(t,e){super(),this.upstream=t,this.separator=e,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}pump(){return Jh(this,null,function*(){const t=yield this.upstream.next();if(t.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const e=t.value.split(this.separator);e[0]=this.carryover+e[0];for(const n of e.slice(0,-1))this.outputQueue.push(n);return this.carryover=e[e.length-1],!0})}}class F_ extends t_{decodeUTF8(){return new M_(this)}}class M_ extends A_{constructor(t){super(),this.upstream=t,this.impl=new D_(t)}summary(){return this.impl.summary()}next(){return Jh(this,null,function*(){return this.impl.next()})}}class D_ extends h_{constructor(t){if(super(),this.upstream=t,gt().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:t}=require("string_decoder");this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}pump(){return Jh(this,null,function*(){const t=yield this.upstream.next();let e,n;return!t.done&&(e=t.value,n=gt().get("IS_BROWSER")?this.decoder.decode(e,{stream:!0}):this.decoder.write(Buffer.from(e.buffer)),this.outputQueue.push(n),!0)})}}class L_ extends F_{constructor(t,e={}){super(),this.file=t,this.options=e,F(t instanceof Uint8Array||!!gt().get("IS_BROWSER")&&(t instanceof File||t instanceof Blob),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=e.offset||0,this.chunkSize=e.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}next(){return Jh(this,null,function*(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const t=new Promise((t,e)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let s=r.result;if(s instanceof ArrayBuffer&&(s=new Uint8Array(s)),!(s instanceof Uint8Array))return e(new TypeError("FileReader returned unknown type."));t(s)},r.onabort=t=>e(new Error("Aborted")),r.onerror=t=>e(new Error(t.type));const s=this.file.slice(this.offset,n);r.readAsArrayBuffer(s)}this.offset=n});return{value:yield t,done:!1}})}}class V_ extends R_{constructor(t,e={}){super(),this.input=t,this.options=e}iterator(){return Jh(this,null,function*(){if(ou(this.input)&&gt().get("IS_NODE")){const t=require("fs");this.input=t.readFileSync(this.input.slice(7))}return new L_(this.input,this.options)})}}class P_ extends R_{constructor(t,e={}){super(),this.url=t,this.fileOptions=e}iterator(){return Jh(this,null,function*(){return ou(this.url)?new V_(this.url,this.fileOptions).iterator():function(t){return Jh(this,arguments,function*(t,e={},n){let r,s;var i;"string"==typeof t?r=t:(r=t.url,s={method:(i=t).method,headers:i.headers,body:i.body,mode:i.mode,credentials:i.credentials,cache:i.cache,redirect:i.redirect,referrer:i.referrer,integrity:i.integrity});const o=yield Ht(r,s);if(o.ok){const t=new Uint8Array(yield o.arrayBuffer());return new L_(t,e)}throw new Error(o.statusText)})}(this.url,this.fileOptions)})}}const B_="3.21.0",z_=Object.freeze(Object.defineProperty({__proto__:null,CSVDataset:E_,Dataset:x_,FileDataSource:V_,TextLineDataset:w_,URLDataSource:P_,array(t){return su(()=>Jh(this,null,function*(){return nu(t)}),t.length)},csv(t,e={}){return new E_(new P_(t),e)},func(t){const e=ru(t);return su(()=>Jh(this,null,function*(){return e}))},generator(t){return su(()=>Jh(this,null,function*(){const e=yield t();return ru(()=>e.next())}))},microphone(t){return Jh(this,null,function*(){return T_.create(t)})},version_data:B_,webcam(t,e){return Jh(this,null,function*(){return __.create(t,e)})},zip(t){if(!tu(t))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(t))for(let n=0;n<t.length;n++)e=null==e?t[n].size:Math.min(e,t[n].size);else if(t instanceof Object)for(const n in t)e=null==e?t[n].size:Math.min(e,t[n].size);return su(()=>Jh(this,null,function*(){return((t,e=p_.FAIL)=>new b_(t,e))(yield Qa(t,t=>{if(t instanceof x_)return{value:t.iterator(),recurse:!1};if(tu(t))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")}),p_.SHORTEST)}),e)}},Symbol.toStringTag,{value:"Module"})),W_=$r;class U_ extends Id{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Od(this,Qe())}nextDataId(){return U_.nextDataId++}write(t,e,n){this.firstUse&&(this.firstUse=!1,gt().get("IS_NODE")&&vt());const r={id:this.nextDataId()};return this.data.set(r,{values:t,dtype:n,refCount:1}),r}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&et(n[0])){const s=n.map(t=>Xt(t));r=this.write(s,t,e)}else r=this.write(n,t,e);return{dataId:r,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){this.data.get(t).refCount++}decRef(t){this.data.has(t)&&this.data.get(t).refCount--}move(t,e,n,r,s){this.data.set(t,{values:e,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}read(t){return Jh(this,null,function*(){return this.readSync(t)})}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);return"complex64"===e?Qr(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);if("string"===t.dtype)try{const n=e.map(t=>Kt(t));return We(t.shape,t.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return We(t.shape,t.dtype,e)}makeOutput(t,e,n){return Qe().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,t),this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(t);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}time(t){return Jh(this,null,function*(){const e=qt();return t(),{kernelMs:qt()-e}})}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){au([t],"where");const e=this.readSync(t.dataId);return W_(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}U_.nextDataId=0;const G_={kernelName:Vd,backendName:"cpu",kernelFunc(t){const{x:e}=t.inputs,n=t.backend;au(e,"abs");let r=new Float32Array(V(e.shape));return r=uu(n.data.get(e.dataId).values),n.makeOutput(r,e.shape,e.dtype)}},j_={kernelName:hf,backendName:"cpu",kernelFunc:cu},q_={kernelName:Qf,backendName:"cpu",kernelFunc:du},H_={kernelName:qp,backendName:"cpu",kernelFunc:fu},X_={kernelName:uf,backendName:"cpu",kernelFunc:mu},K_=lu((t,e)=>t+e),J_=yu((t,e,n,r)=>({real:t+n,imag:e+r})),Y_=bu(zd,K_,J_),Z_={kernelName:zd,backendName:"cpu",kernelFunc:Y_},Q_=wu(t=>Math.ceil(t)),tR=$u(lf,Q_),eR={kernelName:lf,backendName:"cpu",kernelFunc:tR},nR=lu((t,e)=>t===e?1:0),rR=bu(Pf,nR,null,"bool"),sR={kernelName:Pf,backendName:"cpu",kernelFunc:rR},iR=wu(t=>Math.exp(t)),oR=$u(Bf,iR,"float32"),aR={kernelName:Bf,backendName:"cpu",kernelFunc:oR},uR=wu(t=>Math.expm1(t)),lR=$u(Wf,uR),cR={kernelName:Wf,backendName:"cpu",kernelFunc:lR},hR=wu(t=>Math.floor(t)),dR=$u(qf,hR),fR={kernelName:qf,backendName:"cpu",kernelFunc:dR},pR=lu((t,e)=>t>e?1:0),mR=bu(Yf,pR,null,"bool"),bR={kernelName:Yf,backendName:"cpu",kernelFunc:mR},yR=lu((t,e)=>e>t?0:1),gR=bu(Zf,yR,null,"bool"),xR={kernelName:Zf,backendName:"cpu",kernelFunc:gR},wR=lu((t,e)=>e>t?1:0),vR=bu(op,wR,null,"bool"),$R={kernelName:op,backendName:"cpu",kernelFunc:vR},kR=lu((t,e)=>t>e?0:1),NR=bu(ap,kR,null,"bool"),CR={kernelName:ap,backendName:"cpu",kernelFunc:NR},SR=wu(t=>Math.log(t)),ER=$u(lp,SR),TR={kernelName:lp,backendName:"cpu",kernelFunc:ER},_R=lu((t,e)=>Math.max(t,e)),RR=bu(gp,_R),AR={kernelName:gp,backendName:"cpu",kernelFunc:RR},OR=lu((t,e)=>Math.min(t,e)),IR=bu(Sp,OR),FR={kernelName:Sp,backendName:"cpu",kernelFunc:IR},MR=lu((t,e)=>t*e),DR=yu((t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n})),LR=bu(Rp,MR,DR),VR={kernelName:Rp,backendName:"cpu",kernelFunc:LR},PR={kernelName:Ap,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n}=t,{x:r}=e;au(r,"neg");const s=n.data.get(r.dataId).values,[i,o]=Tu(s,r.shape,r.dtype);return n.makeTensorInfo(o,r.dtype,i)}},BR=lu((t,e)=>t!==e?1:0),zR=bu(Op,BR,null,"bool"),WR={kernelName:Op,backendName:"cpu",kernelFunc:zR},UR={kernelName:Dm,backendName:"cpu",kernelFunc:Ru},GR={kernelName:Wp,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r;au(s,"prod");const a=s.shape.length,u=j(i,s.shape),l=er(u,a);let c=u,h=s;const d=[];null!=l&&(h=Ru({inputs:{x:s},backend:n,attrs:{perm:l}}),d.push(h),c=rr(c.length,a));const f=n.data.get(h.dataId).values,{outVals:p,outShape:m,outDtype:b}=Au(h.shape,h.dtype,f,c);let y=m;return o&&(y=Qn(m,u)),d.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(y,b,p)}};var jR=B$;class qR{constructor(t,e,n,r,s,i,o,a,u,l){this.shape=t,this.shapeShape=e,this.values=n,this.valuesShape=r,this.valuesDType=s,this.defaultValue=i,this.defaultValueShape=o,this.rowPartitionValues=a,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=Ur(l),this.raggedRank=Gr(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===jR.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===jR.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case jR.VALUE_ROWIDS:return qR.getMaxWidthValueRowID(e);case jR.ROW_SPLITS:return qR.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${jR[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){const e=t.length;if(0===e||1===e)return 0;let n=0;for(let r=0;e-1>r;++r){const e=t[r+1]-t[r];e>n&&(n=e)}return n}static getMaxWidthValueRowID(t){const e=t.length;if(0===e)return 0;let n=0,r=t[0],s=0;for(let i=1;e>i;++i){const e=t[i];e!==r&&(r=e,s=Math.max(i-n,s),n=i)}return Math.max(e-n,s)}tensorShapeFromTensor(t,e,n=!0){if(0===e.length){if(-1===t[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Mu(t,n)}calculateOutputSize(t){const e=this.valuesShape;jr(this.defaultValueShape,e);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=Wr(this.raggedRank,n,e);0>r[0]&&(r[0]=t);for(let s=1;s<=this.raggedRank;++s)0>r[s]&&(r[s]=this.getMaxWidth(s));return r}calculateFirstParentOutputIndex(t,e,n){const r=Math.min(t,n),s=[];let i=0;for(let o=0;r>o;++o,i+=e)s.push(i);for(let o=r;t>o;++o)s.push(-1);return F(s.length===t,()=>"Final length of result must be equal to firstDimension."),s}calculateOutputIndexRowSplit(t,e,n,r){const s=t.length,i=[];for(let o=0;s-1>o;++o){const s=t[o+1]-t[o];let a=Math.min(r,s),u=e[o];-1===u&&(a=0);for(let t=0;a>t;++t)i.push(u),u+=n;for(let t=0;s-a>t;++t)i.push(-1)}if(s>0&&i.length!==t[s-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(t,e,n,r){const s=t.length,i=[];if(0===s)return[];let o=0,a=t[0];if(a>=e.length)throw new Error(`Got currentValueRowId=${a}, which is not less than ${e.length}`);let u=e[a];i.push(u);for(let l=1;s>l;++l){const s=t[l];if(s===a)0>u||(++o,r>o?u+=n:u=-1);else{if(o=0,a=s,s>=e.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${e.length}`);u=e[s]}i.push(u)}if(i.length!==t.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(t,e,n,r){const s=this.getRowPartitionTensor(t),i=this.getRowPartitionTypeByDimension(t);switch(i){case jR.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,e,n,r);case jR.ROW_SPLITS:if(s.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(s,e,n,r);default:throw new Error(`Unsupported partition type: ${jR[i]}`)}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case jR.FIRST_DIM_SIZE:return t[0];case jR.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case jR.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${jR[e]}`)}}compute(){if(0>=this.rowPartitionValues[0].length)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),e=this.calculateOutputSize(t),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let i=n.length-2;i>=0;--i)n[i]=n[i+1]*e[i+1];const r=Mu(e,!1),s=X(this.valuesDType,V(r));if(n[0]*e[0]>0){let i=this.calculateFirstParentOutputIndex(t,n[0],e[0]);for(let t=1;t<=this.raggedRank;++t)i=this.calculateOutputIndex(t-1,i,n[t],e[t]);this.setOutput(this.raggedRank,i,s,r)}return[r,s]}setOutput(t,e,n,r){if(0===n.length)return;const s=this.values,i=n;let o=r.slice();o=o.slice(t+1);const a=V(o),u=e.length;let l=this.defaultValue;if(l.length!==a&&1!==l.length){const t=this.defaultValueShape;en(()=>{const e=cg(l,t),n=Cg(e,o);l=n.dataSync()})}let c=0,h=0,d=0;for(let f=0;u>=f;++f){let t=u>f?e[f]:-1;if(t!==d){if(d>h){const t=s.subarray(c*a);Fu(i.subarray(h*a),t,(d-h)*a)}if(f>=u){const e=n.length;t=Math.floor(e/a)}if(t>d)if(1===this.defaultValue.length)i.subarray(d*a,t*a).fill(this.defaultValue[0]),d=t;else for(;t>d;)Fu(i.slice(d*a),l,a),++d;0>t?(c=f+1,h=d):(c=f,h=d,d=h+1)}else++d}}}const HR=wu(t=>1/Math.sqrt(t)),XR=$u(rm,HR),KR={kernelName:rm,backendName:"cpu",kernelFunc:XR},JR=wu(t=>1/(1+Math.exp(-t))),YR=vu(dm,t=>1/(1+Math.exp(-t))),ZR={kernelName:dm,backendName:"cpu",kernelFunc:YR},QR={kernelName:um,backendName:"cpu",kernelFunc:Bu},tA=wu(t=>Math.sqrt(t)),eA=vu(pm,t=>Math.sqrt(t)),nA={kernelName:pm,backendName:"cpu",kernelFunc:eA},rA=lu((t,e)=>{const n=t-e;return n*n}),sA=bu(Nm,rA),iA={kernelName:Nm,backendName:"cpu",kernelFunc:sA};class oA{constructor(t,e,n,r,s,i){this.separator=Xt(t),this.nGramWidths=e,this.leftPad=Xt(n),this.rightPad=Xt(r),this.padWidth=s,this.preserveShort=i}getPadWidth(t){return Math.min(0>this.padWidth?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const n=this.getPadWidth(e);return Math.max(0,t+2*n-e+1)}createNGrams(t,e,n,r,s,i){for(let o=0;s>o;++o){const a=this.getPadWidth(i),u=Math.max(0,a-o),l=Math.max(0,a-(s-(o+1))),c=i-(u+l),h=e+(u>0?0:o-a);let d=0;d+=u*this.leftPad.length;for(let e=0;c>e;++e)d+=t[h+e].length;d+=l*this.rightPad.length,d+=(u+l+c-1)*this.separator.length,n[r+o]=new Uint8Array(d);const f=n[r+o];let p=0;const m=t=>t.forEach(t=>f[p++]=t);for(let t=0;u>t;++t)m(this.leftPad),m(this.separator);for(let e=0;c-1>e;++e)m(t[h+e]),m(this.separator);if(c>0){m(t[h+c-1]);for(let t=0;l>t;++t)m(this.separator),m(this.rightPad)}else{for(let t=0;l-1>t;++t)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(t,e){const n=t.length,r=e.length;if(r>0){let t=e[0];if(0!==t)throw new Error(`First split value must be 0, got ${t}`);for(let s=1;r>s;++s){let r=e[s]>=t;if(r=r&&e[s]<=n,!r)throw new Error(`Invalid split value ${e[s]}, must be in [${t}, ${n}]`);t=e[s]}if(t!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${t}`)}const s=r-1,i=X("int32",r);if(0===n||0===r){const t=new Array(n);for(let e=0;s>=e;++e)i[e]=0;return[t,i]}i[0]=0;for(let a=1;s>=a;++a){const t=e[a]-e[a-1];let n=0;this.nGramWidths.forEach(e=>{n+=this.getNumNGrams(t,e)}),this.preserveShort&&t>0&&0===n&&(n=1),i[a]=i[a-1]+n}const o=new Array(i[s]);for(let a=0;s>a;++a){const n=e[a];let r=i[a];if(this.nGramWidths.forEach(s=>{const i=e[a+1]-e[a],u=this.getNumNGrams(i,s);this.createNGrams(t,n,o,r,u,s),r+=u}),this.preserveShort&&r===i[a]){const s=e[a+1]-e[a];if(0===s)continue;const i=s+2*this.padWidth,u=1;this.createNGrams(t,n,o,r,u,i)}}return[o,i]}}const aA=lu((t,e)=>t-e),uA=yu((t,e,n,r)=>({real:t-n,imag:e-r})),lA=bu(Rm,aA,uA),cA={kernelName:Rm,backendName:"cpu",kernelFunc:lA},hA=(t,e)=>{const n=e.value-t.value;return 0===n?t.index-e.index:n},dA=Object.freeze(Object.defineProperty({__proto__:null,addImpl:K_,bincountImpl:gu,bincountReduceImpl:xu,castImpl:pu,ceilImpl:Q_,concatImpl:ku,equalImpl:nR,expImpl:iR,expm1Impl:uR,floorImpl:hR,gatherNdImpl:Nu,gatherV2Impl:Cu,greaterEqualImpl:yR,greaterImpl:pR,lessEqualImpl:kR,lessImpl:wR,linSpaceImpl:Su,logImpl:SR,maxImpl:Eu,maximumImpl:_R,minimumImpl:OR,multiplyImpl:MR,negImpl:Tu,notEqualImpl:BR,prodImpl:Au,raggedGatherImpl:Iu,raggedTensorToTensorImpl:Du,rangeImpl:Lu,rsqrtImpl:HR,scatterImpl:Vu,sigmoidImpl:JR,simpleAbsImpl:uu,sliceImpl:Pu,sparseFillEmptyRowsImpl:zu,sparseReshapeImpl:Wu,sparseSegmentReductionImpl:Uu,sqrtImpl:tA,squaredDifferenceImpl:rA,stridedSliceImpl:Gu,stringNGramsImpl:ju,stringSplitImpl:Hu,stringToHashBucketFastImpl:Xu,subImpl:aA,tileImpl:Ku,topKImpl:Yu,transposeImpl:_u,uniqueImpl:Zu},Symbol.toStringTag,{value:"Module"}));sn("cpu",()=>new U_,1);const fA=vu(Df,t=>0>t?Math.exp(t)-1:t),pA={kernelName:Df,backendName:"cpu",kernelFunc:fA},mA={kernelName:ip,backendName:"cpu",kernelFunc:Qu},bA=lu((t,e)=>0>t?e*t:t),yA={kernelName:zp,backendName:"cpu",kernelFunc:tl},gA=vu(Xp,t=>Math.max(0,t)),xA={kernelName:Xp,backendName:"cpu",kernelFunc:gA},wA=vu(tm,t=>Math.min(Math.max(0,t),6)),vA={kernelName:tm,backendName:"cpu",kernelFunc:wA},$A={kernelName:Kp,backendName:"cpu",kernelFunc:nl},kA={kernelName:nf,backendName:"cpu",kernelFunc:rl},NA={kernelName:Gm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:i,bias:o,preluActivationWeights:a}=e,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;let d,f,p;const m=[];d=rl({inputs:{a:s,b:i},attrs:{transposeA:u,transposeB:l},backend:n}),o&&(f=Y_({inputs:{a:d,b:o},backend:n}),m.push(d),d=f),c&&(p=el(n,d,c,a,h),m.push(d),d=p);for(const b of m)n.disposeIntermediateTensorInfo(b);return d}},CA=vu(Pd,t=>Math.acos(t)),SA={kernelName:Pd,backendName:"cpu",kernelFunc:CA},EA=vu(Bd,t=>Math.acosh(t)),TA={kernelName:Bd,backendName:"cpu",kernelFunc:EA},_A={kernelName:Wd,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n}=t,r=e;au(e,"addN");const s=r.map(t=>n.data.get(t.dataId).values),i=We(r[0].shape,r[0].dtype),o=i.values;for(let a=0;a<r.length;a++){const t=s[a];for(let e=0;e<o.length;e++)o[e]+=t[e]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}},RA={kernelName:Ud,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r;au(s,"all");const a=j(i,s.shape);let u=a;const l=er(u,s.shape.length);let c=s;null!=l&&(c=Ru({inputs:{x:s},backend:n,attrs:{perm:l}}),u=rr(u.length,s.shape.length)),tr("all",u,c.shape.length);const[h,d]=Zn(c.shape,u),f=V(d),p=ht(V(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<p.length;++y){const t=y*f;let e=m[t];for(let n=0;f>n;++n){const r=m[t+n];e=e&&r}p[y]=e}null!=l&&n.disposeIntermediateTensorInfo(c);const b=n.makeTensorInfo(h,c.dtype,p);if(o){const t=nl({inputs:{x:b},backend:n,attrs:{shape:Qn(h,a)}});return n.disposeIntermediateTensorInfo(b),t}return b}},AA={kernelName:Gd,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r;au(s,"any");const a=j(i,s.shape);let u=a;const l=er(u,s.shape.length);let c=s;null!=l&&(c=Ru({inputs:{x:s},backend:n,attrs:{perm:l}}),u=rr(u.length,s.shape.length)),tr("any",u,c.shape.length);const[h,d]=Zn(c.shape,u),f=V(d),p=ht(V(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<p.length;++y){const t=y*f;let e=m[t];for(let n=0;f>n;++n){const r=m[t+n];e=e||r}p[y]=e}null!=l&&n.disposeIntermediateTensorInfo(c);const b=n.makeTensorInfo(h,c.dtype,p);if(o){const t=nl({inputs:{x:b},backend:n,attrs:{shape:Qn(h,a)}});return n.disposeIntermediateTensorInfo(b),t}return b}},OA={kernelName:jd,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i}=r;au(s,"argMax");let o=j(i,s.shape);const a=er(o,s.shape.length);let u=s;const l=[];null!=a&&(u=Ru({inputs:{x:s},backend:n,attrs:{perm:a}}),l.push(u),o=rr(o.length,u.shape.length)),o=[o[0]],tr("argMax",o,u.shape.length);const[c,h]=Zn(u.shape,o),d=ht(V(c),"int32"),f=V(h),p=n.data.get(u.dataId).values;for(let m=0;m<d.length;++m){const t=m*f;let e=p[t],n=0;for(let r=0;f>r;++r){const s=p[t+r];s>e&&(e=s,n=r)}d[m]=n}return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(c,"int32",d)}},IA={kernelName:qd,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i}=r;au(s,"argMin");let o=j(i,s.shape);const a=er(o,s.shape.length);let u=s;const l=[];null!=a&&(u=Ru({inputs:{x:s},backend:n,attrs:{perm:a}}),l.push(u),o=rr(o.length,u.shape.length)),o=[o[0]],tr("argMin",o,u.shape.length);const[c,h]=Zn(u.shape,o),d=ht(V(c),"int32"),f=V(h),p=n.data.get(u.dataId).values;for(let m=0;m<d.length;++m){const t=m*f;let e=p[t],n=0;for(let r=0;f>r;++r){const s=p[t+r];e>s&&(e=s,n=r)}d[m]=n}return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(c,"int32",d)}},FA=vu(Hd,t=>Math.asin(t)),MA={kernelName:Hd,backendName:"cpu",kernelFunc:FA},DA=vu(Xd,t=>Math.asinh(t)),LA={kernelName:Xd,backendName:"cpu",kernelFunc:DA},VA=vu(Kd,t=>Math.atan(t)),PA={kernelName:Kd,backendName:"cpu",kernelFunc:VA},BA=lu((t,e)=>Math.atan2(t,e)),zA=bu(Yd,BA),WA={kernelName:Yd,backendName:"cpu",kernelFunc:zA},UA=vu(Jd,t=>Math.atanh(t)),GA={kernelName:Jd,backendName:"cpu",kernelFunc:UA},jA={kernelName:Zd,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;au(s,"avgPool");const{filterSize:i,strides:o,pad:a,dimRoundingMode:u}=r;F(qn(o,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const l=Dn(s.shape,i,o,1,a,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&P(l.inShape,l.outShape))c=du({inputs:{x:s},backend:n});else{const t=n.data.get(s.dataId).values,e=at(s.shape),r=sl(t,s.shape,s.dtype,e,l,"avg");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}},qA={kernelName:tf,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:i,strides:o,pad:a,dimRoundingMode:u,dataFormat:l}=r;au(s,"avgPool3d");const c=Ln(s.shape,i,o,1,a,u,l),h=ol(n.data.get(s.dataId).values,s.shape,s.dtype,at(s.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},HA={kernelName:ef,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,{filterSize:o,strides:a,pad:u,dimRoundingMode:l}=r;au([s,i],"avgPool3DGrad");const c=Ln(i.shape,o,a,1,u,l),h=c.strideDepth,d=c.strideHeight,f=c.strideWidth,p=c.filterDepth,m=c.filterHeight,b=c.filterWidth,y=c.dilationDepth,g=c.dilationHeight,x=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,$=c.effectiveFilterWidth,k=w-1-c.padInfo.front,N=$-1-c.padInfo.left,C=v-1-c.padInfo.top,S=We(i.shape,"float32"),E=1/(p*m*b),T=n.bufferSync(s);for(let _=0;_<c.batchSize;++_)for(let t=0;t<c.inChannels;++t)for(let e=0;e<c.inDepth;++e)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=e-k,i=n-C,o=r-N;let a=0;for(let e=0;w>e;e+=y){const n=(s+e)/h;if(n>=0&&n<c.outDepth&&Math.floor(n)===n)for(let e=0;v>e;e+=g){const r=(i+e)/d;if(r>=0&&r<c.outHeight&&Math.floor(r)===r)for(let e=0;$>e;e+=x){const s=(o+e)/f;s>=0&&s<c.outWidth&&Math.floor(s)===s&&(a+=T.get(_,n,r,s,t))}}}S.set(a*E,_,e,n,r,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},XA={kernelName:Qd,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,o=i;au([s,i],"avgPoolGrad");const{filterSize:a,strides:u,pad:l}=r,c=Dn(o.shape,a,u,1,l),h=c.strideHeight,d=c.strideWidth,f=c.filterHeight,p=c.filterWidth,m=c.dilationHeight,b=c.dilationWidth,y=c.effectiveFilterHeight,g=c.effectiveFilterWidth,x=g-1-c.padInfo.left,w=y-1-c.padInfo.top,v=We(o.shape,"float32"),$=1/(f*p),k=n.data.get(s.dataId).values,N=We(s.shape,"float32",k);for(let C=0;C<c.batchSize;++C)for(let t=0;t<c.inChannels;++t)for(let e=0;e<c.inHeight;++e)for(let n=0;n<c.inWidth;++n){const r=e-w,s=n-x;let i=0;for(let e=0;y>e;e+=m){const n=(r+e)/h;if(n>=0&&n<c.outHeight&&Math.floor(n)===n)for(let e=0;g>e;e+=b){const r=(s+e)/d;r>=0&&r<c.outWidth&&Math.floor(r)===r&&(i+=N.get(C,n,r,t))}}v.set(i*$,C,e,n,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},KA={kernelName:Xf,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,scale:i,offset:o,mean:a,variance:u}=e;F(a.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),F(null==o||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),F(null==i||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),au([s,a,u,i,o],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,d=n.data.get(u.dataId).values,f=i?n.data.get(i.dataId).values:new Float32Array([1]),p=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),b=p.length,y=f.length,g=d.length,x=h.length;let w=0,v=0,$=0,k=0;for(let N=0;N<c.length;++N)m[N]=p[w++]+(c[N]-h[v++])*f[$++]/Math.sqrt(d[k++]+l),b>w||(w=0),x>v||(v=0),y>$||($=0),g>k||(k=0);return n.makeTensorInfo(s.shape,s.dtype,m)}},JA={kernelName:rf,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:i,crops:o}=r;au([s],"batchToSpaceND");const a=i.reduce((t,e)=>t*e),u=Xr(s.shape,i,a),l=Kr(u.length,i.length),c=Jr(s.shape,i,a),h=Yr(o,i.length),d=Zr(c,o,i.length),f=nl({inputs:{x:s},backend:n,attrs:{shape:u}}),p=Ru({inputs:{x:f},backend:n,attrs:{perm:l}}),m=nl({inputs:{x:p},backend:n,attrs:{shape:c}}),b=Bu({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),b}},YA={kernelName:sf,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:i}=e,{size:o}=r,a=gu(n.data.get(s.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,o);return n.makeTensorInfo([o],i.dtype,a)}},ZA={kernelName:af,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n}=t,{s0:r,s1:s}=e,i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,a=ln(Array.from(i),Array.from(o));return n.makeTensorInfo([a.length],"int32",Int32Array.from(a))}},QA=vu(cf,(t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t}),tO={kernelName:cf,backendName:"cpu",kernelFunc:QA},eO={kernelName:df,backendName:"cpu",kernelFunc(t){const{x:e}=t.inputs,n=t.backend,r=new Float32Array(V(e.shape)),s=n.data.get(e.dataId),i=s.complexTensorInfos.real,o=s.complexTensorInfos.imag,a=n.data.get(i.dataId).values,u=n.data.get(o.dataId).values;for(let l=0;l<a.length;l++){const t=a[l],e=u[l];r[l]=Math.hypot(t,e)}return n.makeOutput(r,e.shape,"float32")}},nO={kernelName:ep,backendName:"cpu",kernelFunc:al},rO={kernelName:ff,backendName:"cpu",kernelFunc:ul},sO={kernelName:pf,backendName:"cpu",kernelFunc:ll},iO={kernelName:mf,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:o,pad:a,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;au([s,i],"conv2dBackpropFilter");const h=Hn(u),d=Vn(s.shape,c,o,1,a,l,!1,h),{strideHeight:f,strideWidth:p,filterHeight:m,filterWidth:b}=d,y="channelsLast"===d.dataFormat,g=new vb(d.filterShape,"float32"),x=d.padInfo.left,w=d.padInfo.top,v=n.data.get(s.dataId).values,$=n.data.get(i.dataId).values,k=new vb(s.shape,s.dtype,v),N=new vb(i.shape,i.dtype,$);for(let C=0;m>C;++C){const t=Math.max(0,Math.ceil((w-C)/f)),e=Math.min(d.outHeight,(d.inHeight+w-C)/f);for(let n=0;b>n;++n){const r=Math.max(0,Math.ceil((x-n)/p)),s=Math.min(d.outWidth,(d.inWidth+x-n)/p);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let a=0;for(let u=0;u<d.batchSize;++u)for(let l=t;e>l;++l){const t=C+l*f-w;for(let e=r;s>e;++e){const r=n+e*p-x;a+=y?k.get(u,t,r,i)*N.get(u,l,e,o):k.get(u,i,t,r)*N.get(u,o,l,e)}}g.set(a,C,n,i,o)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},oO={kernelName:bf,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{inputShape:o,strides:a,pad:u,dataFormat:l,dimRoundingMode:c}=r;au([s,i],"conv2dBackpropInput");const h=at(i.shape),d=at(s.shape);let f=Hn(l);const p=Vn(o,i.shape,a,1,u,c,!1,f),m=new vb(p.inShape,"float32"),b=m.values,y=n.data.get(s.dataId).values,g=n.data.get(i.dataId).values,[x,w,v]=h,{batchSize:$,filterHeight:k,filterWidth:N,inChannels:C,inHeight:S,inWidth:E,outChannels:T,outHeight:_,outWidth:R,strideHeight:A,strideWidth:O}=p;f=p.dataFormat;const I=k-1-p.padInfo.top,F=N-1-p.padInfo.left,M="channelsLast"===f,D=m.strides[0],L=M?m.strides[1]:m.strides[2],V=M?m.strides[2]:1,P=M?1:m.strides[1],B=d[0],z=M?d[1]:d[2],W=M?d[2]:1,U=M?1:d[1];for(let G=0;$>G;++G)for(let t=0;C>t;++t)for(let e=0;S>e;++e){const n=e-I,r=Math.max(0,Math.ceil(n/A)),s=Math.min(_,(k+n)/A);for(let i=0;E>i;++i){const o=i-F,a=Math.max(0,Math.ceil(o/O)),u=Math.min(R,(N+o)/O);let l=0;for(let e=r;s>e;++e){const r=e*A-n;for(let n=a;u>n;++n){const s=B*G+z*e+W*n,i=x*(k-1-r)+w*(N-1-(n*O-o))+v*t;for(let t=0;T>t;++t)l+=y[s+U*t]*g[i+t]}}b[D*G+L*e+V*i+P*t]=l}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},aO={kernelName:yf,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:o,pad:a,dilations:u}=r;au([s,i],"conv3d");const l=Pn(s.shape,i.shape,o,u,a),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:f,dilationHeight:p,dilationWidth:m,padInfo:b}=l,y=b.front,g=b.left,x=b.top,w=new vb(l.outShape,s.dtype),v=n.data.get(s.dataId).values,$=n.data.get(i.dataId).values,k=w.values,N=at(s.shape),C=at(i.shape);for(let S=0;S<l.batchSize;++S){const t=S*N[0],e=S*w.strides[0];for(let n=0;n<l.outDepth;++n){const r=e+n*w.strides[1],s=n*l.strideDepth-y;for(let e=0;c>e;++e){const n=s+e*f;if(0>n||n>=l.inDepth)continue;const i=e*C[0],o=t+n*N[1];for(let t=0;t<l.outHeight;++t){const e=r+t*w.strides[2],n=t*l.strideHeight-x;for(let t=0;h>t;++t){const r=n+t*p;if(0>r||r>=l.inHeight)continue;const s=i+t*C[1],a=o+r*N[2];for(let t=0;t<l.outWidth;++t){const n=e+t*l.outChannels,r=t*l.strideWidth-g;for(let t=0;d>t;++t){const e=r+t*m;if(0>e||e>=l.inWidth)continue;const i=s+t*C[2],o=a+e*l.inChannels;let u=i;for(let t=0;t<l.inChannels;++t){const e=v[o+t];for(let t=0;t<l.outChannels;++t)k[n+t]+=e*$[u+t];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},uO={kernelName:gf,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:o,pad:a,filterShape:u}=r;au([s,i],"conv3dBackpropFilterV2");const l=at(s.shape),c=at(i.shape),h=Pn(s.shape,u,o,1,a),d=h.strideDepth,f=h.strideHeight,p=h.strideWidth,m=h.filterDepth,b=h.filterHeight,y=h.filterWidth,g=new vb(h.filterShape,"float32"),x=g.values,[w,v,$,k]=g.strides,N=n.data.get(i.dataId).values,[C,S,E,T]=c,_=n.data.get(s.dataId).values,[R,A,O,I]=l,F=h.padInfo.front,M=h.padInfo.left,D=h.padInfo.top;for(let L=0;m>L;++L){const t=Math.max(0,Math.ceil((F-L)/d)),e=Math.min(h.outDepth,(h.inDepth+F-L)/d),n=L*w;for(let r=0;b>r;++r){const s=Math.max(0,Math.ceil((D-r)/f)),i=Math.min(h.outHeight,(h.inHeight+D-r)/f),o=r*v+n;for(let n=0;y>n;++n){const a=Math.max(0,Math.ceil((M-n)/p)),u=Math.min(h.outWidth,(h.inWidth+M-n)/p),l=n*$+o;for(let o=0;o<h.inChannels;++o){const c=o*k+l;for(let l=0;l<h.outChannels;++l){let m=0;for(let c=0;c<h.batchSize;++c){const h=c*R,b=c*C;for(let c=t;e>c;++c){const t=(L+c*d-F)*A+h,e=c*S+b;for(let c=s;i>c;++c){const s=(r+c*f-D)*O+t,i=c*E+e;for(let t=a;u>t;++t){const e=t*T+i;m+=_[(n+t*p-M)*I+s+o]*N[e+l]}}}}x[c+l]=m}}}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},lO={kernelName:xf,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{pad:o,strides:a,inputShape:u}=r;au([s],"conv3dBackpropInputV2");const l=at(s.shape),c=at(i.shape),h=Pn(u,i.shape,a,1,o),d=new vb(h.inShape,"float32"),f=d.values,[p,m,b,y]=d.strides,g=n.data.get(s.dataId).values,[x,w,v,$]=l,k=n.data.get(i.dataId).values,[N,C,S,E]=c,{batchSize:T,filterDepth:_,filterHeight:R,filterWidth:A,inChannels:O,inDepth:I,inHeight:F,inWidth:M,outChannels:D,outDepth:L,outHeight:V,outWidth:P,strideDepth:B,strideHeight:z,strideWidth:W}=h,U=_-1-h.padInfo.front,G=R-1-h.padInfo.top,j=A-1-h.padInfo.left;for(let q=0;T>q;++q)for(let t=0;O>t;++t)for(let e=0;I>e;++e){const n=e-U,r=Math.max(0,Math.ceil(n/B)),s=Math.min(L,(_+n)/B);for(let i=0;F>i;++i){const o=i-G,a=Math.max(0,Math.ceil(o/z)),u=Math.min(V,(R+o)/z);for(let l=0;M>l;++l){const c=l-j,h=Math.max(0,Math.ceil(c/W)),d=Math.min(P,(A+c)/W);let T=0;for(let e=r;s>e;++e){const r=e*B-n;for(let n=a;u>n;++n){const s=n*z-o;for(let i=h;d>i;++i){const o=x*q+w*e+v*n+$*i,a=N*(_-1-r)+C*(R-1-s)+S*(A-1-(i*W-c))+E*t;for(let t=0;D>t;++t)T+=g[o+t]*k[a+t]}}}f[p*q+m*e+b*i+y*l+t]=T}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},cO=vu(wf,t=>Math.cos(t)),hO={kernelName:wf,backendName:"cpu",kernelFunc:cO},dO=vu(vf,t=>Math.cosh(t)),fO={kernelName:vf,backendName:"cpu",kernelFunc:dO},pO={kernelName:Nf,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{image:s,boxes:i,boxInd:o}=e,{cropSize:a,method:u,extrapolationValue:l}=r,[c,h,d,f]=s.shape,p=i.shape[0],[m,b]=a,y=We([p,m,b,f],"float32"),g=n.data.get(i.dataId).values,x=n.data.get(o.dataId).values,w=n.data.get(s.dataId).values,v=at(s.shape),$=at(y.shape);for(let k=0;p>k;k++){const t=4*k,e=g[t],n=g[t+1],r=g[t+2],s=g[t+3],i=x[k];if(i>=c)continue;const o=m>1?(r-e)*(h-1)/(m-1):0,a=b>1?(s-n)*(d-1)/(b-1):0;for(let c=0;m>c;c++){const t=m>1?e*(h-1)+c*o:.5*(e+r)*(h-1);if(0>t||t>h-1)for(let e=0;b>e;e++)for(let t=0;f>t;t++){const n=t+e*$[2]+c*$[1]+k*$[0];y.values[n]=l}else if("bilinear"===u){const e=Math.floor(t),r=Math.ceil(t),o=t-e;for(let t=0;b>t;t++){const u=b>1?n*(d-1)+t*a:.5*(n+s)*(d-1);if(0>u||u>d-1){for(let e=0;f>e;e++){const n=e+t*$[2]+c*$[1]+k*$[0];y.values[n]=l}continue}const h=Math.floor(u),p=Math.ceil(u),m=u-h;for(let n=0;f>n;n++){let s=n+h*v[2]+e*v[1]+i*v[0];const a=w[s];s=n+p*v[2]+e*v[1]+i*v[0];const u=w[s];s=n+h*v[2]+r*v[1]+i*v[0];const l=w[s];s=n+p*v[2]+r*v[1]+i*v[0];const d=a+(u-a)*m,f=l+(w[s]-l)*m;s=n+t*$[2]+c*$[1]+k*$[0],y.values[s]=d+(f-d)*o}}}else for(let e=0;b>e;++e){const r=b>1?n*(d-1)+e*a:.5*(n+s)*(d-1);if(0>r||r>d-1){for(let t=0;f>t;t++){const n=t+e*$[2]+c*$[1]+k*$[0];y.values[n]=l}continue}const o=Math.round(r),u=Math.round(t);for(let t=0;f>t;t++){const n=t+o*v[2]+u*v[1]+i*v[0],r=t+e*$[2]+c*$[1]+k*$[0];y.values[r]=w[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},mO={kernelName:$f,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,exclusive:o,reverse:a}=r;au(s,"cumprod");const u=er([i],s.shape.length);let l=s;null!=u&&(l=Ru({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=rr(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=re(l.dtype,"int32"),d=ct(V(l.shape),h),f=n.data.get(l.dataId).values,p=l.shape[l.shape.length-1],m=a?(t,e)=>t+p-e-1:(t,e)=>t+e;for(let y=0;y<f.length;y+=p)for(let t=0;p>t;t++){const e=m(y,t);if(0===t)d[e]=o?1:f[e];else{const n=m(y,t-1);d[e]=o?f[n]*d[n]:f[e]*d[n]}}const b=n.makeTensorInfo(l.shape,h,d);if(null!=u){const t=Ru({inputs:{x:b},backend:n,attrs:{perm:nr(u)}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(l),t}return b}},bO={kernelName:kf,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,exclusive:o,reverse:a}=r;au(s,"cumsum");const u=er([i],s.shape.length);let l=s;null!=u&&(l=Ru({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=rr(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=re(l.dtype,"int32"),d=ht(V(l.shape),h),f=n.data.get(l.dataId).values,p=l.shape[l.shape.length-1],m=a?(t,e)=>t+p-e-1:(t,e)=>t+e;for(let y=0;y<f.length;y+=p)for(let t=0;p>t;t++){const e=m(y,t);if(0===t)d[e]=o?0:f[e];else{const n=m(y,t-1);d[e]=o?f[n]+d[n]:f[e]+d[n]}}const b=n.makeTensorInfo(l.shape,h,d);if(null!=u){const t=Ru({inputs:{x:b},backend:n,attrs:{perm:nr(u)}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(l),t}return b}},yO={kernelName:Cf,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:i}=e,{size:o,binaryOutput:a}=r;if(1===s.shape.length){const t=gu(n.data.get(s.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,o);return n.makeTensorInfo([o],i.dtype,t)}if(2===s.shape.length){const t=xu(n.bufferSync(s),n.bufferSync(i),o,a);return n.makeTensorInfo(t.shape,i.dtype,t.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},gO={kernelName:Sf,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockSize:i,dataFormat:o}=r;F("NHWC"===o,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`);const a=s.shape[0],u=s.shape[1],l=s.shape[2],c=s.shape[3],h=u*i,d=l*i,f=c/(i*i),p=n.data.get(s.dataId).values,m=new Float32Array(a*h*d*f);let b=0;for(let y=0;a>y;++y)for(let t=0;h>t;++t){const e=Math.floor(t/i),n=t%i;for(let t=0;d>t;++t){const r=Math.floor(t/i),s=(n*i+t%i)*f;for(let t=0;f>t;++t){const n=t+s+c*(r+l*(e+u*y));m[b++]=p[n]}}}return n.makeTensorInfo([a,h,d,f],s.dtype,m)}},xO={kernelName:Ef,backendName:"cpu",kernelFunc:cl},wO={kernelName:Tf,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:o,dilations:a,pad:u,dimRoundingMode:l,filterShape:c}=r;au([s,i],"depthwiseConv2dNativeBackpropFilter");const h=Vn(s.shape,c,o,a,u,l,!0),{strideHeight:d,strideWidth:f,filterHeight:p,filterWidth:m}=h,b=new vb(h.filterShape,"float32"),y=h.padInfo.left,g=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(s.dataId).values,v=new vb(s.shape,s.dtype,w),$=n.data.get(i.dataId).values,k=new vb(i.shape,i.dtype,$);for(let N=0;p>N;++N){const t=Math.max(0,Math.ceil((g-N)/d)),e=Math.min(h.outHeight,(h.inHeight+g-N)/d);for(let n=0;m>n;++n){const r=Math.max(0,Math.ceil((y-n)/f)),s=Math.min(h.outWidth,(h.inWidth+y-n)/f);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),a=i%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let a=t;e>a;++a){const t=N+a*d-g;for(let e=r;s>e;++e){const r=n+e*f-y;u+=v.get(l,t,r,o)*k.get(l,a,e,i)}}b.set(u,N,n,o,a)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},vO={kernelName:_f,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{strides:o,dilations:a,pad:u,dimRoundingMode:l,inputShape:c}=r;au([s,i],"depthwiseConv2DNativeBackpropInput");const h=at(s.shape),d=at(i.shape),f=Vn(c,i.shape,o,a,u,l,!0),p=new vb(f.inShape,"float32"),m=p.values,[b,y,g]=p.strides,x=n.data.get(s.dataId).values,[w,v,$]=h,k=n.data.get(i.dataId).values,[N,C,S]=d,{batchSize:E,filterHeight:T,filterWidth:_,inChannels:R,inHeight:A,inWidth:O,outChannels:I,outHeight:F,outWidth:M,strideHeight:D,strideWidth:L}=f,V=T-1-f.padInfo.top,P=_-1-f.padInfo.left,B=I/R;for(let z=0;E>z;++z)for(let t=0;R>t;++t)for(let e=0;A>e;++e){const n=e-V,r=Math.max(0,Math.ceil(n/D)),s=Math.min(F,(T+n)/D);for(let i=0;O>i;++i){const o=i-P,a=Math.max(0,Math.ceil(o/L)),u=Math.min(M,(_+o)/L);let l=0;for(let e=r;s>e;++e){const r=e*D-n;for(let n=a;u>n;++n){const s=w*z+v*e+$*n,i=N*(T-1-r)+C*(_-1-(n*L-o))+S*t;for(let e=0;B>e;++e)l+=x[s+(t*B+e)]*k[i+e]}}m[b*z+y*e+g*i+t]=l}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},$O={kernelName:Rf,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n}=t,{x:r}=e,s=V(r.shape),i=n.data.get(r.dataId).values,o=We([s,s],r.dtype),a=o.values;for(let l=0;l<i.length;l++)a[l*s+l]=i[l];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,o.dtype,o.values)}},kO={kernelName:Af,backendName:"cpu",kernelFunc({inputs:t,backend:e,attrs:n}){const{x:r,filter:s}=t,{strides:i,pad:o,dilations:a}=n,u=e,l=u.data.get(r.dataId).values,c=r.shape.length,h=u.data.get(s.dataId).values,d=s.shape.length,{batchSize:f,inHeight:p,inWidth:m,inChannels:b,outHeight:y,outWidth:g,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:$,filterWidth:k,dilationHeight:N,dilationWidth:C,outShape:S}=Mn(r.shape,s.shape,i,o,"NHWC",a),E=V(S),T=S.length,_=X(r.dtype,E);for(let R=0;f>R;++R)for(let t=0;y>t;++t){const e=t*w-x.top;for(let n=0;g>n;++n){const i=n*v-x.left;for(let o=0;b>o;++o){let a=Number.MIN_SAFE_INTEGER;for(let t=0;$>t;++t){const n=e+t*N;if(n>=0&&p>n)for(let e=0;k>e;++e){const u=i+e*C;if(u>=0&&m>u){const i=pt([R,n,u,o],c,at(r.shape)),f=pt([t,e,o],d,at(s.shape)),p=l[i]+h[f];p>a&&(a=p)}}}_[pt([R,t,n,o],T,at(S))]=a}}}return{dataId:u.write(jt(_,r.dtype),S,r.dtype),shape:S,dtype:r.dtype}}},NO={kernelName:If,backendName:"cpu",kernelFunc({inputs:t,backend:e,attrs:n}){const{x:r,filter:s,dy:i}=t,{strides:o,pad:a,dilations:u}=n,l=e,c=lt(r.shape,l.data.get(r.dataId).values),h=lt(s.shape,l.data.get(s.dataId).values),{batchSize:d,inHeight:f,inWidth:p,inChannels:m,outHeight:b,outWidth:y,padInfo:g,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:$,dilationHeight:k,dilationWidth:N,outShape:C}=Mn(r.shape,s.shape,o,a,"NHWC",u);F(i.rank===C.length,()=>`Error in ${If}, dy must have the same rank as output ${C.length}, but got ${i.rank}`);const S=lt(C,l.data.get(i.dataId).values),E=dt(s.shape,s.dtype);for(let T=0;d>T;++T)for(let t=0;b>t;++t){const e=t*x-g.top;for(let n=0;y>n;++n){const r=n*w-g.left;for(let s=0;m>s;++s){let i=Number.MIN_SAFE_INTEGER,o=0,a=0;for(let t=0;v>t;++t){const n=e+t*k;if(n>=0&&f>n)for(let e=0;$>e;++e){const u=r+e*N;if(u>=0&&p>u){const r=c[T][n][u][s]+h[t][e][s];r>i&&(i=r,o=t,a=e)}}}E[o][a][s]+=S[T][t][n][s]}}}return{dataId:l.write(jt(E,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},CO={kernelName:Of,backendName:"cpu",kernelFunc({inputs:t,backend:e,attrs:n}){const{x:r,filter:s,dy:i}=t,{strides:o,pad:a,dilations:u}=n,l=e,c=lt(r.shape,l.data.get(r.dataId).values),h=lt(s.shape,l.data.get(s.dataId).values),{batchSize:d,inHeight:f,inWidth:p,inChannels:m,outHeight:b,outWidth:y,padInfo:g,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:$,dilationHeight:k,dilationWidth:N,outShape:C}=Mn(r.shape,s.shape,o,a,"NHWC",u);F(i.rank===C.length,()=>`Error in ${Of}, dy must have the same rank as output ${C.length}, but got ${i.rank}`);const S=lt(C,l.data.get(i.dataId).values),E=dt(r.shape,r.dtype);for(let T=0;d>T;++T)for(let t=0;b>t;++t){const e=t*x-g.top;for(let n=0;y>n;++n){const r=n*w-g.left;for(let s=0;m>s;++s){let i=Number.MIN_SAFE_INTEGER,o=0>e?0:e,a=0>r?0:r;for(let t=0;v>t;++t){const n=e+t*k;if(n>=0&&f>n)for(let e=0;$>e;++e){const u=r+e*N;if(u>=0&&p>u){const r=c[T][n][u][s]+h[t][e][s];r>i&&(i=r,o=n,a=u)}}}E[T][o][a][s]+=S[T][t][n][s]}}}return{dataId:l.write(jt(E,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},SO={kernelName:mm,backendName:"cpu",kernelFunc:hl},EO={kernelName:Mf,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{equation:s}=r,i=e,{allDims:o,summedDims:a,idDims:u}=as(s,i.length);ls(o.length,u,i);const{path:l,steps:c}=cs(a,u),h=c.length;let d=null,f=o.length;const p=[];for(let m=0;h>m;++m){for(const t of c[m]){const{permutationIndices:e,expandDims:r}=us(f,u[t]);let s;hs(e)?s=i[t]:(s=Ru({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),p.push(s));const o=s.shape.slice();for(let t=0;t<r.length;++t)o.splice(r[t],0,1);P(s.shape,o)||(s=nl({inputs:{x:s},backend:n,attrs:{shape:o}}),p.push(s)),null===d?d=s:(d=LR({inputs:{a:s,b:d},backend:n}),p.push(d))}h-1>m&&(0>l[m]||(d=hl({inputs:{x:d},backend:n,attrs:{axis:l[m]-(o.length-f),keepDims:!1}}),p.push(d)),f--)}for(const m of p)m!==d&&n.disposeIntermediateTensorInfo(m);return d}},TO={kernelName:Lf,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n}=t,{dy:r,y:s}=e;au([r,s],"eluGrad");const i=new Float32Array(V(s.shape)),o=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values;for(let u=0;u<o.length;++u){const t=o[u];i[u]=1>t?a[u]*(t+1):a[u]}return n.makeTensorInfo(s.shape,"float32",i)}},_O=G$,RO=j$,AO=q$,OO=H$,IO=X$,FO=K$,MO=vu(Vf,t=>{const e=Math.sign(t),n=Math.abs(t),r=1/(1+_O*n);return e*(1-((((FO*r+IO)*r+OO)*r+AO)*r+RO)*r*Math.exp(-n*n))}),DO={kernelName:Vf,backendName:"cpu",kernelFunc:MO},LO={kernelName:zf,backendName:"cpu",kernelFunc:dl},VO=lu((t,e)=>t/e),PO=bu(Ff,VO),BO={kernelName:Ff,backendName:"cpu",kernelFunc:PO},zO={kernelName:Uf,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n}=t,{input:r}=e,s=V(r.shape),i=r.shape[r.shape.length-1],o=nl({inputs:{x:r},backend:n,attrs:{shape:[s/i,i]}}),a=fl(o,!1,n),u=nl({inputs:{x:a},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),u}},WO={kernelName:Gf,backendName:"cpu",kernelFunc:bl},UO={kernelName:jf,backendName:"cpu",kernelFunc({inputs:t,attrs:e,backend:n}){const{image:r}=t,s=n,i=H(r.dtype,V(r.shape)),[o,a,u,l]=r.shape,c=s.data.get(r.dataId).values;for(let h=0;o>h;h++){const t=h*u*a*l;for(let e=0;a>e;e++){const n=e*(u*l);for(let e=0;u>e;e++){const r=e*l;for(let s=0;l>s;s++){const o=Math.round(u-e-1),a=t+n+r+s;let h=c[a];o>=0&&u>o&&(h=c[t+n+o*l+s]),i[a]=h}}}}return{dataId:s.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},GO=lu((t,e)=>Math.floor(t/e)),jO=bu(Hf,GO,null,"int32"),qO={kernelName:Hf,backendName:"cpu",kernelFunc:jO},HO={kernelName:jm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i,bias:o,preluActivationWeights:a}=e,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=r;let m=ll({inputs:{x:s,filter:i},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(o){const t=m;if("NCHW"===c&&1===o.shape.length&&1!==o.shape[0]){const t=nl({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=Y_({inputs:{a:m,b:t},backend:n}),n.disposeIntermediateTensorInfo(t)}else m=Y_({inputs:{a:m,b:o},backend:n});n.disposeIntermediateTensorInfo(t)}if(f){const t=m;if("NCHW"===c&&"prelu"===f&&1===a.shape.length&&1!==a.shape[0]){const t=nl({inputs:{x:a},backend:n,attrs:{shape:[a.shape[0],1,1]}});m=el(n,m,f,t,p),n.disposeIntermediateTensorInfo(t)}else m=el(n,m,f,a,p);n.disposeIntermediateTensorInfo(t)}return m}},XO={kernelName:qm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i,bias:o,preluActivationWeights:a}=e,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=r;let m=cl({inputs:{x:s,filter:i},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(o){const t=m;m=Y_({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(t)}if(f){const t=m;m=el(n,m,f,a,p),n.disposeIntermediateTensorInfo(t)}return m}},KO={kernelName:Jf,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n}=t,{params:r,indices:s}=e,i=V(r.shape),o=s.shape,a=o[o.length-1],[u,l,c,h]=dn(r,s);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const d=Nu(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,l,a,c,h,r.shape,i);return n.makeTensorInfo(u,r.dtype,d.values)}},JO={kernelName:Kf,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,indices:i}=e,{axis:o,batchDims:a}=r;au([s,i],"gatherV2");const u=j(o,s.shape)[0],l=n.data.get(i.dataId).values,c=s.shape[u];for(let x=0;x<l.length;++x){const t=l[x];F(c-1>=t&&t>=0,()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`)}let h=a;null==a&&(h=0);const d=V(i.shape),f=Ss(s,i,u,h),p=nl({inputs:{x:s},backend:n,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),m=nl({inputs:{x:i},backend:n,attrs:{shape:[f.batchSize,d/f.batchSize]}}),b=[f.batchSize,f.outerSize,d/f.batchSize,f.sliceSize],y=n.bufferSync(m),g=Cu(n.bufferSync(p),y,b);return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(f.outputShape,g.dtype,g.values)}},YO={kernelName:tp,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n}=t,{input:r}=e,s=V(r.shape),i=r.shape[r.shape.length-1],o=nl({inputs:{x:r},backend:n,attrs:{shape:[s/i,i]}}),a=fl(o,!0,n),u=nl({inputs:{x:a},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),u}},ZO=vu(np,t=>Number.isFinite(t)?1:0,"bool"),QO={kernelName:np,backendName:"cpu",kernelFunc:ZO},tI=vu(rp,t=>Math.abs(t)===1/0?1:0,"bool"),eI={kernelName:rp,backendName:"cpu",kernelFunc:tI},nI=vu(sp,t=>Number.isNaN(t)?1:0,"bool"),rI={kernelName:sp,backendName:"cpu",kernelFunc:nI},sI={kernelName:up,backendName:"cpu",kernelFunc(t){const{backend:e,attrs:n}=t,{start:r,stop:s,num:i}=n,o=Su(r,s,i);return e.makeTensorInfo([o.length],"float32",o)}},iI=vu(cp,t=>Math.log1p(t)),oI={kernelName:cp,backendName:"cpu",kernelFunc:iI},aI=lu((t,e)=>t&&e),uI=bu(hp,aI,null,"bool"),lI={kernelName:hp,backendName:"cpu",kernelFunc:uI},cI=vu(dp,t=>t?0:1,"bool"),hI={kernelName:dp,backendName:"cpu",kernelFunc:cI},dI=lu((t,e)=>t||e),fI=bu(fp,dI,null,"bool"),pI={kernelName:fp,backendName:"cpu",kernelFunc:fI},mI={kernelName:mp,backendName:"cpu",kernelFunc(t){function e(t){const e=t%c;let n=t-e+Math.max(0,e-o);const r=t-e+Math.min(e+o,h);let s=0;for(;r>=n;n++){const t=d[n];s+=t*t}return s}const{inputs:n,backend:r,attrs:s}=t,{x:i}=n,{depthRadius:o,bias:a,alpha:u,beta:l}=s;au(i,"LRN");const c=i.shape[3],h=c-1,d=r.data.get(i.dataId).values,f=V(i.shape),p=new Float32Array(f);for(let m=0;f>m;m++){const t=e(m),n=d[m]*Math.pow(a+u*t,-l);p[m]=n}return r.makeTensorInfo(i.shape,i.dtype,p)}},bI={kernelName:bp,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,y:i,dy:o}=e,{depthRadius:a,bias:u,alpha:l,beta:c}=r;au(o,"LRNGrad");const h=V(o.shape),d=o.shape[3],f=n.data.get(o.dataId).values,p=n.data.get(s.dataId).values,m=n.data.get(i.dataId).values,b=new Float32Array(h),y=h;for(let g=0;y>g;g++){const t=g%d,e=g-t+Math.max(0,t-a),n=g-t+Math.min(d,t+a+1);let r=0;for(let s=e;n>s;s++)r+=Math.pow(p[s],2);r=l*r+u;for(let s=e;n>s;s++){let t=-2*l*c*p[s]*m[g]/r;g===s&&(t+=Math.pow(r,-c)),t*=f[g],b[s]+=t}}return n.makeTensorInfo(o.shape,s.dtype,b)}},yI={kernelName:yp,backendName:"cpu",kernelFunc:yl},gI={kernelName:xp,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;au(s,"maxPool");const{filterSize:i,strides:o,pad:a,dimRoundingMode:u}=r;F(qn(o,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const l=Dn(s.shape,i,o,1,a,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&P(l.inShape,l.outShape))c=du({inputs:{x:s},backend:n});else{const t=n.data.get(s.dataId).values,e=at(s.shape),r=sl(t,s.shape,s.dtype,e,l,"max");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}},xI={kernelName:vp,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:i,strides:o,pad:a,dimRoundingMode:u,dataFormat:l}=r;au(s,"maxPool3d");const c=Ln(s.shape,i,o,1,a,u,l),h=ol(n.data.get(s.dataId).values,s.shape,s.dtype,at(s.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},wI={kernelName:$p,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,{filterSize:o,strides:a,pad:u,dimRoundingMode:l}=r;au([s,i],"maxPool3DGrad");const c=Ln(i.shape,o,a,1,u,l),h=((t,e)=>{const n=We(e.outShape,"int32"),r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,a=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,f=e.padInfo.top,p=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let b=0;b<e.inChannels;++b)for(let y=0;y<e.outDepth;++y){const g=y*r-d;let x=g;for(;0>x;)x+=o;const w=Math.min(e.inDepth,l+g);for(let r=0;r<e.outHeight;++r){const l=r*s-f;let d=l;for(;0>d;)d+=a;const v=Math.min(e.inHeight,c+l);for(let s=0;s<e.outWidth;++s){const f=s*i-p;let $=f;for(;0>$;)$+=u;const k=Math.min(e.inWidth,h+f);let N=Number.NEGATIVE_INFINITY,C=-1;for(let e=x;w>e;e+=o){const n=e-g;for(let r=d;v>r;r+=a){const s=r-l;for(let i=$;k>i;i+=u){const o=i-f,a=t.get(m,e,r,i,b);N>a||(N=a,C=n*c*h+s*c+o)}}}n.set(C,m,y,r,s,b)}}}return n})(n.bufferSync(i),c),d=c.strideDepth,f=c.strideHeight,p=c.strideWidth,m=c.dilationDepth,b=c.dilationHeight,y=c.dilationWidth,g=c.effectiveFilterDepth,x=c.effectiveFilterHeight,w=c.effectiveFilterWidth,v=g-1-c.padInfo.front,$=w-1-c.padInfo.left,k=x-1-c.padInfo.top,N=We(i.shape,"float32"),C=n.bufferSync(s);for(let S=0;S<c.batchSize;++S)for(let t=0;t<c.inChannels;++t)for(let e=0;e<c.inDepth;++e)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=e-v,i=n-k,o=r-$;let a=0;for(let e=0;g>e;e+=m){const n=(s+e)/d;if(n>=0&&n<c.outDepth&&Math.floor(n)===n)for(let r=0;x>r;r+=b){const s=(i+r)/f;if(s>=0&&s<c.outHeight&&Math.floor(s)===s)for(let i=0;w>i;i+=y){const u=(o+i)/p;if(0>u||u>=c.outWidth||Math.floor(u)!==u)continue;const l=g*x*w-1-h.get(S,n,s,u,t)===e*x*w+r*w+i?1:0;0!==l&&(a+=C.get(S,n,s,u,t)*l)}}}N.set(a,S,e,n,r,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},vI={kernelName:wp,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i,output:o}=e,a=i;au([i,o],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,d=Dn(a.shape,u,l,1,c,h),f=n.data.get(a.dataId).values,p=We(d.outShape,a.dtype,il(f,a.shape,a.dtype,d).values),m=d.strideHeight,b=d.strideWidth,y=d.dilationHeight,g=d.dilationWidth,x=d.effectiveFilterHeight,w=d.effectiveFilterWidth,v=w-1-d.padInfo.left,$=x-1-d.padInfo.top,k=We(a.shape,"float32"),N=n.data.get(s.dataId).values,C=We(s.shape,"float32",N);for(let S=0;S<d.batchSize;++S)for(let t=0;t<d.inChannels;++t)for(let e=0;e<d.inHeight;++e)for(let n=0;n<d.inWidth;++n){const r=e-$,s=n-v;let i=0;for(let e=0;x>e;e+=y){const n=(r+e)/m;if(n>=0&&n<d.outHeight&&Math.floor(n)===n)for(let r=0;w>r;r+=g){const o=(s+r)/b;if(0>o||o>=d.outWidth||Math.floor(o)!==o)continue;const a=x*w-1-p.get(S,n,o,t)===e*w+r?1:0;0!==a&&(i+=C.get(S,n,o,t)*a)}}k.set(i,S,e,n,t)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},$I={kernelName:kp,backendName:"cpu",kernelFunc({inputs:t,attrs:e,backend:n}){const{x:r}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:a}=e,u=n;au(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=Dn(r.shape,s,i,[1,1],o),[h,d]=((t,e,n,r,s)=>{const i=sl(t,0,n,at(e),s,"max"),o=il(t,e,n,s,!0,r);return[i.values,o.values]})(l,r.shape,r.dtype,a,c),f=u.write(h,c.outShape,r.dtype),p=u.write(d,c.outShape,r.dtype);return[{dataId:f,shape:c.outShape,dtype:r.dtype},{dataId:p,shape:c.outShape,dtype:"int32"}]}},kI={kernelName:Np,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r,a=j(i,s.shape),u=V(Zn(s.shape,a)[1]),l=[],c=n.makeTensorInfo([],"float32",new Float32Array([u]));l.push(c);const h=mu({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});l.push(h);const d=PO({inputs:{a:h,b:c},backend:n});l.push(d);const f=hl({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:o}});return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),f}},NI={kernelName:Cp,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r;au(s,"min");const a=j(i,s.shape);let u=a;const l=er(u,s.shape.length);let c=s;null!=l&&(c=Ru({inputs:{x:s},backend:n,attrs:{perm:l}}),u=rr(u.length,s.shape.length)),tr("min",u,c.shape.length);const[h,d]=Zn(c.shape,u),f=V(d),p=ht(V(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<p.length;++y){const t=y*f;let e=m[t];for(let n=0;f>n;++n){const r=m[t+n];(Number.isNaN(r)||e>r)&&(e=r)}p[y]=e}null!=l&&n.disposeIntermediateTensorInfo(c);const b=n.makeTensorInfo(h,c.dtype,p);if(o){const t=nl({inputs:{x:b},backend:n,attrs:{shape:Qn(h,a)}});return n.disposeIntermediateTensorInfo(b),t}return b}},CI={kernelName:Ep,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:i,mode:o}=r;au(s,"mirrorPad");const a=i.map((t,e)=>t[0]+s.shape[e]+t[1]),u=i.map(t=>t[0]),l=i.map((t,e)=>t[0]+s.shape[e]),c="reflect"===o?0:1,h=n.data.get(s.dataId).values,d=s.shape.length,f=at(s.shape),p=V(a),m=a.length,b=at(a),y=H(s.dtype,p);for(let g=0;p>g;g++){let t=mt(g,m,b);for(let n=0;m>n;n++)t[n]<u[n]?t[n]=2*u[n]-t[n]-c:t[n]<l[n]||(t[n]=2*(l[n]-1)-t[n]+c);t=t.map((t,e)=>t-u[e]);const e=pt(t,d,f);y[g]=h[e]}return{dataId:n.write(y,a,s.dtype),shape:a,dtype:s.dtype}}},SI=lu((t,e)=>{const n=t%e;return 0>t&&0>e||t>=0&&e>=0?n:(n+e)%e}),EI=bu(Tp,SI),TI={kernelName:Tp,backendName:"cpu",kernelFunc:EI},_I={kernelName:gm,backendName:"cpu",kernelFunc:gl},RI={kernelName:_p,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{numSamples:i,seed:o,normalized:a}=r;au(s,"multinomial");const u=a?s:gl({inputs:{logits:s},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],h=n.data.get(u.dataId).values,d=[l,i],f=ht(V(d),"int32");for(let p=0;l>p;++p){const t=p*c,e=new Float32Array(c-1);e[0]=h[t];for(let s=1;s<e.length;++s)e[s]=e[s-1]+h[t+s];const n=Iw.alea(o.toString()),r=p*i;for(let s=0;i>s;++s){const t=n();f[r+s]=e.length;for(let n=0;n<e.length;n++)if(t<e[n]){f[r+s]=n;break}}}return a||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(d,"int32",f)}},AI=Ar,OI={kernelName:Ip,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:u}=r;au(s,"NonMaxSuppression");const l=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values,{selectedIndices:h}=AI(l,c,o,a,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},II=Or,FI={kernelName:Fp,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:u,padToMaxOutputSize:l}=r;au(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,{selectedIndices:d,validOutputs:f}=II(c,h,o,a,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},MI=Ir,DI={kernelName:Mp,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:u,softNmsSigma:l}=r;au(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,d=o,f=a,p=u,m=l,{selectedIndices:b,selectedScores:y}=MI(c,h,d,f,p,m);return[n.makeTensorInfo([b.length],"int32",new Int32Array(b)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},LI={kernelName:Lp,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s}=e,{dtype:i,depth:o,onValue:a,offValue:u}=r;au(s,"oneHot");const l=V(s.shape),c=new Float32Array(l*o);c.fill(u);const h=n.data.get(s.dataId).values;for(let d=0;l>d;++d)h[d]>=0&&h[d]<o&&(c[d*o+h[d]]=a);return n.makeTensorInfo([...s.shape,o],i,c)}},VI={kernelName:Bm,backendName:"cpu",kernelFunc:xl},PI={kernelName:Dp,backendName:"cpu",kernelFunc:function t(e){const{inputs:n,backend:r}=e,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const e=fu({inputs:{input:s},backend:r}),n=t({inputs:{x:e},backend:r}),i=al({inputs:{input:s},backend:r}),o=xl({inputs:{x:i},backend:r}),a=cu({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),a}return bl({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}},BI={kernelName:Vp,backendName:"cpu",kernelFunc:wl},zI={kernelName:Pp,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:i,constantValue:o}=r;au(s,"pad");const a=i.map((t,e)=>t[0]+s.shape[e]+t[1]),u=i.map(t=>t[0]),l=n.data.get(s.dataId).values,c=V(s.shape),h=s.shape.length,d=at(s.shape),f=V(a),p=a.length,m=at(a),b=H(s.dtype,f);0!==o&&b.fill(o);for(let y=0;c>y;y++)b[pt(mt(y,h,d).map((t,e)=>t+u[e]),p,m)]=l[y];return{dataId:n.write(b,a,s.dtype),shape:a,dtype:s.dtype}}},WI=lu((t,e)=>Math.pow(t,e)),UI=bu(Bp,WI),GI={kernelName:Bp,backendName:"cpu",kernelFunc:UI},jI={kernelName:Up,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{paramsNestedSplits:s,paramsDenseValues:i,indices:o}=e,{outputRaggedRank:a}=r,u=s.map(t=>n.data.get(t.dataId).values),l=s.map(t=>t.shape),c=n.data.get(i.dataId).values,h=n.data.get(o.dataId).values,[d,f,p]=Iu(u,l,c,i.shape,i.dtype,h,o.shape),m=d.map(t=>n.makeTensorInfo([t.length],"int32",t)),b=n.makeTensorInfo(p,i.dtype,f);return m.concat([b])}},qI={kernelName:Gp,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{shape:s,values:i,defaultValue:o,rowPartitionTensors:a}=e,{rowPartitionTypes:u}=r,l=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values,h=n.data.get(o.dataId).values,d=a.map(t=>n.data.get(t.dataId).values),f=a.map(t=>t.shape),[p,m]=Du(l,s.shape,c,i.shape,i.dtype,h,o.shape,d,f,u);return n.makeTensorInfo(p,i.dtype,m)}},HI={kernelName:jp,backendName:"cpu",kernelFunc(t){const{backend:e,attrs:n}=t,{start:r,stop:s,dtype:i,step:o}=n,a=Lu(r,s,o,i);return e.makeTensorInfo([a.length],i,a)}},XI=vu(Hp,t=>1/t),KI={kernelName:Hp,backendName:"cpu",kernelFunc:XI},JI={kernelName:Zp,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:i,halfPixelCenters:o,size:a}=r;au(s,"resizeBilinear");const u=at(s.shape),[l,c]=a,[h,d,f,p]=s.shape,m=n.data.get(s.dataId).values,b=new Float32Array(V([h,l,c,p])),y=[i&&l>1?d-1:d,i&&c>1?f-1:f],g=[i&&l>1?l-1:l,i&&c>1?c-1:c];let x=0;const w=y[0]/g[0],v=y[1]/g[1];for(let $=0;h>$;$++)for(let t=0;l>t;t++){let e;e=o?w*(t+.5)-.5:w*t;const n=Math.max(0,Math.floor(e)),r=e-n,s=Math.min(d-1,Math.ceil(e)),i=$*u[0]+n*u[1],a=$*u[0]+s*u[1];for(let t=0;c>t;t++){let e;e=o?v*(t+.5)-.5:v*t;const n=Math.max(0,Math.floor(e)),s=e-n,l=Math.min(f-1,Math.ceil(e)),c=i+n*u[2],h=a+n*u[2],d=i+l*u[2],y=a+l*u[2];for(let t=0;p>t;t++){const e=m[c+t],n=m[h+t],i=e+(m[d+t]-e)*s,o=i+(n+(m[y+t]-n)*s-i)*r;b[x++]=o}}}return n.makeTensorInfo([h,l,c,p],"float32",b)}},YI={kernelName:Qp,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:i}=e,{alignCorners:o}=r;au([i,s],"resizeBilinearGrad");const a=at(s.shape),[u,l,c,h]=s.shape,[,d,f]=i.shape,p=new Float32Array(u*l*c*h),m=[o&&d>1?l-1:l,o&&f>1?c-1:c],b=[o&&d>1?d-1:d,o&&f>1?f-1:f],y=m[0]/b[0],g=m[1]/b[1],x=n.data.get(i.dataId).values;let w=0;for(let v=0;u>v;v++){const t=v*a[0];for(let e=0;d>e;e++){const n=e*y,r=Math.floor(n),s=Math.min(Math.ceil(n),l-1),i=t+r*a[1],o=t+s*a[1],u=n-r,d=1-u;for(let t=0;f>t;t++){const e=t*g,n=Math.floor(e),r=Math.min(Math.ceil(e),c-1),s=e-n,l=1-s,f=i+n*a[2],m=i+r*a[2],b=o+n*a[2],y=o+r*a[2],v=d*l,$=d*s,k=u*l,N=u*s;for(let t=0;h>t;t++){const e=x[w++];p[f+t]+=e*v,p[m+t]+=e*$,p[b+t]+=e*k,p[y+t]+=e*N}}}}return n.makeTensorInfo([u,c,l,h],"float32",p)}},ZI={kernelName:Jp,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:i,halfPixelCenters:o,size:a}=r;au(s,"resizeNearestNeighbor");const u=at(s.shape),[l,c]=a,[h,d,f,p]=s.shape,m=n.data.get(s.dataId).values,b=new Float32Array(h*l*c*p),y=[i&&l>1?d-1:d,i&&c>1?f-1:f],g=[i&&l>1?l-1:l,i&&c>1?c-1:c],x=y[0]/g[0],w=y[1]/g[1];let v=0;for(let $=0;h>$;$++){const t=$*u[0];for(let e=0;l>e;e++){const n=o?x*(e+.5):x*e;let r=Math.min(d-1,i?Math.round(n):Math.floor(n));o&&(r=Math.max(0,r));const s=t+r*u[1];for(let t=0;c>t;t++){const e=o?w*(t+.5):w*t;let n=Math.min(f-1,i?Math.round(e):Math.floor(e));o&&(n=Math.max(0,n));const r=s+n*u[2];for(let t=0;p>t;t++){const e=m[r+t];b[v++]=e}}}}return n.makeTensorInfo([h,l,c,p],s.dtype,b)}},QI={kernelName:Yp,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:i}=e,{alignCorners:o}=r;au([i,s],"resizeNearestNeighborGrad");const a=at(s.shape),u=at(i.shape),[l,c,h,d]=s.shape,[,f,p]=i.shape,m=new Float32Array(l*c*h*d),b=n.data.get(i.dataId).values,y=[o&&f>1?c-1:c,o&&p>1?h-1:h],g=[o&&f>1?f-1:f,o&&p>1?p-1:p],x=y[0]/g[0],w=y[1]/g[1],v=1/x,$=1/w,k=2*Math.ceil(v)+2,N=2*Math.ceil($)+2;for(let C=0;l>C;C++){const t=C*a[0];for(let e=0;c>e;e++){const n=t+e*a[1],r=Math.floor(e*v),s=Math.floor(r-k/2);for(let i=0;h>i;i++){const r=n+i*a[2],l=Math.floor(i*$),y=Math.floor(l-N/2);for(let n=0;d>n;n++){let a=0;for(let r=0;k>r;r++){const l=r+s;if(0>l||l>=f)continue;const d=t+l*u[1],m=l*x;if(e===Math.min(c-1,o?Math.round(m):Math.floor(m)))for(let t=0;N>t;t++){const e=t+y;if(0>e||e>=p)continue;const r=d+e*u[2],s=e*w;i===Math.min(h-1,o?Math.round(s):Math.floor(s))&&(a+=b[r+n])}}m[r+n]=a}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}},tF={kernelName:em,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dims:i}=r;au(s,"reverse");const o=s.shape.length,a=j(i,s.shape);if(0===o)return du({inputs:{x:s},backend:n});const u=new vb(s.shape,s.dtype),l=n.bufferSync(s);for(let c=0;c<u.size;c++){const t=u.indexToLoc(c),e=t.slice();a.forEach(t=>e[t]=s.shape[t]-1-e[t]),u.set(l.get(...e),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},eF={kernelName:Um,backendName:"cpu",kernelFunc({inputs:t,attrs:e,backend:n}){const{image:r}=t,{radians:s,fillValue:i,center:o}=e,a=n,u=H(r.dtype,V(r.shape)),[l,c,h,d]=r.shape,[f,p]=Hr(o,c,h),m=Math.sin(s),b=Math.cos(s),y=a.data.get(r.dataId).values;for(let g=0;l>g;g++){const t=g*h*c*d;for(let e=0;c>e;e++){const n=e*(h*d);for(let r=0;h>r;r++){const s=r*d;for(let o=0;d>o;o++){const a=[l,e,r,o],g=a[2],x=a[1];let w=(g-f)*b-(x-p)*m,v=(g-f)*m+(x-p)*b;w=Math.round(w+f),v=Math.round(v+p);let $=i;"number"!=typeof i&&($=3===o?255:i[o]),w>=0&&h>w&&v>=0&&c>v&&($=y[t+v*(h*d)+w*d+o]),u[t+n+s+o]=$}}}}return{dataId:a.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},nF=vu(nm,t=>{const e=Math.floor(t);return.5>t-e?Math.floor(t):t-e>.5?Math.ceil(t):e%2==0?e:e+1}),rF={kernelName:nm,backendName:"cpu",kernelFunc:nF},sF={kernelName:sm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s,updates:i}=e,{shape:o}=r,{sliceRank:a,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=mn(0,s,o),d=Vu(n.bufferSync(s),n.bufferSync(i),o,h,l,u,a,c,0,!0);return n.makeTensorInfo(o,d.dtype,d.values)}},iF={kernelName:im,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{sortedSequence:s,values:i}=e,{side:o}=r,a=((t,e,n,r,s,i)=>{const o=X("int32",n*s);for(let a=0;n>a;++a){const n=t.slice(a*r,(a+1)*r),u=a*s;for(let t=0;s>t;++t)o[u+t]="left"===i?vl(n,e[t+u]):$l(n,e[t+u])}return o})(n.data.get(s.dataId).values,n.data.get(i.dataId).values,s.shape[0],s.shape[1],i.shape[1],o);return n.makeTensorInfo(i.shape,"int32",a)}},oF={kernelName:om,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n}=t,{condition:r,t:s,e:i}=e;au([r,s,i],"select");const o=r.shape.length,a=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,c=re(s.dtype,i.dtype),h=ht(V(s.shape),c);let d=0;const f=0===o||o>1||1===s.shape.length?1:V(s.shape.slice(1));for(let p=0;p<a.length;p++)for(let t=0;f>t;t++)1===a[p]?h[d++]=u[p]:h[d++]=l[p];return n.makeTensorInfo(s.shape,c,h)}},aF=W$,uF=U$,lF=vu(am,t=>0>t?aF*(Math.exp(t)-1):uF*t),cF={kernelName:am,backendName:"cpu",kernelFunc:lF},hF=vu(hm,t=>0>t?-1:t>0?1:0),dF={kernelName:hm,backendName:"cpu",kernelFunc:hF},fF=vu(lm,t=>Math.sin(t)),pF={kernelName:lm,backendName:"cpu",kernelFunc:fF},mF=vu(cm,t=>Math.sinh(t)),bF={kernelName:cm,backendName:"cpu",kernelFunc:mF},yF=Math.log(1.1920928955078125e-7)+2,gF=vu(fm,t=>{const e=t>-yF,n=yF>t,r=Math.exp(t);let s;return s=n?r:e?t:Math.log(1+r),s}),xF={kernelName:fm,backendName:"cpu",kernelFunc:gF},wF={kernelName:bm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:i,paddings:o}=r;au([s],"spaceToBatchND");const a=V(i),u=[[0,0]];u.push(...o);for(let b=1+i.length;b<s.shape.length;++b)u.push([0,0]);const l=zI.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),c=Xr(l.shape,i,a,!1),h=Kr(c.length,i.length,!1),d=Jr(l.shape,i,a,!1),f=nl({inputs:{x:l},backend:n,attrs:{shape:c}}),p=Ru({inputs:{x:f},backend:n,attrs:{perm:h}}),m=nl({inputs:{x:p},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(p),m}},vF={kernelName:xm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n}=t,{indices:r,values:s,denseShape:i,defaultValue:o}=e;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${i.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const a=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,c=n.data.get(o.dataId).values[0],[h,d,f,p,m]=zu(a,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,f),n.makeTensorInfo([p.length],"bool",new Uint8Array(p.map(t=>Number(t)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},$F={kernelName:wm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n}=t,{inputIndices:r,inputShape:s,newShape:i}=e;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const o=Array.from(n.data.get(s.dataId).values),a=n.data.get(r.dataId).values,u=Array.from(n.data.get(i.dataId).values),[l,c,h]=Wu(a,r.shape,r.dtype,o,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}},kF={kernelName:vm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:i}=e;if(1>r.shape.length)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${i.shape}`);if(s.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values,[l,c]=Uu(o,r.shape,r.dtype,a,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},NF={kernelName:$m,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:i}=e;if(1>r.shape.length)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${i.shape}`);if(s.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values,[l,c]=Uu(o,r.shape,r.dtype,a,u);return n.makeTensorInfo(c,r.dtype,l)}},CF={kernelName:km,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:s,sparseValues:i,defaultValue:o}=e,{outputShape:a}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=mn(0,s,a),f=!1,p=n.bufferSync(s);let m;switch(i.dtype){case"bool":m=Vu(p,n.bufferSync(i),a,d,c,l,u,h,Boolean(n.data.get(o.dataId).values[0]),f);break;case"float32":case"int32":m=Vu(p,n.bufferSync(i),a,d,c,l,u,h,n.data.get(o.dataId).values[0],f);break;case"string":m=Vu(p,n.bufferSync(i),a,d,c,l,u,h,Kt(n.data.get(o.dataId).values[0]),f);break;default:throw new Error(`Unsupported type ${i.dtype}`)}return n.makeTensorInfo(a,m.dtype,m.values)}},SF={kernelName:ym,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{numOrSizeSplits:i,axis:o}=r,a=j(o,s.shape)[0],u=fs(s,i,a),l=new Array(s.shape.length).fill(0),c=s.shape.slice();return u.map(t=>{const e=[...c];e[a]=t;const r=Bu({inputs:{x:s},backend:n,attrs:{begin:l,size:e}});return l[a]+=t,r})}},EF={kernelName:Cm,backendName:"cpu",kernelFunc({inputs:t,backend:e}){const{x:n}=t,r=e;au(n,"square");const s=r.data.get(n.dataId).values,i=new Float32Array(s.length);for(let o=0;o<s.length;++o){const t=s[o];i[o]=t*t}return{dataId:r.write(i,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},TF=vu(zm,(t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha}),_F={kernelName:zm,backendName:"cpu",kernelFunc:TF},RF={kernelName:Sm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:i,end:o,strides:a,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;au(s,"stridedSlice");const{finalShapeSparse:f,finalShape:p,isIdentity:m,sliceDim0:b,isSimpleSlice:y,begin:g,end:x,strides:w}=_n(s.shape,i,o,a,u,l,c,h,d);let v;if(m)v=nl({inputs:{x:s},backend:n,attrs:{shape:p}});else if(b||y){F(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const t=yn(g,x,w),e=Bu({inputs:{x:s},backend:n,attrs:{begin:g,size:t}});v=nl({inputs:{x:e},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(e)}else{const t=Gu(f,n.bufferSync(s),w,g);v=n.makeTensorInfo(p,t.dtype,t.values)}return v}},AF={kernelName:Em,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{separator:s,nGramWidths:i,leftPad:o,rightPad:a,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=e,d=n.data.get(c.dataId).values,f=n.data.get(h.dataId).values,[p,m]=ju(d,f,s,i,o,a,u,l);return[n.makeTensorInfo([p.length],"string",p),n.makeTensorInfo(h.shape,"int32",m)]}},OF={kernelName:Tm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{skipEmpty:s}=r,{input:i,delimiter:o}=e;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const a=n.data.get(i.dataId).values,u=n.data.get(o.dataId).values[0],[l,c,h]=Hu(a,u,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},IF={kernelName:_m,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{numBuckets:s}=r,{input:i}=e;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(0>=s)throw new Error("Number of buckets must be at least 1");const o=Xu(n.data.get(i.dataId).values,s);return n.makeTensorInfo(i.shape,"int32",o)}},FF=vu(Am,t=>Math.tan(t)),MF={kernelName:Am,backendName:"cpu",kernelFunc:FF},DF=vu(Om,t=>Math.tanh(t)),LF={kernelName:Om,backendName:"cpu",kernelFunc:DF},VF={kernelName:Im,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reps:i}=r;au(s,"tile");const o=Ku(n.bufferSync(s),i);return n.makeTensorInfo(o.shape,o.dtype,o.values)}},PF={kernelName:Fm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{k:i,sorted:o}=r;au(s,"topk");const a=n.data.get(s.dataId).values,[u,l]=Yu(a,s.shape,s.dtype,i,o);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},BF={kernelName:Mm,backendName:"cpu",kernelFunc(t){const{inputs:e,attrs:n,backend:r}=t,{image:s,transforms:i}=e,{interpolation:o,fillMode:a,fillValue:u,outputShape:l}=n,[c,h,d,f]=s.shape,[p,m]=null!=l?l:[h,d],b=[c,p,m,f],y=at(s.shape),g=y[0],x=y[1],w=y[2],v=at(b),$=v[0],k=v[1],N=v[2],C=H(s.dtype,V(b));C.fill(u);const S=r.data.get(s.dataId).values,E=r.data.get(i.dataId).values;for(let T=0;c>T;++T){const t=1===i.shape[0]?E:E.subarray(8*T,8*T+8);for(let e=0;p>e;++e)for(let n=0;m>n;++n)for(let r=0;f>r;++r){let s;const i=t[6]*n+t[7]*e+1;if(0===i)continue;const l=(t[0]*n+t[1]*e+t[2])/i,c=(t[3]*n+t[4]*e+t[5])/i,f=kl(l,d,a),p=kl(c,h,a);switch(o){case"nearest":s=Cl(S,h,d,g,x,w,T,p,f,r,u);break;case"bilinear":s=Sl(S,h,d,g,x,w,T,p,f,r,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}C[T*$+e*k+n*N+r]=s}return r.makeTensorInfo(b,s.dtype,C)}return{dataId:r.write(C,b,s.dtype),shape:s.shape,dtype:s.dtype}}},zF={kernelName:Lm,backendName:"cpu",kernelFunc(t){const{inputs:e,attrs:n,backend:r}=t,{axis:s}=n,{x:i}=e;au(i,"unique");const o=r.data.get(i.dataId).values,{outputValues:a,outputShape:u,indices:l}=Zu(o,s,i.shape,i.dtype);return[r.makeTensorInfo(u,i.dtype,a),r.makeTensorInfo([l.length],"int32",l)]}},WF={kernelName:Vm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{value:s}=e;let{axis:i}=r;0>i&&(i+=s.shape.length);const o=s.shape.length,a=s.shape[i],u=new Array(o-1);let l=0;for(let f=0;o>f;f++)f!==i&&(u[l++]=s.shape[f]);const c=new Array(o).fill(0),h=s.shape.slice();h[i]=1;const d=new Array(a);for(let f=0;f<d.length;f++){c[i]=f;const t=Bu({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});d[f]=nl({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return d}},UF={kernelName:Pm,backendName:"cpu",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,segmentIds:i}=e,{numSegments:o}=r;au(s,"unsortedSegmentSum");const a=[],u=[],l=s.shape.length-i.shape.length;let c=i;for(let d=0;l>d;++d){const t=dl({inputs:{input:c},backend:n,attrs:{dim:d+1}});c=t,u.push(t)}for(let d=0;o>d;++d){const t=Gt(d,"int32"),e=n.makeTensorInfo([],"int32",t),r=rR({inputs:{a:e,b:c},backend:n}),i=mu({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),o=LR({inputs:{a:i,b:s},backend:n}),l=hl({inputs:{x:o},backend:n,attrs:{axis:0,keepDims:!1}});a.push(l),u.push(e),u.push(r),u.push(i),u.push(o),u.push(l)}const h=wl({inputs:a,backend:n,attrs:{axis:0}});return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),h}},GF=[NA,G_,SA,TA,Z_,_A,RA,AA,OA,IA,MA,LA,PA,WA,GA,jA,qA,HA,XA,kA,KA,JA,YA,ZA,X_,eR,tO,j_,eO,rO,sO,iO,oO,aO,uO,lO,hO,fO,pO,mO,bO,yO,gO,xO,wO,vO,$O,kO,NO,CO,EO,pA,TO,sR,DO,aR,LO,cR,zO,WO,UO,fR,qO,HO,XO,KO,JO,bR,xR,q_,YO,nO,QO,eI,rI,mA,$R,CR,sI,TR,oI,lI,hI,pI,mI,bI,yI,AR,gI,xI,wI,vI,$I,kI,NI,FR,CI,TI,RI,VR,PR,OI,FI,DI,WR,LI,PI,BI,zI,GI,yA,GR,jI,qI,HI,H_,BO,KI,xA,vA,$A,JI,YI,ZI,QI,tF,eF,rF,KR,sF,iF,oF,cF,ZR,dF,pF,bF,QR,_I,xF,wF,vF,$F,kF,NF,CF,SF,nA,EF,iA,_F,RF,AF,OF,IF,cA,SO,MF,LF,VF,PF,BF,UR,zF,WF,UF,VI];for(const Fj of GF)Ct(Fj);const jF={},qF={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};var HF,XF,KF,JF,YF,ZF;(XF=HF||(HF={}))[XF.DENSE=0]="DENSE",XF[XF.SHARED_BATCH=1]="SHARED_BATCH",(JF=KF||(KF={}))[JF.RENDER=0]="RENDER",JF[JF.UPLOAD=1]="UPLOAD",JF[JF.PIXELS=2]="PIXELS",JF[JF.DOWNLOAD=3]="DOWNLOAD",(ZF=YF||(YF={}))[ZF.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",ZF[ZF.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",ZF[ZF.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",ZF[ZF.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",ZF[ZF.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16";const QF=/ERROR: [0-9]+:([0-9]+):/g;let tM,eM;const nM=gt();nM.registerFlag("HAS_WEBGL",()=>nM.getNumber("WEBGL_VERSION")>0),nM.registerFlag("WEBGL_VERSION",()=>Xl(2)?2:Xl(1)?1:0),nM.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),nM.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===nM.get("WEBGL_VERSION")),nM.registerFlag("WEBGL_CPU_FORWARD",()=>!0),nM.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),nM.registerFlag("WEBGL_PACK",()=>nM.getBool("HAS_WEBGL")),nM.registerFlag("WEBGL_PACK_NORMALIZATION",()=>nM.getBool("WEBGL_PACK")),nM.registerFlag("WEBGL_PACK_CLIP",()=>nM.getBool("WEBGL_PACK")),nM.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>nM.getBool("WEBGL_PACK")),nM.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>nM.getBool("WEBGL_PACK")),nM.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>nM.getBool("WEBGL_PACK")),nM.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>nM.getBool("WEBGL_PACK")),nM.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>nM.getBool("WEBGL_PACK")),nM.registerFlag("WEBGL_PACK_REDUCE",()=>nM.getBool("WEBGL_PACK")),nM.registerFlag("WEBGL_LAZILY_UNPACK",()=>nM.getBool("WEBGL_PACK")),nM.registerFlag("WEBGL_CONV_IM2COL",()=>nM.getBool("WEBGL_PACK")),nM.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>(t=>{if(null==tM){const e=El(t);tM=e.getParameter(e.MAX_TEXTURE_SIZE)}return tM})(nM.getNumber("WEBGL_VERSION"))),nM.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>(t=>{if(null==eM){const e=El(t);eM=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,eM)})(nM.getNumber("WEBGL_VERSION"))),nM.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const t=nM.getNumber("WEBGL_VERSION");return 0===t?0:(t=>{if(0===t)return 0;let e;const n=El(t);return e=Hl(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:Hl(n,"EXT_disjoint_timer_query")?1:0,e})(t)}),nM.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>nM.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!fe()),nM.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>(t=>{if(0===t)return!1;const e=El(t);if(1===t){if(!Hl(e,"OES_texture_float"))return!1}else if(!Hl(e,"EXT_color_buffer_float"))return!1;return Kl(e)})(nM.getNumber("WEBGL_VERSION"))),nM.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!nM.getBool("WEBGL_FORCE_F16_TEXTURES")&&nM.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),nM.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>(t=>{if(0===t)return!1;const e=El(t);if(1!==t){if(Hl(e,"EXT_color_buffer_float"))return Kl(e);const t="EXT_color_buffer_half_float";if(Hl(e,t)){const n=e.getExtension(t);return((t,e)=>{const n=Al(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,s),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(s),i})(e,n)}return!1}return!!Hl(e,"OES_texture_float")&&!!Hl(e,"WEBGL_color_buffer_float")&&Kl(e)})(nM.getNumber("WEBGL_VERSION"))),nM.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(t=nM.getNumber("WEBGL_VERSION"))&&null!=El(t).fenceSync;var t}),nM.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>nM.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),nM.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,t=>{if(0>t&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)}),nM.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>fe()?1:-1,t=>{if(0>t&&-1!==t)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${t}.`)}),nM.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),nM.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),nM.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),nM.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),nM.registerFlag("WEBGL_EXP_CONV",()=>!1),nM.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>nM.getBool("IS_TEST")),nM.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),nM.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),nM.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);const rM="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:sM}=Q$,iM="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",oM="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",aM="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",uM="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";class lM{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=HF.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=Yl();this.outputShape=t,this.enableShapeUniforms=dc(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?Ql(["r","c","d"],t):Zl(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${e.output} = result;\n      }\n    `}}class cM{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=HF.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=Yl();this.outputShape=t,this.enableShapeUniforms=dc(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?Ql(["r","c","d"],t):Zl(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${e.output} = result;\n      }\n    `}}class hM{constructor(t){this.variableNames=["A"],this.outTexUsage=KF.DOWNLOAD;const e=Yl();this.outputShape=t,this.userCode=`\n      ${rM}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class dM{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=KF.DOWNLOAD;const e=Yl();this.outputShape=t,this.userCode=`\n      ${rM}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class fM{constructor(t,e=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Yl();this.outputShape=t,this.enableShapeUniforms=dc(this.outputShape.length);let r="result";e&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":tc(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class pM{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Yl();this.outputShape=t,this.enableShapeUniforms=dc(this.outputShape.length);let r="",s="result";e&&(s="floor(result * 255. + 0.5)");for(let i=0;1>=i;i++)for(let e=0;1>=e;e++){const s=2*i+e;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${e} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {\n          localCoords[2] += ${e};\n          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {\n            localCoords[1] += ${i};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":tc(t)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}class mM{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=gt().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,((t,e)=>{jF[t]=e})(e,t)):this.gl=El(e);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===gt().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=Fl(this.gl,t),Hl(this.gl,e))this.textureHalfFloatExtension=Fl(this.gl,e);else if(gt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Hl(this.gl,r))this.colorBufferHalfFloatExtension=Fl(this.gl,r);else if(gt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Hl(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Hl(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=(t=>((t,e)=>{const n=zl(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return Ol(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),Ol(t,()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW)),n})(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0])))(this.gl),this.indexBuffer=(t=>((t,e)=>{const n=zl(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return Ol(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n)),Ol(t,()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW)),n})(t,new Uint16Array([0,1,2,2,1,3])))(this.gl),this.framebuffer=(t=>zl(t,()=>t.createFramebuffer(),"Unable to create WebGLFramebuffer."))(this.gl),this.textureConfig=Al(this.gl,this.textureHalfFloatExtension)}get debug(){return gt().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program,this.outputTexture;const t=this.gl;Ol(t,()=>t.finish()),Ol(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),Ol(t,()=>t.deleteFramebuffer(this.framebuffer)),Ol(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),Ol(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),Ol(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),((t,e,n,r)=>{const[s,i]=Tl(e,n);return fc(t,s,i,pc(r),r.textureFormatFloat,t.FLOAT)})(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),((t,e,n,r)=>{const[s,i]=Tl(e,n);return fc(t,s,i,mc(r),r.textureFormatFloat,r.textureTypeHalfFloat)})(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),((t,e,n,r)=>{const[s,i]=Tl(e,n);return fc(t,s,i,bc(r),t.RGBA,t.UNSIGNED_BYTE)})(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),((t,e,n)=>{Ol(t,()=>t.bindTexture(t.TEXTURE_2D,e)),n.data instanceof Uint8Array?2===gt().getNumber("WEBGL_VERSION")?Ol(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n.width,n.height,t.RGBA,t.UNSIGNED_BYTE,n.data)):Ol(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data)):2===gt().getNumber("WEBGL_VERSION")?Ol(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,t.RGBA,t.UNSIGNED_BYTE,n)):Ol(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n)),Ol(t,()=>t.bindTexture(t.TEXTURE_2D,null))})(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),((t,e,n,r,s,i)=>{let o,a,u;Ol(t,()=>t.bindTexture(t.TEXTURE_2D,e)),s instanceof Uint8Array?(o=new Uint8Array(n*r*4),a=t.UNSIGNED_BYTE,u=t.RGBA):(o=new Float32Array(n*r*4),a=t.FLOAT,u=i.internalFormatPackedFloat),o.set(s),2===gt().getNumber("WEBGL_VERSION")?Ol(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n,r,t.RGBA,a,o)):Ol(t,()=>t.texImage2D(t.TEXTURE_2D,0,u,n,r,0,t.RGBA,a,o)),Ol(t,()=>t.bindTexture(t.TEXTURE_2D,null))})(this.gl,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),((t,e,n,r)=>{const[s,i]=Rl(e,n);return fc(t,s,i,gc(r),t.RGBA,r.textureTypeHalfFloat)})(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),((t,e,n,r)=>{const[s,i]=Rl(e,n);return fc(t,s,i,yc(r),t.RGBA,t.FLOAT)})(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(Pl(this.gl,this.framebuffer),this.outputTexture=null),Ol(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,()=>((t,e,n,r)=>{const[s,i]=Tl(e,n),o=new Uint8Array(e*n*4);return Ol(t,()=>t.readPixels(0,0,s,i,r.downloadTextureFormat,t.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)})(this.gl,e,n,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,n,r,s,i){return((t,e,n,r,s,i,o)=>{const a=t,u=new Float32Array(((t,e)=>{const[n,r]=Rl(t,e);return n*r*4})(i,o));return a.bindBuffer(a.PIXEL_PACK_BUFFER,e),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,u),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),u})(this.gl,t,0,0,0,s,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return((t,e,n)=>{const r=t,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s})(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=((t,e,n)=>{const r=t.createBuffer();Ol(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,r));const s=16*e*n;return Ol(t,()=>t.bufferData(t.PIXEL_PACK_BUFFER,s,t.STREAM_READ)),Ol(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0)),Ol(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null)),r})(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(gt().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(s,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=s}else gt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,gt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,()=>((t,e,n)=>{const r=new Float32Array(e*n*4);return Ol(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r)),r})(this.gl,e,n))}createProgram(t){this.throwIfDisposed();const e=this.gl;null==this.vertexShader&&(this.vertexShader=(t=>{const e=Yl();return((t,e)=>{const n=zl(t,()=>t.createShader(t.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Ol(t,()=>t.shaderSource(n,e)),Ol(t,()=>t.compileShader(n)),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw new Error("Failed to compile vertex shader.");return n})(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)})(e));const n=(t=>zl(t,()=>t.createProgram(),"Unable to create WebGLProgram."))(e);return Ol(e,()=>e.attachShader(n,this.vertexShader)),Ol(e,()=>e.attachShader(n,t)),((t,e)=>{if(Ol(t,()=>t.linkProgram(e)),!gt().get("ENGINE_COMPILE_ONLY")&&!1===t.getProgramParameter(e,t.LINK_STATUS))throw new Error("Failed to link vertex and fragment shaders.")})(e,n),this.debug&&Dl(e,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=((t,e,n)=>(Ol(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),Ll(t,e,"clipSpacePos",n,3,20,0)&&Ll(t,e,"uv",n,2,20,12)))(e,this.program,this.vertexBuffer)),n}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&Ol(this.gl,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&Dl(this.gl,this.program),Ol(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?((t,e,n)=>zl(t,()=>t.getUniformLocation(e,n),'uniform "'+n+'" not present in program.'))(this.gl,t,e):((t,e,n)=>t.getUniformLocation(e,n))(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),Ol(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),((t,e,n,r)=>{Ol(t,()=>((t,e,n)=>{((t,e)=>{const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(t,n),Ol(t,()=>t.activeTexture(t.TEXTURE0+n)),Ol(t,()=>t.bindTexture(t.TEXTURE_2D,e))})(t,e,r)),Ol(t,()=>t.uniform1i(n,r))})(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,s]=Rl(e,n);this.setOutputMatrixTextureDriver(t,r,s)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&Dl(this.gl,this.program),Bl(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),Ol(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Ol(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=Fl(this.gl,2===gt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===gt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===gt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}waitForQueryAndGetTime(t){return Jh(this,null,function*(){return yield U(()=>this.disposed||this.isQueryAvailable(t,gt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,gt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))})}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=(t=>{let e=0;for(;e<t.length&&t[e]();++e);return e-1})(this.itemsToPoll.map(t=>t.isDoneFn));for(let e=0;t>=e;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in gt().platform&&(n=gt().platform.setTimeoutCustom.bind(gt().platform)),U(()=>(this.pollItems(),0===this.itemsToPoll.length),()=>0,null,n)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Vl(this.gl,t,this.framebuffer),this.debug&&Bl(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Vl(this.gl,this.outputTexture,this.framebuffer),this.debug&&Bl(this.gl)):Pl(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;Vl(r,t,this.framebuffer),this.debug&&Bl(r),this.outputTexture=t,Ol(r,()=>r.viewport(0,0,e,n)),Ol(r,()=>r.scissor(0,0,e,n))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),Ol(this.gl,()=>this.gl.scissor(t,e,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:bM,bincountImpl:yM,bincountReduceImpl:gM,castImpl:xM,ceilImpl:wM,concatImpl:vM,equalImpl:$M,expImpl:kM,expm1Impl:NM,floorImpl:CM,gatherNdImpl:SM,gatherV2Impl:EM,greaterImpl:TM,greaterEqualImpl:_M,lessImpl:RM,lessEqualImpl:AM,linSpaceImpl:OM,logImpl:IM,maxImpl:FM,maximumImpl:MM,minimumImpl:DM,multiplyImpl:LM,negImpl:VM,notEqualImpl:PM,prodImpl:BM,raggedGatherImpl:zM,raggedTensorToTensorImpl:WM,rangeImpl:UM,rsqrtImpl:GM,scatterImpl:jM,sigmoidImpl:qM,simpleAbsImpl:HM,sliceImpl:XM,sparseFillEmptyRowsImpl:KM,sparseReshapeImpl:JM,sparseSegmentReductionImpl:YM,sqrtImpl:ZM,stridedSliceImpl:QM,stringNGramsImpl:tD,stringSplitImpl:eD,stringToHashBucketFastImpl:nD,subImpl:rD,tileImpl:sD,topKImpl:iD,transposeImpl:oD,uniqueImpl:aD}=dA;class uD{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=dc(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const t=wc("rc",this.rank),e=oc(this.rank),n=this.getOutOfBoundsCondition(t),r=this.getSetup(t),s=this.getOutput(t);this.userCode=`\n        void main() {\n          ${e} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(t){const e=[];for(let n=0;1>=n;n++)for(let r=0;1>=r;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let e=2;e<this.rank;e++)s=`${t[t.length-1-e]},`+s;e.push(s)}return e}getOutOfBoundsCondition(t){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let n=this.rank-2;n<this.rank;n++)e+=`${t[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(e+="||");return e}getSetup(t){if(1===this.rank)return"";const e=t.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${e[0]};\n      int c = ${e[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(t){const e=this.getSourceCoordsArr(t);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),\n            cEdge ? 0. : getA(${e[1]}),\n            rEdge ? 0. : getA(${e[2]}),\n            rEdge || cEdge ? 0. : getA(${e[3]})`}}class lD{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=dc(this.outputShape.length);let n="";for(let i=0;4>i;i++){let t="thisRC = rc;";i%2==1&&(t+="thisRC.z += 1;"),i>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${i>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${i}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${i>0?"}":""}\n      `}var r,s;this.userCode=`\n      ${r=e,s=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s?((t,e,n="index")=>{const r=t.map((t,e)=>e),s=((t,e)=>{const n=t.length,r=t.map(t=>`${e}[${t}]`),s=new Array(n-1);s[n-2]=r[n-1];for(let i=n-3;i>=0;--i)s[i]=`(${s[i+1]} * ${r[i+1]})`;return s})(r,e);return s.map((e,r)=>`int ${t[r]} = ${n} / ${s[r]}; ${r===s.length-1?`int ${t[r+1]} = ${n} - ${t[r]} * ${s[r]}`:`index -= ${t[r]} * ${s[r]}`};`).join("")})(["r","c","d"],"inputShape"):Zl(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":tc(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class cD{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this.dt=0,this.ft=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=$c(e,n),s=kc(t,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const i=vc(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this.ft-=i,this.log();const t=this.freeTextures[s].shift();return this.usedTextures[s].push(t),t}let o;return r===YF.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===YF.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===YF.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===YF.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===YF.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(o),this.numUsedTextures++,this.dt+=i,this.log(),o}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const s=$c(n,r),i=kc(e,s,r);i in this.freeTextures||(this.freeTextures[i]=[]);const o=vc(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),a=gt().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==a&&this.dt>a?(this.gpgpu.deleteMatrixTexture(t.texture),this.dt-=o):(this.freeTextures[i].push(t),this.numFreeTextures++,this.ft+=o),this.numUsedTextures--;const u=this.usedTextures[i],l=u.indexOf(t);if(0>l)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){this.logEnabled&&(this.numFreeTextures,this.numUsedTextures,this.ft,this.dt)}get numBytesAllocated(){return this.dt}get numBytesFree(){return this.ft}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const t in this.usedTextures)this.usedTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this.dt=0,this.ft=0}}}class hD{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=dc(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const dD="if (isnan(x)) return x;",fD="return abs(x);",pD=dD+"\n  return (x < 0.0) ? 0.0 : x;\n",mD=dD+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",bD="return x;";class yD{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=dc(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class gD{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=dc(this.outputShape.length);const e=t.length,n=wc("rc",e),r=oc(e),s=((t,e)=>{if(1===t)return"rc";let n="";for(let r=0;t>r;r++)n+=e[r],t-1>r&&(n+=",");return n})(e,n),i=n.slice(-2),o=e>1?`vec2(${i.join(",")})`:"rc";this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${o}));\n      }\n    `}}const xD=$r,wD={},vD=gt().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class $D extends Id{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!gt().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(null!=t){if(t instanceof mM)e=t;else{const n=El(gt().getNumber("WEBGL_VERSION"),t);e=new mM(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const t=El(gt().getNumber("WEBGL_VERSION"));e=new mM(t),this.binaryCache=((n=gt().getNumber("WEBGL_VERSION"))in wD||(wD[n]={}),wD[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new cD(this.gpgpu),this.numMBBeforeWarning=null==gt().global.screen?1024:gt().global.screen.height*gt().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new Od(this,Qe())}nextDataId(){return $D.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(t,e,n){if((gt().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||gt().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:KF.UPLOAD,refCount:1}),r}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){this.texData.get(t).refCount++}decRef(t){this.texData.has(t)&&this.texData.get(t).refCount--}move(t,e,n,r,s){if(gt().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:KF.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensorInfos:s,slice:i,shape:o,isPacked:a}=e;if(null!=i){let e;e=a?new yD(o,bD):new hD(o,bD);const n=this.runWebGLProgram(e,[{dataId:t,shape:o,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;return u&&(l=qt()),c="complex64"===r?Qr(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(t),u&&(this.downloadWaitMs+=qt()-l),this.convertAndCacheOnCPU(t,c)}read(t){return Jh(this,null,function*(){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise(t=>e.push(t))}const e=this.texData.get(t),{values:n,shape:r,slice:s,dtype:i,complexTensorInfos:o,isPacked:a}=e;if(null!=s){let e;e=a?new yD(r,bD):new hD(r,bD);const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:i}],i),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if(gt().getBool("DEBUG")&&!gt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===gt().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==i&&gt().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(t);const e=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(e.texture.texture,..._l(r))}if(this.pendingRead.set(t,[]),"complex64"!==i&&(yield this.gpgpu.createAndWaitForFence()),"complex64"===i){const t=yield Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]);l=Qr(t[0],t[1])}else if(null==c)l=this.getValuesFromTexture(t);else{const t=V(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,t)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=c){const t=this.gpgpu.gl;Ol(t,()=>t.deleteBuffer(c))}const h=this.convertAndCacheOnCPU(t,l),d=this.pendingRead.get(t);return this.pendingRead.delete(t),d.forEach(t=>t(h)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&Qe().removeDataId(t,this),this.pendingDeletes--),h})}readToGPU(t,e={}){const n=this.texData.get(t),{values:r,shape:s,slice:i,dtype:o,isPacked:a,texture:u}=n;if("complex64"===o)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=i){let n;n=a?new yD(s,bD):new hD(s,bD);const r=this.runWebGLProgram(n,[{dataId:t,shape:s,dtype:o}],o),i=this.readToGPU(r,e);return this.disposeIntermediateTensorInfo(r),i}if(null==u)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(t,e.customTexShape),c=Qe().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(t){const e=this.readSync(t.dataId);if("string"===t.dtype)try{const n=e.map(t=>Kt(t));return We(t.shape,t.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return We(t.shape,t.dtype,e)}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!Il(n)){if(gt().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),s=V(e);if(gt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,..._l(e)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),i}const i=gt().getBool("WEBGL_PACK")&&!0===r,o=i?Gl(e):e,a=i?new dM(o):new hM(o),u=this.runWebGLProgram(a,[{shape:o,dtype:n,dataId:t}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return gt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const e=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();const s=L(this.activeTimers.map(t=>t.query)).filter(t=>null!=t),i=L(this.activeTimers.map(t=>t.name)).filter(t=>null!=t);this.activeTimers=e,r&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(()=>Jh(this,null,function*(){if(gt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=yield Promise.all(s);o.kernelMs=I(t),o.getExtraProfileInfo=()=>t.map((t,e)=>({name:i[e],ms:t})).map(t=>`${t.name}: ${t.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}))()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return gt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:qt(),endMs:null}}endTimer(t){return gt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=qt(),t)}getQueryTime(t){return Jh(this,null,function*(){if(gt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs})}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:n}=this.texData.get(t);return null!=n&&(this.disposeData(n.real.dataId,e),this.disposeData(n.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:s,isPacked:i,slice:o}=this.texData.get(t),a=o&&o.origDataId||t,u=this.dataRefCount.get(a);u>1?this.dataRefCount.set(a,u-1):(this.dataRefCount.delete(a),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,s,i)));const l=this.texData.get(t);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=vD){return gt().getBool("WEBGL_CPU_FORWARD")&&t.every(t=>null==this.texData.get(t.dataId).texture&&V(t.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){vt();const e=t.dataSync();return xD(t.shape,e)}packedUnaryOp(t,e,n){const r=new yD(t.shape,e),s=this.compileAndRun(r,[t],n);return Qe().makeTensorFromTensorInfo(s)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=HM(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(gt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,fD,t.dtype);const e=new hD(t.shape,fD),n=this.compileAndRun(e,[t]);return Qe().makeTensorFromTensorInfo(n)}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&et(n[0])){const s=n.map(t=>Xt(t));r=this.write(s,t,e)}else r=this.write(n,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,n){return Qe().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,n),this)}unpackTensor(t){const e=new gD(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new uD(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[Wl(t.shape),...Ul(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},s=[Wl(e),...Ul(e)],i=new lD(s,n),o=[n],a=this.runWebGLProgram(i,[r],t.dtype,o,!0);return{dataId:a.dataId,shape:e,dtype:a.dtype}}decode(t,e){const n=this.texData.get(t),{isPacked:r,shape:s,dtype:i}=n;if(null!=e){const t=V(s);F(e[0]*e[1]*4>=t,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const o=Gl(s);let a;a=r?new cM(o):new lM(o);const u=[null!=e?e:_l(o)];return{dtype:i,shape:s,dataId:this.runWebGLProgram(a,[{shape:o,dtype:i,dataId:t}],i,u,!0,e).dataId}}runWebGLProgram(t,e,n,r,s=!1,i){const o=this.makeTensorInfo(t.outputShape,n),a=this.texData.get(o.dataId);if(t.packedOutput&&(a.isPacked=!0),t.outPackingScheme===HF.DENSE){const e=null!=i?i:_l(t.outputShape);a.texShape=e.map(t=>2*t)}if(null!=t.outTexUsage&&(a.usage=t.outTexUsage),0===V(o.shape))return a.values=H(o.dtype,0),o;const u=[],l=e.map(e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&V(e.shape)<=gt().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}if(this.uploadToGPU(e.dataId),!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),u.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!ql(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),u.push(e),n=this.texData.get(e.dataId),t.shape=r}return{shape:e.shape,texData:n,isUniform:!1}});this.uploadToGPU(o.dataId);const c={shape:o.shape,texData:a,isUniform:!1},h=((t,e,n)=>{let r="";e.concat(n).forEach(e=>{const s=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0;if(t.enableShapeUniforms&&!e.isUniform){const i=e.texData.texShape,{useSqueezeShape:o,uniformShape:a,keptDims:u}=ac(t.packedInputs,e.shape,i);let l="",c="",h="";if(1===a.length&&t.packedInputs){const t=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];l=`${t[0]>1}_${t[1]>1}`}else if(2!==a.length||t.packedInputs){if(a.length>2&&!t.packedInputs){const t=at(a);h=`${t[0]===i[1]}_${t[t.length-1]===i[1]}`}}else c=`${a[0]>1}_${a[1]>1}`;const d=e.shape.length,f=2===a.length&&P(e.shape,i),p=1===V(e.shape),m=an(e.shape,n.shape),b=!t.packedInputs&&d===n.shape.length&&P(i,n.texData.texShape),y=t.packedInputs||a.length>2?"":`${i[0]>1}_${i[1]>1}`;r+=`${d}_${b}_${o?u:""}_${a.length}_${p}_${m}_${f}_${l}_${c}_${h}_${y}_${s}`}else{const t=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${t}_${s}`}});const s=t.userCode;let i=t.constructor.name;return i+="_"+r+"_"+s+`${gt().getNumber("WEBGL_VERSION")}`,i})(t,l,c),d=this.getAndSaveBinary(h,()=>((t,e,n,r)=>{const s=n.map((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}}),i=s.map(t=>t.shapeInfo),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},a=ec(s,o,e),u=((t,e)=>{const n=zl(t,()=>t.createShader(t.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Ol(t,()=>t.shaderSource(n,e)),Ol(t,()=>t.compileShader(n)),gt().get("ENGINE_COMPILE_ONLY"))return n;if(!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw Ml(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n})(t.gl,a),l=t.createProgram(u);return gt().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:u,source:a,webGLProgram:l,inShapeInfos:i,outShapeInfo:o,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:e,fragmentShader:u,source:a,webGLProgram:l,inShapeInfos:i,outShapeInfo:o},cc(t,e,l))})(this.gpgpu,t,l,c)),f=null!=this.activeTimers;let p;f&&(p=this.startTimer()),gt().get("ENGINE_COMPILE_ONLY")||((t,e,n,r,s)=>{e.program.enableShapeUniforms||(hc(e.inShapeInfos,n),hc([e.outShapeInfo],[r]));const i=r.texData.texture,o=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(i.texture,o[0],o[1]):t.setOutputMatrixTexture(i.texture,o[0],o[1]),t.setProgram(e.webGLProgram),1===gt().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach((n,r)=>{const s=e.program.variableNames[r],i=e.uniformLocations[s],o=e.uniformLocations[`offset${s}`],a=e.inShapesLocations[`${s}Shape`],u=e.inTexShapesLocations[`${s}TexShape`];if(a){const{uniformShape:r}=ac(e.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:t.gl.uniform1iv(a,new Int32Array(r));break;case 2:t.gl.uniform2iv(a,new Int32Array(r));break;case 3:t.gl.uniform3iv(a,new Int32Array(r));break;case 4:t.gl.uniform4iv(a,new Int32Array(r))}}if(u&&t.gl.uniform2i(u,n.texData.texShape[0],n.texData.texShape[1]),null!=i)if(n.isUniform)if(2>V(n.shape))t.gl.uniform1f(i,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(i,e)}else null!=n.texData.slice&&null!=o&&t.gl.uniform1i(o,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture.texture,i,r)});const a=e.outShapeLocation;if(a)switch(r.shape.length){case 1:t.gl.uniform1iv(a,new Int32Array(r.shape));break;case 2:t.gl.uniform2iv(a,new Int32Array(r.shape));break;case 3:t.gl.uniform3iv(a,new Int32Array(r.shape));break;case 4:t.gl.uniform4iv(a,new Int32Array(r.shape))}if(e.outShapeStridesLocation){const n=at(r.shape);switch(r.shape.length){case 2:t.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(n));break;case 3:t.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(n));break;case 4:t.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(n))}}e.outTexShapeLocation&&t.gl.uniform2i(e.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),e.program.customUniforms&&s&&e.program.customUniforms.forEach((n,r)=>{const i=e.customUniformLocations[r],o=s[r];if("float"===n.type)t.gl.uniform1fv(i,o);else if("vec2"===n.type)t.gl.uniform2fv(i,o);else if("vec3"===n.type)t.gl.uniform3fv(i,o);else if("vec4"===n.type)t.gl.uniform4fv(i,o);else if("int"===n.type)t.gl.uniform1iv(i,o);else if("ivec2"===n.type)t.gl.uniform2iv(i,o);else if("ivec3"===n.type)t.gl.uniform3iv(i,o);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);t.gl.uniform4iv(i,o)}}),t.executeProgram()})(this.gpgpu,d,l,c,r),u.forEach(t=>this.disposeIntermediateTensorInfo(t)),f&&(p=this.endTimer(p),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(p)}));const m=gt().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const t=qt();t-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=t)}if(!gt().getBool("WEBGL_LAZILY_UNPACK")&&a.isPacked&&!1===s){const t=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),t}return o}compileAndRun(t,e,n,r,s=!1){return n=n||e[0].dtype,this.runWebGLProgram(t,e,n,r,s)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(gt().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=en(()=>{if(!gt().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=gt().getBool("DEBUG");gt().set("DEBUG",!1);const e=this.abs(sr(1e-8)).dataSync()[0];if(gt().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:s,texture:i,usage:o,isPacked:a}=e;if(null!=i)return;const u=null!=this.activeTimers;let l;u&&(l=qt());let c=e.texShape;if(null==c&&(c=((t,e=!1)=>{let n=gt().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=gt().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&gt().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),e&&(n*=2,r*=2,t=t.map((e,n)=>n<t.length-2?t[n]:A(t[n])),1===t.length&&(t=[2,t[0]])),2!==t.length){const e=q(t);t=e.newShape}let s=V(t),i=null;t.length>1||s>n?2!==t.length||t[0]>n||t[1]>n?3!==t.length||t[0]*t[1]>n||t[2]>n?3!==t.length||t[0]>n||t[1]*t[2]>n?4!==t.length||t[0]*t[1]*t[2]>n||t[3]>n?4!==t.length||t[0]>n||t[1]*t[2]*t[3]>n||(i=[t[0],t[1]*t[2]*t[3]]):i=[t[0]*t[1]*t[2],t[3]]:i=[t[0],t[1]*t[2]]:i=[t[0]*t[1],t[2]]:i=t:i=[1,s];const o=null!=i&&Math.max(...i)>r&&Math.min(...i)<=(e?2:1)&&Math.min(...i)>0;if(null==i||o)if(e){const e=Wl(t);let n=2,r=2;t.length&&([n,r]=Ul(t)),s=e*(n/2)*(r/2),i=z(s).map(t=>2*t)}else i=z(s);return i})(n,a),e.texShape=c),null!=s){const t=Gl(n);let i,o=c[1],h=c[0];const d=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!a&&d||([o,h]=Rl(c[0],c[1])),i=a?new pM(t,d):new fM(t,d);const f=d?[h,o]:c,p=this.makeTensorInfo(f,r),m=this.texData.get(p.dataId);m.usage=d?KF.PIXELS:KF.UPLOAD,m.texShape=f,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(p.dataId),o,h,s);const b=[[h,o]],y=!0,g=this.runWebGLProgram(i,[p],r,b,y),x=this.texData.get(g.dataId);e.texShape=x.texShape,e.isPacked=x.isPacked,e.usage=x.usage,gt().get("ENGINE_COMPILE_ONLY")?this.disposeData(g.dataId):(e.texture=x.texture,e.values=null,this.texData.delete(g.dataId)),this.disposeIntermediateTensorInfo(p),u&&(this.uploadWaitMs+=qt()-l)}else{const t=this.acquireTexture(c,o,r,a);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=((t,e)=>{if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error(`Unknown dtype ${e}`)})(e,r)),n.values}acquireTexture(t,e,n,r){return this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024&&((this.numBytesInGPU/1024/1024).toFixed(2),this.warnedAboutMemory=!0),this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*Q(e)}checkCompileCompletion(){for(const[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}checkCompileCompletionAsync(){return Jh(this,null,function*(){const t=[];if(this.gpgpu.parallelCompilationExtension){for(const[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}for(const[,e]of Object.entries(this.binaryCache)){const n=new Promise(t=>{try{this.checkCompletion_(e),t(!0)}catch(n){throw n}});t.push(n)}return Promise.all(t)})}checkCompletionAsync_(t){return Jh(this,null,function*(){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(yield Pr(),this.checkCompletionAsync_(t))})}checkCompletion_(t){if(!1===this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(!1===this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw Ml(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const[,t]of Object.entries(this.binaryCache)){const{uniformLocations:e,customUniformLocations:n,infLoc:r,nanLoc:s,inShapesLocations:i,inTexShapesLocations:o,outShapeLocation:a,outShapeStridesLocation:u,outTexShapeLocation:l}=cc(this.gpgpu,t.program,t.webGLProgram);t.uniformLocations=e,t.customUniformLocations=n,t.infLoc=r,t.nanLoc=s,t.inShapesLocations=i,t.inTexShapesLocations=o,t.outShapeLocation=a,t.outShapeStridesLocation=u,t.outTexShapeLocation=l}}}$D.nextDataId=0,pe()&&sn("webgl",()=>new $D,2);const kD="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class ND{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=ln(e,n),this.enableShapeUniforms=dc(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const CD="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class SD{constructor(t,e,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=ln(e,n);const s=this.outputShape.length;this.enableShapeUniforms=dc(s);let i="";if(r)if(0===s||1===V(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${oc(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?i+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=wc("coords",s);this.enableShapeUniforms?i+=`\n            bool nextRowOutOfBounds =\n              (${t[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${t[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:i+=`\n            bool nextRowOutOfBounds =\n              (${t[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${t[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}const ED={kernelName:Qf,backendName:"webgl",kernelFunc:Nc},TD={kernelName:hf,backendName:"webgl",kernelFunc:Cc},_D="return (a < 0.) ? b * a : a;",RD="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",AD={kernelName:ip,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{alpha:i}=r,o=n.makeTensorInfo([],"float32",Gt(i,"float32")),a=gt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new SD(RD,s.shape,o.shape):new ND(_D,s.shape,o.shape),u=n.runWebGLProgram(a,[s,o],"float32");return n.disposeIntermediateTensorInfo(o),u}},OD="return (a < 0.) ? b * a : a;",ID="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",FD={kernelName:zp,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n}=t,{x:r,alpha:s}=e,i=gt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new SD(ID,r.shape,s.shape):new ND(OD,r.shape,s.shape);return n.runWebGLProgram(i,[r,s],"float32")}},MD="if (isnan(x)) return x;";class DD{constructor(t,e,n,r=!1,s=!1,i=!1,o=null,a=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=dc(this.outputShape.length);const l=r?t[1]:t[2],c=Math.ceil(l/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",f=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],p=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",b="";o&&(m=a?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${o}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${o}\n        }`:`vec4 activation(vec4 x) {\n          ${o}\n        }`,b="result = activation(result);");const y=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let g="rc.x",x="rc.x";t[0]<e[0]?g=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(x=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${g};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${f[0]} * ${p[0]});\n          result += (${f[1]} * ${p[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${b}\n\n        setOutput(result);\n      }\n    `}}const LD="return areal * breal - aimag * bimag;",VD="return areal * bimag + aimag * breal;";class PD{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=ln(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const BD="return a * b;",zD={kernelName:Rp,backendName:"webgl",kernelFunc:_c},WD={kernelName:Kp,backendName:"webgl",kernelFunc:Rc};class UD{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=t;this.outputShape=[r,i];const o=4*Math.floor(n/4),a=n%4;let u="sumValue += dot(values, ones);";if(null!=e){const t=1/e;u=`sumValue += dot(values * ${B(t)?t.toPrecision(2):t}, ones);`}let l="";s%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===a}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===a}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===a}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class GD{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=t;this.outputShape=[r,i];let o="0.0",a="";"prod"===e?o="1.0":"min"===e?(o="1.0 / 1e-20",a="min"):"max"===e&&(o="-1.0 / 1e-20",a="max");let u=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?u="sumValue":"prod"===e?u="prodValue":"all"===e?u="allValue":"any"===e&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${a}(values, minMaxValue);\n        if (${"min"===e} || ${"max"===e}) {\n          minMaxValue = ${a}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===e?(o="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===e&&(o="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let f="";s%n>0&&(f=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${f}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${o});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}class jD{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let i=0;i<n.length;i++)n[i]=t[e[i]];this.outputShape=n,this.rank=n.length;const r=oc(this.rank),s=(t=>{const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let s=0;s<t.length;s++)r[t[s]]=n[s];return r.join()})(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class qD{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let l=0;l<n.length;l++)n[l]=t[e[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=oc(this.rank),s=xc("rc",this.rank),i=new Array(this.rank);for(let l=0;l<e.length;l++)i[e[l]]=s[l];const o=`vec2(${i.slice(-2).join()})`,a=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${i.join()}), ${o})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${a}) {\n        result[1] = ${u};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${a}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}const HD={kernelName:mm,backendName:"webgl",kernelFunc:Ic},XD={kernelName:Dm,backendName:"webgl",kernelFunc:Fc},KD={kernelName:Gm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:i,bias:o,preluActivationWeights:a}=e,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;return Mc({a:s,b:i,transposeA:u,transposeB:l,backend:n,bias:o,preluActivationWeights:a,leakyreluAlpha:h,activation:c})}},JD="return abs(x);",YD={kernelName:Vd,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const t=n.texData.get(r.dataId),e=HM(t.values);return n.makeTensorInfo(r.shape,r.dtype,e)}let s;return s=gt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new yD(r.shape,JD):new hD(r.shape,JD),n.runWebGLProgram(s,[r],r.dtype)}},ZD=Sc({opSnippet:dD+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),QD={kernelName:Pd,backendName:"webgl",kernelFunc:ZD},tL=Sc({opSnippet:dD+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),eL={kernelName:Bd,backendName:"webgl",kernelFunc:tL},nL="return a + b;",rL=Ec({opSnippet:nL,packedOpSnippet:nL,supportsComplex:!0,cpuKernelImpl:bM}),sL={kernelName:zd,backendName:"webgl",kernelFunc:rL};class iL{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((t,e)=>`T${e}`);const n=[];this.variableNames.forEach(t=>{n.push(`float v${t} = get${t}AtOutCoords();`)});const r=this.variableNames.map(t=>`v${t}`).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class oL{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((t,e)=>`T${e}`);const n=[];this.variableNames.forEach(t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)});const r=this.variableNames.map(t=>`v${t}`).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const aL={kernelName:Wd,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r}=e,s=n;if(1===s.length)return Nc({inputs:{x:s[0]},backend:r});if(s.length>gt().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(s.length/2),n=t({inputs:s.slice(0,e),backend:r}),i=t({inputs:s.slice(e),backend:r});return t({inputs:[n,i],backend:r})}const i=s.map(t=>t.dtype).reduce((t,e)=>re(t,e)),o=s.map(t=>t.shape),a=gt().getBool("WEBGL_PACK")?new oL(s[0].shape,o):new iL(s[0].shape,o);return r.runWebGLProgram(a,s,i)}},uL={kernelName:Ud,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r,a=s.shape.length,u=j(i,s.shape);let l=u;const c=er(l,a);let h=s;null!=c&&(h=Fc({inputs:{x:s},backend:n,attrs:{perm:c}}),l=rr(l.length,a)),tr("all",l,a);const[d,f]=Zn(h.shape,l),p=Rc({inputs:{x:h},backend:n,attrs:{shape:[-1,V(f)]}}),m=Ac(p,p.dtype,"all",n);let b;return b=Rc(o?{inputs:{x:m},backend:n,attrs:{shape:Qn(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),b}},lL={kernelName:Gd,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r,a=s.shape.length,u=j(i,s.shape);let l=u;const c=er(l,a);let h=s;null!=c&&(h=Fc({inputs:{x:s},backend:n,attrs:{perm:c}}),l=rr(l.length,a)),tr("any",l,a);const[d,f]=Zn(h.shape,l),p=Rc({inputs:{x:h},backend:n,attrs:{shape:[-1,V(f)]}}),m=Ac(p,p.dtype,"any",n);let b;return b=Rc(o?{inputs:{x:m},backend:n,attrs:{shape:Qn(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),b}};class cL{constructor(t,e,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:i}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i];const o="max"===e?">":"<",a=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${a};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${o} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class hL{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,F(t.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const s=t[t.length-1],i=Math.ceil(s/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const o=this.outputShape,a=o.length,u=oc(a),l=wc("coords",a);let c,h;if(1===i){h=a+1;const t=oc(h);c=`\n        ${t} sourceLocR = ${t}(${l.join()}, 0);\n        ++${l[a-1]};\n        ${t} sourceLocG = ${t}(${l.join()}, 0);\n        ++${l[a-2]};\n        ${t} sourceLocA = ${t}(${l.join()}, 0);\n        --${l[a-1]};\n        ${t} sourceLocB = ${t}(${l.join()}, 0);\n        --${l[a-2]};`}else h=a,c=`\n        ${u} sourceLocR = coords;\n        ++${l[a-1]};\n        ${u} sourceLocG = coords;\n        ++${l[a-2]};\n        ${u} sourceLocA = coords;\n        --${l[a-1]};\n        ${u} sourceLocB = coords;\n        --${l[a-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),f="."+d[h-1],p=d.map(t=>"int "+t),m=wc("sourceLocR",h-1).concat("inIdx.r"),b=wc("sourceLocG",h-1).concat("inIdx.g"),y=wc("sourceLocB",h-1).concat("inIdx.b"),g=wc("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${g.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${b.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${g.join()}) : 0.)`,$=r?"":`\n      float getBestIndicesAChannel(${p.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${p.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${$}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[a-1]} < ${o[a-1]-1};\n        bool hasNextRow = ${l[a-2]} < ${o[a-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}const dL={kernelName:jd,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i}=r;let o=j(i,s.shape);const a=er(o,s.shape.length);let u=s;const l=[];null!=a&&(u=Fc({inputs:{x:s},backend:n,attrs:{perm:a}}),l.push(u),o=rr(o.length,u.shape.length)),tr("argMax",[o[0]],u.shape.length);const c=Vc(n,u,o[0],"max");return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),c}},fL={kernelName:qd,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i}=r;let o=j(i,s.shape);const a=er(o,s.shape.length);let u=s;const l=[];null!=a&&(u=Fc({inputs:{x:s},backend:n,attrs:{perm:a}}),l.push(u),o=rr(o.length,u.shape.length)),tr("argMin",[o[0]],u.shape.length);const c=Vc(n,u,o[0],"min");return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),c}},pL=Sc({opSnippet:dD+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),mL={kernelName:Hd,backendName:"webgl",kernelFunc:pL},bL=Sc({opSnippet:dD+"return log(x + sqrt(x * x + 1.0));"}),yL={kernelName:Xd,backendName:"webgl",kernelFunc:bL},gL=Sc({opSnippet:dD+"\n  return atan(x);\n"}),xL={kernelName:Kd,backendName:"webgl",kernelFunc:gL},wL=Ec({opSnippet:kD+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+CD+"\n  return result;\n"}),vL={kernelName:Yd,backendName:"webgl",kernelFunc:wL},$L=Sc({opSnippet:dD+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),kL={kernelName:Jd,backendName:"webgl",kernelFunc:$L};class NL{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,o=t.strideHeight,a=t.strideWidth,u=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.top,f=t.padInfo.left;this.outputShape=t.outShape;const p="avg"===e,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,b=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let y="0.0";if(p||(y="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${o}, ${a});\n        const ivec2 pads = ivec2(${d}, ${f});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:b:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let g=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(g="avgValue / count");const x=4*Math.floor(i/4),w=i%4,v=`\n      if (${p}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${a});\n      const ivec2 pads = ivec2(${d}, ${f});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${g});\n      }\n    `}}class CL{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,o=t.strideDepth,a=t.strideHeight,u=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,h=t.dilationWidth,d=t.effectiveFilterDepth,f=t.effectiveFilterHeight,p=t.effectiveFilterWidth,m=t.padInfo.front,b=t.padInfo.top,y=t.padInfo.left;this.outputShape=t.outShape;const g="avg"===e;let x="0.0";if(g||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${o}, ${a}, ${u});\n        const ivec3 pads = ivec3(${m}, ${b}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${f};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${p};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${f} * ${p} +\n                      wR * ${p} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(w="avgValue / count");const v=4*Math.floor(i/4),$=i%4,k=`\n      if (${g}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${o}, ${a}, ${u});\n      const ivec3 pads = ivec3(${m}, ${b}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${f};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${k}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===$}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${2===$}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${3===$}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${k}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}const SL={kernelName:Zd,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;Jl(s,"avgPool");const{filterSize:i,strides:o,pad:a,dimRoundingMode:u}=r;F(qn(o,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const l=Dn(s.shape,i,o,1,a,u);if(1===l.filterWidth&&1===l.filterHeight&&P(l.inShape,l.outShape))return Nc({inputs:{x:s},backend:n});const c=new NL(l,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},EL={kernelName:tf,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:i,strides:o,pad:a,dimRoundingMode:u,dataFormat:l}=r,c=Ln(s.shape,i,o,[1,1,1],a,u,l),h=new CL(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class TL{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,i=t.dilationHeight,o=t.dilationWidth,a=t.effectiveFilterHeight,u=t.effectiveFilterWidth,l=a-1-t.padInfo.top,c=u-1-t.padInfo.left,h=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${o}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class _L{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,i=t.strideHeight,o=t.strideWidth,a=t.dilationDepth,u=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,f=c-1-t.padInfo.front,p=h-1-t.padInfo.top,m=d-1-t.padInfo.left,b=1/(e*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${f}, ${p}, ${m});\n      const float avgMultiplier = float(${b});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const RL={kernelName:ef,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,o=i,{filterSize:a,strides:u,pad:l,dimRoundingMode:c}=r,h=Ln(o.shape,a,u,[1,1,1],l,c),d=new _L(h);return n.runWebGLProgram(d,[s],o.dtype)}},AL={kernelName:Qd,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,o=i;Jl([s,i],"avgPoolGrad");const{filterSize:a,strides:u,pad:l}=r,c=Dn(o.shape,a,u,1,l),h=new TL(c);return n.runWebGLProgram(h,[s],o.dtype)}},OL={kernelName:nf,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:i}=e,{transposeA:o,transposeB:a}=r;return Mc({a:s,b:i,transposeA:o,transposeB:a,backend:n})}};class IL{constructor(t,e,n,r,s,i){this.outputShape=[],this.variableNames=["x","mean","variance"],ln(t,e),ln(t,n);let o="0.0";null!=r&&(ln(t,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let a="1.0";null!=s&&(ln(t,s),this.variableNames.push("scale"),a="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${a};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class FL{constructor(t,e,n,r,s,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],ln(t,e),ln(t,n);let o="vec4(0.0)";null!=r&&(ln(t,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let a="vec4(1.0)";null!=s&&(ln(t,s),this.variableNames.push("scale"),a="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${a};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const ML={kernelName:Xf,backendName:"webgl",kernelFunc({inputs:t,backend:e,attrs:n}){const{x:r,mean:s,variance:i,offset:o,scale:a}=t;F(s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),F(null==o||s.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),F(null==a||s.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,s,i];let c=null;null!=o&&(c=o.shape,l.push(o));let h=null;null!=a&&(h=a.shape,l.push(a));const d=gt().getBool("WEBGL_PACK_NORMALIZATION")?new FL(r.shape,s.shape,i.shape,c,h,u):new IL(r.shape,s.shape,i.shape,c,h,u);return e.runWebGLProgram(d,l,l[0].dtype)}};class DL{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=oc(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=(t=>{if(1===t)return"sourceLoc";if(t>6)throw Error(`Slicing for rank ${t} is not yet supported`);return LL.slice(0,t).map(t=>"sourceLoc."+t).join(",")})(this.rank);let r;const s=t.map((t,e)=>`sourceLoc.${LL[e]} = start[${e}] + coords.${LL[e]};`);r=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${s.join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const LL=["x","y","z","w","u","v"];class VL{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=oc(this.rank),n=wc("coords",this.rank),r=wc("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${s})`,o=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${i};\n        --${r[this.rank-1]};\n      }\n    `,a=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,u=this.rank>4?t.map((t,e)=>`${r[e]} = ${n[e]} + start[${e}];`).join("\n"):`sourceLoc = coords +\n            ${e}(${t.map((t,e)=>`start[${e}]`).join()});`;this.userCode=`\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${o}\n        ${a}\n        setOutput(result);\n      }\n    `}}const PL={kernelName:um,backendName:"webgl",kernelFunc:Pc},BL={kernelName:rf,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:i,crops:o}=r;F(4>=s.shape.length,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=i.reduce((t,e)=>t*e),u=Xr(s.shape,i,a),l=Kr(u.length,i.length),c=Jr(s.shape,i,a),h=Yr(o,i.length),d=Zr(c,o,i.length),f=[],p=Rc({inputs:{x:s},backend:n,attrs:{shape:u}}),m=Fc({inputs:{x:p},backend:n,attrs:{perm:l}}),b=Rc({inputs:{x:m},backend:n,attrs:{shape:c}}),y=Pc({inputs:{x:b},backend:n,attrs:{begin:h,size:d}});return f.push(p),f.push(m),f.push(b),f.forEach(t=>n.disposeIntermediateTensorInfo(t)),y}},zL={kernelName:sf,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:i}=e,{size:o}=r,a=n.readSync(s.dataId),u=n.readSync(i.dataId),l=yM(a,u,i.dtype,i.shape,o);return n.makeTensorInfo([o],i.dtype,l)}},WL={kernelName:af,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n}=t,{s0:r,s1:s}=e,i=n.readSync(r.dataId),o=n.readSync(s.dataId),a=ln(Array.from(i),Array.from(o));return n.makeTensorInfo([a.length],"int32",Int32Array.from(a))}},UL=Ec({opSnippet:"return float(a != b);",cpuKernelImpl:PM,dtype:"bool"}),GL={kernelName:Op,backendName:"webgl",kernelFunc:UL},jL={kernelName:qp,backendName:"webgl",kernelFunc:Bc},qL={kernelName:uf,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r,attrs:s}=e,{x:i}=n,{dtype:o}=s;if("complex64"===o){if("complex64"===i.dtype)return Nc({inputs:{x:i},backend:r});const e=hr(i.shape),n=t({inputs:{x:i},backend:r,attrs:{dtype:"float32"}}),s=Cc({inputs:{real:n,imag:e},backend:r});return e.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===i.dtype){const e=Bc({inputs:{input:i},backend:r}),n=t({inputs:{x:e},backend:r,attrs:{dtype:o}});return r.disposeIntermediateTensorInfo(e),n}if(!Y(i.dtype,o)){const t=Nc({inputs:{x:i},backend:r});return{dataId:t.dataId,shape:t.shape,dtype:o}}if(r.shouldExecuteOnCPU([i])){const t=r.texData.get(i.dataId).values,[e,n,s]=xM(t,i.shape,i.dtype,o);return r.makeTensorInfo(e,n,s)}if("int32"===o)return((t,e)=>{const n=new hD(t.shape,"return float(int(x));"),r=e.runWebGLProgram(n,[t],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}})(i,r);if("bool"===o){const t=r.makeTensorInfo([],"bool",H("bool",1)),e=UL({inputs:{a:i,b:t},backend:r});return r.disposeIntermediateTensorInfo(t),e}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${o}`)}},HL="return ceil(x);",XL=Sc({opSnippet:HL,packedOpSnippet:HL,cpuKernelImpl:wM}),KL={kernelName:lf,backendName:"webgl",kernelFunc:XL};class JL{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class YL{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const ZL={kernelName:cf,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{clipValueMin:i,clipValueMax:o}=r;let a;a=gt().getBool("WEBGL_PACK_CLIP")?new YL(s.shape):new JL(s.shape);const u=[[i],[o]];return n.runWebGLProgram(a,[s],s.dtype,u)}};class QL{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}const tV={kernelName:df,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n}=t,{x:r}=e,s=n.texData.get(r.dataId),i=new QL(r.shape),o=[zc(r,s.complexTensorInfos.real),zc(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(i,o,o[0].dtype)}};class eV{constructor(t){this.outputShape=[],this.outputShape=zr(t,1),this.variableNames=t.map((t,e)=>`T${e}`);const e=new Array(t.length-1);e[0]=t[0][1];for(let i=1;i<e.length;i++)e[i]=e[i-1]+t[i][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<e.length;i++){const t=e[i-1];n.push(`else if (yC < ${e[i]}) setOutput(getT${i}(yR, yC-${t}));`)}const r=e.length,s=e[e.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class nV{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=zr(t,e);const n=this.outputShape,r=n.length,s=oc(r),i=wc("coords",r),o=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map((t,e)=>`T${e}`);const a=new Array(t.length-1);a[0]=t[0][e];for(let p=1;p<a.length;p++)a[p]=a[p-1]+t[p][e];const u=o[e],l=o.slice(-2),c=o.join();let h=`if (${u} < ${a[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let p=1;p<a.length;p++){const t=a[p-1];h+=`\n        if (${u} < ${a[p]}  && ${u} >= ${a[p-1]}) {\n          return getChannel(\n            getT${p}(${Wc(o,u,t)}),\n            vec2(${Wc(l,u,t)}));\n        }`}const d=a.length,f=a[a.length-1];h+=`\n        return getChannel(\n          getT${d}(${Wc(o,u,f)}),\n          vec2(${Wc(l,u,f)}));`,this.userCode=`\n      float getValue(${o.map(t=>"int "+t)}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[r-1]} = ${i[r-1]} + 1;\n        if (${i[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[r-2]} = ${i[r-2]} + 1;\n        if (${i[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[r-1]} = ${i[r-1]} - 1;\n        if (${i[r-2]} < ${n[r-2]} &&\n            ${i[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}const rV={kernelName:ep,backendName:"webgl",kernelFunc:Uc},sV={kernelName:ff,backendName:"webgl",kernelFunc:jc};class iV{constructor(t,e=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const i=t.padInfo.top,o=t.padInfo.left,a=t.strideHeight,u=t.strideWidth,l=t.dilationHeight,c=t.dilationWidth,h=t.filterHeight,d=t.filterWidth,f=4*Math.floor(t.inChannels/4),p=t.inChannels%4,m="channelsLast"===t.dataFormat,b=m?1:2,y=m?2:3,g=m?3:1;let x="",w="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${a}, ${u});\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${g}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${b}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${f}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===p}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${f}) *\n                    getW(wR, wC, ${f}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${f}, xR, xC) *\n                    getW(wR, wC, ${f}, d2);\n              }\n\n            } else if (${2===p}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${f}, d2),\n                getW(wR, wC, ${f} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${f}),\n                  getX(batch, xR, xC, ${f} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${f}, xR, xC),\n                  getX(batch, ${f} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===p}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${f}, d2),\n                getW(wR, wC, ${f} + 1, d2),\n                getW(wR, wC, ${f} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${f}),\n                  getX(batch, xR, xC, ${f} + 1),\n                  getX(batch, xR, xC, ${f} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${f}, xR, xC),\n                  getX(batch, ${f} + 1, xR, xC),\n                  getX(batch, ${f} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class oV{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,s=t.strideDepth,i=t.strideHeight,o=t.strideWidth,a=t.dilationDepth,u=t.dilationHeight,l=t.dilationWidth,c=t.filterDepth,h=t.filterHeight,d=t.filterWidth,f=4*Math.floor(t.inChannels/4),p=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${i}, ${o});\n      const ivec3 pads = ivec3(${e}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${a};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${f}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===p}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${f}) *\n                  getW(wF, wR, wC, ${f}, d2);\n              } else if (${2===p}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${f}),\n                  getX(batch, xF, xR, xC, ${f} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${f}, d2),\n                  getW(wF, wR, wC, ${f} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===p}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${f}),\n                  getX(batch, xF, xR, xC, ${f} + 1),\n                  getX(batch, xF, xR, xC, ${f} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${f}, d2),\n                  getW(wF, wR, wC, ${f} + 1, d2),\n                  getW(wF, wR, wC, ${f} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class aV{constructor(t,e=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=dc(this.outputShape.length);const i=t.padInfo.left,o=t.strideWidth,a=t.dilationWidth,u=t.filterHeight,l=t.filterWidth,c=l;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let m=0;l>m;m++)h+=`\n           vec4 xTexelC${2*m};\n           int xTexelC${2*m}Ready;\n           vec4 xTexelC${2*m+1};\n           int xTexelC${2*m+1}Ready;\n           vec4 xC${m};`;h+=`\n     for (int r = 0; r < ${u}; r++) {\n      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {\n       `;for(let m=0;l>m;m++)h+=`\n           xTexelC${2*m} = vec4(0.0);\n           xTexelC${2*m}Ready = 0;\n           xTexelC${2*m+1} = vec4(0.0);\n           xTexelC${2*m+1}Ready = 0;\n           xC${m} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;(c+1)/2>m;m++){const e=2*m;if(h+=`\n           xC = xCCorner + ${e*a};\n           `,1===o){if(l>e&&(i%2==1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                   xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${e}.zw = vec2(0.0);\n                   }\n                   xTexelC${e}Ready = 1;\n                 }\n               `,h+=1===a&&e>0?`\n                 xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                   } else {\n                     xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                   xTexelC${e} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${e}.zw = vec2(0.0);\n                   }\n                   xTexelC${e}Ready = 1;\n                 }\n\n                 xC${e} = xTexelC${e};\n                 `,l>e+1)){const t=i%2==0?A(a):a;a%2==0&&i%2==1||a%2!=0&&i%2!=1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                     xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${e+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${e+1}Ready = 1;\n                   }\n                   `,h+=a>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${e+1} = vec4(previous.zw, xTexelC${e+1}.xy);\n                     } else {\n                      xC${e+1} = vec4(0.0, 0.0, xTexelC${e+1}.xy);\n                     }\n                     `:`\n                     xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                     `):h+=1===t?`\n                     xC${e+1} = xTexelC${e};\n                     `:`\n                     xCOffset = xC + ${t};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                       xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${e+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${e+1}Ready = 1;\n                     }\n\n                     xC${e+1} = xTexelC${e+1};\n                     `}}else l>e&&(i%2==1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                   xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${e}.zw = vec2(0.0);\n                   }\n                   xTexelC${e}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                   xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${e+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${e+1}Ready = 1;\n                 }\n\n                 xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n               `,l>e+1&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                   xTexelC${e} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${e}.zw = vec2(0.0);\n                   }\n                   xTexelC${e}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                   xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${e+1}.zw = vec2(0.);\n                   }\n                   xTexelC${e+1}Ready = 1;\n                 }\n\n                 xC${e} = vec4(\n                   xTexelC${e}.xy, xTexelC${e+1}.xy);\n               `,l>e+1&&(h+=`\n                   xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                 `)));l>e&&(h+=`\n             wTexel = getW(r, ${e}, d1, d2);\n             dotProd += xC${e}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${t.inChannels}) {\n               dotProd += xC${e}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,l>e+1&&(h+=`\n               wTexel = getW(r, ${e+1}, d1, d2);\n               dotProd += xC${e+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${t.inChannels}) {\n                 dotProd += xC${e+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",f="";n&&(d=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:s?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,f="result = activation(result);");const p=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${p}\n         ${f}\n         setOutput(result);\n       }\n     `}}class uV{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=dc(this.outputShape.length);const{dataFormat:n}=e,r=Yl(),s="channelsLast"===n,i=s?1:2,o=s?2:3,a=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`;let u="";for(let l=0;1>=l;l++)for(let t=0;1>=t;t++)u+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${l};\n\n          ${a}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${i}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${o}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*l+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*l+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}const lV={kernelName:pf,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:o,pad:a,dataFormat:u,dilations:l,dimRoundingMode:c}=r,h=Hn(u),d=Vn(s.shape,i.shape,o,l,a,c,!1,h);let f;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(2>=d.strideWidth&&"channelsLast"===h&&gt().getBool("WEBGL_EXP_CONV")){const t=new aV(d),e=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];f=n.runWebGLProgram(t,[s,i],"float32",e)}else if(gt().getBool("WEBGL_CONV_IM2COL"))f=Xc({x:s,filter:i,convInfo:d,backend:n});else{const t=new iV(d);f=n.runWebGLProgram(t,[s,i],"float32")}else f=Hc({x:s,filter:i,convInfo:d,backend:n});const p=Rc({inputs:{x:f},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(f),p}};class cV{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,i="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${i}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class hV{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,i="channelsLast"===t.dataFormat,o=e-1-t.padInfo.top,a=n-1-t.padInfo.left,u=i?1:2,l=i?2:3,c=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class dV{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.padInfo.front,i=t.padInfo.top,o=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${s};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${o};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class fV{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,i=t.strideHeight,o=t.strideWidth,a=e-1-t.padInfo.front,u=n-1-t.padInfo.top,l=r-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${a}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const pV={kernelName:mf,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:o,pad:a,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,h=Hn(u),d=Vn(s.shape,c,o,1,a,l,!1,h),f=new cV(d);return n.runWebGLProgram(f,[s,i],"float32")}},mV={kernelName:bf,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{inputShape:o,strides:a,pad:u,dataFormat:l,dimRoundingMode:c}=r,h=Hn(l),d=Vn(o,i.shape,a,1,u,c,!1,h),f=new hV(d);return n.runWebGLProgram(f,[s,i],"float32")}},bV={kernelName:yf,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:o,pad:a,dilations:u}=r,l=Pn(s.shape,i.shape,o,u,a),c=new oV(l);return n.runWebGLProgram(c,[s,i],"float32")}},yV={kernelName:gf,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:o,pad:a,filterShape:u}=r,l=Pn(s.shape,u,o,1,a),c=new dV(l);return n.runWebGLProgram(c,[s,i],"float32")}},gV={kernelName:xf,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{pad:o,strides:a,inputShape:u}=r,l=Pn(u,i.shape,a,1,o),c=new fV(l);return n.runWebGLProgram(c,[s,i],"float32")}},xV=Sc({opSnippet:MD+"\n  return cos(x);\n"}),wV={kernelName:wf,backendName:"webgl",kernelFunc:xV},vV=Sc({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),$V={kernelName:vf,backendName:"webgl",kernelFunc:vV};class kV{constructor(t,e,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,o,a,u]=t,[l]=e,[c,h]=n;this.outputShape=[l,c,h,u];const d="bilinear"===r?1:0,[f,p]=[o-1+".0",a-1+".0"],[m,b,y]=c>1?[""+(o-1)/(c-1),"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[g,x,w]=h>1?[""+(a-1)/(h-1),"(x2-x1) * width_ratio",`x1*${p} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${p}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${g});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${b};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const NV={kernelName:Nf,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{image:s,boxes:i,boxInd:o}=e,{cropSize:a,method:u,extrapolationValue:l}=r,c=new kV(s.shape,i.shape,a,u,l);return n.runWebGLProgram(c,[s,i,o],"float32")}};var CV,SV;(SV=CV||(CV={})).Prod="*",SV.Sum="+";class EV{constructor(t,e,n,r){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,i=this.op===CV.Prod?"1.0":"0.0",o=n?i:`getX(${Kc(s,"coords",this.op)})`,a=this.outputShape[this.outputShape.length-1];let u="",l="";n?(u=r?"end != "+(a-1):"end != 0",l=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${a}`:"end >= pow2",l=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${oc(s)} coords = getOutputCoords();\n        int end = ${Jc(s,"coords",this.op)};\n        float val = ${o};\n        int pow2 = int(pow(2.0, index));\n        if (${u}) {\n          int idx = ${l};\n          ${Jc(s,"coords",this.op)} = idx;\n          val ${this.op}= getX(${Kc(s,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}const TV={kernelName:$f,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,exclusive:o,reverse:a}=r;return Yc(CV.Prod,s,n,i,o,a)}},_V={kernelName:kf,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,exclusive:o,reverse:a}=r;return Yc(CV.Sum,s,n,i,o,a)}},RV={kernelName:Cf,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:i}=e,{size:o,binaryOutput:a}=r;if(1===s.shape.length){const t=n.readSync(s.dataId),e=n.readSync(i.dataId),r=yM(t,e,i.dtype,i.shape,o);return n.makeTensorInfo([o],i.dtype,r)}if(2===s.shape.length){const t=n.bufferSync(s),e=n.bufferSync(i),r=gM(t,e,o,a);return n.makeTensorInfo(r.shape,i.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class AV{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const OV={kernelName:Sf,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockSize:i,dataFormat:o}=r,a=s.shape[0],u=("NHWC"===o?s.shape[1]:s.shape[2])*i,l=("NHWC"===o?s.shape[2]:s.shape[3])*i,c=("NHWC"===o?s.shape[3]:s.shape[1])/(i*i),h=new AV("NHWC"===o?[a,u,l,c]:[a,c,u,l],i,o);return n.runWebGLProgram(h,[s],s.dtype)}};class IV{constructor(t,e=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=dc(this.outputShape.length);const i=t.filterHeight,o=t.filterWidth,a=t.outChannels/t.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${i}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${o}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}class FV{constructor(t,e=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=dc(this.outputShape.length);const i=t.outChannels/t.inChannels,o=t.padInfo.left,a=t.strideWidth,u=t.dilationWidth,l=t.filterHeight,c=t.filterWidth,h=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let b=0;c>b;b++)d+=`\n          vec4 xTexelC${2*b};\n          int xTexelC${2*b}Ready;\n          vec4 xTexelC${2*b+1};\n          int xTexelC${2*b+1}Ready;\n          vec4 xC${b};`;d+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let b=0;c>b;b++)d+=`\n          xTexelC${2*b} = vec4(0.0);\n          xTexelC${2*b}Ready = 0;\n          xTexelC${2*b+1} = vec4(0.0);\n          xTexelC${2*b+1}Ready = 0;\n          xC${b} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let b=0;(h+1)/2>b;b++){const t=2*b;if(d+=`\n          xC = xCCorner + ${t*u};\n          `,1===a){if(c>t&&(o%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,d+=1===u&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,c>t+1)){const e=o%2==0?A(u):u;u%2==0&&o%2==1||u%2!=0&&o%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,d+=u>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):d+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else c>t&&(o%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,c>t+1&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,c>t+1&&(d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));c>t&&(d+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,c>t+1&&(d+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let f="",p="";n&&(f=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,p="result = activation(result);");const m=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${p}\n        setOutput(result);\n      }\n    `}}const MV={kernelName:Ef,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:o,pad:a,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),F(qn(o,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const h=Vn(s.shape,i.shape,o,c,a,l,!0);let d;d=gt().getBool("WEBGL_PACK_DEPTHWISECONV")&&2>=h.strideWidth&&h.outChannels/h.inChannels===1?new FV(h):new IV(h);const f=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[s,i],"float32",f)}};class DV{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class LV{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,i=e-1-t.padInfo.top,o=n-1-t.padInfo.left,a=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${a}; dm++) {\n              int d2 = d1 * ${a} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const VV={kernelName:Tf,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:o,dilations:a,pad:u,dimRoundingMode:l,filterShape:c}=r,h=Vn(s.shape,c,o,a,u,l,!0),d=new DV(h);return n.runWebGLProgram(d,[s,i],"float32")}},PV={kernelName:_f,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{strides:o,dilations:a,pad:u,dimRoundingMode:l,inputShape:c}=r,h=Vn(c,i.shape,o,a,u,l,!0),d=new LV(h);return n.runWebGLProgram(d,[s,i],"float32")}};class BV{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const zV={kernelName:Rf,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n}=t,{x:r}=e,s=[...r.shape,...r.shape],i=V(r.shape),o=Rc({inputs:{x:r},backend:n,attrs:{shape:[i]}}),a=new BV(i),u=n.runWebGLProgram(a,[o],o.dtype),l=Rc({inputs:{x:u},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),l}};class WV{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:r,strideHeight:s,strideWidth:i,filterHeight:o,filterWidth:a,dilationHeight:u,dilationWidth:l}=t,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${i});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${o}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${e}) {\n            for (int w = 0; w < ${a}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const UV={kernelName:Af,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:o,pad:a,dilations:u}=r,l=Mn(s.shape,i.shape,o,a,"NHWC",u);let c;const h=new WV(l);c=n.runWebGLProgram(h,[s,i],"float32");const d=Rc({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),d}},GV={kernelName:Mf,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{equation:s}=r,i=e,{allDims:o,summedDims:a,idDims:u}=as(s,i.length);ls(o.length,u,i);const{path:l,steps:c}=cs(a,u),h=c.length;let d=null,f=o.length;const p=[];for(let m=0;h>m;++m){for(const t of c[m]){const{permutationIndices:e,expandDims:r}=us(f,u[t]);let s;hs(e)?s=i[t]:(s=Fc({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),p.push(s));const o=s.shape.slice();for(let t=0;t<r.length;++t)o.splice(r[t],0,1);P(s.shape,o)||(s=Rc({inputs:{x:s},backend:n,attrs:{shape:o}}),p.push(s)),null===d?d=s:(d=_c({inputs:{a:s,b:d},backend:n}),p.push(d))}h-1>m&&(0>l[m]||(d=Ic({inputs:{x:d},backend:n,attrs:{axis:l[m]-(o.length-f),keepDims:!1}}),p.push(d)),f--)}for(const m of p)m!==d&&n.disposeIntermediateTensorInfo(m);return d}},jV=Sc({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),qV={kernelName:Df,backendName:"webgl",kernelFunc:jV},HV={kernelName:Lf,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n}=t,{dy:r,y:s}=e,i=gt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new SD("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new ND("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(i,[r,s],r.dtype)}},XV=Ec({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:$M}),KV={kernelName:Pf,backendName:"webgl",kernelFunc:XV},JV=Sc({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${G$};\n  float a1 = ${j$};\n  float a2 = ${q$};\n  float a3 = ${H$};\n  float a4 = ${X$};\n  float a5 = ${K$};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),YV={kernelName:Vf,backendName:"webgl",kernelFunc:JV},ZV=Sc({opSnippet:MD+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:kM,dtype:"float32"}),QV={kernelName:Bf,backendName:"webgl",kernelFunc:ZV},tP={kernelName:zf,backendName:"webgl",kernelFunc:Zc},eP="return exp(x) - 1.0;",nP=Sc({opSnippet:eP,packedOpSnippet:eP,cpuKernelImpl:NM}),rP={kernelName:Wf,backendName:"webgl",kernelFunc:nP};class sP{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";let o;if("real"===t)o="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);o="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${o}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}const iP={kernelName:Uf,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n}=t,{input:r}=e;return Qc(r,!1,n)}};class oP{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}const aP={kernelName:Gf,backendName:"webgl",kernelFunc:th};class uP{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const lP={kernelName:jf,backendName:"webgl",kernelFunc({inputs:t,backend:e}){const{image:n}=t,r=e,s=new uP(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},cP="return floor(x);",hP=Sc({opSnippet:cP,packedOpSnippet:cP,cpuKernelImpl:CM}),dP={kernelName:qf,backendName:"webgl",kernelFunc:hP},fP=Ec({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),pP={kernelName:Hf,backendName:"webgl",kernelFunc:fP};class mP{constructor(t){this.variableNames=["A"];const e=Yl(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class bP{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=Yl(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const yP={kernelName:Wm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:s}=e;const{numChannels:i}=r,o="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,a="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[u,l]=o?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[l,u],h=[l,u,i];if(a||o){const t=gt().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=gP&&t===xP||(xP=t,gP=document.createElement("canvas").getContext("2d",{willReadFrequently:xP})),gP.canvas.width=u,gP.canvas.height=l,gP.drawImage(s,0,0,u,l),s=gP.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=KF.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const f=gt().getBool("WEBGL_PACK")?new bP(h):new mP(h),p=n.runWebGLProgram(f,[d],"int32");return n.disposeData(d.dataId),p}};let gP,xP=gt().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const wP={kernelName:jm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i,bias:o,preluActivationWeights:a}=e,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=r,m=Hn(c),b=Vn(s.shape,i.shape,u,h,l,d,!1,m);let y;const g=[],x=null!=o,w=null!=a,v="leakyrelu"===f,$=()=>{const t=[s,i],e=(t,e)=>{if("NCHW"===e&&1===t.shape.length&&1!==t.shape[0]){const e=Rc({inputs:{x:t},backend:n,attrs:{shape:[t.shape[0],1,1]}});return g.push(e),e}return t};if(x&&t.push(e(o,c)),w&&t.push(e(a,c)),v){const e=n.makeTensorInfo([],"float32",Gt(p,"float32"));t.push(e),g.push(e)}return t};if(1!==b.filterHeight||1!==b.filterWidth||1!==b.dilationHeight||1!==b.dilationWidth||1!==b.strideHeight||1!==b.strideWidth||"SAME"!==b.padInfo.type&&"VALID"!==b.padInfo.type)if(2>=b.strideWidth&&"channelsLast"===m&&gt().getBool("WEBGL_EXP_CONV")){const t=f?Tc(f,!0):null,e=new aV(b,x,t,w,v),r=[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]],s=$();y=n.runWebGLProgram(e,s,"float32",r)}else if(gt().getBool("WEBGL_CONV_IM2COL"))y=Xc({x:s,filter:i,convInfo:b,backend:n,bias:o,activation:f,preluActivationWeights:a,leakyreluAlpha:p});else{const t=f?Tc(f,!1):null,e=new iV(b,x,t,w,v),r=$();y=n.runWebGLProgram(e,r,"float32")}else y=Hc({x:s,filter:i,convInfo:b,backend:n,bias:o,activation:f,preluActivationWeights:a,leakyreluAlpha:p});const k=Rc({inputs:{x:y},backend:n,attrs:{shape:b.outShape}});return g.push(y),g.forEach(t=>n.disposeIntermediateTensorInfo(t)),k}},vP={kernelName:qm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i,bias:o,preluActivationWeights:a}=e,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=r,p=[];let m=c;null==m&&(m=[1,1]),F(qn(u,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`);const b=Vn(s.shape,i.shape,u,m,l,h,!0),y=gt().getBool("WEBGL_PACK_DEPTHWISECONV")&&2>=b.strideWidth&&b.outChannels/b.inChannels===1,g=d?Tc(d,y):null,x=[s,i],w=null!=o,v=null!=a,$="leakyrelu"===d;if(w&&x.push(o),v&&x.push(a),$){const t=n.makeTensorInfo([],"float32",Gt(f,"float32"));x.push(t),p.push(t)}let k;k=y?new FV(b,w,g,v,$):new IV(b,w,g,v,$);const N=[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]],C=n.runWebGLProgram(k,x,"float32",N);return p.forEach(t=>n.disposeIntermediateTensorInfo(t)),C}};class $P{constructor(t,e,n,r){this.sliceDim=t,this.strides=e,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const s=oc(n.length);let i="\n    int index;";for(let o=0;o<this.sliceDim;o++)i+=`\n          index = round(getIndices(coords[0], ${o}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[o]};\n          flattenIndex += index * ${this.strides[o]};`;this.userCode=`\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${i}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const kP={kernelName:Jf,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n}=t,{params:r,indices:s}=e,i=s.shape,o=i[i.length-1],a=V(r.shape),[u,l,c,h]=dn(r,s),d=Rc({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=Rc({inputs:{x:r},backend:n,attrs:{shape:[V(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const t=n.readSync(s.dataId),e=n.bufferSync(r),i=SM(t,e,r.dtype,l,o,c,h,r.shape,a);return n.makeTensorInfo(u,r.dtype,i.values)}const p=new $P(o,h,[l,c],r.shape),m=n.runWebGLProgram(p,[f,d],f.dtype),b=Rc({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),b}};class NP{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=oc(this.rank),r=(t=>{const e=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<t.length;r++)2===r?n.push("index"):n.push(`${e[r]}`);return n.join()})(t);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}const CP={kernelName:Kf,backendName:"webgl",kernelFunc:eh},SP=Ec({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:TM,dtype:"bool"}),EP={kernelName:Yf,backendName:"webgl",kernelFunc:SP},TP=Ec({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:_M}),_P={kernelName:Zf,backendName:"webgl",kernelFunc:TP},RP={kernelName:tp,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n}=t,{input:r}=e;return Qc(r,!0,n)}},AP=Sc({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),OP={kernelName:np,backendName:"webgl",kernelFunc:AP},IP=Sc({opSnippet:"return float(isinf(x));",dtype:"bool"}),FP={kernelName:rp,backendName:"webgl",kernelFunc:IP},MP=Sc({opSnippet:"return float(isnan(x));",dtype:"bool"}),DP={kernelName:sp,backendName:"webgl",kernelFunc:MP},LP=Ec({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:RM,dtype:"bool"}),VP={kernelName:op,backendName:"webgl",kernelFunc:LP},PP=Ec({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:AM,dtype:"bool"}),BP={kernelName:ap,backendName:"webgl",kernelFunc:PP},zP={kernelName:up,backendName:"webgl",kernelFunc(t){const{backend:e,attrs:n}=t,{start:r,stop:s,num:i}=n,o=OM(r,s,i);return e.makeTensorInfo([o.length],"float32",o)}},WP=Sc({opSnippet:MD+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:IM}),UP={kernelName:lp,backendName:"webgl",kernelFunc:WP},GP=Sc({opSnippet:MD+"\n  return log(1.0 + x);\n"}),jP={kernelName:cp,backendName:"webgl",kernelFunc:GP},qP=Ec({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),HP={kernelName:hp,backendName:"webgl",kernelFunc:qP},XP=Sc({opSnippet:"return float(!(x >= 1.0));"}),KP={kernelName:dp,backendName:"webgl",kernelFunc:XP},JP=Ec({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),YP={kernelName:fp,backendName:"webgl",kernelFunc:JP};class ZP{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[];const i=e,o=t[3]-1;let a;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;a=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${o}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${a};\n        setOutput(val);\n      }\n    `}}class QP{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=e,o=t[3]-1;let a;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;a=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${a};\n        setOutput(result);\n      }\n    `}}const tB={kernelName:mp,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{depthRadius:i,bias:o,alpha:a,beta:u}=r,l=gt().getBool("WEBGL_PACK_NORMALIZATION")?new QP(s.shape,i,o,a,u):new ZP(s.shape,i,o,a,u);return n.runWebGLProgram(l,[s],s.dtype)}};class eB{constructor(t,e,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const nB={kernelName:bp,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,y:i,dy:o}=e,{depthRadius:a,bias:u,alpha:l,beta:c}=r,h=new eB(s.shape,a,u,l,c);return n.runWebGLProgram(h,[s,i,o],s.dtype)}},rB={kernelName:yp,backendName:"webgl",kernelFunc:nh},sB=Ec({opSnippet:kD+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+CD+"\n  return result;\n",cpuKernelImpl:MM}),iB={kernelName:gp,backendName:"webgl",kernelFunc:sB},oB={kernelName:xp,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;Jl(s,"maxPool");const{filterSize:i,strides:o,pad:a,dimRoundingMode:u}=r;F(qn(o,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const l=Dn(s.shape,i,o,1,a,u);if(1===l.filterWidth&&1===l.filterHeight&&P(l.inShape,l.outShape))return Nc({inputs:{x:s},backend:n});const c=new NL(l,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},aB={kernelName:vp,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:i,strides:o,pad:a,dataFormat:u,dimRoundingMode:l}=r,c=Ln(s.shape,i,o,[1,1,1],a,l,u),h=new CL(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class uB{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,s=t.effectiveFilterHeight,i=t.effectiveFilterWidth,o=s-1-t.padInfo.top,a=i-1-t.padInfo.left,u=s*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class lB{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.dilationDepth,i=t.dilationHeight,o=t.dilationWidth,a=t.effectiveFilterDepth,u=t.effectiveFilterHeight,l=t.effectiveFilterWidth,c=a-1-t.padInfo.front,h=u-1-t.padInfo.top,d=l-1-t.padInfo.left,f=a*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${a};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${o}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${f} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const cB={kernelName:$p,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,o=i,{filterSize:a,strides:u,pad:l,dimRoundingMode:c}=r,h=Ln(o.shape,a,u,[1,1,1],l,c),d=new CL(h,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),p=new lB(h),m=n.runWebGLProgram(p,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),m}},hB={kernelName:wp,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i,output:o}=e,a=i;Jl([i,o],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,d=Dn(a.shape,u,l,1,c,h),f=new NL(d,"max",!0),p=n.runWebGLProgram(f,[a],a.dtype),m=new uB(d),b=n.runWebGLProgram(m,[s,p],a.dtype);return n.disposeIntermediateTensorInfo(p),b}},dB={kernelName:kp,backendName:"webgl",kernelFunc({inputs:t,attrs:e,backend:n}){const{x:r}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:a}=e,u=n;F(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const l=[1,1];F(qn(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const c=Dn(r.shape,s,i,l,o),[h,d]=((t,e,n,r)=>{let s=new NL(n,"max",!1);const i=r.runWebGLProgram(s,[t],"float32");return s=new NL(n,"max",!0,!0,e),[i,r.runWebGLProgram(s,[t],"float32")]})(r,a,c,u);return[h,d]}},fB={kernelName:Np,backendName:"webgl",kernelFunc({inputs:t,attrs:e,backend:n}){const{x:r}=t,{keepDims:s,axis:i}=e,o=n,a=r.shape.length,u=j(i,r.shape);let l=u;const c=er(l,a),h=null!=c,d=o.shouldExecuteOnCPU([r]),f=[];let p=r;if(h){if(d){const t=o.texData.get(p.dataId).values,e=new Array(a);for(let s=0;s<e.length;s++)e[s]=r.shape[c[s]];const n=oD(t,r.shape,r.dtype,c,e);p=o.makeTensorInfo(e,r.dtype),o.texData.get(p.dataId).values=n}else p=Oc(r,c,o);f.push(p),l=rr(l.length,a)}tr("sum",l,a);const[m,b]=Zn(p.shape,l);let y=m;s&&(y=Qn(m,u));const g=((t,e,n,r)=>{const s=V(e),i=Rc({inputs:{x:t},attrs:{shape:[V(t.shape)/s,s]},backend:r}),o=Ac(i,"float32","mean",r),a=Rc({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),a})(p,b,y,o);for(const x of f)o.disposeIntermediateTensorInfo(x);return g}},pB={kernelName:Cp,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r,a=s.shape.length,u=j(i,s.shape);let l=u;const c=er(l,a);let h=s;null!=c&&(h=Fc({inputs:{x:s},backend:n,attrs:{perm:c}}),l=rr(l.length,s.shape.length)),tr("min",l,a);const[d,f]=Zn(h.shape,l),p=Rc({inputs:{x:h},backend:n,attrs:{shape:[-1,V(f)]}}),m=Ac(p,p.dtype,"min",n);let b;return b=Rc(o?{inputs:{x:m},backend:n,attrs:{shape:Qn(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),b}},mB=Ec({opSnippet:kD+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+CD+"\n  return result;\n",cpuKernelImpl:DM}),bB={kernelName:Sp,backendName:"webgl",kernelFunc:mB};class yB{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,s=oc(r),i=e.map(t=>t[0]).join(","),o=e.map((e,n)=>e[0]+t[n]).join(","),a=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${a}));\n      }\n    `:`\n        int start = ${i};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class gB{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,s=oc(r),i=e.map(t=>t[0]).join(","),o=e.map((e,n)=>e[0]+t[n]).join(","),a=wc("rc",r),u=wc("source",r),l=`${a[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const t=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${a[r-1]} += 1;\n        if(${l}) {\n          ${t}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const t=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${a[r-1]} += 1;\n        if(${l}) {\n          ${t}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${a[r-2]} += 1;\n        if(${a[r-2]} < ${this.outputShape[r-2]}) {\n          ${t}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${a[r-1]} += 1;\n          if(${l}) {\n            ${t}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const xB={kernelName:Ep,backendName:"webgl",kernelFunc({inputs:t,backend:e,attrs:n}){const{x:r}=t,{paddings:s,mode:i}=n,o=gt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new gB(r.shape,s,i):new yB(r.shape,s,i);return e.runWebGLProgram(o,[r],r.dtype)}},wB=Ec({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+CD+"\n  return result;\n"}),vB={kernelName:Tp,backendName:"webgl",kernelFunc:wB};class $B{constructor(t,e,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}}const kB=Ec({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),NB={kernelName:Ff,backendName:"webgl",kernelFunc:kB},CB="return a - b;",SB=Ec({opSnippet:CB,packedOpSnippet:CB,supportsComplex:!0,cpuKernelImpl:rD}),EB={kernelName:Rm,backendName:"webgl",kernelFunc:SB},TB={kernelName:gm,backendName:"webgl",kernelFunc:rh},_B={kernelName:_p,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{numSamples:i,seed:o,normalized:a}=r,u=a?s:rh({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new $B(l,c,i),d=[[o]],f=n.runWebGLProgram(h,[u],"int32",d);return a||n.disposeIntermediateTensorInfo(u),f}},RB=dD+"\n  return -x;\n",AB={kernelName:Ap,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])){const t=n.texData.get(r.dataId),[e,s]=VM(t.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,e)}let s;return s=gt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new yD(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new hD(r.shape,RB),n.runWebGLProgram(s,[r],r.dtype)}},OB=Ar,IB={kernelName:Ip,backendName:"webgl",kernelFunc(t){vt();const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:u}=r,l=n.readSync(s.dataId),c=n.readSync(i.dataId),{selectedIndices:h}=OB(l,c,o,a,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},FB=Or,MB={kernelName:Fp,backendName:"webgl",kernelFunc(t){vt();const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(s.dataId),h=n.readSync(i.dataId),{selectedIndices:d,validOutputs:f}=FB(c,h,o,a,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},DB=Ir,LB={kernelName:Mp,backendName:"webgl",kernelFunc(t){vt();const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(s.dataId),h=n.readSync(i.dataId),d=o,f=a,p=u,m=l,{selectedIndices:b,selectedScores:y}=DB(c,h,d,f,p,m);return[n.makeTensorInfo([b.length],"int32",new Int32Array(b)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class VB{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const PB={kernelName:Lp,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s}=e,{dtype:i,depth:o,onValue:a,offValue:u}=r,l=V(s.shape),c=new VB(l,o,a,u),h=Rc({inputs:{x:s},backend:n,attrs:{shape:[l]}}),d=n.runWebGLProgram(c,[h],i);n.disposeIntermediateTensorInfo(h);const f=Rc({inputs:{x:d},backend:n,attrs:{shape:[...s.shape,o]}});return n.disposeIntermediateTensorInfo(d),f}},BB={kernelName:Bm,backendName:"webgl",kernelFunc:sh},zB={kernelName:Dp,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r}=e,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const e=Bc({inputs:{input:s},backend:r}),n=t({inputs:{x:e},backend:r}),i=Uc({inputs:{input:s},backend:r}),o=sh({inputs:{x:i},backend:r}),a=Cc({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),a}return th({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},WB={kernelName:Vp,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r;if(1===e.length)return Zc({inputs:{input:e[0]},backend:n,attrs:{dim:s}});const i=e[0].shape,o=e[0].dtype;e.forEach(t=>{M(i,t.shape,"All tensors passed to stack must have matching shapes"),F(o===t.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],u=jc({inputs:e.map(t=>{const e=Zc({inputs:{input:t},backend:n,attrs:{dim:s}});return a.push(e),e}),backend:n,attrs:{axis:s}});return a.forEach(t=>n.disposeIntermediateTensorInfo(t)),u}};class UB{constructor(t,e,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,s=oc(r),i=e.map(t=>t[0]).join(","),o=e.map((e,n)=>e[0]+t[n]).join(","),a=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${a}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class GB{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,s=oc(r),i=e.map(t=>t[0]).join(","),o=e.map((e,n)=>e[0]+t[n]).join(","),a=wc("rc",r),u=wc("source",r),l=`${a[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${a[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${a[r-2]} += 1;\n       if(${a[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${a[r-1]} += 1;\n         if(${l}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let p=0,m=1===r?2:4;m>p;p++)f+=`\n        ${h[p]}\n        if (${d}) {\n          result[${p}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${p}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;f+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${f}\n        setOutput(result);\n      }\n    `}}const jB=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:i,constantValue:o}=r;if(0===V(s.shape)){const t=i.map((t,e)=>t[0]+s.shape[e]+t[1]);return th({backend:n,attrs:{shape:t,value:o,dtype:s.dtype}})}const a=gt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new GB(s.shape,i,o):new UB(s.shape,i,o),u=[[o]];return n.runWebGLProgram(a,[s],s.dtype,u)},qB={kernelName:Pp,backendName:"webgl",kernelFunc:jB},HB=Ec({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+CD+"\n  return result;\n"}),XB={kernelName:Bp,backendName:"webgl",kernelFunc:HB},KB={kernelName:Wp,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r,a=s.shape.length,u=[],l=j(i,s.shape);let c=l;const h=er(c,a);let d,f=s;if(null!=h&&(f=Fc({inputs:{x:s},backend:n,attrs:{perm:h}}),c=rr(c.length,a),u.push(f)),tr("prod",c,a),n.shouldExecuteOnCPU([f])){const t=n.texData.get(f.dataId).values,{outVals:e,outShape:r,outDtype:s}=BM(f.shape,f.dtype,t,c);d=n.makeTensorInfo(r,s,e)}else{const[t,e]=Zn(f.shape,c),r=V(e),i=Rc({inputs:{x:f},backend:n,attrs:{shape:[-1,r]}}),o=Ac(i,se(s.dtype),"prod",n);d=Rc({inputs:{x:o},backend:n,attrs:{shape:t}}),u.push(i),u.push(o)}if(o){u.push(d);const t=Qn(d.shape,l);d=Rc({inputs:{x:d},backend:n,attrs:{shape:t}})}return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),d}},JB={kernelName:Up,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{paramsNestedSplits:s,paramsDenseValues:i,indices:o}=e,{outputRaggedRank:a}=r,u=s.map(t=>n.readSync(t.dataId)),l=s.map(t=>t.shape),c=n.readSync(i.dataId),h=n.readSync(o.dataId),[d,f,p]=zM(u,l,c,i.shape,i.dtype,h,o.shape,a),m=d.map(t=>n.makeTensorInfo([t.length],"int32",t)),b=n.makeTensorInfo(p,i.dtype,f);return m.concat([b])}},YB={kernelName:Gp,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{shape:s,values:i,defaultValue:o,rowPartitionTensors:a}=e,{rowPartitionTypes:u}=r,l=n.readSync(s.dataId),c=n.readSync(i.dataId),h=n.readSync(o.dataId),d=a.map(t=>n.readSync(t.dataId)),f=a.map(t=>t.shape),[p,m]=WM(l,s.shape,c,i.shape,i.dtype,h,o.shape,d,f,u);return n.makeTensorInfo(p,i.dtype,m)}},ZB=t=>{const{backend:e,attrs:n}=t,{start:r,stop:s,step:i,dtype:o}=n,a=UM(r,s,i,o);return e.makeTensorInfo([a.length],o,a)},QB={kernelName:jp,backendName:"webgl",kernelFunc:ZB},tz=Sc({opSnippet:"return 1.0 / x;"}),ez={kernelName:Hp,backendName:"webgl",kernelFunc:tz},nz=Sc({opSnippet:dD+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),rz={kernelName:Xp,backendName:"webgl",kernelFunc:nz},sz=Sc({opSnippet:dD+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),iz={kernelName:tm,backendName:"webgl",kernelFunc:sz};class oz{constructor(t,e,n,r,s){this.variableNames=["A"],this.outputShape=[];const[i,o,a,u]=t;this.outputShape=[i,e,n,u];const l=[r&&e>1?o-1:o,r&&n>1?a-1:a],c=[r&&e>1?e-1:e,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${a}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class az{constructor(t,e,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,o,a,u]=t;this.outputShape=[i,e,n,u];const l=[r&&e>1?o-1:o,r&&n>1?a-1:a],c=[r&&e>1?e-1:e,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${a}.0,\n                                     ${a}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const uz={kernelName:Zp,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:i,halfPixelCenters:o,size:a}=r,[u,l]=a,c=gt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new az(s.shape,u,l,i,o):new oz(s.shape,u,l,i,o);return n.runWebGLProgram(c,[s],"float32")}};class lz{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,s]=e,[,i,o]=t,a=[n&&i>1?r-1:r,n&&o>1?s-1:s],u=[n&&i>1?i-1:i,n&&o>1?o-1:o],l=a[0]/u[0],c=a[1]/u[1],h=1/l,d=1/c,f=2*Math.ceil(h)+2,p=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${f});\n        const int winWidth = int(${p});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const cz={kernelName:Qp,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:i}=e,{alignCorners:o}=r,a=new lz(i.shape,s.shape,o);return n.runWebGLProgram(a,[i],i.dtype)}};class hz{constructor(t,e,n,r,s){this.variableNames=["A"],this.outputShape=[];const[i,o,a,u]=t;this.outputShape=[i,e,n,u];const l=[r&&e>1?o-1:o,r&&n>1?a-1:a],c=[r&&e>1?e-1:e,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${a}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class dz{constructor(t,e,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,o,a,u]=t;this.outputShape=[i,e,n,u];const l=[r&&e>1?o-1:o,r&&n>1?a-1:a],c=[r&&e>1?e-1:e,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${a}.0,\n                                     ${a}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const fz={kernelName:Jp,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:i,halfPixelCenters:o,size:a}=r,[u,l]=a,c=gt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new dz(s.shape,u,l,i,o):new hz(s.shape,u,l,i,o);return n.runWebGLProgram(c,[s],s.dtype)}};class pz{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,s]=e,[,i,o]=t,a=[n&&i>1?r-1:r,n&&o>1?s-1:s],u=[n&&i>1?i-1:i,n&&o>1?o-1:o],l=a[0]/u[0],c=a[1]/u[1],h=1/l,d=1/c,f=2*Math.ceil(h)+2,p=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${f});\n        const int winWidth = int(${p});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${a[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${a[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const mz={kernelName:Yp,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:i}=e,{alignCorners:o}=r,a=new pz(i.shape,s.shape,o);return n.runWebGLProgram(a,[i],i.dtype)}};class bz{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const r=t.map((n,r)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(r)).join(","),s=oc(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class yz{constructor(t,e){function n(n){const r=t.map((r,s)=>((n,r)=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${r[n]} - 1`:`${r[n]}`)(s,n));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const r=t.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);this.outputShape=t;const s=wc("rc",r),i=`${s[r-1]} + 1 < ${this.outputShape[r-1]}`,o=`${s[r-2]} + 1 < ${this.outputShape[r-2]}`,a=oc(r);var u;this.userCode=1===r?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${i}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${a} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${u=s.slice(),n(u)};\n          if(${i}){\n            result.g = ${(t=>(t[r-1]="("+t[r-1]+" + 1)",n(t)))(s.slice())};\n          }\n          if(${o}) {\n            result.b = ${(t=>(t[r-2]="("+t[r-2]+" + 1)",n(t)))(s.slice())};\n            if(${i}) {\n              result.a = ${(t=>(t[r-1]="("+t[r-1]+" + 1)",t[r-2]="("+t[r-2]+" + 1)",n(t)))(s.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const gz={kernelName:em,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dims:i}=r,o=s.shape.length,a=j(i,s.shape);if(0===o)return Nc({inputs:{x:s},backend:n});const u=gt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yz(s.shape,a):new bz(s.shape,a);return n.runWebGLProgram(u,[s],s.dtype)}};class xz{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=t[1],r=t[2];this.outputShape=t;let s="";s="number"==typeof e?`float outputValue = ${e.toFixed(2)};`:`\n        vec3 fill = vec3(${e.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const wz={kernelName:Um,backendName:"webgl",kernelFunc({inputs:t,attrs:e,backend:n}){const{image:r}=t,{radians:s,fillValue:i,center:o}=e,a=n,u=new xz(r.shape,i),[l,c]=Hr(o,r.shape[1],r.shape[2]),h=[[l,c,Math.sin(s),Math.cos(s)]];return a.runWebGLProgram(u,[r],r.dtype,h)}},vz=Sc({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),$z={kernelName:nm,backendName:"webgl",kernelFunc:vz},kz=Sc({opSnippet:"return inversesqrt(x);",cpuKernelImpl:GM}),Nz={kernelName:rm,backendName:"webgl",kernelFunc:kz};class Cz{constructor(t,e,n,r,s,i,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const a=oc(s.length),u=oc(i.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const d=`getUpdates(${h})`,f=e>1?"strides[j]":"strides";this.userCode=`\n        ${a} strides = ${a}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${f};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const Sz={kernelName:sm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s,updates:i}=e,{shape:o}=r,{sliceRank:a,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=mn(0,s,o),d=[h/l,l];if(0===h)return n.makeTensorInfo(o,s.dtype);const f=Rc({inputs:{x:s},backend:n,attrs:{shape:[u,a]}}),p=Rc({inputs:{x:i},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),b=new Cz(u,a,f.shape.length,p.shape.length,c,d),y=n.runWebGLProgram(b,[p,f,m],p.dtype),g=Rc({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),g}};class Ez{constructor(t,e,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,i=2===gt().getNumber("WEBGL_VERSION")?"while (left < right) {":s,o="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${i}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${o} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const Tz={kernelName:im,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{sortedSequence:s,values:i}=e,{side:o}=r,a=new Ez(s.shape[0],s.shape[1],i.shape[1],o),u=[[s.shape[1]]];return n.runWebGLProgram(a,[s,i],"int32",u)}};class _z{constructor(t,e,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],o=[];for(let r=0;r<e.length;r++)o.push(`${n[r]}`),t>r&&i.push(`${n[r]}`);r=i.join(),s=o.join()}const i=oc(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const Rz={kernelName:om,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n}=t,{condition:r,t:s,e:i}=e,o=new _z(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(o,[r,s,i],re(s.dtype,i.dtype))}},Az=Sc({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = 1.7580993408473768;\n  float scale = ${U$};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),Oz={kernelName:am,backendName:"webgl",kernelFunc:Az},Iz=Sc({opSnippet:MD+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:qM}),Fz={kernelName:dm,backendName:"webgl",kernelFunc:Iz},Mz=Sc({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),Dz={kernelName:hm,backendName:"webgl",kernelFunc:Mz},Lz=Sc({opSnippet:MD+"\n  return sin(x);\n"}),Vz={kernelName:lm,backendName:"webgl",kernelFunc:Lz},Pz=Sc({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),Bz={kernelName:cm,backendName:"webgl",kernelFunc:Pz},zz=Sc({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),Wz={kernelName:fm,backendName:"webgl",kernelFunc:zz},Uz={kernelName:bm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:i,paddings:o}=r;F(4>=s.shape.length,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=i.reduce((t,e)=>t*e),u=[[0,0]];u.push(...o);for(let y=1+i.length;y<s.shape.length;++y)u.push([0,0]);const l=[],c=jB({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),h=Xr(c.shape,i,a,!1),d=Kr(h.length,i.length,!1),f=Jr(c.shape,i,a,!1),p=Rc({inputs:{x:c},backend:n,attrs:{shape:h}}),m=Fc({inputs:{x:p},backend:n,attrs:{perm:d}}),b=Rc({inputs:{x:m},backend:n,attrs:{shape:f}});return l.push(c),l.push(p),l.push(m),l.forEach(t=>n.disposeIntermediateTensorInfo(t)),b}},Gz={kernelName:xm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n}=t,{indices:r,values:s,denseShape:i,defaultValue:o}=e;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${i.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const a=n.readSync(r.dataId),u=n.readSync(s.dataId),l=n.readSync(i.dataId),c=n.readSync(o.dataId)[0],[h,d,f,p,m]=KM(a,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,f),n.makeTensorInfo([p.length],"bool",new Uint8Array(p.map(t=>Number(t)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},jz={kernelName:wm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n}=t,{inputIndices:r,inputShape:s,newShape:i}=e;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const o=Array.from(n.readSync(s.dataId)),a=n.readSync(r.dataId),u=Array.from(n.readSync(i.dataId)),[l,c,h]=JM(a,r.shape,r.dtype,o,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}},qz={kernelName:vm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:i}=e;if(1>r.shape.length)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${i.shape}`);const o=n.readSync(r.dataId),a=n.readSync(s.dataId),u=n.readSync(i.dataId),[l,c]=YM(o,r.shape,r.dtype,a,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},Hz={kernelName:$m,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:i}=e;if(1>r.shape.length)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${i.shape}`);const o=n.readSync(r.dataId),a=n.readSync(s.dataId),u=n.readSync(i.dataId),[l,c]=YM(o,r.shape,r.dtype,a,u);return n.makeTensorInfo(c,r.dtype,l)}},Xz={kernelName:km,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:s,sparseValues:i,defaultValue:o}=e,{outputShape:a}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=mn(0,s,a),f=!1;if("string"===i.dtype){const t=n.bufferSync(s),e=n.bufferSync(i),r=Kt(n.readSync(o.dataId)[0]),p=jM(t,e,a,d,c,l,u,h,r,f);return n.makeTensorInfo(a,p.dtype,p.values)}const p=new Cz(l,u,s.shape.length,i.shape.length,h,[d,1],f),m=n.runWebGLProgram(p,[i,s,o],i.dtype),b=Rc({inputs:{x:m},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(m),b}},Kz={kernelName:ym,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{numOrSizeSplits:i,axis:o}=r,a=j(o,s.shape)[0],u=fs(s,i,a),l=s.shape.length,c=new Array(l).fill(0),h=s.shape.slice();return u.map(t=>{const e=[...h];e[a]=t;const r=Pc({inputs:{x:s},backend:n,attrs:{begin:c,size:e}});return c[a]+=t,r})}},Jz="return sqrt(x);",Yz=Sc({opSnippet:Jz,packedOpSnippet:Jz,cpuKernelImpl:ZM}),Zz={kernelName:pm,backendName:"webgl",kernelFunc:Yz},Qz={kernelName:Cm,backendName:"webgl",kernelFunc:Sc({opSnippet:"return x * x;"})},tW="return (a - b) * (a - b);",eW=Ec({opSnippet:tW,packedOpSnippet:tW}),nW={kernelName:Nm,backendName:"webgl",kernelFunc:eW},rW={kernelName:zm,backendName:"webgl",kernelFunc({inputs:t,attrs:e,backend:n}){const{x:r}=t,s=dD+`\n    return x > 0.0 ? 1.0 : float(${e.alpha});\n  `,i=new hD(r.shape,s);return n.runWebGLProgram(i,[r],r.dtype)}};class sW{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=oc(n.length),i=oc(n.length);let o="";if(1===r)o="coords * strides + begin";else{let t=0;o=n.map((e,r)=>(t++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${t-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${s} begin = ${s}(${t});\n      ${s} strides = ${s}(${e});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${o}));\n      }\n    `}}const iW={kernelName:Sm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:i,end:o,strides:a,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:f,finalShape:p,isIdentity:m,sliceDim0:b,isSimpleSlice:y,begin:g,end:x,strides:w}=_n(s.shape,i,o,a,u,l,c,h,d);let v;if(m)v=Rc({inputs:{x:s},backend:n,attrs:{shape:p}});else if(b||y){F(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const t=yn(g,x,w),e=Pc({inputs:{x:s},backend:n,attrs:{begin:g,size:t}});v=Rc({inputs:{x:e},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(e)}else if(n.shouldExecuteOnCPU([s])){const t=n.readSync(s.dataId),e=We(s.shape,s.dtype,t),r=QM(f,e,w,g);v=n.makeTensorInfo(p,s.dtype,r.values)}else{const t=new sW(g,w,f);v=n.runWebGLProgram(t,[s],s.dtype)}const $=Rc({inputs:{x:v},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(v),$}},oW={kernelName:Em,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{separator:s,nGramWidths:i,leftPad:o,rightPad:a,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=e,d=n.readSync(c.dataId),f=n.readSync(h.dataId),[p,m]=tD(d,f,s,i,o,a,u,l);return[n.makeTensorInfo([p.length],"string",p),n.makeTensorInfo(h.shape,"int32",m)]}},aW={kernelName:Tm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{skipEmpty:s}=r,{input:i,delimiter:o}=e;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const a=n.readSync(i.dataId),u=n.readSync(o.dataId)[0],[l,c,h]=eD(a,u,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},uW={kernelName:_m,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{numBuckets:s}=r,{input:i}=e;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(0>=s)throw new Error("Number of buckets must be at least 1");const o=n.readSync(i.dataId),a=nD(o,s);return n.makeTensorInfo(i.shape,"int32",a)}},lW=Sc({opSnippet:"return tan(x);"}),cW={kernelName:Am,backendName:"webgl",kernelFunc:lW},hW=Sc({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),dW={kernelName:Om,backendName:"webgl",kernelFunc:hW};class fW{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let i=0;i<n.length;i++)n[i]=t[i]*e[i];this.outputShape=n,this.rank=n.length;const r=oc(this.rank),s=(t=>{const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<t.length;s++)r.push(`imod(${n[s]}, ${t[s]})`);return r.join()})(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}const pW={kernelName:Im,backendName:"webgl",kernelFunc:ih};class mW{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class bW{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}const yW={kernelName:Fm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{k:i,sorted:o}=r,a=gt().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=gt().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=s.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([s])||a>c||i>u){const t=n.readSync(s.dataId),[e,r]=iD(t,l,s.dtype,i,o);return[n.makeTensorInfo(e.shape,e.dtype,e.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===i)return l[l.length-1]=0,[n.makeTensorInfo(l,s.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===c)return[s,th({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),d=null!==h&&h.isPacked,f=d?n.unpackTensor(s):s,p=V(l)/c,m=Rc({inputs:{x:f},attrs:{shape:[p,c]},backend:n});d&&oh(n,f);const b=ah(i),y=ah(c);let g=null;const x=()=>null===g?[m,m]:[m,g],w=(t,e,r)=>{const s=x(),i=new mW(r),o=[[c],[null===g?1:0],[Number.NEGATIVE_INFINITY],[t],[e]],a=g;g=n.runWebGLProgram(i,s,"int32",o),oh(n,a)};for(let C=1;b>C;C*=2){const t=2*C;for(let e=C;e>=1;e/=2)w(t,e,[p,y])}for(let C=y;C>b;C/=2){const t=x(),e=new bW([p,C/2]),r=[[c],[null===g?1:0],[b]],s=g;g=n.runWebGLProgram(e,t,"int32",r),oh(n,s);const i=b/2,o=2*i;for(let n=i;n>=1;n/=2)w(o,n,g.shape)}let v=g;g=Pc({inputs:{x:g},backend:n,attrs:{begin:0,size:[p,i]}}),oh(n,v);let $=eh({inputs:{x:m,indices:g},backend:n,attrs:{axis:1,batchDims:1}});oh(n,m);const k=l.slice(0,-1);k.push(i),v=g,g=Rc({inputs:{x:g},attrs:{shape:k},backend:n}),oh(n,v);const N=$;return $=Rc({inputs:{x:$},attrs:{shape:k},backend:n}),oh(n,N),[$,g]}};class gW{constructor(t,e,n,r,s,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const o="nearest"===n?1:2;let a;switch(r){case"constant":default:a=1;break;case"reflect":a=2;break;case"wrap":a=3;break;case"nearest":a=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${a} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${a} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${a} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${e}));\n                float mapY = mapCoord(inY, float(${t}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const xW={kernelName:Mm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{image:s,transforms:i}=e,{interpolation:o,fillMode:a,fillValue:u,outputShape:l}=r,[c,h,d,f]=s.shape,[p,m]=null!=l?l:[h,d],b=new gW(h,d,o,a,u,[c,p,m,f]);return n.runWebGLProgram(b,[s,i],"float32")}},wW={kernelName:Lm,backendName:"webgl",kernelFunc(t){const{inputs:e,attrs:n,backend:r}=t,{axis:s}=n,{x:i}=e;Jl(i,"unique");const o=r.readSync(i.dataId),{outputValues:a,outputShape:u,indices:l}=aD(o,s,i.shape,i.dtype);return[r.makeTensorInfo(u,i.dtype,a),r.makeTensorInfo([l.length],"int32",l)]}},vW={kernelName:Vm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{value:s}=e;let{axis:i}=r;0>i&&(i+=s.shape.length);const o=s,a=o.shape.length,u=s.shape[i],l=new Array(a-1);let c=0;for(let m=0;a>m;m++)m!==i&&(l[c++]=o.shape[m]);const h=[],d=new Array(a).fill(0),f=o.shape.slice();f[i]=1;const p=new Array(u);for(let m=0;m<p.length;m++){d[i]=m;const t=Pc({inputs:{x:o},backend:n,attrs:{begin:d,size:f}}),e=Rc({inputs:{x:t},backend:n,attrs:{shape:l}});p[m]=e,h.push(t)}return h.forEach(t=>n.disposeIntermediateTensorInfo(t)),p}};class $W{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,s=t.inSize,i=t.numSegments,o=i*Math.ceil(s/n);this.outputShape=[r,o];const a=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${a}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${a};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const kW=[KD,YD,QD,eL,sL,aL,uL,lL,dL,fL,mL,yL,xL,vL,kL,SL,EL,RL,AL,OL,ML,BL,zL,WL,qL,KL,ZL,TD,tV,sV,lV,pV,mV,bV,yV,gV,wV,$V,NV,TV,_V,RV,OV,MV,VV,PV,zV,UV,GV,qV,HV,KV,YV,QV,tP,rP,iP,aP,lP,dP,pP,yP,wP,vP,kP,CP,EP,_P,ED,RP,rV,OP,FP,DP,AD,VP,BP,zP,UP,jP,HP,KP,YP,tB,nB,rB,iB,oB,aB,cB,hB,dB,fB,pB,bB,xB,vB,_B,zD,AB,IB,MB,LB,GL,PB,zB,WB,qB,XB,FD,KB,JB,YB,QB,jL,NB,ez,rz,iz,WD,uz,cz,fz,mz,gz,wz,$z,Nz,Sz,Tz,Rz,Oz,Fz,Dz,Vz,Bz,PL,TB,Wz,Uz,Gz,jz,qz,Hz,Xz,Kz,Zz,Qz,nW,rW,iW,oW,aW,uW,EB,HD,cW,dW,pW,yW,xW,XD,wW,vW,{kernelName:Pm,backendName:"webgl",kernelFunc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,segmentIds:i}=e,{numSegments:o}=r,a=s.shape.length,u=[];let l=0;const c=er([l],a);let h=s;null!=c&&(h=Fc({inputs:{x:s},backend:n,attrs:{perm:c}}),u.push(h),l=rr(1,a)[0]);const d=Cs(h.shape,l,o),f=V([h.shape[l]]),p=Rc({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}});u.push(p);const m=se(s.dtype),b=(t,e,r,s,i)=>{const o=t.shape[0],a=t.shape[1],l=Ns(a,i),c=new $W({windowSize:l,inSize:a,batchSize:o,numSegments:i},e),h=n.compileAndRun(c,[t,r],s);if(u.push(h),h.shape[1]===i)return h;const d=ZB({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),f=ih({inputs:{x:d},backend:n,attrs:{reps:[a/l]}});return u.push(d),u.push(f),b(h,e,f,s,i)},y=Rc({inputs:{x:b(p,"unsortedSegmentSum",i,m,o)},backend:n,attrs:{shape:d}});let g=y;if(null!=c){u.push(y);const t=nr(c);g=Fc({inputs:{x:g},backend:n,attrs:{perm:t}})}return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),g}},BB];for(const Fj of kW)Ct(Fj);const NW={"tfjs-core":qy,"tfjs-backend-cpu":"3.21.0","tfjs-backend-webgl":"3.21.0","tfjs-data":B_,"tfjs-layers":mS,"tfjs-converter":YT,tfjs:"3.21.0"},CW=n(Object.freeze(Object.defineProperty({__proto__:null,Abs:Vd,Acos:Pd,Acosh:Bd,AdadeltaOptimizer:R$,AdagradOptimizer:A$,AdamOptimizer:O$,AdamaxOptimizer:I$,Add:zd,AddN:Wd,All:Ud,Any:Gd,ArgMax:jd,ArgMin:qd,Asin:Hd,Asinh:Xd,Atan:Kd,Atan2:Yd,Atanh:Jd,AvgPool:Zd,AvgPool3D:tf,AvgPool3DGrad:ef,AvgPoolGrad:Qd,BatchMatMul:nf,BatchToSpaceND:rf,Bincount:sf,BroadcastArgs:af,BroadcastTo:of,Callback:hT,CallbackList:oS,Cast:uf,Ceil:lf,ClipByValue:cf,Complex:hf,ComplexAbs:df,Concat:ff,Conv2D:pf,Conv2DBackpropFilter:mf,Conv2DBackpropInput:bf,Conv3D:yf,Conv3DBackpropFilterV2:gf,Conv3DBackpropInputV2:xf,Cos:wf,Cosh:vf,CropAndResize:Nf,Cumprod:$f,Cumsum:kf,CustomCallback:lS,DataStorage:Od,DenseBincount:Cf,DepthToSpace:Sf,DepthwiseConv2dNative:Ef,DepthwiseConv2dNativeBackpropFilter:Tf,DepthwiseConv2dNativeBackpropInput:_f,Diag:Rf,Dilation2D:Af,Dilation2DBackpropFilter:If,Dilation2DBackpropInput:Of,get ENV(){return Ld},EarlyStopping:dT,Einsum:Mf,Elu:Df,EluGrad:Lf,Environment:Md,Equal:Pf,Erf:Vf,Exp:Bf,ExpandDims:zf,Expm1:Wf,FFT:Uf,Fill:Gf,FlipLeftRight:jf,Floor:qf,FloorDiv:Hf,FromPixels:Wm,FusedBatchNorm:Xf,FusedConv2D:jm,FusedDepthwiseConv2D:qm,GatherNd:Jf,GatherV2:Kf,GraphModel:JT,Greater:Yf,GreaterEqual:Zf,History:uS,IFFT:tp,Identity:Qf,Imag:ep,InputSpec:PC,IsFinite:np,IsInf:rp,IsNan:sp,KernelBackend:Id,LRN:mp,LRNGrad:bp,LayerVariable:VC,LayersModel:yS,LeakyRelu:ip,Less:op,LessEqual:ap,LinSpace:up,Log:lp,Log1p:cp,LogSoftmax:pp,LogicalAnd:hp,LogicalNot:dp,LogicalOr:fp,LogicalXor:"LogicalXor",LowerBound:"LowerBound",Max:yp,MaxPool:xp,MaxPool3D:vp,MaxPool3DGrad:$p,MaxPoolGrad:wp,MaxPoolWithArgmax:kp,Maximum:gp,Mean:Np,Min:Cp,Minimum:Sp,MirrorPad:Ep,Mod:Tp,MomentumOptimizer:M$,Multinomial:_p,Multiply:Rp,Neg:Ap,NonMaxSuppressionV3:Ip,NonMaxSuppressionV4:Fp,NonMaxSuppressionV5:Mp,NotEqual:Op,OP_SCOPE_SUFFIX:Gb,OneHot:Lp,OnesLike:Dp,Optimizer:_$,OptimizerConstructors:L$,Pack:Vp,PadV2:Pp,Pool:"Pool",Pow:Bp,Prelu:zp,Prod:Wp,RMSPropOptimizer:D$,RNN:nE,RaggedGather:Up,RaggedTensorToTensor:Gp,Range:jp,get Rank(){return Sb},Real:qp,RealDiv:Ff,Reciprocal:Hp,get Reduction(){return s$},Relu:Xp,Relu6:tm,Reshape:Kp,ResizeBilinear:Zp,ResizeBilinearGrad:Qp,ResizeNearestNeighbor:Jp,ResizeNearestNeighborGrad:Yp,Reverse:em,RotateWithOffset:Um,Round:nm,Rsqrt:rm,SGDOptimizer:F$,ScatterNd:sm,SearchSorted:im,Select:om,Selu:am,Sequential:xS,Sigmoid:dm,Sign:hm,Sin:lm,Sinh:cm,Slice:um,Softmax:gm,Softplus:fm,SpaceToBatchND:bm,SparseFillEmptyRows:xm,SparseReshape:wm,SparseSegmentMean:vm,SparseSegmentSum:$m,SparseToDense:km,SplitV:ym,Sqrt:pm,Square:Cm,SquaredDifference:Nm,Step:zm,StridedSlice:Sm,StringNGrams:Em,StringSplit:Tm,StringToHashBucketFast:_m,Sub:Rm,Sum:mm,SymbolicTensor:BC,Tan:Am,Tanh:Om,Tensor:Nb,TensorBuffer:vb,Tile:Im,TopK:Fm,Transform:Mm,Transpose:Dm,Unique:Lm,Unpack:Vm,UnsortedSegmentSum:Pm,UpperBound:"UpperBound",Variable:Cb,ZerosLike:Bm,bt:Gm,abs:Yy,acos:Zy,acosh:Qy,add:Hy,addN:tg,all:eg,any:ng,argMax:rg,argMin:sg,asin:ig,asinh:og,atan:ag,atan2:ug,atanh:lg,avgPool:hg,avgPool3d:dg,backend:on,backend_util:Q$,basicLSTMCell:yg,batchNorm:xg,batchNorm2d:wg,batchNorm3d:vg,batchNorm4d:$g,batchToSpaceND:gg,bincount:kg,booleanMaskAsync:Cv,broadcastArgs:Ng,broadcastTo:Cg,broadcast_util:My,browser:Vy,buffer:We,callbacks:fT,cast:yy,ceil:Sg,clipByValue:Eg,clone:gy,complex:jb,concat:fg,concat1d:Tg,concat2d:_g,concat3d:Rg,concat4d:Ag,constraints:eS,conv1d:Ig,conv2d:Og,conv2dTranspose:Mg,conv3d:Dg,conv3dTranspose:Vg,copyRegisteredKernels(t,e){Nt(t).forEach(t=>{Ct(Object.assign({},t,{backendName:e}))})},cos:Pg,cosh:Bg,cosineWindow:Nr,cumprod:zg,cumsum:Wg,customGrad:ur,data:z_,denseBincount:Ug,deprecationWarn(t){gt().getBool("DEPRECATION_WARNINGS_ENABLED")},depthToSpace:Gg,depthwiseConv2d:jg,deregisterOp(t){delete xT[t]},device_util:Wb,diag:qg,dilation2d:Hg,disableDeprecationWarnings(){gt().set("DEPRECATION_WARNINGS_ENABLED",!1)},dispose:nn,disposeVariables(){Bb.disposeVariables()},div:Ky,divNoNan:Yg,dot:Zg,dropout:Rv,einsum:Qg,elu:tx,enableDebugMode(){gt().set("DEBUG",!0)},enableProdMode(){gt().set("PROD",!0)},enclosingPowerOfTwo:kr,engine:Qe,env:gt,equal:Xg,erf:ex,euclideanNorm:lx,exp:cx,expandDims:hx,expm1:dx,eye:px,fft:uv,fill:Kn,findBackend(t){return Bb.findBackend(t)},findBackendFactory(t){return Bb.findBackendFactory(t)},floor:mx,floorDiv:Xy,fused:Pv,gather:bx,gatherND:_v,gather_util:Py,getBackend(){return Bb.backendName},getGradient:kt,getKernel:$t,getKernelsForBackend:Nt,grad(t){return F(it(t),()=>"The f passed in grad(f) must be a function"),(e,n)=>{const r=ge(e,"x","tf.grad","string_or_numeric"),s=null!=n?ge(n,"dy","tf.grad"):null;return Bb.tidy(()=>{const{value:e,grads:n}=Bb.gradients(()=>t(r),[r],s);return null!=s&&M(e.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),lr(n),n[0]})}},grads(t){return F(it(t),()=>"The f passed in grads(f) must be a function"),(e,n)=>{F(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const r=xe(e,"args","tf.grads","string_or_numeric"),s=null!=n?ge(n,"dy","tf.grads"):null;return Bb.tidy(()=>{const{value:e,grads:n}=Bb.gradients(()=>t(...r),r,s);return null!=s&&M(e.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),lr(n),n})}},greater:yx,greaterEqual:gx,ifft:lv,imag:_y,image:N$,inTopKAsync:Av,initializers:nS,input:Bo,io:Sy,irfft:cv,isFinite:xx,isInf:wx,isNaN:vx,keep:rn,kernel_impls:tk,layers:aT,leakyRelu:$x,less:kx,lessEqual:Nx,linalg:C$,linspace:or,loadGraphModel(t){return Jh(this,arguments,function*(t,e={},n=Sy){if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&"string"==typeof t&&(t=(t=>(t.endsWith("/")||(t+="/"),`${t}model.json?tfjs-format=file`))(t));const r=new JT(t,e,n);return yield r.load(),r})},loadGraphModelSync(t){if(null==t)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let e;if(t instanceof Array){const[n,r]=t;if(!n)throw new Error("modelJSON must be the first element of the array");if(!(r&&r instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");e=Ze(Re(n,Ie(n.weightsManifest),r))}else if("load"in t)e=t;else{if(!("modelTopology"in t&&"weightSpecs"in t&&"weightData"in t))throw new Error("Unknown model format");e=Ze(t)}const n=new JT(e);return n.load(),n},loadLayersModel(t,e){return null==e&&(e={}),function(t,e){return Jh(this,null,function*(){if(null==e&&(e={}),"string"==typeof t){const n=Jb(t,e);if(0===n.length)n.push(Ye(t,e));else if(n.length>1)throw new nC(`Found more than one (${n.length}) load handlers for URL '${t}'`);t=n[0]}return function(t,e,n){return Jh(this,null,function*(){if(null==n&&(n={}),null==t.load)throw new nC("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=yield t.load();let r=e.modelTopology;null!=r.model_config&&(r=r.model_config);const s=null==n.strict||n.strict,i=null!=e.weightData&&null!=e.weightSpecs&&s,o=Yi($o(r),void 0,i),a=e.trainingConfig;if(null!=a&&o.loadTrainingConfig(a),null!=e.userDefinedMetadata&&o.setUserDefinedMetadata(e.userDefinedMetadata),null!=e.weightData){if(null==e.weightSpecs)throw new nC("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:t,optimizerWeights:n}=((t,e)=>{const n=Ne(t,e),r={},s=[];return e.forEach(t=>{"optimizer"===t.group?s.push({name:t.name,tensor:n[t.name]}):r[t.name]=n[t.name]}),{modelWeights:r,optimizerWeights:s}})(e.weightData,e.weightSpecs);o.loadWeights(t,s),null!=o.optimizer&&n.length>0&&(yield o.optimizer.setWeights(n)),nn(t),nn(n.map(t=>t.tensor))}return o})}(t,0,e)})}(t,e)},localResponseNormalization:Cx,log:Sx,log1p:Ex,logSigmoid:_x,logSoftmax:Ax,logSumExp:Ox,logicalAnd:Ix,logicalNot:Fx,logicalOr:Mx,logicalXor:Dx,losses:S$,lowerBound:cr,matMul:Ey,math:Fy,max:nx,maxPool:Px,maxPool3d:Bx,maxPoolWithArgmax:zx,maximum:Wx,mean:Ux,memory:tn,meshgrid:fr,metrics:uT,min:rx,minimum:Gx,mirrorPad:jx,mod:qx,model(t){return new yS(t)},models:lT,moments:Hx,movingAverage:Sv,mul:Jy,multiRNNCell:Xx,multinomial:Kx,neg:Ry,nextFrame:Pr,norm:ux,notEqual:Jx,oneHot:Ty,ones:dr,onesLike:Yx,op:we,outerProduct:Zx,pad:Qx,pad1d:tw,pad2d:ew,pad3d:nw,pad4d:rw,pool:iw,pow:sx,prelu:ow,print:Ue,prod:aw,profile(t){return Bb.profile(t)},raggedGather:uw,raggedTensorToTensor:lw,rand:cw,randomGamma:Lw,randomNormal:Vw,randomStandardNormal:Pw,randomUniform:Bw,range:pr,ready(){return Bb.ready()},real:Ay,reciprocal:zw,registerBackend:sn,registerCallbackConstructor(t,e){cS.registerCallbackConstructor(t,e)},registerGradient:St,registerKernel:Ct,registerOp(t,e){const n={tfOpName:t,category:"custom",inputs:[],attrs:[],customExecutor:e};xT[t]=n},regularizers:cT,relu:Ww,relu6:Uw,removeBackend(t){Bb.removeBackend(t)},reshape:cg,reverse:Gw,reverse1d:jw,reverse2d:qw,reverse3d:Hw,reverse4d:Xw,rfft:dv,round:Kw,rsqrt:Jw,scalar:sr,scatterND:Ev,scatter_util:By,searchSorted:Vx,selu:Yw,separableConv2d:Zw,sequential(t){return new xS(t)},serialization:Gy,setBackend(t){return Bb.setBackend(t)},setPlatform(t,e){gt().setPlatform(t,e)},setdiff1dAsync:Qw,sigmoid:pg,sign:tv,signal:k$,sin:ev,sinh:nv,slice:mg,slice1d:rv,slice2d:sv,slice3d:iv,slice4d:ov,slice_util:zy,softmax:av,softplus:Tx,spaceToBatchND:sw,sparse:E$,sparseToDense:Tv,spectral:$$,split:hv,sqrt:ix,square:ox,squaredDifference:fv,squeeze:pv,stack:mv,step:bv,stridedSlice:yv,string:T$,sub:Rx,sum:ax,sumOutType:se,tan:gv,tanh:bg,tensor:$e,tensor1d:mr,tensor2d:br,tensor3d:cn,tensor4d:yr,tensor5d:gr,tensor6d:xr,tensor_util:Lb,test_util:jy,tidy:en,tile:fx,time(t){return Bb.time(t)},topk:xv,train:V$,transpose:Oy,truncatedNormal:wv,unique:vv,unregisterGradient(t){if(!Xm.has(t))throw new Error(`The gradient '${t}' for backend is not registered`);Xm.delete(t)},unregisterKernel(t,e){const n=Et(t,e);if(!Hm.has(n))throw new Error(`The kernel '${t}' for backend '${e}' is not registered`);Hm.delete(n)},unsortedSegmentSum:$v,unstack:kv,upcastType:re,upperBound:wr,util:gb,valueAndGrad(t){return F(it(t),()=>"The f passed in valueAndGrad(f) must be a function"),(e,n)=>{F(e instanceof Nb,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),F(null==n||n instanceof Nb,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:r,value:s}=Bb.gradients(()=>t(e),[e],n);return lr(r),{grad:r[0],value:s}}},valueAndGrads(t){return F(it(t),()=>"The f passed in valueAndGrads(f) must be a function"),(e,n)=>{F(Array.isArray(e)&&e.every(t=>t instanceof Nb),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),F(null==n||n instanceof Nb,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const r=Bb.gradients(()=>t(...e),e,n);return null!=n&&M(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),lr(r.grads),r}},variable:vr,variableGrads:ar,version:NW,version_converter:YT,version_core:qy,version_layers:mS,where:Kg,whereAsync:Nv,zeros:hr,zerosLike:Jg},Symbol.toStringTag,{value:"Module"})));var SW={};Object.defineProperty(SW,"u",{value:!0}),SW.NSFW_CLASSES=void 0,SW.NSFW_CLASSES={0:"Drawing",1:"Hentai",2:"Neutral",3:"Porn",4:"Sexy"};var EW={},TW=function(){function t(e){function n(t){return"[object Array]"==={}.toString.call(t)}if(this.ranges=[],"string"==typeof e)this.parseString(e);else if("number"==typeof e)this.appendRange(e,e);else if(e instanceof t)this.ranges=e.getRanges();else if(n(e))for(var r=0,s=e;r<s.length;r++){var i=s[r];if(n(i)){if(2!==i.length)throw new TypeError("Invalid array initializer");this.appendRange(i[0],i[1])}else{if("number"!=typeof i)throw new TypeError("Invalid array initialzer");this.append(i)}}else if(void 0!==e)throw new TypeError("Invalid input")}return t.prototype.parseString=function(t){function e(t){var e=t.match(/^\(?(\-?\d+)/);return parseInt(e[1],10)}var n=t.replace(/\s/g,"");if(n.length)for(var r,s=0,i=n.split(",");s<i.length;s++){var o=i[s];if(r=o.match(/^(\d+|\(\-?\d+\))$/)){var a=e(r[1]);this.appendRange(a,a)}else{if(!(r=o.match(/^(\d+|\(\-?\d+\))?\-(\d+|\(\-?\d+\))?$/)))throw new SyntaxError("Invalid input");var u=void 0===r[1]?-1/0:e(r[1]),l=void 0===r[2]?1/0:e(r[2]);this.appendRange(u,l)}}},t.prototype.clone=function(){return new t(this)},t.prototype.append=function(e){if(void 0===e)throw new TypeError("Invalid input");if(e instanceof t){for(var n=0,r=e.ranges;n<r.length;n++){var s=r[n];this.appendRange(s[0],s[1])}return this}return this.append(new t(e))},t.prototype.appendRange=function(t,e){var n=[t,e];if(n[0]>n[1]&&(n=[n[1],n[0]]),n[0]===1/0&&n[1]===1/0||n[0]===-1/0&&n[1]===-1/0)throw new RangeError("Infinity can be used only within an unbounded range segment");var r=this.findOverlap(n);return this.ranges.splice(r.lo,r.count,r.union),this},t.prototype.subtract=function(e){if(void 0===e)throw new TypeError("Invalid input");if(e instanceof t){for(var n=0,r=e.ranges;n<r.length;n++){var s=r[n];this.subtractRange(s[0],s[1])}return this}return this.subtract(new t(e))},t.prototype.subtractRange=function(t,e){var n=[t,e];n[0]>n[1]&&(n=[n[1],n[0]]);var r=this.findOverlap(n);if(r.count>0){var s=[];this.ranges[r.lo][0]<n[0]&&s.push([this.ranges[r.lo][0],n[0]-1]),n[1]<this.ranges[r.lo+r.count-1][1]&&s.push([n[1]+1,this.ranges[r.lo+r.count-1][1]]),this.ranges.splice.apply(this.ranges,[r.lo,r.count].concat(s))}return this},t.prototype.intersect=function(e){if(void 0===e)throw new TypeError("Invalid input");if(e instanceof t){for(var n=[],r=0,s=0;s<this.ranges.length;s++)for(var i=this.ranges[s],o=r;o<e.ranges.length;o++){var a=e.ranges[o];if(i[0]>a[1]||i[1]<a[0]){if(i[1]<a[0])break}else{r=o;var u=Math.max(i[0],a[0]),l=Math.min(i[1],a[1]);n.push([u,l])}}return this.ranges=n,this}return this.intersect(new t(e))},t.prototype.findOverlap=function(t){for(var e=this.ranges.length-1;e>=0;e--){var n=this.ranges[e],r=void 0;if(r=this.calcUnion(n,t)){for(var s=1,i=void 0;e-s>=0&&(i=this.calcUnion(r,this.ranges[e-s]));)r=i,s++;return{lo:e+1-s,count:s,union:r}}if(n[1]<t[0])return{lo:e+1,count:0,union:t}}return{lo:0,count:0,union:t}},t.prototype.calcUnion=(t,e)=>t[1]+1<e[0]||t[0]-1>e[1]?null:[Math.min(t[0],e[0]),Math.max(t[1],e[1])],t.prototype.getRanges=function(){for(var t=[],e=0,n=this.ranges;e<n.length;e++){var r=n[e];t.push([r[0],r[1]])}return t},t.prototype.has=function(e){if(void 0===e)throw new TypeError("Invalid input");if(e instanceof t){for(var n=this.ranges.length,r=0,s=e.ranges;r<s.length;r++){var i=s[r],o=void 0;for(o=0;n>o;o++){var a=this.ranges[o];if(!(i[0]<a[0]||i[1]>a[1]||i[1]<a[0]||i[1]>a[1]))break}if(o===n)return!1}return!0}return this.has(new t(e))},t.prototype.hasRange=function(e,n){return this.has(new t([[e,n]]))},t.prototype.segmentLength=function(){return this.ranges.length},t.prototype.length=function(){if(this.isUnbounded())return 1/0;for(var t=0,e=0,n=this.ranges;e<n.length;e++){var r=n[e];t+=r[1]-r[0]+1}return t},t.prototype.equals=function(e){if(void 0===e)throw new TypeError("Invalid input");if(e instanceof t){if(e===this)return!0;if(this.ranges.length!==e.ranges.length)return!1;for(var n=0;n<this.ranges.length;n++)if(this.ranges[n][0]!==e.ranges[n][0]||this.ranges[n][1]!==e.ranges[n][1])return!1;return!0}return this.equals(new t(e))},t.prototype.isUnbounded=function(){return this.ranges.length>0&&(this.ranges[0][0]===-1/0||this.ranges[this.ranges.length-1][1]===1/0)},t.prototype.min=function(){if(0!==this.ranges.length)return this.ranges[0][0]},t.prototype.max=function(){if(0!==this.ranges.length)return this.ranges[this.ranges.length-1][1]},t.prototype.shift=function(){var t=this.min();if(t===-1/0)throw new RangeError("shift() was invoked on an unbounded MultiRange which contains -Infinity");return void 0!==t&&this.subtract(t),t},t.prototype.pop=function(){var t=this.max();if(t===1/0)throw new RangeError("pop() was invoked on an unbounded MultiRange which contains +Infinity");return void 0!==t&&this.subtract(t),t},t.prototype.toString=function(){function t(t){return 0>t?"("+t+")":String(t)}for(var e=[],n=0,r=this.ranges;n<r.length;n++){var s=r[n];s[0]===-1/0?s[1]===1/0?e.push("-"):e.push("-"+t(s[1])):s[1]===1/0?e.push(t(s[0])+"-"):s[0]==s[1]?e.push(t(s[0])):e.push(t(s[0])+"-"+t(s[1]))}return e.join(",")},t.prototype.toArray=function(){if(this.isUnbounded())throw new RangeError("You cannot build an array from an unbounded range");for(var t=new Array(this.length()),e=0,n=0,r=this.ranges;n<r.length;n++)for(var s=r[n],i=s[0];i<=s[1];i++)t[e++]=i;return t},t.prototype.getIterator=function(){var t=this;if(this.isUnbounded())throw new RangeError("Unbounded ranges cannot be iterated over");var e=0,n=this.ranges[e],r=n?n[0]:void 0;return{next(){if(!n)return{done:!0};var s=r;return++r>n[1]&&(n=t.ranges[++e],r=n?n[0]:void 0),{value:s}}}},t}();EW.MultiRange=TW,"function"==typeof Symbol&&"symbol"==typeof Symbol.iterator&&(TW.prototype[Symbol.iterator]=TW.prototype.getIterator),EW.multirange=t=>new TW(t);var _W=t=>{for(var e=new Array(t),n=0;t>n;++n)e[n]=n;return e},RW="undefined"!=typeof Float64Array,AW={float32:[],float64:[],int8:[],int16:[],int32:[],uint8:[],uint16:[],uint32:[],array:[],uint8_clamped:[],buffer:[],generic:[]},OW=(t,e,n,r)=>{if(void 0===t)return(0,AW.array[0])([]);"number"==typeof t&&(t=[t]),void 0===e&&(e=[t.length]);var s=e.length;if(void 0===n){n=new Array(s);for(var i=s-1,o=1;i>=0;--i)n[i]=o,o*=e[i]}if(void 0===r)for(r=0,i=0;s>i;++i)0>n[i]&&(r-=(e[i]-1)*n[i]);for(var a=(t=>{if(null!=(e=t)&&(uh(e)||(t=>"function"==typeof t.readFloatLE&&"function"==typeof t.slice&&uh(t.slice(0,0)))(e)||e.yt))return"buffer";var e;if(RW)switch({}.toString.call(t)){case"[object Float64Array]":return"float64";case"[object Float32Array]":return"float32";case"[object Int8Array]":return"int8";case"[object Int16Array]":return"int16";case"[object Int32Array]":return"int32";case"[object Uint8Array]":return"uint8";case"[object Uint16Array]":return"uint16";case"[object Uint32Array]":return"uint32";case"[object Uint8ClampedArray]":return"uint8_clamped"}return Array.isArray(t)?"array":"generic"})(t),u=AW[a];u.length<=s+1;)u.push(hh(a,u.length-1));return(0,u[s+1])(t,e,n,r)},IW={};try{IW.GifWriter=function(t,e,n,r){function s(t){var e=t.length;if(2>e||e>256||e&e-1)throw new Error("Invalid code/color length, must be power of 2 and 2 .. 256.");return e}var i=0,o=void 0===(r=void 0===r?{}:r).loop?null:r.loop,a=void 0===r.palette?null:r.palette;if(0>=e||0>=n||e>65535||n>65535)throw new Error("Width/Height invalid.");t[i++]=71,t[i++]=73,t[i++]=70,t[i++]=56,t[i++]=57,t[i++]=97;var u=0,l=0;if(null!==a){for(var c=s(a);c>>=1;)++u;if(c=1<<u,--u,void 0!==r.background){if((l=r.background)>=c)throw new Error("Background index out of range.");if(0===l)throw new Error("Background index explicitly passed as 0.")}}if(t[i++]=255&e,t[i++]=e>>8&255,t[i++]=255&n,t[i++]=n>>8&255,t[i++]=(null!==a?128:0)|u,t[i++]=l,t[i++]=0,null!==a)for(var h=0,d=a.length;d>h;++h){var f=a[h];t[i++]=f>>16&255,t[i++]=f>>8&255,t[i++]=255&f}if(null!==o){if(0>o||o>65535)throw new Error("Loop count invalid.");t[i++]=33,t[i++]=255,t[i++]=11,t[i++]=78,t[i++]=69,t[i++]=84,t[i++]=83,t[i++]=67,t[i++]=65,t[i++]=80,t[i++]=69,t[i++]=50,t[i++]=46,t[i++]=48,t[i++]=3,t[i++]=1,t[i++]=255&o,t[i++]=o>>8&255,t[i++]=0}var p=!1;this.addFrame=(e,n,r,o,u,l)=>{if(!0===p&&(--i,p=!1),l=void 0===l?{}:l,0>e||0>n||e>65535||n>65535)throw new Error("x/y invalid.");if(0>=r||0>=o||r>65535||o>65535)throw new Error("Width/Height invalid.");if(u.length<r*o)throw new Error("Not enough pixels for the frame size.");var c=!0,h=l.palette;if(null==h&&(c=!1,h=a),null==h)throw new Error("Must supply either a local or global palette.");for(var d=s(h),f=0;d>>=1;)++f;d=1<<f;var m=void 0===l.delay?0:l.delay,b=void 0===l.disposal?0:l.disposal;if(0>b||b>3)throw new Error("Disposal out of range.");var y=!1,g=0;if(void 0!==l.transparent&&null!==l.transparent&&(y=!0,0>(g=l.transparent)||g>=d))throw new Error("Transparent color index.");if((0!==b||y||0!==m)&&(t[i++]=33,t[i++]=249,t[i++]=4,t[i++]=b<<2|(!0===y?1:0),t[i++]=255&m,t[i++]=m>>8&255,t[i++]=g,t[i++]=0),t[i++]=44,t[i++]=255&e,t[i++]=e>>8&255,t[i++]=255&n,t[i++]=n>>8&255,t[i++]=255&r,t[i++]=r>>8&255,t[i++]=255&o,t[i++]=o>>8&255,t[i++]=!0===c?128|f-1:0,!0===c)for(var x=0,w=h.length;w>x;++x){var v=h[x];t[i++]=v>>16&255,t[i++]=v>>8&255,t[i++]=255&v}return i=((t,e,n,r)=>{function s(n){for(;d>=n;)t[e++]=255&f,f>>=8,d-=8,e===o+256&&(t[o]=255,o=e++)}function i(t){f|=t<<d,d+=h,s(8)}t[e++]=n;var o=e++,a=1<<n,u=a-1,l=a+1,c=l+1,h=n+1,d=0,f=0,p=r[0]&u,m={};i(a);for(var b=1,y=r.length;y>b;++b){var g=r[b]&u,x=p<<8|g,w=m[x];if(void 0===w){for(f|=p<<d,d+=h;d>=8;)t[e++]=255&f,f>>=8,d-=8,e===o+256&&(t[o]=255,o=e++);4096===c?(i(a),c=l+1,h=n+1,m={}):(1<<h>c||++h,m[x]=c++),p=g}else p=w}return i(p),i(l),s(1),o+1===e?t[o]=0:(t[o]=e-o-1,t[e++]=0),e})(t,i,2>f?2:f,u),i},this.end=()=>(!1===p&&(t[i++]=59,p=!0),i),this.getOutputBuffer=()=>t,this.setOutputBuffer=e=>{t=e},this.getOutputBufferPosition=()=>i,this.setOutputBufferPosition=t=>{i=t}},IW.GifReader=function(t){var e=0;if(71!==t[e++]||73!==t[e++]||70!==t[e++]||56!==t[e++]||56!=(t[e++]+1&253)||97!==t[e++])throw new Error("Invalid GIF 87a/89a header.");var n=t[e++]|t[e++]<<8,r=t[e++]|t[e++]<<8,s=t[e++],i=s>>7,o=1<<1+(7&s);t[e++],t[e++];var a=null,u=null;i&&(a=e,u=o,e+=3*o);var l=!0,c=[],h=0,d=null,f=0,p=null;for(this.width=n,this.height=r;l&&e<t.length;)switch(t[e++]){case 33:switch(t[e++]){case 255:if(11!==t[e]||78==t[e+1]&&69==t[e+2]&&84==t[e+3]&&83==t[e+4]&&67==t[e+5]&&65==t[e+6]&&80==t[e+7]&&69==t[e+8]&&50==t[e+9]&&46==t[e+10]&&48==t[e+11]&&3==t[e+12]&&1==t[e+13]&&0==t[e+16])e+=14,p=t[e++]|t[e++]<<8,e++;else for(e+=12;;){if(0>(E=t[e++]))throw Error("Invalid block size");if(0===E)break;e+=E}break;case 249:if(4!==t[e++]||0!==t[e+4])throw new Error("Invalid graphics extension block.");var m=t[e++];h=t[e++]|t[e++]<<8,d=t[e++],1&m||(d=null),f=m>>2&7,e++;break;case 254:for(;;){if(0>(E=t[e++]))throw Error("Invalid block size");if(0===E)break;e+=E}break;default:throw new Error("Unknown graphic control label: 0x"+t[e-1].toString(16))}break;case 44:var b=t[e++]|t[e++]<<8,y=t[e++]|t[e++]<<8,g=t[e++]|t[e++]<<8,x=t[e++]|t[e++]<<8,w=t[e++],v=w>>6&1,$=1<<1+(7&w),k=a,N=u,C=!1;w>>7&&(C=!0,k=e,N=$,e+=3*$);var S=e;for(e++;;){var E;if(0>(E=t[e++]))throw Error("Invalid block size");if(0===E)break;e+=E}c.push({x:b,y,width:g,height:x,has_local_palette:C,palette_offset:k,palette_size:N,data_offset:S,data_length:e-S,transparent_index:d,interlaced:!!v,delay:h,disposal:f});break;case 59:l=!1;break;default:throw new Error("Unknown gif block: 0x"+t[e-1].toString(16))}this.numFrames=()=>c.length,this.loopCount=()=>p,this.frameInfo=t=>{if(0>t||t>=c.length)throw new Error("Frame index out of range.");return c[t]},this.decodeAndBlitFrameBGRA=function(e,r){var s=this.frameInfo(e),i=s.width*s.height,o=new Uint8Array(i);dh(t,s.data_offset,o,i);var a=s.palette_offset,u=s.transparent_index;null===u&&(u=256);var l=s.width,c=n-l,h=l,d=4*(s.y*n+s.x),f=4*((s.y+s.height)*n+s.x),p=d,m=4*c;!0===s.interlaced&&(m+=4*n*7);for(var b=8,y=0,g=o.length;g>y;++y){var x=o[y];if(0===h&&(h=l,f>(p+=m)||(m=4*c+4*n*(b-1),p=d+(l+c)*(b<<1),b>>=1)),x===u)p+=4;else{var w=t[a+3*x],v=t[a+3*x+1],$=t[a+3*x+2];r[p++]=$,r[p++]=v,r[p++]=w,r[p++]=255}--h}},this.decodeAndBlitFrameRGBA=function(e,r){var s=this.frameInfo(e),i=s.width*s.height,o=new Uint8Array(i);dh(t,s.data_offset,o,i);var a=s.palette_offset,u=s.transparent_index;null===u&&(u=256);var l=s.width,c=n-l,h=l,d=4*(s.y*n+s.x),f=4*((s.y+s.height)*n+s.x),p=d,m=4*c;!0===s.interlaced&&(m+=4*n*7);for(var b=8,y=0,g=o.length;g>y;++y){var x=o[y];if(0===h&&(h=l,f>(p+=m)||(m=4*c+4*n*(b-1),p=d+(l+c)*(b<<1),b>>=1)),x===u)p+=4;else{var w=t[a+3*x],v=t[a+3*x+1],$=t[a+3*x+2];r[p++]=w,r[p++]=v,r[p++]=$,r[p++]=255}--h}}}}catch(Oj){}var FW=(t,e)=>{for(var n=e[1].length-Math.abs(t.arrayBlockIndices[0])|0,r=new Array(t.arrayArgs.length),s=new Array(t.arrayArgs.length),i=0;i<t.arrayArgs.length;++i)s[i]=e[2*i],r[i]=e[2*i+1];var o=[],a=[],u=[],l=[],c=[];for(i=0;i<t.arrayArgs.length;++i){0>t.arrayBlockIndices[i]?(u.push(0),l.push(n),o.push(n),a.push(n+t.arrayBlockIndices[i])):(u.push(t.arrayBlockIndices[i]),l.push(t.arrayBlockIndices[i]+n),o.push(0),a.push(t.arrayBlockIndices[i]));for(var h=[],d=0;d<r[i].length;d++)u[i]<=r[i][d]&&r[i][d]<l[i]&&h.push(r[i][d]-u[i]);c.push(h)}var f=["SS"],p=["'use strict'"],m=[];for(d=0;n>d;++d)m.push(["s",d,"=SS[",d,"]"].join(""));for(i=0;i<t.arrayArgs.length;++i){for(f.push("a"+i),f.push("t"+i),f.push("p"+i),d=0;n>d;++d)m.push(["t",i,"p",d,"=t",i,"[",u[i]+d,"]"].join(""));for(d=0;d<Math.abs(t.arrayBlockIndices[i]);++d)m.push(["t",i,"b",d,"=t",i,"[",o[i]+d,"]"].join(""))}for(i=0;i<t.scalarArgs.length;++i)f.push("Y"+i);if(t.shapeArgs.length>0&&m.push("shape=SS.slice(0)"),t.indexArgs.length>0){var b=new Array(n);for(i=0;n>i;++i)b[i]="0";m.push(["index=[",b.join(","),"]"].join(""))}for(i=0;i<t.offsetArgs.length;++i){var y=t.offsetArgs[i],g=[];for(d=0;d<y.offset.length;++d)0!==y.offset[d]&&(1===y.offset[d]?g.push(["t",y.array,"p",d].join("")):g.push([y.offset[d],"*t",y.array,"p",d].join("")));0===g.length?m.push("q"+i+"=0"):m.push(["q",i,"=",g.join("+")].join(""))}var x,w,v,$=0===(x=[].concat(t.pre.thisVars).concat(t.body.thisVars).concat(t.post.thisVars)).length?x:w?(v||x.sort(w),((t,e)=>{for(var n=1,r=t.length,s=t[0],i=t[0],o=1;r>o;++o)if(i=s,e(s=t[o],i)){if(o===n){n++;continue}t[n++]=s}return t.length=n,t})(x,w)):(v||x.sort(),(t=>{for(var e=1,n=t.length,r=t[0],s=t[0],i=1;n>i;++i,s=r)if(s=r,(r=t[i])!==s){if(i===e){e++;continue}t[e++]=r}return t.length=e,t})(x));for((m=m.concat($)).length>0&&p.push("var "+m.join(",")),i=0;i<t.arrayArgs.length;++i)p.push("p"+i+"|=0");t.pre.body.length>3&&p.push(ph(t.pre,t,s));var k=ph(t.body,t,s),N=(t=>{for(var e=0,n=t[0].length;n>e;){for(var r=1;r<t.length;++r)if(t[r][e]!==t[0][e])return e;++e}return e})(c);n>N?p.push(((t,e,n,r)=>{for(var s=e.length,i=n.arrayArgs.length,o=n.blockSize,a=n.indexArgs.length>0,u=[],l=0;i>l;++l)u.push(["var offset",l,"=p",l].join(""));for(l=t;s>l;++l)u.push(["for(var j"+l+"=SS[",e[l],"]|0;j",l,">0;){"].join("")),u.push(["if(j",l,"<",o,"){"].join("")),u.push(["s",e[l],"=j",l].join("")),u.push(["j",l,"=0"].join("")),u.push(["}else{s",e[l],"=",o].join("")),u.push(["j",l,"-=",o,"}"].join("")),a&&u.push(["index[",e[l],"]=j",l].join(""));for(l=0;i>l;++l){for(var c=["offset"+l],h=t;s>h;++h)c.push(["j",h,"*t",l,"p",e[h]].join(""));u.push(["p",l,"=(",c.join("+"),")"].join(""))}for(u.push(fh(e,n,r)),l=t;s>l;++l)u.push("}");return u.join("\n")})(N,c[0],t,k)):p.push(fh(c[0],t,k)),t.post.body.length>3&&p.push(ph(t.post,t,s)),t.debug;var C=[t.funcName||"unnamed","_cwise_loop_",r[0].join("s"),"m",N,mh(s)].join("");return new Function(["function ",C,"(",f.join(","),"){",p.join("\n"),"} return ",C].join(""))()},MW=t=>{var e=["'use strict'","var CACHED={}"],n=[],r=t.funcName+"_cwise_thunk";e.push(["return function ",r,"(",t.shimArgs.join(","),"){"].join(""));for(var s=[],i=[],o=[["array",t.arrayArgs[0],".shape.slice(",Math.max(0,t.arrayBlockIndices[0]),0>t.arrayBlockIndices[0]?","+t.arrayBlockIndices[0]+")":")"].join("")],a=[],u=[],l=0;l<t.arrayArgs.length;++l){var c=t.arrayArgs[l];n.push(["t",c,"=array",c,".dtype,","r",c,"=array",c,".order"].join("")),s.push("t"+c),s.push("r"+c),i.push("t"+c),i.push("r"+c+".join()"),o.push("array"+c+".data"),o.push("array"+c+".stride"),o.push("array"+c+".offset|0"),l>0&&(a.push("array"+t.arrayArgs[0]+".shape.length===array"+c+".shape.length+"+(Math.abs(t.arrayBlockIndices[0])-Math.abs(t.arrayBlockIndices[l]))),u.push("array"+t.arrayArgs[0]+".shape[shapeIndex+"+Math.max(0,t.arrayBlockIndices[0])+"]===array"+c+".shape[shapeIndex+"+Math.max(0,t.arrayBlockIndices[l])+"]"))}for(t.arrayArgs.length>1&&(e.push("if (!("+a.join(" && ")+")) throw new Error('cwise: Arrays do not all have the same dimensionality!')"),e.push("for(var shapeIndex=array"+t.arrayArgs[0]+".shape.length-"+Math.abs(t.arrayBlockIndices[0])+"; shapeIndex--\x3e0;) {"),e.push("if (!("+u.join(" && ")+")) throw new Error('cwise: Arrays do not all have the same shape!')"),e.push("}")),l=0;l<t.scalarArgs.length;++l)o.push("scalar"+t.scalarArgs[l]);return n.push(["type=[",i.join(","),"].join()"].join("")),n.push("proc=CACHED[type]"),e.push("var "+n.join(",")),e.push(["if(!proc){","CACHED[type]=proc=compile([",s.join(","),"])}","return proc(",o.join(","),")}"].join("")),t.debug,new Function("compile",e.join("\n"))(FW.bind(void 0,t))},DW=t=>{var e=new bh;e.pre=t.pre,e.body=t.body,e.post=t.post;var n=t.args.slice(0);e.argTypes=n;for(var r=0;r<n.length;++r){var s=n[r];if("array"===s||"object"==typeof s&&s.blockIndices){if(e.argTypes[r]="array",e.arrayArgs.push(r),e.arrayBlockIndices.push(s.blockIndices?s.blockIndices:0),e.shimArgs.push("array"+r),r<e.pre.args.length&&e.pre.args[r].count>0)throw new Error("cwise: pre() block may not reference array args");if(r<e.post.args.length&&e.post.args[r].count>0)throw new Error("cwise: post() block may not reference array args")}else if("scalar"===s)e.scalarArgs.push(r),e.shimArgs.push("scalar"+r);else if("index"===s){if(e.indexArgs.push(r),r<e.pre.args.length&&e.pre.args[r].count>0)throw new Error("cwise: pre() block may not reference array index");if(r<e.body.args.length&&e.body.args[r].lvalue)throw new Error("cwise: body() block may not write to array index");if(r<e.post.args.length&&e.post.args[r].count>0)throw new Error("cwise: post() block may not reference array index")}else if("shape"===s){if(e.shapeArgs.push(r),r<e.pre.args.length&&e.pre.args[r].lvalue)throw new Error("cwise: pre() block may not write to array shape");if(r<e.body.args.length&&e.body.args[r].lvalue)throw new Error("cwise: body() block may not write to array shape");if(r<e.post.args.length&&e.post.args[r].lvalue)throw new Error("cwise: post() block may not write to array shape")}else{if("object"!=typeof s||!s.offset)throw new Error("cwise: Unknown argument type "+n[r]);e.argTypes[r]="offset",e.offsetArgs.push({array:s.array,offset:s.offset}),e.offsetArgIndex.push(r)}}if(0>=e.arrayArgs.length)throw new Error("cwise: No array arguments specified");if(e.pre.args.length>n.length)throw new Error("cwise: Too many arguments in pre() block");if(e.body.args.length>n.length)throw new Error("cwise: Too many arguments in body() block");if(e.post.args.length>n.length)throw new Error("cwise: Too many arguments in post() block");return e.debug=!!t.printCode||!!t.debug,e.funcName=t.funcName||"cwise",e.blockSize=t.blockSize||64,MW(e)};DW({args:["array","scalar","index"],pre:{body:"{}",args:[],thisVars:[],localVars:[]},body:{body:"{\nvar _inline_1_v=_inline_1_arg1_,_inline_1_i\nfor(_inline_1_i=0;_inline_1_i<_inline_1_arg2_.length-1;++_inline_1_i) {\n_inline_1_v=_inline_1_v[_inline_1_arg2_[_inline_1_i]]\n}\n_inline_1_arg0_=_inline_1_v[_inline_1_arg2_[_inline_1_arg2_.length-1]]\n}",args:[{name:"_inline_1_arg0_",lvalue:!0,rvalue:!1,count:1},{name:"_inline_1_arg1_",lvalue:!1,rvalue:!0,count:1},{name:"_inline_1_arg2_",lvalue:!1,rvalue:!0,count:4}],thisVars:[],localVars:["_inline_1_i","_inline_1_v"]},post:{body:"{}",args:[],thisVars:[],localVars:[]},funcName:"convert",blockSize:64});var LW={exports:{}};!function(){function t(t,n,r){function s(){for(;a.length&&!l.paused;){var t=a.shift();if(null===t)return l.emit("end");l.emit("data",t)}}t=t||function(t){this.queue(t)},n=n||function(){this.queue(null)};var i=!1,o=!1,a=[],u=!1,l=new e;return l.readable=l.writable=!0,l.paused=!1,l.autoDestroy=!(r&&!1===r.autoDestroy),l.write=function(e){return t.call(this,e),!l.paused},l.queue=l.push=t=>(u||(null==t&&(u=!0),a.push(t),s()),l),l.on("end",()=>{l.readable=!1,!l.writable&&l.autoDestroy&&process.nextTick(()=>{l.destroy()})}),l.end=function(t){if(!i)return i=!0,arguments.length&&l.write(t),l.writable=!1,n.call(l),!l.readable&&l.autoDestroy&&l.destroy(),l},l.destroy=()=>{if(!o)return o=!0,i=!0,a.length=0,l.writable=l.readable=!1,l.emit("close"),l},l.pause=()=>{if(!l.paused)return l.paused=!0,l},l.resume=()=>(l.paused&&(l.paused=!1,l.emit("resume")),s(),l.paused||l.emit("drain"),l),l}var e=Nw;LW.exports=t,t.through=t}();var VW,PW=LW.exports,BW=Nw,zW=OW,WW=IW.GifReader,UW={exports:{}},GW="object"==typeof Reflect?Reflect:null,jW=GW&&"function"==typeof GW.apply?GW.apply:(t,e,n)=>(()=>{}).apply.call(t,e,n);VW=GW&&"function"==typeof GW.ownKeys?GW.ownKeys:Object.getOwnPropertySymbols?t=>Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t)):t=>Object.getOwnPropertyNames(t);var qW=Number.isNaN||(t=>t!=t);UW.exports=gh,UW.exports.once=(t,e)=>new Promise((n,r)=>{function s(n){t.removeListener(e,i),r(n)}function i(){"function"==typeof t.removeListener&&t.removeListener("error",s),n([].slice.call(arguments))}Eh(t,e,i,{once:!0}),"error"!==e&&((t,e)=>{"function"==typeof t.on&&Eh(t,"error",e,{once:!0})})(t,s)}),gh.EventEmitter=gh,gh.prototype.C=void 0,gh.prototype.T=0,gh.prototype.N=void 0;var HW=10;Object.defineProperty(gh,"defaultMaxListeners",{enumerable:!0,get(){return HW},set(t){if("number"!=typeof t||0>t||qW(t))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+t+".");HW=t}}),gh.init=function(){void 0!==this.C&&this.C!==Object.getPrototypeOf(this).C||(this.C=Object.create(null),this.T=0),this.N=this.N||void 0},gh.prototype.setMaxListeners=function(t){if("number"!=typeof t||0>t||qW(t))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+t+".");return this.N=t,this},gh.prototype.getMaxListeners=function(){return wh(this)},gh.prototype.emit=function(t){for(var e=[],n=1;arguments.length>n;n++)e.push(arguments[n]);var r="error"===t,s=this.C;if(void 0!==s)r=r&&void 0===s.error;else if(!r)return!1;if(r){var i;if(e.length>0&&(i=e[0]),i instanceof Error)throw i;var o=new Error("Unhandled error."+(i?" ("+i.message+")":""));throw o.context=i,o}var a=s[t];if(void 0===a)return!1;if("function"==typeof a)jW(a,this,e);else{var u=a.length,l=Sh(a,u);for(n=0;u>n;++n)jW(l[n],this,e)}return!0},gh.prototype.addListener=function(t,e){return vh(this,t,e,!1)},gh.prototype.on=gh.prototype.addListener,gh.prototype.prependListener=function(t,e){return vh(this,t,e,!0)},gh.prototype.once=function(t,e){return xh(e),this.on(t,kh(this,t,e)),this},gh.prototype.prependOnceListener=function(t,e){return xh(e),this.prependListener(t,kh(this,t,e)),this},gh.prototype.removeListener=function(t,e){var n,r,s,i,o;if(xh(e),void 0===(r=this.C))return this;if(void 0===(n=r[t]))return this;if(n===e||n.listener===e)0===--this.T?this.C=Object.create(null):(delete r[t],r.removeListener&&this.emit("removeListener",t,n.listener||e));else if("function"!=typeof n){for(s=-1,i=n.length-1;i>=0;i--)if(n[i]===e||n[i].listener===e){o=n[i].listener,s=i;break}if(0>s)return this;0===s?n.shift():((t,e)=>{for(;e+1<t.length;e++)t[e]=t[e+1];t.pop()})(n,s),1===n.length&&(r[t]=n[0]),void 0!==r.removeListener&&this.emit("removeListener",t,o||e)}return this},gh.prototype.off=gh.prototype.removeListener,gh.prototype.removeAllListeners=function(t){var e,n,r;if(void 0===(n=this.C))return this;if(void 0===n.removeListener)return 0===arguments.length?(this.C=Object.create(null),this.T=0):void 0!==n[t]&&(0===--this.T?this.C=Object.create(null):delete n[t]),this;if(0===arguments.length){var s,i=Object.keys(n);for(r=0;r<i.length;++r)"removeListener"!==(s=i[r])&&this.removeAllListeners(s);return this.removeAllListeners("removeListener"),this.C=Object.create(null),this.T=0,this}if("function"==typeof(e=n[t]))this.removeListener(t,e);else if(void 0!==e)for(r=e.length-1;r>=0;r--)this.removeListener(t,e[r]);return this},gh.prototype.listeners=function(t){return Nh(this,t,!0)},gh.prototype.rawListeners=function(t){return Nh(this,t,!1)},gh.listenerCount=(t,e)=>"function"==typeof t.listenerCount?t.listenerCount(e):Ch.call(t,e),gh.prototype.listenerCount=Ch,gh.prototype.eventNames=function(){return this.T>0?VW(this.C):[]};for(var XW=UW.exports,KW={exports:{}},JW=Array.isArray||(t=>"[object Array]"=={}.toString.call(t)),YW={},ZW={byteLength(t){var e=Th(t),n=e[0],r=e[1];return 3*(n+r)/4-r},toByteArray(t){var e,n,r=Th(t),s=r[0],i=r[1],o=new eU(((t,e,n)=>3*(e+n)/4-n)(0,s,i)),a=0,u=i>0?s-4:s;for(n=0;u>n;n+=4)e=tU[t.charCodeAt(n)]<<18|tU[t.charCodeAt(n+1)]<<12|tU[t.charCodeAt(n+2)]<<6|tU[t.charCodeAt(n+3)],o[a++]=e>>16&255,o[a++]=e>>8&255,o[a++]=255&e;return 2===i&&(e=tU[t.charCodeAt(n)]<<2|tU[t.charCodeAt(n+1)]>>4,o[a++]=255&e),1===i&&(e=tU[t.charCodeAt(n)]<<10|tU[t.charCodeAt(n+1)]<<4|tU[t.charCodeAt(n+2)]>>2,o[a++]=e>>8&255,o[a++]=255&e),o},fromByteArray(t){for(var e,n=t.length,r=n%3,s=[],i=16383,o=0,a=n-r;a>o;o+=i)s.push(Rh(t,o,o+i>a?a:o+i));return 1===r?(e=t[n-1],s.push(QW[e>>2]+QW[e<<4&63]+"==")):2===r&&(e=(t[n-2]<<8)+t[n-1],s.push(QW[e>>10]+QW[e>>4&63]+QW[e<<2&63]+"=")),s.join("")}},QW=[],tU=[],eU="undefined"!=typeof Uint8Array?Uint8Array:Array,nU="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",rU=0;64>rU;++rU)QW[rU]=nU[rU],tU[nU.charCodeAt(rU)]=rU;tU["-".charCodeAt(0)]=62,tU["_".charCodeAt(0)]=63;var sU={read(t,e,n,r,s){var i,o,a=8*s-r-1,u=(1<<a)-1,l=u>>1,c=-7,h=n?s-1:0,d=n?-1:1,f=t[e+h];for(h+=d,i=f&(1<<-c)-1,f>>=-c,c+=a;c>0;i=256*i+t[e+h],h+=d,c-=8);for(o=i&(1<<-c)-1,i>>=-c,c+=r;c>0;o=256*o+t[e+h],h+=d,c-=8);if(0===i)i=1-l;else{if(i===u)return o?NaN:1/0*(f?-1:1);o+=Math.pow(2,r),i-=l}return(f?-1:1)*o*Math.pow(2,i-r)},write(t,e,n,r,s,i){var o,a,u,l=8*i-s-1,c=(1<<l)-1,h=c>>1,d=23===s?Math.pow(2,-24)-Math.pow(2,-77):0,f=r?0:i-1,p=r?1:-1,m=0>e||0===e&&0>1/e?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(a=isNaN(e)?1:0,o=c):(o=Math.floor(Math.log(e)/Math.LN2),1>e*(u=Math.pow(2,-o))&&(o--,u*=2),2>(e+=1>o+h?d*Math.pow(2,1-h):d/u)*u||(o++,u/=2),c>o+h?1>o+h?(a=e*Math.pow(2,h-1)*Math.pow(2,s),o=0):(a=(e*u-1)*Math.pow(2,s),o+=h):(a=0,o=c));s>=8;t[n+f]=255&a,f+=p,a/=256,s-=8);for(o=o<<s|a,l+=s;l>0;t[n+f]=255&o,f+=p,o/=256,l-=8);t[n+f-p]|=128*m}};!function(t){function e(t){if(t>H)throw new RangeError('The value "'+t+'" is invalid for option "size"');const e=new Uint8Array(t);return Object.setPrototypeOf(e,n.prototype),e}function n(t,e,n){if("number"==typeof t){if("string"==typeof e)throw new TypeError('The "string" argument must be of type string. Received type number');return i(t)}return r(t,e,n)}function r(t,r,s){if("string"==typeof t)return((t,r)=>{if("string"==typeof r&&""!==r||(r="utf8"),!n.isEncoding(r))throw new TypeError("Unknown encoding: "+r);const s=0|l(t,r);let i=e(s);const o=i.write(t,r);return o!==s&&(i=i.slice(0,o)),i})(t,r);if(ArrayBuffer.isView(t))return(t=>{if(B(t,Uint8Array)){const e=new Uint8Array(t);return a(e.buffer,e.byteOffset,e.byteLength)}return o(t)})(t);if(null==t)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t);if(B(t,ArrayBuffer)||t&&B(t.buffer,ArrayBuffer))return a(t,r,s);if("undefined"!=typeof SharedArrayBuffer&&(B(t,SharedArrayBuffer)||t&&B(t.buffer,SharedArrayBuffer)))return a(t,r,s);if("number"==typeof t)throw new TypeError('The "value" argument must not be of type number. Received type number');const i=t.valueOf&&t.valueOf();if(null!=i&&i!==t)return n.from(i,r,s);const c=(t=>{if(n.isBuffer(t)){const n=0|u(t.length),r=e(n);return 0===r.length||t.copy(r,0,0,n),r}return void 0!==t.length?"number"!=typeof t.length||z(t.length)?e(0):o(t):"Buffer"===t.type&&Array.isArray(t.data)?o(t.data):void 0})(t);if(c)return c;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof t[Symbol.toPrimitive])return n.from(t[Symbol.toPrimitive]("string"),r,s);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t)}function s(t){if("number"!=typeof t)throw new TypeError('"size" argument must be of type number');if(0>t)throw new RangeError('The value "'+t+'" is invalid for option "size"')}function i(t){return s(t),e(0>t?0:0|u(t))}function o(t){const n=0>t.length?0:0|u(t.length),r=e(n);for(let e=0;n>e;e+=1)r[e]=255&t[e];return r}function a(t,e,r){if(0>e||t.byteLength<e)throw new RangeError('"offset" is outside of buffer bounds');if(t.byteLength<e+(r||0))throw new RangeError('"length" is outside of buffer bounds');let s;return s=void 0===e&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,e):new Uint8Array(t,e,r),Object.setPrototypeOf(s,n.prototype),s}function u(t){if(t>=H)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+H.toString(16)+" bytes");return 0|t}function l(t,e){if(n.isBuffer(t))return t.length;if(ArrayBuffer.isView(t)||B(t,ArrayBuffer))return t.byteLength;if("string"!=typeof t)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof t);const r=t.length,s=arguments.length>2&&!0===arguments[2];if(!s&&0===r)return 0;let i=!1;for(;;)switch(e){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return L(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return V(t).length;default:if(i)return s?-1:L(t).length;e=(""+e).toLowerCase(),i=!0}}function c(t,e,n){let r=!1;if((void 0===e||0>e)&&(e=0),e>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),0>=n)return"";if((e>>>=0)>=(n>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return k(this,e,n);case"utf8":case"utf-8":return w(this,e,n);case"ascii":return v(this,e,n);case"latin1":case"binary":return $(this,e,n);case"base64":return x(this,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return N(this,e,n);default:if(r)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),r=!0}}function h(t,e,n){const r=t[e];t[e]=t[n],t[n]=r}function d(t,e,r,s,i){if(0===t.length)return-1;if("string"==typeof r?(s=r,r=0):r>2147483647?r=2147483647:-2147483648>r&&(r=-2147483648),z(r=+r)&&(r=i?0:t.length-1),0>r&&(r=t.length+r),r<t.length){if(0>r){if(!i)return-1;r=0}}else{if(i)return-1;r=t.length-1}if("string"==typeof e&&(e=n.from(e,s)),n.isBuffer(e))return 0===e.length?-1:f(t,e,r,s,i);if("number"==typeof e)return e&=255,"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(t,e,r):Uint8Array.prototype.lastIndexOf.call(t,e,r):f(t,[e],r,s,i);throw new TypeError("val must be string, number or Buffer")}function f(t,e,n,r,s){function i(t,e){return 1===a?t[e]:t.readUInt16BE(e*a)}let o,a=1,u=t.length,l=e.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(2>t.length||2>e.length)return-1;a=2,u/=2,l/=2,n/=2}if(s){let r=-1;for(o=n;u>o;o++)if(i(t,o)===i(e,-1===r?0:o-r)){if(-1===r&&(r=o),o-r+1===l)return r*a}else-1!==r&&(o-=o-r),r=-1}else for(n+l>u&&(n=u-l),o=n;o>=0;o--){let n=!0;for(let r=0;l>r;r++)if(i(t,o+r)!==i(e,r)){n=!1;break}if(n)return o}return-1}function p(t,e,n,r){n=Number(n)||0;const s=t.length-n;r?(r=Number(r))>s&&(r=s):r=s;const i=e.length;let o;for(r>i/2&&(r=i/2),o=0;r>o;++o){const r=parseInt(e.substr(2*o,2),16);if(z(r))return o;t[n+o]=r}return o}function m(t,e,n,r){return P(L(e,t.length-n),t,n,r)}function b(t,e,n,r){return P((t=>{const e=[];for(let n=0;n<t.length;++n)e.push(255&t.charCodeAt(n));return e})(e),t,n,r)}function y(t,e,n,r){return P(V(e),t,n,r)}function g(t,e,n,r){return P(((t,e)=>{let n,r,s;const i=[];for(let o=0;o<t.length&&(e-=2)>=0;++o)n=t.charCodeAt(o),r=n>>8,s=n%256,i.push(s),i.push(r);return i})(e,t.length-n),t,n,r)}function x(t,e,n){return 0===e&&n===t.length?G.fromByteArray(t):G.fromByteArray(t.slice(e,n))}function w(t,e,n){n=Math.min(t.length,n);const r=[];let s=e;for(;n>s;){const e=t[s];let i=null,o=e>239?4:e>223?3:e>191?2:1;if(n>=s+o){let n,r,a,u;switch(o){case 1:128>e&&(i=e);break;case 2:n=t[s+1],128==(192&n)&&(u=(31&e)<<6|63&n,u>127&&(i=u));break;case 3:n=t[s+1],r=t[s+2],128==(192&n)&&128==(192&r)&&(u=(15&e)<<12|(63&n)<<6|63&r,u>2047&&(55296>u||u>57343)&&(i=u));break;case 4:n=t[s+1],r=t[s+2],a=t[s+3],128==(192&n)&&128==(192&r)&&128==(192&a)&&(u=(15&e)<<18|(63&n)<<12|(63&r)<<6|63&a,u>65535&&1114112>u&&(i=u))}}null===i?(i=65533,o=1):i>65535&&(i-=65536,r.push(i>>>10&1023|55296),i=56320|1023&i),r.push(i),s+=o}return(t=>{const e=t.length;if(X>=e)return String.fromCharCode.apply(String,t);let n="",r=0;for(;e>r;)n+=String.fromCharCode.apply(String,t.slice(r,r+=X));return n})(r)}function v(t,e,n){let r="";n=Math.min(t.length,n);for(let s=e;n>s;++s)r+=String.fromCharCode(127&t[s]);return r}function $(t,e,n){let r="";n=Math.min(t.length,n);for(let s=e;n>s;++s)r+=String.fromCharCode(t[s]);return r}function k(t,e,n){const r=t.length;e&&e>=0||(e=0),(!n||0>n||n>r)&&(n=r);let s="";for(let i=e;n>i;++i)s+=Y[t[i]];return s}function N(t,e,n){const r=t.slice(e,n);let s="";for(let i=0;i<r.length-1;i+=2)s+=String.fromCharCode(r[i]+256*r[i+1]);return s}function C(t,e,n){if(t%1!=0||0>t)throw new RangeError("offset is not uint");if(t+e>n)throw new RangeError("Trying to access beyond buffer length")}function S(t,e,r,s,i,o){if(!n.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>i||o>e)throw new RangeError('"value" argument is out of bounds');if(r+s>t.length)throw new RangeError("Index out of range")}function E(t,e,n,r,s){F(e,r,s,t,n,7);let i=Number(e&BigInt(4294967295));t[n++]=i,i>>=8,t[n++]=i,i>>=8,t[n++]=i,i>>=8,t[n++]=i;let o=Number(e>>BigInt(32)&BigInt(4294967295));return t[n++]=o,o>>=8,t[n++]=o,o>>=8,t[n++]=o,o>>=8,t[n++]=o,n}function T(t,e,n,r,s){F(e,r,s,t,n,7);let i=Number(e&BigInt(4294967295));t[n+7]=i,i>>=8,t[n+6]=i,i>>=8,t[n+5]=i,i>>=8,t[n+4]=i;let o=Number(e>>BigInt(32)&BigInt(4294967295));return t[n+3]=o,o>>=8,t[n+2]=o,o>>=8,t[n+1]=o,o>>=8,t[n]=o,n+8}function _(t,e,n,r,s,i){if(n+r>t.length)throw new RangeError("Index out of range");if(0>n)throw new RangeError("Index out of range")}function R(t,e,n,r,s){return e=+e,n>>>=0,s||_(t,0,n,4),j.write(t,e,n,r,23,4),n+4}function A(t,e,n,r,s){return e=+e,n>>>=0,s||_(t,0,n,8),j.write(t,e,n,r,52,8),n+8}function O(t,e,n){K[t]=class extends n{constructor(){super(),Object.defineProperty(this,"message",{value:e.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${t}]`,this.stack,delete this.name}get code(){return t}set code(t){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:t,writable:!0})}toString(){return`${this.name} [${t}]: ${this.message}`}}}function I(t){let e="",n=t.length;const r="-"===t[0]?1:0;for(;n>=r+4;n-=3)e=`_${t.slice(n-3,n)}${e}`;return`${t.slice(0,n)}${e}`}function F(t,e,n,r,s,i){if(t>n||e>t){const n="bigint"==typeof e?"n":"";let r;throw r=0===e||e===BigInt(0)?`>= 0${n} and < 2${n} ** ${8*(i+1)}${n}`:`>= -(2${n} ** ${8*(i+1)-1}${n}) and < 2 ** ${8*(i+1)-1}${n}`,new K.ERR_OUT_OF_RANGE("value",r,t)}((t,e,n)=>{M(e,"offset"),void 0!==t[e]&&void 0!==t[e+n]||D(e,t.length-(n+1))})(r,s,i)}function M(t,e){if("number"!=typeof t)throw new K.ERR_INVALID_ARG_TYPE(e,"number",t)}function D(t,e,n){if(Math.floor(t)!==t)throw M(t,n),new K.ERR_OUT_OF_RANGE("offset","an integer",t);if(0>e)throw new K.ERR_BUFFER_OUT_OF_BOUNDS;throw new K.ERR_OUT_OF_RANGE("offset",`>= 0 and <= ${e}`,t)}function L(t,e){let n;e=e||1/0;const r=t.length;let s=null;const i=[];for(let o=0;r>o;++o){if(n=t.charCodeAt(o),n>55295&&57344>n){if(!s){if(n>56319){(e-=3)>-1&&i.push(239,191,189);continue}if(o+1===r){(e-=3)>-1&&i.push(239,191,189);continue}s=n;continue}if(56320>n){(e-=3)>-1&&i.push(239,191,189),s=n;continue}n=65536+(s-55296<<10|n-56320)}else s&&(e-=3)>-1&&i.push(239,191,189);if(s=null,128>n){if(0>(e-=1))break;i.push(n)}else if(2048>n){if(0>(e-=2))break;i.push(n>>6|192,63&n|128)}else if(65536>n){if(0>(e-=3))break;i.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(n>=1114112)throw new Error("Invalid code point");if(0>(e-=4))break;i.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return i}function V(t){return G.toByteArray((t=>{if(2>(t=(t=t.split("=")[0]).trim().replace(J,"")).length)return"";for(;t.length%4!=0;)t+="=";return t})(t))}function P(t,e,n,r){let s;for(s=0;r>s&&s+n<e.length&&s<t.length;++s)e[s+n]=t[s];return s}function B(t,e){return t instanceof e||null!=t&&null!=t.constructor&&null!=t.constructor.name&&t.constructor.name===e.name}function z(t){return t!=t}function W(t){return"undefined"==typeof BigInt?U:t}function U(){throw new Error("BigInt not supported")}const G=ZW,j=sU,q="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;t.Buffer=n,t.SlowBuffer=t=>(+t!=t&&(t=0),n.alloc(+t)),t.INSPECT_MAX_BYTES=50;const H=2147483647;t.kMaxLength=H,n.TYPED_ARRAY_SUPPORT=(()=>{try{const t=new Uint8Array(1),e={foo(){return 42}};return Object.setPrototypeOf(e,Uint8Array.prototype),Object.setPrototypeOf(t,e),42===t.foo()}catch(Oj){return!1}})(),!n.TYPED_ARRAY_SUPPORT&&"undefined"!=typeof console&&console.error,Object.defineProperty(n.prototype,"parent",{enumerable:!0,get(){if(n.isBuffer(this))return this.buffer}}),Object.defineProperty(n.prototype,"offset",{enumerable:!0,get(){if(n.isBuffer(this))return this.byteOffset}}),n.poolSize=8192,n.from=(t,e,n)=>r(t,e,n),Object.setPrototypeOf(n.prototype,Uint8Array.prototype),Object.setPrototypeOf(n,Uint8Array),n.alloc=(t,n,r)=>((t,n,r)=>(s(t),t>0&&void 0!==n?"string"==typeof r?e(t).fill(n,r):e(t).fill(n):e(t)))(t,n,r),n.allocUnsafe=t=>i(t),n.allocUnsafeSlow=t=>i(t),n.isBuffer=t=>null!=t&&!0===t.yt&&t!==n.prototype,n.compare=(t,e)=>{if(B(t,Uint8Array)&&(t=n.from(t,t.offset,t.byteLength)),B(e,Uint8Array)&&(e=n.from(e,e.offset,e.byteLength)),!n.isBuffer(t)||!n.isBuffer(e))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(t===e)return 0;let r=t.length,s=e.length;for(let n=0,i=Math.min(r,s);i>n;++n)if(t[n]!==e[n]){r=t[n],s=e[n];break}return s>r?-1:r>s?1:0},n.isEncoding=t=>{switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},n.concat=(t,e)=>{if(!Array.isArray(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return n.alloc(0);let r;if(void 0===e)for(e=0,r=0;r<t.length;++r)e+=t[r].length;const s=n.allocUnsafe(e);let i=0;for(r=0;r<t.length;++r){let e=t[r];if(B(e,Uint8Array))i+e.length>s.length?(n.isBuffer(e)||(e=n.from(e)),e.copy(s,i)):Uint8Array.prototype.set.call(s,e,i);else{if(!n.isBuffer(e))throw new TypeError('"list" argument must be an Array of Buffers');e.copy(s,i)}i+=e.length}return s},n.byteLength=l,n.prototype.yt=!0,n.prototype.swap16=function(){const t=this.length;if(t%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let e=0;t>e;e+=2)h(this,e,e+1);return this},n.prototype.swap32=function(){const t=this.length;if(t%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let e=0;t>e;e+=4)h(this,e,e+3),h(this,e+1,e+2);return this},n.prototype.swap64=function(){const t=this.length;if(t%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let e=0;t>e;e+=8)h(this,e,e+7),h(this,e+1,e+6),h(this,e+2,e+5),h(this,e+3,e+4);return this},n.prototype.toString=function(){const t=this.length;return 0===t?"":0===arguments.length?w(this,0,t):c.apply(this,arguments)},n.prototype.toLocaleString=n.prototype.toString,n.prototype.equals=function(t){if(!n.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===n.compare(this,t)},n.prototype.inspect=function(){let e="";const n=t.INSPECT_MAX_BYTES;return e=this.toString("hex",0,n).replace(/(.{2})/g,"$1 ").trim(),this.length>n&&(e+=" ... "),"<Buffer "+e+">"},q&&(n.prototype[q]=n.prototype.inspect),n.prototype.compare=function(t,e,r,s,i){if(B(t,Uint8Array)&&(t=n.from(t,t.offset,t.byteLength)),!n.isBuffer(t))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof t);if(void 0===e&&(e=0),void 0===r&&(r=t?t.length:0),void 0===s&&(s=0),void 0===i&&(i=this.length),0>e||r>t.length||0>s||i>this.length)throw new RangeError("out of range index");if(s>=i&&e>=r)return 0;if(s>=i)return-1;if(e>=r)return 1;if(this===t)return 0;let o=(i>>>=0)-(s>>>=0),a=(r>>>=0)-(e>>>=0);const u=Math.min(o,a),l=this.slice(s,i),c=t.slice(e,r);for(let n=0;u>n;++n)if(l[n]!==c[n]){o=l[n],a=c[n];break}return a>o?-1:o>a?1:0},n.prototype.includes=function(t,e,n){return-1!==this.indexOf(t,e,n)},n.prototype.indexOf=function(t,e,n){return d(this,t,e,n,!0)},n.prototype.lastIndexOf=function(t,e,n){return d(this,t,e,n,!1)},n.prototype.write=function(t,e,n,r){if(void 0===e)r="utf8",n=this.length,e=0;else if(void 0===n&&"string"==typeof e)r=e,n=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e>>>=0,isFinite(n)?(n>>>=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}const s=this.length-e;if((void 0===n||n>s)&&(n=s),t.length>0&&(0>n||0>e)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");let i=!1;for(;;)switch(r){case"hex":return p(this,t,e,n);case"utf8":case"utf-8":return m(this,t,e,n);case"ascii":case"latin1":case"binary":return b(this,t,e,n);case"base64":return y(this,t,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return g(this,t,e,n);default:if(i)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),i=!0}},n.prototype.toJSON=function(){return{type:"Buffer",data:[].slice.call(this.xt||this,0)}};const X=4096;n.prototype.slice=function(t,e){const r=this.length;0>(t=~~t)?0>(t+=r)&&(t=0):t>r&&(t=r),0>(e=void 0===e?r:~~e)?0>(e+=r)&&(e=0):e>r&&(e=r),t>e&&(e=t);const s=this.subarray(t,e);return Object.setPrototypeOf(s,n.prototype),s},n.prototype.readUintLE=n.prototype.readUIntLE=function(t,e,n){t>>>=0,e>>>=0,n||C(t,e,this.length);let r=this[t],s=1,i=0;for(;++i<e&&(s*=256);)r+=this[t+i]*s;return r},n.prototype.readUintBE=n.prototype.readUIntBE=function(t,e,n){t>>>=0,e>>>=0,n||C(t,e,this.length);let r=this[t+--e],s=1;for(;e>0&&(s*=256);)r+=this[t+--e]*s;return r},n.prototype.readUint8=n.prototype.readUInt8=function(t,e){return t>>>=0,e||C(t,1,this.length),this[t]},n.prototype.readUint16LE=n.prototype.readUInt16LE=function(t,e){return t>>>=0,e||C(t,2,this.length),this[t]|this[t+1]<<8},n.prototype.readUint16BE=n.prototype.readUInt16BE=function(t,e){return t>>>=0,e||C(t,2,this.length),this[t]<<8|this[t+1]},n.prototype.readUint32LE=n.prototype.readUInt32LE=function(t,e){return t>>>=0,e||C(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},n.prototype.readUint32BE=n.prototype.readUInt32BE=function(t,e){return t>>>=0,e||C(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},n.prototype.readBigUInt64LE=W(function(t){M(t>>>=0,"offset");const e=this[t],n=this[t+7];void 0!==e&&void 0!==n||D(t,this.length-8);const r=e+this[++t]*Kh(2,8)+this[++t]*Kh(2,16)+this[++t]*Kh(2,24),s=this[++t]+this[++t]*Kh(2,8)+this[++t]*Kh(2,16)+n*Kh(2,24);return BigInt(r)+(BigInt(s)<<BigInt(32))}),n.prototype.readBigUInt64BE=W(function(t){M(t>>>=0,"offset");const e=this[t],n=this[t+7];void 0!==e&&void 0!==n||D(t,this.length-8);const r=e*Kh(2,24)+this[++t]*Kh(2,16)+this[++t]*Kh(2,8)+this[++t],s=this[++t]*Kh(2,24)+this[++t]*Kh(2,16)+this[++t]*Kh(2,8)+n;return(BigInt(r)<<BigInt(32))+BigInt(s)}),n.prototype.readIntLE=function(t,e,n){t>>>=0,e>>>=0,n||C(t,e,this.length);let r=this[t],s=1,i=0;for(;++i<e&&(s*=256);)r+=this[t+i]*s;return s*=128,s>r||(r-=Math.pow(2,8*e)),r},n.prototype.readIntBE=function(t,e,n){t>>>=0,e>>>=0,n||C(t,e,this.length);let r=e,s=1,i=this[t+--r];for(;r>0&&(s*=256);)i+=this[t+--r]*s;return s*=128,s>i||(i-=Math.pow(2,8*e)),i},n.prototype.readInt8=function(t,e){return t>>>=0,e||C(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},n.prototype.readInt16LE=function(t,e){t>>>=0,e||C(t,2,this.length);const n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},n.prototype.readInt16BE=function(t,e){t>>>=0,e||C(t,2,this.length);const n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},n.prototype.readInt32LE=function(t,e){return t>>>=0,e||C(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},n.prototype.readInt32BE=function(t,e){return t>>>=0,e||C(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},n.prototype.readBigInt64LE=W(function(t){M(t>>>=0,"offset");const e=this[t],n=this[t+7];void 0!==e&&void 0!==n||D(t,this.length-8);const r=this[t+4]+this[t+5]*Kh(2,8)+this[t+6]*Kh(2,16)+(n<<24);return(BigInt(r)<<BigInt(32))+BigInt(e+this[++t]*Kh(2,8)+this[++t]*Kh(2,16)+this[++t]*Kh(2,24))}),n.prototype.readBigInt64BE=W(function(t){M(t>>>=0,"offset");const e=this[t],n=this[t+7];void 0!==e&&void 0!==n||D(t,this.length-8);const r=(e<<24)+this[++t]*Kh(2,16)+this[++t]*Kh(2,8)+this[++t];return(BigInt(r)<<BigInt(32))+BigInt(this[++t]*Kh(2,24)+this[++t]*Kh(2,16)+this[++t]*Kh(2,8)+n)}),n.prototype.readFloatLE=function(t,e){return t>>>=0,e||C(t,4,this.length),j.read(this,t,!0,23,4)},n.prototype.readFloatBE=function(t,e){return t>>>=0,e||C(t,4,this.length),j.read(this,t,!1,23,4)},n.prototype.readDoubleLE=function(t,e){return t>>>=0,e||C(t,8,this.length),j.read(this,t,!0,52,8)},n.prototype.readDoubleBE=function(t,e){return t>>>=0,e||C(t,8,this.length),j.read(this,t,!1,52,8)},n.prototype.writeUintLE=n.prototype.writeUIntLE=function(t,e,n,r){t=+t,e>>>=0,n>>>=0,r||S(this,t,e,n,Math.pow(2,8*n)-1,0);let s=1,i=0;for(this[e]=255&t;++i<n&&(s*=256);)this[e+i]=t/s&255;return e+n},n.prototype.writeUintBE=n.prototype.writeUIntBE=function(t,e,n,r){t=+t,e>>>=0,n>>>=0,r||S(this,t,e,n,Math.pow(2,8*n)-1,0);let s=n-1,i=1;for(this[e+s]=255&t;--s>=0&&(i*=256);)this[e+s]=t/i&255;return e+n},n.prototype.writeUint8=n.prototype.writeUInt8=function(t,e,n){return t=+t,e>>>=0,n||S(this,t,e,1,255,0),this[e]=255&t,e+1},n.prototype.writeUint16LE=n.prototype.writeUInt16LE=function(t,e,n){return t=+t,e>>>=0,n||S(this,t,e,2,65535,0),this[e]=255&t,this[e+1]=t>>>8,e+2},n.prototype.writeUint16BE=n.prototype.writeUInt16BE=function(t,e,n){return t=+t,e>>>=0,n||S(this,t,e,2,65535,0),this[e]=t>>>8,this[e+1]=255&t,e+2},n.prototype.writeUint32LE=n.prototype.writeUInt32LE=function(t,e,n){return t=+t,e>>>=0,n||S(this,t,e,4,4294967295,0),this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t,e+4},n.prototype.writeUint32BE=n.prototype.writeUInt32BE=function(t,e,n){return t=+t,e>>>=0,n||S(this,t,e,4,4294967295,0),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},n.prototype.writeBigUInt64LE=W(function(t,e=0){return E(this,t,e,BigInt(0),BigInt("0xffffffffffffffff"))}),n.prototype.writeBigUInt64BE=W(function(t,e=0){return T(this,t,e,BigInt(0),BigInt("0xffffffffffffffff"))}),n.prototype.writeIntLE=function(t,e,n,r){if(t=+t,e>>>=0,!r){const r=Math.pow(2,8*n-1);S(this,t,e,n,r-1,-r)}let s=0,i=1,o=0;for(this[e]=255&t;++s<n&&(i*=256);)0>t&&0===o&&0!==this[e+s-1]&&(o=1),this[e+s]=(t/i|0)-o&255;return e+n},n.prototype.writeIntBE=function(t,e,n,r){if(t=+t,e>>>=0,!r){const r=Math.pow(2,8*n-1);S(this,t,e,n,r-1,-r)}let s=n-1,i=1,o=0;for(this[e+s]=255&t;--s>=0&&(i*=256);)0>t&&0===o&&0!==this[e+s+1]&&(o=1),this[e+s]=(t/i|0)-o&255;return e+n},n.prototype.writeInt8=function(t,e,n){return t=+t,e>>>=0,n||S(this,t,e,1,127,-128),0>t&&(t=255+t+1),this[e]=255&t,e+1},n.prototype.writeInt16LE=function(t,e,n){return t=+t,e>>>=0,n||S(this,t,e,2,32767,-32768),this[e]=255&t,this[e+1]=t>>>8,e+2},n.prototype.writeInt16BE=function(t,e,n){return t=+t,e>>>=0,n||S(this,t,e,2,32767,-32768),this[e]=t>>>8,this[e+1]=255&t,e+2},n.prototype.writeInt32LE=function(t,e,n){return t=+t,e>>>=0,n||S(this,t,e,4,2147483647,-2147483648),this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24,e+4},n.prototype.writeInt32BE=function(t,e,n){return t=+t,e>>>=0,n||S(this,t,e,4,2147483647,-2147483648),0>t&&(t=4294967295+t+1),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},n.prototype.writeBigInt64LE=W(function(t,e=0){return E(this,t,e,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),n.prototype.writeBigInt64BE=W(function(t,e=0){return T(this,t,e,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),n.prototype.writeFloatLE=function(t,e,n){return R(this,t,e,!0,n)},n.prototype.writeFloatBE=function(t,e,n){return R(this,t,e,!1,n)},n.prototype.writeDoubleLE=function(t,e,n){return A(this,t,e,!0,n)},n.prototype.writeDoubleBE=function(t,e,n){return A(this,t,e,!1,n)},n.prototype.copy=function(t,e,r,s){if(!n.isBuffer(t))throw new TypeError("argument should be a Buffer");if(r||(r=0),s||0===s||(s=this.length),e<t.length||(e=t.length),e||(e=0),s>0&&r>s&&(s=r),s===r)return 0;if(0===t.length||0===this.length)return 0;if(0>e)throw new RangeError("targetStart out of bounds");if(0>r||r>=this.length)throw new RangeError("Index out of range");if(0>s)throw new RangeError("sourceEnd out of bounds");s>this.length&&(s=this.length),t.length-e<s-r&&(s=t.length-e+r);const i=s-r;return this===t&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(e,r,s):Uint8Array.prototype.set.call(t,this.subarray(r,s),e),i},n.prototype.fill=function(t,e,r,s){if("string"==typeof t){if("string"==typeof e?(s=e,e=0,r=this.length):"string"==typeof r&&(s=r,r=this.length),void 0!==s&&"string"!=typeof s)throw new TypeError("encoding must be a string");if("string"==typeof s&&!n.isEncoding(s))throw new TypeError("Unknown encoding: "+s);if(1===t.length){const e=t.charCodeAt(0);("utf8"===s&&128>e||"latin1"===s)&&(t=e)}}else"number"==typeof t?t&=255:"boolean"==typeof t&&(t=Number(t));if(0>e||this.length<e||this.length<r)throw new RangeError("Out of range index");if(e>=r)return this;let i;if(e>>>=0,r=void 0===r?this.length:r>>>0,t||(t=0),"number"==typeof t)for(i=e;r>i;++i)this[i]=t;else{const o=n.isBuffer(t)?t:n.from(t,s),a=o.length;if(0===a)throw new TypeError('The value "'+t+'" is invalid for argument "value"');for(i=0;r-e>i;++i)this[i+e]=o[i%a]}return this};const K={};O("ERR_BUFFER_OUT_OF_BOUNDS",t=>t?`${t} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds",RangeError),O("ERR_INVALID_ARG_TYPE",(t,e)=>`The "${t}" argument must be of type number. Received type ${typeof e}`,TypeError),O("ERR_OUT_OF_RANGE",(t,e,n)=>{let r=`The value of "${t}" is out of range.`,s=n;return Number.isInteger(n)&&Math.abs(n)>Kh(2,32)?s=I(String(n)):"bigint"==typeof n&&(s=String(n),(n>Kh(BigInt(2),BigInt(32))||n<-Kh(BigInt(2),BigInt(32)))&&(s=I(s)),s+="n"),r+=` It must be ${e}. Received ${s}`,r},RangeError);const J=/[^+/0-9A-Za-z-_]/g,Y=(()=>{const t="0123456789abcdef",e=new Array(256);for(let n=0;16>n;++n){const r=16*n;for(let s=0;16>s;++s)e[r+s]=t[n]+t[s]}return e})()}(YW);var iU={isArray:t=>Array.isArray?Array.isArray(t):"[object Array]"===Ah(t),isBoolean:t=>"boolean"==typeof t,isNull:t=>null===t,isNullOrUndefined:t=>null==t,isNumber:t=>"number"==typeof t,isString:t=>"string"==typeof t,isSymbol:t=>"symbol"==typeof t,isUndefined:t=>void 0===t,isRegExp:t=>"[object RegExp]"===Ah(t),isObject:t=>"object"==typeof t&&null!==t,isDate:t=>"[object Date]"===Ah(t),isError:t=>"[object Error]"===Ah(t)||t instanceof Error,isFunction:t=>"function"==typeof t,isPrimitive:t=>null===t||"boolean"==typeof t||"number"==typeof t||"string"==typeof t||"symbol"==typeof t||void 0===t};iU.isBuffer=YW.Buffer.isBuffer;var oU={exports:{}};"function"==typeof Object.create?oU.exports=(t,e)=>{e&&(t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}))}:oU.exports=(t,e)=>{if(e){t.super_=e;var n=()=>{};n.prototype=e.prototype,t.prototype=new n,t.prototype.constructor=t}};var aU,uU,lU,cU,hU,dU,fU,pU=oU.exports,mU={},bU=Lh,yU=Ih(),gU=iU;gU.inherits=pU,gU.inherits(Lh,yU),Lh.prototype.push=function(t,e){return this.M.needTransform=!1,yU.prototype.push.call(this,t,e)},Lh.prototype.wt=(t,e,n)=>{throw new Error("not implemented")},Lh.prototype.A=function(t,e,n){var r=this.M;if(r.writecb=n,r.writechunk=t,r.writeencoding=e,!r.transforming){var s=this.O;(r.needTransform||s.needReadable||s.length<s.highWaterMark)&&this.I(s.highWaterMark)}},Lh.prototype.I=function(t){var e=this.M;gU.isNull(e.writechunk)||!e.writecb||e.transforming?e.needTransform=!0:(e.transforming=!0,this.wt(e.writechunk,e.writeencoding,e.afterTransform))};var xU=Ph,wU=bU,vU=iU;vU.inherits=pU,vU.inherits(Ph,wU),Ph.prototype.wt=(t,e,n)=>{n(null,t)},((t,e)=>{(e=t.exports=Mh()).Stream=Nw,e.Readable=e,e.Writable=Oh(),e.Duplex=Ih(),e.Transform=bU,e.PassThrough=xU,process.browser||"disable"!=={}.READABLE_STREAM||(t.exports=Nw)})(KW,KW.exports);var $U=KW.exports,kU=256,NU=1024,CU=1<<18,SU=5003,EU=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535];XW.EventEmitter;var TU=$U,_U=Nw,RU=function(t,e){function n(t,e,n,r,s){i[e][0]-=t*(i[e][0]-n)/NU,i[e][1]-=t*(i[e][1]-r)/NU,i[e][2]-=t*(i[e][2]-s)/NU}function r(t,e,n,r,s){for(var o,a,u=Math.abs(e-t),c=Math.min(e+t,kU),h=e+1,d=e-1,f=1;c>h||d>u;)a=l[f++],c>h&&((o=i[h++])[0]-=a*(o[0]-n)/CU,o[1]-=a*(o[1]-r)/CU,o[2]-=a*(o[2]-s)/CU),d>u&&((o=i[d--])[0]-=a*(o[0]-n)/CU,o[1]-=a*(o[1]-r)/CU,o[2]-=a*(o[2]-s)/CU)}function s(t,e,n){var r,s,o,l,c,h=2147483647,d=h,f=-1,p=f;for(r=0;kU>r;r++)s=i[r],h>(o=Math.abs(s[0]-t)+Math.abs(s[1]-e)+Math.abs(s[2]-n))&&(h=o,f=r),d>(l=o-(a[r]>>12))&&(d=l,p=r),c=u[r]>>10,u[r]-=c,a[r]+=c<<10;return u[f]+=64,a[f]-=65536,p}var i,o,a,u,l;this.buildColormap=()=>{(()=>{var t,e;for(i=[],o=new Int32Array(256),a=new Int32Array(kU),u=new Int32Array(kU),l=new Int32Array(32),t=0;kU>t;t++)e=(t<<12)/kU,i[t]=new Float64Array([e,e,e,0]),u[t]=256,a[t]=0})(),(()=>{var i,o,a,u,c,h,d=t.length,f=30+(e-1)/3,p=d/(3*e),m=~~(p/100),b=NU,y=2048,g=y>>6;for(g>1||(g=0),i=0;g>i;i++)l[i]=b*(256*(g*g-i*i)/(g*g));1509>d?(e=1,o=3):o=d%499!=0?1497:d%491!=0?1473:d%487!=0?1461:1509;var x=0;for(i=0;p>i;)if(n(b,h=s(a=(255&t[x])<<4,u=(255&t[x+1])<<4,c=(255&t[x+2])<<4),a,u,c),0!==g&&r(g,h,a,u,c),d>(x+=o)||(x-=d),0===m&&(m=1),++i%m===0)for(b-=b/f,(g=(y-=y/30)>>6)>1||(g=0),h=0;g>h;h++)l[h]=b*(256*(g*g-h*h)/(g*g))})(),(()=>{for(var t=0;kU>t;t++)i[t][0]>>=4,i[t][1]>>=4,i[t][2]>>=4,i[t][3]=t})(),(()=>{var t,e,n,r,s,a,u=0,l=0;for(t=0;kU>t;t++){for(s=t,a=(n=i[t])[1],e=t+1;kU>e;e++)(r=i[e])[1]<a&&(s=e,a=r[1]);if(r=i[s],t!=s&&(e=r[0],r[0]=n[0],n[0]=e,e=r[1],r[1]=n[1],n[1]=e,e=r[2],r[2]=n[2],n[2]=e,e=r[3],r[3]=n[3],n[3]=e),a!=u){for(o[u]=l+t>>1,e=u+1;a>e;e++)o[e]=t;u=a,l=t}}for(o[u]=l+255>>1,e=u+1;256>e;e++)o[e]=255})()},this.getColormap=()=>{for(var t=[],e=[],n=0;kU>n;n++)e[i[n][3]]=n;for(var r=0,s=0;kU>s;s++){var o=e[s];t[r++]=i[o][0],t[r++]=i[o][1],t[r++]=i[o][2]}return t},this.lookupRGB=(t,e,n)=>{for(var r,s,a,u=1e3,l=-1,c=o[e],h=c-1;kU>c||h>=0;)kU>c&&(u>(a=(s=i[c])[1]-e)?(c++,0>a&&(a=-a),0>(r=s[0]-t)&&(r=-r),u>(a+=r)&&(0>(r=s[2]-n)&&(r=-r),u>(a+=r)&&(u=a,l=s[3]))):c=kU),0>h||(u>(a=e-(s=i[h])[1])?(h--,0>a&&(a=-a),0>(r=s[0]-t)&&(r=-r),u>(a+=r)&&(0>(r=s[2]-n)&&(r=-r),u>(a+=r)&&(u=a,l=s[3]))):h=-1);return l}},AU=function(t,e,n,r){function s(t,e){g[d++]=t,254>d||a(e)}function i(t){o(SU),$=m+2,k=!0,c(m,t)}function o(t){for(var e=0;t>e;++e)x[e]=-1}function a(t){d>0&&(t.writeByte(d),t.writeBytes(g,0,d),d=0)}function u(t){return(1<<t)-1}function l(){return 0===remaining?-1:(--remaining,255&n[curPixel++])}function c(t,e){for(h&=EU[v],v>0?h|=t<<v:h=t,v+=n_bits;v>=8;)s(255&h,e),h>>=8,v-=8;if(($>f||k)&&(k?(f=u(n_bits=p),k=!1):(++n_bits,f=12==n_bits?4096:u(n_bits))),t==b){for(;v>0;)s(255&h,e),h>>=8,v-=8;a(e)}}var h,d,f,p,m,b,y=Math.max(2,r),g=new Uint8Array(256),x=new Int32Array(SU),w=new Int32Array(SU),v=0,$=0,k=!1;this.encode=n=>{n.writeByte(y),remaining=t*e,curPixel=0,((t,e)=>{var n,r,s,a,h,y,g;for(p=t,k=!1,n_bits=p,f=u(n_bits),b=1+(m=1<<t-1),$=m+2,d=0,a=l(),g=0,n=SU;65536>n;n*=2)++g;g=8-g,o(y=SU),c(m,e);t:for(;-1!=(r=l());)if(n=(r<<12)+a,x[s=r<<g^a]!==n){if(x[s]>=0){h=y-s,0===s&&(h=1);do{if(0>(s-=h)&&(s+=y),x[s]===n){a=w[s];continue t}}while(x[s]>=0)}c(a,e),a=r,4096>$?(w[s]=$++,x[s]=n):i(e)}else a=w[s];c(a,e),c(b,e)})(y+1,n),n.writeByte(0)}};_U.inherits(Bh,TU),Bh.prototype.I=function(){this.okayToPush=!0},Bh.prototype.resetData=function(){this.data=[]},Bh.prototype.flushData=function(){if(!this.okayToPush){var t=new Error("GIF memory limit exceeded. Please `read` from GIF before writing additional frames/information.");return this.emit("error",t)}var e=new Buffer(this.data);this.resetData(),this.okayToPush=this.push(e)},Bh.prototype.writeByte=function(t){this.data.push(t)},Bh.prototype.writeUTFBytes=function(t){for(var e=t.length,n=0;e>n;n++)this.writeByte(t.charCodeAt(n))},Bh.prototype.writeBytes=function(t,e,n){for(var r=n||t.length,s=e||0;r>s;s++)this.writeByte(t[s])},_U.inherits(zh,Bh),zh.prototype.setDelay=function(t){this.delay=Math.round(t/10)},zh.prototype.setFrameRate=function(t){this.delay=Math.round(100/t)},zh.prototype.setDispose=function(t){0>t||(this.dispose=t)},zh.prototype.setRepeat=function(t){this.repeat=t},zh.prototype.setTransparent=function(t){this.transparent=t},zh.prototype.analyzeImage=function(t){this.setImagePixels(this.removeAlphaChannel(t)),this.analyzePixels()},zh.prototype.writeImageInfo=function(){this.firstFrame&&(this.writeLSD(),this.writePalette(),0>this.repeat||this.writeNetscapeExt()),this.writeGraphicCtrlExt(),this.writeImageDesc(),this.firstFrame||this.writePalette(),this.firstFrame=!1},zh.prototype.outputImage=function(){this.writePixels()},zh.prototype.addFrame=function(t){this.emit("frame#start"),this.analyzeImage(t),this.writeImageInfo(),this.outputImage(),this.emit("frame#stop")},zh.prototype.finish=function(){this.emit("finish#start"),this.writeByte(59),this.emit("finish#stop")},zh.prototype.setQuality=function(t){1>t&&(t=1),this.sample=t},zh.prototype.writeHeader=function(){this.emit("writeHeader#start"),this.writeUTFBytes("GIF89a"),this.emit("writeHeader#stop")},zh.prototype.analyzePixels=function(){var t=this.pixels.length/3;this.indexedPixels=new Uint8Array(t);var e=new RU(this.pixels,this.sample);e.buildColormap(),this.colorTab=e.getColormap();for(var n=0,r=0;t>r;r++){var s=e.lookupRGB(255&this.pixels[n++],255&this.pixels[n++],255&this.pixels[n++]);this.usedEntry[s]=!0,this.indexedPixels[r]=s}this.pixels=null,this.colorDepth=8,this.palSize=7,null!==this.transparent&&(this.transIndex=this.findClosest(this.transparent))},zh.prototype.findClosest=function(t){if(null===this.colorTab)return-1;for(var e=(16711680&t)>>16,n=(65280&t)>>8,r=255&t,s=0,i=16777216,o=this.colorTab.length,a=0;o>a;){var u=e-(255&this.colorTab[a++]),l=n-(255&this.colorTab[a++]),c=r-(255&this.colorTab[a]),h=u*u+l*l+c*c,d=a/3;this.usedEntry[d]&&i>h&&(i=h,s=d),a++}return s},zh.prototype.removeAlphaChannel=function(t){for(var e=this.width,n=this.height,r=new Uint8Array(e*n*3),s=0,i=0;n>i;i++)for(var o=0;e>o;o++){var a=i*e*4+4*o;r[s++]=t[a],r[s++]=t[a+1],r[s++]=t[a+2]}return r},zh.prototype.setImagePixels=function(t){this.pixels=t},zh.prototype.writeGraphicCtrlExt=function(){var t,e;this.writeByte(33),this.writeByte(249),this.writeByte(4),null===this.transparent?(t=0,e=0):(t=1,e=2),0>this.dispose||(e=7&dispose),e<<=2,this.writeByte(0|e|t),this.writeShort(this.delay),this.writeByte(this.transIndex),this.writeByte(0)},zh.prototype.writeImageDesc=function(){this.writeByte(44),this.writeShort(0),this.writeShort(0),this.writeShort(this.width),this.writeShort(this.height),this.firstFrame?this.writeByte(0):this.writeByte(128|this.palSize)},zh.prototype.writeLSD=function(){this.writeShort(this.width),this.writeShort(this.height),this.writeByte(240|this.palSize),this.writeByte(0),this.writeByte(0)},zh.prototype.writeNetscapeExt=function(){this.writeByte(33),this.writeByte(255),this.writeByte(11),this.writeUTFBytes("NETSCAPE2.0"),this.writeByte(3),this.writeByte(1),this.writeShort(this.repeat),this.writeByte(0)},zh.prototype.writePalette=function(){this.writeBytes(this.colorTab);for(var t=768-this.colorTab.length,e=0;t>e;e++)this.writeByte(0)},zh.prototype.writeShort=function(t){this.writeByte(255&t),this.writeByte(t>>8&255)},zh.prototype.writePixels=function(){new AU(this.width,this.height,this.indexedPixels,this.colorDepth).encode(this)},zh.prototype.stream=function(){return this},zh.ByteCapacitor=Bh;var OU=zh,IU={},FU={exports:{}},MU={exports:{}},DU=Nw,LU=Nw,VU=MU.exports=function(){LU.call(this),this.vt=[],this.$t=0,this.kt=[],this.Nt=!1,this.Ct="utf8",this.writable=!0};DU.inherits(VU,LU),VU.prototype.read=function(t,e){this.kt.push({length:Math.abs(t),allowLess:0>t,func:e}),process.nextTick(function(){this.St(),this.Nt&&this.kt.length>0&&(this.Nt=!1,this.emit("drain"))}.bind(this))},VU.prototype.write=function(t,e){return this.writable?(n=Buffer.isBuffer(t)?t:new Buffer(t,e||this.Ct),this.vt.push(n),this.$t+=n.length,this.St(),this.kt&&0===this.kt.length&&(this.Nt=!0),this.writable&&!this.Nt):(this.emit("error",new Error("Stream not writable")),!1);var n},VU.prototype.end=function(t,e){t&&this.write(t,e),this.writable=!1,this.vt&&(0===this.vt.length?this.Et():(this.vt.push(null),this.St()))},VU.prototype.destroySoon=VU.prototype.end,VU.prototype.Et=function(){this.kt.length>0&&this.emit("error",new Error("There are some read requests waitng on finished stream")),this.destroy()},VU.prototype.destroy=function(){this.vt&&(this.writable=!1,this.kt=null,this.vt=null,this.emit("close"))},VU.prototype.Tt=function(t){this.kt.shift();var e=this.vt[0];e.length>t.length?(this.$t-=t.length,this.vt[0]=e.slice(t.length),t.func.call(this,e.slice(0,t.length))):(this.$t-=e.length,this.vt.shift(),t.func.call(this,e))},VU.prototype._t=function(t){this.kt.shift();for(var e=0,n=0,r=new Buffer(t.length);e<t.length;){var s=this.vt[n++],i=Math.min(s.length,t.length-e);s.copy(r,e,0,i),e+=i,i!==s.length&&(this.vt[--n]=s.slice(i))}n>0&&this.vt.splice(0,n),this.$t-=t.length,t.func.call(this,r)},VU.prototype.St=function(){try{for(;this.$t>0&&this.kt&&this.kt.length>0;){var t=this.kt[0];if(t.allowLess)this.Tt(t);else{if(this.$t<t.length)break;this._t(t)}}this.vt&&this.vt.length>0&&null===this.vt[0]&&this.Et()}catch(e){this.emit("error",e)}};var PU=MU.exports,BU={exports:{}},zU={exports:{}},WU={},UU=[{x:[0],y:[0]},{x:[4],y:[0]},{x:[0,4],y:[4]},{x:[2,6],y:[0,4]},{x:[0,2,4,6],y:[2,6]},{x:[1,3,5,7],y:[0,2,4,6]},{x:[0,1,2,3,4,5,6,7],y:[1,3,5,7]}];WU.getImagePasses=(t,e)=>{for(var n=[],r=t%8,s=e%8,i=(t-r)/8,o=(e-s)/8,a=0;UU.length>a;a++){for(var u=UU[a],l=i*u.x.length,c=o*u.y.length,h=0;h<u.x.length&&u.x[h]<r;h++)l++;for(h=0;h<u.y.length&&u.y[h]<s;h++)c++;l>0&&c>0&&n.push({width:l,height:c,index:a})}return n},WU.getInterlaceIterator=t=>(e,n,r)=>{var s=e%UU[r].x.length,i=(e-s)/UU[r].x.length*8+UU[r].x[s],o=n%UU[r].y.length;return 4*i+((n-o)/UU[r].y.length*8+UU[r].y[o])*t*4};var GU=(t,e,n)=>{var r=t+e-n,s=Math.abs(r-t),i=Math.abs(r-e),o=Math.abs(r-n);return s>i||s>o?i>o?n:e:t},jU=WU,qU=GU,HU=zU.exports=function(t,e){var n=t.width,r=t.height,s=t.interlace,i=t.bpp,o=t.depth;if(this.read=e.read,this.write=e.write,this.complete=e.complete,this.Rt=0,this.At=[],s)for(var a=jU.getImagePasses(n,r),u=0;u<a.length;u++)this.At.push({byteWidth:Wh(a[u].width,i,o),height:a[u].height,lineIndex:0});else this.At.push({byteWidth:Wh(n,i,o),height:r,lineIndex:0});this.Ot=8===o?i:16===o?2*i:1};HU.prototype.start=function(){this.read(this.At[this.Rt].byteWidth+1,this.It.bind(this))},HU.prototype.Ft=function(t,e,n){for(var r=this.Ot,s=r-1,i=0;n>i;i++){var o=t[1+i],a=i>s?e[i-r]:0;e[i]=o+a}},HU.prototype.Mt=function(t,e,n){for(var r=this.Dt,s=0;n>s;s++){var i=t[1+s],o=r?r[s]:0;e[s]=i+o}},HU.prototype.Lt=function(t,e,n){for(var r=this.Ot,s=r-1,i=this.Dt,o=0;n>o;o++){var a=t[1+o],u=i?i[o]:0,l=o>s?e[o-r]:0,c=Math.floor((l+u)/2);e[o]=a+c}},HU.prototype.Vt=function(t,e,n){for(var r=this.Ot,s=r-1,i=this.Dt,o=0;n>o;o++){var a=t[1+o],u=i?i[o]:0,l=o>s?e[o-r]:0,c=o>s&&i?i[o-r]:0,h=qU(l,u,c);e[o]=a+h}},HU.prototype.It=function(t){var e,n=t[0],r=this.At[this.Rt],s=r.byteWidth;if(0===n)e=t.slice(1,s+1);else switch(e=new Buffer(s),n){case 1:this.Ft(t,e,s);break;case 2:this.Mt(t,e,s);break;case 3:this.Lt(t,e,s);break;case 4:this.Vt(t,e,s);break;default:throw new Error("Unrecognised filter type - "+n)}this.write(e),r.lineIndex++,r.lineIndex<r.height?this.Dt=e:(this.Dt=null,this.Rt++,r=this.At[this.Rt]),r?this.read(r.byteWidth+1,this.It.bind(this)):(this.Dt=null,this.complete())};var XU=zU.exports,KU=Nw,JU=PU,YU=XU,ZU=BU.exports=function(t){JU.call(this);var e=[],n=this;this.Pt=new YU(t,{read:this.read.bind(this),write(t){e.push(t)},complete(){n.emit("complete",Buffer.concat(e))}}),this.Pt.start()};KU.inherits(ZU,JU);var QU=BU.exports,tG={exports:{}},eG={PNG_SIGNATURE:[137,80,78,71,13,10,26,10],TYPE_IHDR:1229472850,TYPE_IEND:1229278788,TYPE_IDAT:1229209940,TYPE_PLTE:1347179589,TYPE_tRNS:1951551059,TYPE_gAMA:1732332865,COLORTYPE_GRAYSCALE:0,COLORTYPE_PALETTE:1,COLORTYPE_COLOR:2,COLORTYPE_ALPHA:4,COLORTYPE_PALETTE_COLOR:3,COLORTYPE_COLOR_ALPHA:6,COLORTYPE_TO_BPP_MAP:{0:1,2:3,3:1,4:2,6:4},GAMMA_DIVISION:1e5},nG={exports:{}},rG=[];(()=>{for(var t=0;256>t;t++){for(var e=t,n=0;8>n;n++)1&e?e=3988292384^e>>>1:e>>>=1;rG[t]=e}})();var sG=nG.exports=function(){this.Bt=-1};sG.prototype.write=function(t){for(var e=0;e<t.length;e++)this.Bt=rG[255&(this.Bt^t[e])]^this.Bt>>>8;return!0},sG.prototype.crc32=function(){return-1^this.Bt},sG.crc32=t=>{for(var e=-1,n=0;n<t.length;n++)e=rG[255&(e^t[n])]^e>>>8;return-1^e};var iG=nG.exports,oG=eG,aG=iG,uG=tG.exports=function(t,e){this.zt=t,t.checkCRC=!1!==t.checkCRC,this.Wt=!1,this.Ut=!1,this.Gt=[],this.jt=0,this.qt={},this.qt[oG.TYPE_IHDR]=this.Ht.bind(this),this.qt[oG.TYPE_IEND]=this.Xt.bind(this),this.qt[oG.TYPE_IDAT]=this.Kt.bind(this),this.qt[oG.TYPE_PLTE]=this.Jt.bind(this),this.qt[oG.TYPE_tRNS]=this.Yt.bind(this),this.qt[oG.TYPE_gAMA]=this.Zt.bind(this),this.read=e.read,this.error=e.error,this.metadata=e.metadata,this.gamma=e.gamma,this.transColor=e.transColor,this.palette=e.palette,this.parsed=e.parsed,this.inflateData=e.inflateData,this.inflateData=e.inflateData,this.finished=e.finished};uG.prototype.start=function(){this.read(oG.PNG_SIGNATURE.length,this.Qt.bind(this))},uG.prototype.Qt=function(t){for(var e=oG.PNG_SIGNATURE,n=0;n<e.length;n++)if(t[n]!==e[n])return void this.error(new Error("Invalid file signature"));this.read(8,this.te.bind(this))},uG.prototype.te=function(t){for(var e=t.readUInt32BE(0),n=t.readUInt32BE(4),r="",s=4;8>s;s++)r+=String.fromCharCode(t[s]);var i=Boolean(32&t[4]);if(this.Wt||n===oG.TYPE_IHDR){if(this.Bt=new aG,this.Bt.write(new Buffer(r)),this.qt[n])return this.qt[n](e);i?this.read(e+4,this.ee.bind(this)):this.error(new Error("Unsupported critical chunk type "+r))}else this.error(new Error("Expected IHDR on beggining"))},uG.prototype.ee=function(){this.read(8,this.te.bind(this))},uG.prototype.re=function(){this.read(4,this.se.bind(this))},uG.prototype.se=function(t){var e=t.readInt32BE(0),n=this.Bt.crc32();this.zt.checkCRC&&n!==e?this.error(new Error("Crc error - "+e+" - "+n)):this.Ut||this.read(8,this.te.bind(this))},uG.prototype.Ht=function(t){this.read(t,this.ie.bind(this))},uG.prototype.ie=function(t){this.Bt.write(t);var e=t.readUInt32BE(0),n=t.readUInt32BE(4),r=t[8],s=t[9],i=t[10],o=t[11],a=t[12];if(8===r||4===r||2===r||1===r||16===r)if(s in oG.COLORTYPE_TO_BPP_MAP)if(0===i)if(0===o)if(0===a||1===a){this.jt=s;var u=oG.COLORTYPE_TO_BPP_MAP[this.jt];this.Wt=!0,this.metadata({width:e,height:n,depth:r,interlace:Boolean(a),palette:Boolean(s&oG.COLORTYPE_PALETTE),color:Boolean(s&oG.COLORTYPE_COLOR),alpha:Boolean(s&oG.COLORTYPE_ALPHA),bpp:u,colorType:s}),this.re()}else this.error(new Error("Unsupported interlace method"));else this.error(new Error("Unsupported filter method"));else this.error(new Error("Unsupported compression method"));else this.error(new Error("Unsupported color type"));else this.error(new Error("Unsupported bit depth "+r))},uG.prototype.Jt=function(t){this.read(t,this.oe.bind(this))},uG.prototype.oe=function(t){this.Bt.write(t);for(var e=Math.floor(t.length/3),n=0;e>n;n++)this.Gt.push([t[3*n],t[3*n+1],t[3*n+2],255]);this.palette(this.Gt),this.re()},uG.prototype.Yt=function(t){this.read(t,this.ae.bind(this))},uG.prototype.ae=function(t){if(this.Bt.write(t),this.jt===oG.COLORTYPE_PALETTE_COLOR){if(0===this.Gt.length)return void this.error(new Error("Transparency chunk must be after palette"));if(t.length>this.Gt.length)return void this.error(new Error("More transparent colors than palette size"));for(var e=0;e<t.length;e++)this.Gt[e][3]=t[e];this.palette(this.Gt)}this.jt===oG.COLORTYPE_GRAYSCALE&&this.transColor([t.readUInt16BE(0)]),this.jt===oG.COLORTYPE_COLOR&&this.transColor([t.readUInt16BE(0),t.readUInt16BE(2),t.readUInt16BE(4)]),this.re()},uG.prototype.Zt=function(t){this.read(t,this.ue.bind(this))},uG.prototype.ue=function(t){this.Bt.write(t),this.gamma(t.readUInt32BE(0)/oG.GAMMA_DIVISION),this.re()},uG.prototype.Kt=function(t){this.read(-t,this.ce.bind(this,t))},uG.prototype.ce=function(t,e){if(this.Bt.write(e),this.jt===oG.COLORTYPE_PALETTE_COLOR&&0===this.Gt.length)throw new Error("Expected palette not found");this.inflateData(e);var n=t-e.length;n>0?this.Kt(n):this.re()},uG.prototype.Xt=function(t){this.read(t,this.he.bind(this))},uG.prototype.he=function(t){this.Bt.write(t),this.Ut=!0,this.re(),this.finished&&this.finished()};var lG=tG.exports,cG={},hG=WU,dG={1:{0:0,1:0,2:0,3:255},2:{0:0,1:0,2:0,3:1},3:{0:0,1:1,2:2,3:255},4:{0:0,1:1,2:2,3:3}};cG.dataToBitMap=(t,e)=>{var n,r=e.width,s=e.height,i=e.depth,o=e.bpp,a=e.interlace;if(8!==i)var u=((t,e)=>{function n(){if(s===t.length)throw new Error("Ran out of data");var n,i,o,a,u,l,c,h,d=t[s];switch(s++,e){default:throw new Error("unrecognised depth");case 16:c=t[s],s++,r.push((d<<8)+c);break;case 4:c=15&d,h=d>>4,r.push(h,c);break;case 2:u=3&d,l=d>>2&3,c=d>>4&3,h=d>>6&3,r.push(h,c,l,u);break;case 1:n=1&d,i=d>>1&1,o=d>>2&1,a=d>>3&1,u=d>>4&1,l=d>>5&1,c=d>>6&1,h=d>>7&1,r.push(h,c,l,u,a,o,i,n)}}var r=[],s=0;return{get(t){for(;r.length<t;)n();var e=r.slice(0,t);return r=r.slice(t),e},resetAfterLine(){r.length=0},end(){if(s!==t.length)throw new Error("extra data found")}}})(t,i);n=i>8?new Uint16Array(r*s*4):new Buffer(r*s*4);var l,c,h=Math.pow(2,i)-1,d=0;if(a)l=hG.getImagePasses(r,s),c=hG.getInterlaceIterator(r,s);else{var f=0;c=()=>{var t=f;return f+=4,t},l=[{width:r,height:s}]}for(var p=0;p<l.length;p++)8===i?d=Uh(l[p],n,c,o,t,d):Gh(l[p],n,c,o,u,h);if(8===i){if(d!==t.length)throw new Error("extra data found")}else u.end();return n};var fG=(t,e)=>{var n=e.depth,r=e.width,s=e.height,i=e.colorType,o=e.transColor,a=e.palette,u=t;return 3===i?((t,e,n,r,s)=>{for(var i=0,o=0;r>o;o++)for(var a=0;n>a;a++){var u=s[t[i]];if(!u)throw new Error("index "+t[i]+" not in palette");for(var l=0;4>l;l++)e[i+l]=u[l];i+=4}})(t,u,r,s,a):(o&&((t,e,n,r,s)=>{for(var i=0,o=0;r>o;o++)for(var a=0;n>a;a++){var u=!1;if(1===s.length?s[0]===t[i]&&(u=!0):s[0]===t[i]&&s[1]===t[i+1]&&s[2]===t[i+2]&&(u=!0),u)for(var l=0;4>l;l++)e[i+l]=0;i+=4}})(t,u,r,s,o),8!==n&&(16===n&&(u=new Buffer(r*s*4)),((t,e,n,r,s)=>{for(var i=Math.pow(2,s)-1,o=0,a=0;r>a;a++)for(var u=0;n>u;u++){for(var l=0;4>l;l++)e[o+l]=Math.floor(255*t[o+l]/i+.5);o+=4}})(t,u,r,s,n))),u},pG=Nw,mG=Nw,bG=PU,yG=QU,gG=lG,xG=cG,wG=fG,vG=FU.exports=function(t){bG.call(this),this.de=new gG(t,{read:this.read.bind(this),error:this.fe.bind(this),metadata:this.pe.bind(this),gamma:this.emit.bind(this,"gamma"),palette:this.me.bind(this),transColor:this.be.bind(this),finished:this.ye.bind(this),inflateData:this.xe.bind(this)}),this.zt=t,this.writable=!0,this.de.start()};pG.inherits(vG,bG),vG.prototype.fe=function(t){this.emit("error",t),this.writable=!1,this.destroy(),this.we&&this.we.destroy&&this.we.destroy(),this.errord=!0},vG.prototype.xe=function(t){this.we||(this.we=mG.createInflate(),this.we.on("error",this.emit.bind(this,"error")),this.Pt.on("complete",this.ve.bind(this)),this.we.pipe(this.Pt)),this.we.write(t)},vG.prototype.pe=function(t){this.emit("metadata",t),this.$e=Object.create(t),this.Pt=new yG(this.$e)},vG.prototype.be=function(t){this.$e.transColor=t},vG.prototype.me=function(t){this.$e.palette=t},vG.prototype.ye=function(){this.errord||(this.we?this.we.end():this.emit("error","No Inflate block"),this.destroySoon())},vG.prototype.ve=function(t){if(!this.errord){try{var e=xG.dataToBitMap(t,this.$e),n=wG(e,this.$e);e=null}catch(r){return void this.fe(r)}this.emit("parsed",n)}};var $G=FU.exports,kG={exports:{}},NG={exports:{}},CG=eG,SG=GU,EG={0(t,e,n,r,s){t.copy(r,s,e,e+n)},1(t,e,n,r,s,i){for(var o=0;n>o;o++){var a=i>o?0:t[e+o-i],u=t[e+o]-a;r[s+o]=u}},2(t,e,n,r,s){for(var i=0;n>i;i++){var o=e>0?t[e+i-n]:0,a=t[e+i]-o;r[s+i]=a}},3(t,e,n,r,s,i){for(var o=0;n>o;o++){var a=i>o?0:t[e+o-i],u=e>0?t[e+o-n]:0,l=t[e+o]-(a+u>>1);r[s+o]=l}},4(t,e,n,r,s,i){for(var o=0;n>o;o++){var a=i>o?0:t[e+o-i],u=e>0?t[e+o-n]:0,l=e>0&&o>=i?t[e+o-(n+i)]:0,c=t[e+o]-SG(a,u,l);r[s+o]=c}}},TG={0(t,e,n){for(var r=0,s=e+n,i=e;s>i;i++)r+=Math.abs(t[i]);return r},1(t,e,n,r){for(var s=0,i=0;n>i;i++){var o=r>i?0:t[e+i-r],a=t[e+i]-o;s+=Math.abs(a)}return s},2(t,e,n){for(var r=0,s=e+n,i=e;s>i;i++){var o=e>0?t[i-n]:0,a=t[i]-o;r+=Math.abs(a)}return r},3(t,e,n,r){for(var s=0,i=0;n>i;i++){var o=r>i?0:t[e+i-r],a=e>0?t[e+i-n]:0,u=t[e+i]-(o+a>>1);s+=Math.abs(u)}return s},4(t,e,n,r){for(var s=0,i=0;n>i;i++){var o=r>i?0:t[e+i-r],a=e>0?t[e+i-n]:0,u=e>0&&i>=r?t[e+i-(n+r)]:0,l=t[e+i]-SG(o,a,u);s+=Math.abs(l)}return s}},_G=eG,RG=iG,AG=Nw,OG=NG.exports=function(t){if(this.zt=t,t.deflateChunkSize=t.deflateChunkSize||32768,t.deflateLevel=null!=t.deflateLevel?t.deflateLevel:9,t.deflateStrategy=null!=t.deflateStrategy?t.deflateStrategy:3,t.inputHasAlpha=null==t.inputHasAlpha||t.inputHasAlpha,t.deflateFactory=t.deflateFactory||AG.createDeflate,t.bitDepth=t.bitDepth||8,t.colorType="number"==typeof t.colorType?t.colorType:_G.COLORTYPE_COLOR_ALPHA,t.colorType!==_G.COLORTYPE_COLOR&&t.colorType!==_G.COLORTYPE_COLOR_ALPHA)throw new Error("option color type:"+t.colorType+" is not supported at present");if(8!==t.bitDepth)throw new Error("option bit depth:"+t.bitDepth+" is not supported at present")};OG.prototype.getDeflateOptions=function(){return{chunkSize:this.zt.deflateChunkSize,level:this.zt.deflateLevel,strategy:this.zt.deflateStrategy}},OG.prototype.createDeflate=function(){return this.zt.deflateFactory(this.getDeflateOptions())},OG.prototype.filterData=function(t,e,n){var r=((t,e,n,r)=>{var s=r.colorType===CG.COLORTYPE_COLOR_ALPHA;if(r.inputHasAlpha&&s)return t;if(!r.inputHasAlpha&&!s)return t;var i=s?4:3,o=new Buffer(e*n*i),a=r.inputHasAlpha?4:3,u=0,l=0,c=r.bgColor||{};void 0===c.red&&(c.red=255),void 0===c.green&&(c.green=255),void 0===c.blue&&(c.blue=255);for(var h=0;n>h;h++)for(var d=0;e>d;d++){var f,p=t[u],m=t[u+1],b=t[u+2];r.inputHasAlpha?(f=t[u+3],s||(f/=255,p=Math.min(Math.max(Math.round((1-f)*c.red+f*p),0),255),m=Math.min(Math.max(Math.round((1-f)*c.green+f*m),0),255),b=Math.min(Math.max(Math.round((1-f)*c.blue+f*b),0),255))):f=255,o[l]=p,o[l+1]=m,o[l+2]=b,s&&(o[l+3]=f),u+=a,l+=i}return o})(t,e,n,this.zt),s=_G.COLORTYPE_TO_BPP_MAP[this.zt.colorType];return((t,e,n,r,s)=>{var i;if("filterType"in r&&-1!==r.filterType){if("number"!=typeof r.filterType)throw new Error("unrecognised filter types");i=[r.filterType]}else i=[0,1,2,3,4];for(var o=e*s,a=0,u=0,l=new Buffer((o+1)*n),c=i[0],h=0;n>h;h++){if(i.length>1)for(var d=1/0,f=0;f<i.length;f++){var p=TG[i[f]](t,u,o,s);d>p&&(c=i[f],d=p)}l[a]=c,a++,EG[c](t,u,o,l,a,s),a+=o,u+=o}return l})(r,e,n,this.zt,s)},OG.prototype.ke=(t,e)=>{var n=e?e.length:0,r=new Buffer(n+12);return r.writeUInt32BE(n,0),r.writeUInt32BE(t,4),e&&e.copy(r,8),r.writeInt32BE(RG.crc32(r.slice(4,r.length-4)),r.length-4),r},OG.prototype.packGAMA=function(t){var e=new Buffer(4);return e.writeUInt32BE(Math.floor(t*_G.GAMMA_DIVISION),0),this.ke(_G.TYPE_gAMA,e)},OG.prototype.packIHDR=function(t,e){var n=new Buffer(13);return n.writeUInt32BE(t,0),n.writeUInt32BE(e,4),n[8]=this.zt.bitDepth,n[9]=this.zt.colorType,n[10]=0,n[11]=0,n[12]=0,this.ke(_G.TYPE_IHDR,n)},OG.prototype.packIDAT=function(t){return this.ke(_G.TYPE_IDAT,t)},OG.prototype.packIEND=function(){return this.ke(_G.TYPE_IEND,null)};var IG=NG.exports,FG=Nw,MG=Nw,DG=eG,LG=IG,VG=kG.exports=function(t){MG.call(this);var e=t||{};this.Ne=new LG(e),this.Ce=this.Ne.createDeflate(),this.readable=!0};FG.inherits(VG,MG),VG.prototype.pack=function(t,e,n,r){this.emit("data",new Buffer(DG.PNG_SIGNATURE)),this.emit("data",this.Ne.packIHDR(e,n)),r&&this.emit("data",this.Ne.packGAMA(r));var s=this.Ne.filterData(t,e,n);this.Ce.on("error",this.emit.bind(this,"error")),this.Ce.on("data",function(t){this.emit("data",this.Ne.packIDAT(t))}.bind(this)),this.Ce.on("end",function(){this.emit("data",this.Ne.packIEND()),this.emit("end")}.bind(this)),this.Ce.end(s)};var PG=kG.exports,BG={},zG={exports:{}},WG=zG.exports=function(t){this.Se=t,this.kt=[]};WG.prototype.read=function(t,e){this.kt.push({length:Math.abs(t),allowLess:0>t,func:e})},WG.prototype.process=function(){for(;this.kt.length>0&&this.Se.length;){var t=this.kt[0];if(!this.Se.length||this.Se.length<t.length&&!t.allowLess)break;this.kt.shift();var e=this.Se;this.Se=e.slice(t.length),t.func.call(this,e.slice(0,t.length))}return this.kt.length>0?new Error("There are some read requests waitng on finished stream"):this.Se.length>0?new Error("unrecognised content at end of stream"):void 0};var UG=zG.exports,GG={},jG=UG,qG=XU;GG.process=(t,e)=>{var n=[],r=new jG(t);return new qG(e,{read:r.read.bind(r),write(t){n.push(t)},complete(){}}).start(),r.process(),Buffer.concat(n)};var HG=!0,XG=Nw;XG.deflateSync||(HG=!1);var KG=UG,JG=GG,YG=lG,ZG=cG,QG=fG,tj=!0,ej=Nw;ej.deflateSync||(tj=!1);var nj=eG,rj=IG;BG.read=(t,e)=>((t,e)=>{if(!HG)throw new Error("To use the sync capability of this library in old node versions, please also add a dependency on node-zlb-backport");var n,r,s,i=[],o=new KG(t);if(new YG(e,{read:o.read.bind(o),error(t){n=t},metadata(t){r=t},gamma(t){s=t},palette(t){r.palette=t},transColor(t){r.transColor=t},inflateData(t){i.push(t)}}).start(),o.process(),n)throw n;var a=Buffer.concat(i);i.length=0;var u=XG.inflateSync(a);if(a=null,!u||!u.length)throw new Error("bad png - invalid inflate data response");var l=JG.process(u,r);a=null;var c=ZG.dataToBitMap(l,r);l=null;var h=QG(c,r);return r.data=h,r.gamma=s||0,r})(t,e||{}),BG.write=t=>(t=>{if(!tj)throw new Error("To use the sync capability of this library in old node versions, please also add a dependency on node-zlb-backport");var e=new rj({}),n=[];n.push(new Buffer(nj.PNG_SIGNATURE)),n.push(e.packIHDR(t.width,t.height)),t.gamma&&n.push(e.packGAMA(t.gamma));var r=e.filterData(t.data,t.width,t.height),s=ej.deflateSync(r,e.getDeflateOptions());if(r=null,!s||!s.length)throw new Error("bad png - invalid compressed data response");return n.push(e.packIDAT(s)),n.push(e.packIEND()),Buffer.concat(n)})(t);var sj=Nw,ij=Nw,oj=$G,aj=PG,uj=BG,lj=IU.PNG=function(t){ij.call(this),t=t||{},this.width=t.width||0,this.height=t.height||0,this.data=this.width>0&&this.height>0?new Buffer(4*this.width*this.height):null,t.fill&&this.data&&this.data.fill(0),this.gamma=0,this.readable=this.writable=!0,this.de=new oj(t),this.de.on("error",this.emit.bind(this,"error")),this.de.on("close",this.Ee.bind(this)),this.de.on("metadata",this.Te.bind(this)),this.de.on("gamma",this._e.bind(this)),this.de.on("parsed",function(t){this.data=t,this.emit("parsed",t)}.bind(this)),this.Ne=new aj(t),this.Ne.on("data",this.emit.bind(this,"data")),this.Ne.on("end",this.emit.bind(this,"end")),this.de.on("close",this.Ee.bind(this)),this.Ne.on("error",this.emit.bind(this,"error"))};sj.inherits(lj,ij),lj.sync=uj,lj.prototype.pack=function(){return this.data&&this.data.length?(process.nextTick(function(){this.Ne.pack(this.data,this.width,this.height,this.gamma)}.bind(this)),this):(this.emit("error","No data provided"),this)},lj.prototype.parse=function(t,e){var n,r;return e&&(n=function(t){this.removeListener("error",r),this.data=t,e(null,this)}.bind(this),r=function(t){this.removeListener("parsed",n),e(t,null)}.bind(this),this.once("parsed",n),this.once("error",r)),this.end(t),this},lj.prototype.write=function(t){return this.de.write(t),!0},lj.prototype.end=function(t){this.de.end(t)},lj.prototype.Te=function(t){this.width=t.width,this.height=t.height,this.emit("metadata",t)},lj.prototype._e=function(t){this.gamma=t},lj.prototype.Ee=function(){this.de.writable||this.Ne.readable||this.emit("close")},lj.bitblt=(t,e,n,r,s,i,o,a)=>{if(n>t.width||r>t.height||n+s>t.width||r+i>t.height)throw new Error("bitblt reading outside image");if(o>e.width||a>e.height||o+s>e.width||a+i>e.height)throw new Error("bitblt writing outside image");for(var u=0;i>u;u++)t.data.copy(e.data,(a+u)*e.width+o<<2,(r+u)*t.width+n<<2,(r+u)*t.width+n+s<<2)},lj.prototype.bitblt=function(t,e,n,r,s,i,o){return lj.bitblt(this,t,e,n,r,s,i,o),this},lj.adjustGamma=t=>{if(t.gamma){for(var e=0;e<t.height;e++)for(var n=0;n<t.width;n++)for(var r=t.width*e+n<<2,s=0;3>s;s++){var i=t.data[r+s]/255;i=Math.pow(i,1/2.2/t.gamma),t.data[r+s]=Math.round(255*i)}t.gamma=0}},lj.prototype.adjustGamma=function(){lj.adjustGamma(this)};var cj={};(t=>{function e(t){if(!t)return s;for(var e=0;e<t.args.length;++e){var n=t.args[e];t.args[e]=0===e?{name:n,lvalue:!0,rvalue:!!t.rvalue,count:t.count||1}:{name:n,lvalue:!1,rvalue:!0,count:1}}return t.thisVars||(t.thisVars=[]),t.localVars||(t.localVars=[]),t}function n(t){for(var n=[],s=0;s<t.args.length;++s)n.push("a"+s);return new Function("P",["return function ",t.funcName,"_ndarrayops(",n.join(","),") {P(",n.join(","),");return a0}"].join(""))((t=>r({args:t.args,pre:e(t.pre),body:e(t.body),post:e(t.proc),funcName:t.funcName}))(t))}var r=DW,s={body:"",args:[],thisVars:[],localVars:[]},i={add:"+",sub:"-",mul:"*",div:"/",mod:"%",band:"&",bor:"|",bxor:"^",lshift:"<<",rshift:">>",rrshift:">>>"};(()=>{for(var e in i){var r=i[e];t[e]=n({args:["array","array","array"],body:{args:["a","b","c"],body:"a=b"+r+"c"},funcName:e}),t[e+"eq"]=n({args:["array","array"],body:{args:["a","b"],body:"a"+r+"=b"},funcName:e+"eq"}),t[e+"s"]=n({args:["array","array","scalar"],body:{args:["a","b","s"],body:"a=b"+r+"s"},funcName:e+"s"}),t[e+"seq"]=n({args:["array","scalar"],body:{args:["a","s"],body:"a"+r+"=s"},funcName:e+"seq"})}})();var o={not:"!",bnot:"~",neg:"-",recip:"1.0/"};(()=>{for(var e in o){var r=o[e];t[e]=n({args:["array","array"],body:{args:["a","b"],body:"a="+r+"b"},funcName:e}),t[e+"eq"]=n({args:["array"],body:{args:["a"],body:"a="+r+"a"},funcName:e+"eq"})}})();var a={and:"&&",or:"||",eq:"===",neq:"!==",lt:"<",gt:">",leq:"<=",geq:">="};(()=>{for(var e in a){var r=a[e];t[e]=n({args:["array","array","array"],body:{args:["a","b","c"],body:"a=b"+r+"c"},funcName:e}),t[e+"s"]=n({args:["array","array","scalar"],body:{args:["a","b","s"],body:"a=b"+r+"s"},funcName:e+"s"}),t[e+"eq"]=n({args:["array","array"],body:{args:["a","b"],body:"a=a"+r+"b"},funcName:e+"eq"}),t[e+"seq"]=n({args:["array","scalar"],body:{args:["a","s"],body:"a=a"+r+"s"},funcName:e+"seq"})}})();var u=["abs","acos","asin","atan","ceil","cos","exp","floor","log","round","sin","sqrt","tan"];(()=>{for(var e=0;u.length>e;++e){var r=u[e];t[r]=n({args:["array","array"],pre:{args:[],body:"this_f=Math."+r,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(b)",thisVars:["this_f"]},funcName:r}),t[r+"eq"]=n({args:["array"],pre:{args:[],body:"this_f=Math."+r,thisVars:["this_f"]},body:{args:["a"],body:"a=this_f(a)",thisVars:["this_f"]},funcName:r+"eq"})}})();var l=["max","min","atan2","pow"];(()=>{for(var e=0;l.length>e;++e){var r=l[e];t[r]=n({args:["array","array","array"],pre:{args:[],body:"this_f=Math."+r,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(b,c)",thisVars:["this_f"]},funcName:r}),t[r+"s"]=n({args:["array","array","scalar"],pre:{args:[],body:"this_f=Math."+r,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(b,c)",thisVars:["this_f"]},funcName:r+"s"}),t[r+"eq"]=n({args:["array","array"],pre:{args:[],body:"this_f=Math."+r,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(a,b)",thisVars:["this_f"]},funcName:r+"eq"}),t[r+"seq"]=n({args:["array","scalar"],pre:{args:[],body:"this_f=Math."+r,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(a,b)",thisVars:["this_f"]},funcName:r+"seq"})}})();var c=["atan2","pow"];(()=>{for(var e=0;c.length>e;++e){var r=c[e];t[r+"op"]=n({args:["array","array","array"],pre:{args:[],body:"this_f=Math."+r,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(c,b)",thisVars:["this_f"]},funcName:r+"op"}),t[r+"ops"]=n({args:["array","array","scalar"],pre:{args:[],body:"this_f=Math."+r,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(c,b)",thisVars:["this_f"]},funcName:r+"ops"}),t[r+"opeq"]=n({args:["array","array"],pre:{args:[],body:"this_f=Math."+r,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(b,a)",thisVars:["this_f"]},funcName:r+"opeq"}),t[r+"opseq"]=n({args:["array","scalar"],pre:{args:[],body:"this_f=Math."+r,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(b,a)",thisVars:["this_f"]},funcName:r+"opseq"})}})(),t.any=r({args:["array"],pre:s,body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:1}],body:"if(a){return true}",localVars:[],thisVars:[]},post:{args:[],localVars:[],thisVars:[],body:"return false"},funcName:"any"}),t.all=r({args:["array"],pre:s,body:{args:[{name:"x",lvalue:!1,rvalue:!0,count:1}],body:"if(!x){return false}",localVars:[],thisVars:[]},post:{args:[],localVars:[],thisVars:[],body:"return true"},funcName:"all"}),t.sum=r({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:1}],body:"this_s+=a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"sum"}),t.prod=r({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=1"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:1}],body:"this_s*=a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"prod"}),t.norm2squared=r({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:2}],body:"this_s+=a*a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"norm2squared"}),t.norm2=r({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:2}],body:"this_s+=a*a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return Math.sqrt(this_s)"},funcName:"norm2"}),t.norminf=r({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:4}],body:"if(-a>this_s){this_s=-a}else if(a>this_s){this_s=a}",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"norminf"}),t.norm1=r({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:3}],body:"this_s+=a<0?-a:a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"norm1"}),t.sup=r({args:["array"],pre:{body:"this_h=-Infinity",args:[],thisVars:["this_h"],localVars:[]},body:{body:"if(_inline_1_arg0_>this_h)this_h=_inline_1_arg0_",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_h"],localVars:[]},post:{body:"return this_h",args:[],thisVars:["this_h"],localVars:[]}}),t.inf=r({args:["array"],pre:{body:"this_h=Infinity",args:[],thisVars:["this_h"],localVars:[]},body:{body:"if(_inline_1_arg0_<this_h)this_h=_inline_1_arg0_",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_h"],localVars:[]},post:{body:"return this_h",args:[],thisVars:["this_h"],localVars:[]}}),t.argmin=r({args:["index","array","shape"],pre:{body:"{this_v=Infinity;this_i=_inline_0_arg2_.slice(0)}",args:[{name:"_inline_0_arg0_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg1_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg2_",lvalue:!1,rvalue:!0,count:1}],thisVars:["this_i","this_v"],localVars:[]},body:{body:"{if(_inline_1_arg1_<this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2},{name:"_inline_1_arg1_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_i","this_v"],localVars:["_inline_1_k"]},post:{body:"{return this_i}",args:[],thisVars:["this_i"],localVars:[]}}),t.argmax=r({args:["index","array","shape"],pre:{body:"{this_v=-Infinity;this_i=_inline_0_arg2_.slice(0)}",args:[{name:"_inline_0_arg0_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg1_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg2_",lvalue:!1,rvalue:!0,count:1}],thisVars:["this_i","this_v"],localVars:[]},body:{body:"{if(_inline_1_arg1_>this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2},{name:"_inline_1_arg1_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_i","this_v"],localVars:["_inline_1_k"]},post:{body:"{return this_i}",args:[],thisVars:["this_i"],localVars:[]}}),t.random=n({args:["array"],pre:{args:[],body:"this_f=Math.random",thisVars:["this_f"]},body:{args:["a"],body:"a=this_f()",thisVars:["this_f"]},funcName:"random"}),t.assign=n({args:["array","array"],body:{args:["a","b"],body:"a=b"},funcName:"assign"}),t.assigns=n({args:["array","scalar"],body:{args:["a","b"],body:"a=b"},funcName:"assigns"}),t.equals=r({args:["array","array"],pre:s,body:{args:[{name:"x",lvalue:!1,rvalue:!0,count:1},{name:"y",lvalue:!1,rvalue:!0,count:1}],body:"if(x!==y){return false}",localVars:[],thisVars:[]},post:{args:[],localVars:[],thisVars:[],body:"return true"},funcName:"equals"})})(cj);var hj=OU,dj=IU.PNG,fj=OW,pj=cj,mj=PW,bj=EW.MultiRange,yj=(t,e,n)=>{switch(e.toUpperCase()){case"JPG":case".JPG":case"JPEG":case".JPEG":case"JPE":case".JPE":var r=t.shape[0],s=t.shape[1];return{data:o=jh(t,o=new Buffer(r*s*4)),width:r,height:s};case"GIF":case".GIF":var i=4===t.shape.length?t.shape[0]:1,o=(r=4===t.shape.length?t.shape[1]:t.shape[0],s=4===t.shape.length?t.shape[2]:t.shape[1],new Buffer(r*s*4)),a=new hj(r,s);a.writeHeader();for(var u=0;i>u;u++)o=jh(t,o,u),a.addFrame(o);return a.finish(),a;case"PNG":case".PNG":var l=new dj({width:t.shape[0],height:t.shape[1]});return"Error"==typeof(o=jh(t,l.data))?qh(o):(l.data=o,l.pack());case"CANVAS":var c=document.createElement("canvas"),h=c.getContext("2d");c.width=t.shape[0],c.height=t.shape[1];var d=h.getImageData(0,0,c.width,c.height);return"Error"==typeof(o=jh(t,o=d.data))?qh(o):(h.putImageData(d,0,0),c);default:return qh(new Error("Unsupported file type: "+e))}},gj={then:Hh,catch:Hh},xj=ed&&ed.Re||(Object.create?(t,e,n,r)=>{void 0===r&&(r=n),Object.defineProperty(t,r,{enumerable:!0,get(){return e[n]}})}:(t,e,n,r)=>{void 0===r&&(r=n),t[r]=e[n]}),wj=ed&&ed.Ae||(Object.create?(t,e)=>{Object.defineProperty(t,"default",{enumerable:!0,value:e})}:(t,e)=>{t.default=e}),vj=ed&&ed.Oe||(t=>{if(t&&t.u)return t;var e={};if(null!=t)for(var n in t)"default"!==n&&{}.hasOwnProperty.call(t,n)&&xj(e,t,n);return wj(e,t),e}),$j=ed&&ed.Ie||((t,e,n,r)=>new(n||(n=Promise))((s,i)=>{function o(t){try{u(r.next(t))}catch(Oj){i(Oj)}}function a(t){try{u(r.throw(t))}catch(Oj){i(Oj)}}function u(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n(t=>{t(e)})).then(o,a)}u((r=r.apply(t,e||[])).next())})),kj=ed&&ed.Fe||function(t,e){function n(n){return o=>(n=>{if(r)throw new TypeError("Generator is already executing.");for(;a;)try{if(r=1,s&&(i=2&n[0]?s.return:n[0]?s.throw||((i=s.return)&&i.call(s),0):s.next)&&!(i=i.call(s,n[1])).done)return i;switch(s=0,i&&(n=[2&n[0],i.value]),n[0]){case 0:case 1:i=n;break;case 4:return a.label++,{value:n[1],done:!1};case 5:a.label++,s=n[1],n=[0];continue;case 7:n=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==n[0]&&2!==n[0])){a=0;continue}if(3===n[0]&&(!i||n[1]>i[0]&&n[1]<i[3])){a.label=n[1];break}if(6===n[0]&&a.label<i[1]){a.label=i[1],i=n;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(n);break}i[2]&&a.ops.pop(),a.trys.pop();continue}n=e.call(t,a)}catch(Oj){n=[6,Oj],s=0}finally{r=i=0}if(5&n[0])throw n[1];return{value:n[0]?n[1]:void 0,done:!0}})([n,o])}var r,s,i,o,a={label:0,sent(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:n(0),throw:n(1),return:n(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o},Nj=ed&&ed.Me||(t=>t&&t.u?t:{default:t});Object.defineProperty(Ad,"u",{value:!0});var Cj=Ad.NSFWJS=Ad.load=void 0,Sj=vj(CW),Ej=SW,Tj=Nj((t,e)=>{var n,r,s;t=t||{},e=e||(()=>{}),"function"==typeof Promise?n=new Promise((t,n)=>{r=n=>{e(null,n),t(n)},s=t=>{e(t),n(t)}}):(n=gj,r=t=>{e(null,t)},s=e);var i=t.url;if(!i)return s(new Error('"url" option is required.')),n;var o=t.frames;if(!o&&0!==o)return s(new Error('"frames" option is required.')),n;var a=t.outputType||"jpg";t.quality;var u=t.cumulative,l="all"===o?"all":new bj(o);return((t,e,n)=>{n||(n=e,e="");var r=BW.extname(t);".GIF"===(e||r.toUpperCase())?((t,e)=>{var n=new XMLHttpRequest;n.open("GET",t,!0),n.responseType="arraybuffer",n.overrideMimeType&&n.overrideMimeType("application/binary"),n.onerror=t=>{e(t)},n.onload=()=>{4===n.readyState&&yh(new Uint8Array(n.response),e)},n.send()})(t,n):(Buffer.isBuffer(t)&&(t="data:"+e+";base64,"+t.toString("base64")),0===t.indexOf("data:image/gif;")?((t,e)=>{process.nextTick(()=>{try{var n=(t=>{if(!/^data\:/i.test(t))throw new TypeError('`uri` does not appear to be a Data URI (must begin with "data:")');var e=(t=t.replace(/\r?\n/g,"")).indexOf(",");if(-1===e||4>=e)throw new TypeError("malformed data: URI");for(var n=t.substring(5,e).split(";"),r=!1,s="US-ASCII",i=0;i<n.length;i++)"base64"==n[i]?r=!0:0==n[i].indexOf("charset=")&&(s=n[i].substring(8));var o=unescape(t.substring(e+1)),a=new Buffer(o,r?"base64":"ascii");return a.type=n[0]||"text/plain",a.charset=s,a})(t);n?yh((t=>{if(void 0===t[0]){for(var e=t.length,n=new Uint8Array(e),r=0;e>r;++r)n[r]=t.get(r);return n}return new Uint8Array(t)})(n),e):e(new Error("Error parsing data URI"))}catch(Ij){e(Ij)}})})(t,n):((t,e)=>{var n=new Image;n.crossOrigin="Anonymous",n.onload=()=>{var t=document.createElement("canvas");t.width=n.width,t.height=n.height;var r=t.getContext("2d");r.drawImage(n,0,0);var s=r.getImageData(0,0,n.width,n.height);e(null,zW(new Uint8Array(s.data),[n.width,n.height,4],[4,4*n.width,1],0))},n.onerror=t=>{e(t)},n.src=t})(t,n))})(i,"undefined"==typeof window?"image/gif":".GIF",(t,e,n)=>{if(t)s(t);else if(4>e.shape.length)s(new Error('"url" input should be multi-frame GIF.'));else{for(var i=[],o=0,c=0;c<e.shape[0];c++)("all"===l||l.has(c))&&(t=>{i.push({getImage(){if(u&&t>o){for(var n=e.pick(o),r=o+1;t>=r;r++){for(var s=e.pick(r),i=0;i<s.shape[0];i++)for(var l=0;l<s.shape[1];l++)0===s.get(i,l,3)&&(s.set(i,l,0,n.get(i,l,0)),s.set(i,l,1,n.get(i,l,1)),s.set(i,l,2,n.get(i,l,2)),s.set(i,l,3,n.get(i,l,3)));n=s}o=t}return yj(e.pick(t),a)},frameIndex:t,frameInfo:n&&n[t]})})(c);r(i)}}),n}),_j=Ad.load=function(t,e){return void 0===t&&(t="https://d1zv2aa70wpiur.cloudfront.net/tfjs_quant_nsfw_mobilenet/"),void 0===e&&(e={size:224}),$j(this,void 0,void 0,function(){var n;return kj(this,r=>{switch(r.label){case 0:if(null==Sj)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");return e.size=e.size||224,[4,(n=new Rj(t,e)).load()];case 1:return r.sent(),[2,n]}})})},Rj=function(){function t(t,e){this.intermediateModels={},this.options=e,this.normalizationOffset=Sj.scalar(255),"string"!=typeof t||t.startsWith("indexeddb://")||t.startsWith("localstorage://")||t.endsWith("model.json")?this.pathOrIOHandler=t:this.pathOrIOHandler=t+"model.json"}return t.prototype.load=function(){return $j(this,void 0,void 0,function(){var t,e,n,r,s,i=this;return kj(this,function(o){switch(o.label){case 0:return t=this.options,e=t.size,"graph"!==t.type?[3,2]:(n=this,[4,Sj.loadGraphModel(this.pathOrIOHandler)]);case 1:return n.model=o.sent(),[3,4];case 2:return r=this,[4,Sj.loadLayersModel(this.pathOrIOHandler)];case 3:r.model=o.sent(),this.endpoints=this.model.layers.map(t=>t.name),o.label=4;case 4:return[4,(s=Sj.tidy(()=>i.model.predict(Sj.zeros([1,e,e,3])))).data()];case 5:return o.sent(),s.dispose(),[2]}})})},t.prototype.infer=function(t,e){var n=this;if(null!=e&&-1===this.endpoints.indexOf(e))throw new Error("Unknown endpoint "+e+". Available endpoints: "+this.endpoints+".");return Sj.tidy(()=>{t instanceof Sj.Tensor||(t=Sj.browser.fromPixels(t));var r=t.toFloat().div(n.normalizationOffset),s=r,i=n.options.size;t.shape[0]===i&&t.shape[1]===i||(s=Sj.image.resizeBilinear(r,[i,i],!0));var o,a=s.reshape([1,i,i,3]);if(null==e)o=n.model;else{if(n.model.hasOwnProperty("layers")&&null==n.intermediateModels[e]){var u=n.model.layers.find(t=>t.name===e);n.intermediateModels[e]=Sj.model({inputs:n.model.inputs,outputs:u.output})}o=n.intermediateModels[e]}return o.predict(a)})},t.prototype.classify=function(t,e){return void 0===e&&(e=5),$j(this,void 0,void 0,function(){var n,r;return kj(this,function(s){switch(s.label){case 0:return[4,Xh(n=this.infer(t),e)];case 1:return r=s.sent(),n.dispose(),[2,r]}})})},t.prototype.classifyGif=function(t,e){return void 0===e&&(e={topk:5}),$j(this,void 0,void 0,function(){var n,r,s,i,o,a,u,l,c;return kj(this,function(h){switch(h.label){case 0:return n=[],Buffer.isBuffer(t)?[4,Tj.default({url:t,frames:"all",outputType:"jpg"})]:[3,2];case 1:return n=h.sent(),[3,4];case 2:return[4,Tj.default({url:t.src,frames:"all",outputType:"canvas"})];case 3:n=h.sent(),h.label=4;case 4:if(r=[],"number"!=typeof e.fps)r=n.map((t,e)=>e);else{for(s=0,u=0;u<n.length;u++)s+=10*n[u].frameInfo.delay;if((i=Math.floor(s/1e3*e.fps))>1)if(i<n.length)for(o=Math.floor(n.length/(i+1)),u=1;i>=u;u++)r.push(u*o);else r=n.map((t,e)=>e);else r=[Math.floor(n.length/2)]}a=[],u=0,h.label=5;case 5:return u<r.length?(l=n[r[u]].getImage(),[4,this.classify(l,e.topk)]):[3,8];case 6:c=h.sent(),"function"==typeof e.onFrame&&e.onFrame({index:r[u],totalFrames:n.length,predictions:c,image:l}),a.push(c),h.label=7;case 7:return u++,[3,5];case 8:return[2,a]}})})},t}();Cj=Ad.NSFWJS=Rj;const Aj=t({__proto__:null,get NSFWJS(){return Cj},default:Ad,get load(){return _j}},[Ad]);export{Qh as A,E as _,i as a,w as b,$ as c,l as d,s as e,gd as f,e as g,xd as h,Aj as i,dd as j,Rd as k,C as l,h as m,N as n,ya as o,c as p,en as q,v as r,g as s,BT as t,k as u,P as v,n as w,ed as x};
